const _0x1740 = ['dividedToIntegerBy', 'blenut_FragColord', 'primitiveType', '[BigNumber\x20Error]\x20', 'ROUND_HALF_DOWN', 'authority', 'distanceToTileCenter', '_isGenerated', 'level', '_clampMode', '_targetPoints', 'rootTextureName', 'open', 'Data', '_hLabel', '_updateEdgeDistanceFalloffFactor', 'incorrect\x20length\x20check', 'IndexDatatype', 'enableRotate', 'swipe', '_minimumPriority', 'fetchXML', 'request', 'cos', 'PointPrimitiveCollection', 'requestMetadata', '_playRate', 'defaultTexture', '_emissionTextureArray', '_maxCategory', 'ids', 'urls', 'updateAllObjsVisible', 'vertexArray', 'CullFace', 'altitude', 'tilingScheme\x20must\x20not\x20be\x20called\x20before\x20the\x20terrain\x20provider\x20is\x20ready.', 'createBoundingVolume', 'stream\x20end', 'lightSourceImpl', 's3mGroup', 'SkylineFp', 'requestContent', 'subdomainConfig', 'S3MBlockParser', 'aSecondColor', 'oriTextureBake', 'ADJUST_COLOR', '41MTHiIT', '_visibleDistanceMin', '{x}', 'init', 'positions', 'col', 'TILES3D', 'LODRangeScale', 'string2buf', '_routes', 'pageLods', 'complete', 'isRootTile', 'fillStyleChange', 'dmax', '_addStop', './adler32', '_isSct', 'TextureAtlasSec', 'fromXML', 'renderState', '_position', '\x0ain\x20vec4\x20aPosition;\x0auniform\x20vec4\x20uRect;\x0a#ifdef\x20Mode_Height\x0avarying\x20float\x20vHeight;\x0a#endif\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20vec4\x20vPos\x20=\x20aPosition;\x0a\x20\x20\x20vec2\x20bounds\x20=\x20uRect.zw\x20-\x20uRect.xy;\x0a\x20\x20\x20vPos.xy\x20=\x20(vPos.xy\x20-\x20uRect.xy)\x20/\x20bounds.xy\x20*\x202.0\x20-\x201.0;\x0a\x20\x20\x20gl_Position\x20=\x20vec4(vPos.xy,\x200.5,\x201.0);\x0a#ifdef\x20Mode_Height\x0a\x20\x20\x20vHeight\x20=\x20vPos.z;\x0a#endif\x0a}', 'visibilityPlaneMask', 'wrapS', 'pass', 'queryNumericValue', 'XmlParser', 'Resource', 'SVC_VertexColor', 'add', 'SCENE3D', 'total_out', 'selectEnabled', 'lodRangeScale', 'fromCartesian', 'chunkSize', 'AmbientR', './common', 'log', 'vertexColorOffset', 'negateNormal', 'setEditObject', 'polylines', 'PostProcessStageSnow', 'scaleDenominators', 'Volume2', 'error', '_radius', 'Assets/Textures/waterNormalsSmall.jpg', 'getFramebuffer', '_maxWValue', 'hookRequestImageryFunc', '_packingRequest', 'COMPUTE_W_VALUE', '_loadImage', 'defines', '_destroyCommand', '[object\x20Array]', 'emissiveTextureIndex', 'canvas', 'raiseEvent', 'compressedTexSubImage2D', 'ancestorMap', '_fillColor', 'Version', 'destroyObject', 'iterator', 'HAS_DIR_LIGHTS', 'RasterRegion', 'idsOperationMap', '25052vRnAAV', 'rainEffect', 'PageLods', 'MODE\x200', 'subTextureInfo', '_minimumLevel', '_viewPosition', 'maximumMemoryUsage', 'div', 'cancelTween', '_frustumPlanes', 'addStop', 'sceneMode', 'spEntity', './utils/common', 'setCustomClipBox', 'setLineVisible', 'tablename', '_speed', '/data/', 'fromDegrees', '_objsVisibleList', '_objsVisibleMap', 'depth', 'useConfigFile', '__esModule', 'was', 'attributeLocations', 'StencilFunction', 'UNPACK_PREMULTIPLY_ALPHA_WEBGL', '_texture', 'timeVal', 'documentElement', 'TRUE', 'polygon', 'constrast', './inffast', 'compressOptions', '_updateCopyCommand', 'interpolation', 'getAuthority', '_activeEvt', '21SGskQZ', 'FixedXYZ', 'SightWideLineFS', 'bReflect', 'startHeight', 'strm', 'getScheme', '_pointColor', 'BGR', 'visibleScales', 'clip_behind_any_plane', 'silhouetteEdgeCommand', 'snowEffect', 'toLowerCase', 'disableReflection', 'multiplyByVector', 'decode_position_normConstant', '_renderTextureMatrixs', 'invalid\x20distance\x20too\x20far\x20back', 'TileBoundingSphere', '_useConfigFile', 'rightWC', 'edgeLength', 'getElementsByTagName', 'HeadingPitchRoll', '_depthBuffers', 'defineProperties', 'contentResource', '_isTransparencyOptimization', '_lodRangeScale', 'data', 'updateGeometry', 'get\x20S3M\x20layer\x20config\x20failed,', 'LINE', 'visibleDistanceMax', 'layer', 'getFloat64', 'window', 'texCoordCompressConstant', '1.0.0/WMTSCapabilities.xml', 'arrIndexPackage', 'PagedLOD', 'copyDepthCommand', '_textures', 'BoundingSphere', 'HorizontalOrigin', 'passes', 'Intersect', 'lens', 'preShow', 'HAS_ANISOTROPY', 'activeTexture', 'fromRadians', 'videoName', 'Sightline', 'componentDatatype', 'HAS_TRANSMISSION', 'ComponentDatatype', 'RenderEntity', 'indexOf', '_horizontalFov', 'renderToTexture', 'skirtScale', 'EXPONENTIAL_AT', '_direction', 'setSelection', '_modelViewDirty', 'get', 'url', 'sml:Right', 'map', 'KEEP', 'CLIP_NOTHING', '500\x2016px\x20sans-serif', 'floatToByte', 'isUseRegion', '_totalMemoryUsageInBytes', 'catch', 'integerValue', 'fileName', 'region', 'OUTSIDE', 'work', 'extra_len', 'getSkyline3D', '_boundingSphereFromXML', 'lineDisplayType', 'getHeight', 'CLAMP_TO_EDGE', 'aNormal', 'S3MCreateVertexJob', 'referenceAddPoint_', 'BlockScale', 'MipmapHint', 'PostProcessStage', 'BLOCK', 'wrapT', '_stopCollection', 'command', 'textureBakeInitilized', 'typedArray', '_name', 'labels', 'inflateInfo', 'surroundDuration', 'not\x20an\x20integer:\x20', '_faceCommand', 'endFunc', '_commands', 'abs', '\x0a#ifdef\x20BRDF\x0a#define\x20RECIPROCAL_PI\x200.31830988618\x0a#define\x20M_PI\x203.141592653589793\x0a#define\x20EPSILON\x201e-6\x0a#define\x20CUBEUV_MAX_MIP\x208.0\x0a#define\x20CUBEUV_TEXEL_WIDTH\x200.0013020833333333333\x0a#define\x20CUBEUV_TEXEL_HEIGHT\x200.0009765625\x0a#define\x20saturate(a)\x20clamp(\x20a,\x200.0,\x201.0\x20)\x0afloat\x20pow2(\x20const\x20in\x20float\x20x\x20)\x20{\x20return\x20x\x20*\x20x;\x20}\x0a\x0auniform\x20vec4\x20uBaseColorFactor;\x0auniform\x20vec4\x20uEmissiveFactor;\x0auniform\x20float\x20uMetallicFactor;\x0auniform\x20float\x20uRoughnessFactor;\x0auniform\x20float\x20uAlphaCutoff;\x0a\x0astruct\x20IncidentLight\x20{\x0a\x20\x20\x20\x20vec3\x20direction;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20bool\x20visible;\x0a};\x0a\x0astruct\x20GeometricContext\x20{\x0a\x20\x20\x20\x20vec3\x20position;\x0a\x20\x20\x20\x20vec3\x20normal;\x0a\x20\x20\x20\x20vec3\x20viewDir;\x0a};\x0a\x0astruct\x20PhysicalMaterial\x20{\x0a\x20\x20\x20\x20vec3\x09diffuseColor;\x0a\x20\x20\x20\x20float\x09roughness;\x0a\x20\x20\x20\x20vec3\x09specularColor;\x0a\x20\x20\x20\x20float\x20specularF90;\x0a};\x0a\x0astruct\x20ReflectedLight\x20{\x0a\x20\x20\x20\x20vec3\x20directDiffuse;\x0a\x20\x20\x20\x20vec3\x20directSpecular;\x0a\x20\x20\x20\x20vec3\x20indirectDiffuse;\x0a\x20\x20\x20\x20vec3\x20indirectSpecular;\x0a};\x0a\x0a#ifdef\x20HAS_BASE_TEXTURE\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uBaseTexture;\x0a#endif\x0a\x0a#ifdef\x20HAS_NORMAL_TEXTURE\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uNormalTexture;\x0a\x20\x20\x20\x20uniform\x20float\x20uNormalTextureScale;\x0a#ifdef\x20HAS_ANISOTROPY\x0a\x20\x20\x20\x20uniform\x20vec4\x20uAnisotropy;\x0a#endif\x0a#endif\x0a\x0a#ifdef\x20HAS_EMISSIVE_TEXTURE\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uEmissionTexture;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uEmissiveUVOffsetAndTiling;\x0a#endif\x0a\x0a#ifdef\x20HAS_MetallicRoughness_TEXTURE\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uMetallicRoughnessTexture;\x0a#endif\x0a\x0a#ifdef\x20HAS_OCCLUSION_TEXTURE\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uOcclusionTexture;\x0a#endif\x0a\x0a#ifdef\x20REFRACTION\x0a\x20\x20\x20\x20uniform\x20float\x20uIndexOfRefraction;\x0a#endif\x0a\x0a#ifdef\x20HAS_TRANSMISSION\x0a\x20\x20\x20\x20uniform\x20float\x20uTransmissionFactor;\x0a#endif\x0a\x0a#ifdef\x20HAS_WETNESS\x0a\x20\x20\x20\x20uniform\x20float\x20uWetnessFactor;\x0a#endif\x0a\x0a#ifdef\x20HAS_VOLUME\x0a\x20\x20\x20\x20uniform\x20vec4\x20uTintColor;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uDiffusionDistance;\x0a\x20\x20\x20\x20uniform\x20float\x20uThickness;\x0a#endif\x0a\x0a#ifdef\x20HAS_CLEARCOAT\x0a\x20\x20\x20\x20uniform\x20float\x20uClearcoatFactor;\x0a\x20\x20\x20\x20uniform\x20float\x20uClearcoatRoughnessFactor;\x0a#endif\x0a\x0a//参考UE4.24实现计算精确光源的衰减\x0afloat\x20punctualLightIntensityToIrradianceFactor(\x20const\x20in\x20float\x20lightDistance,\x20const\x20in\x20float\x20cutoffDistance,\x20const\x20in\x20float\x20decayExponent\x20)\x20{\x0a\x20\x20\x20\x20float\x20d\x20=\x20lightDistance;\x0a\x20\x20\x20\x20float\x20r\x20=\x20cutoffDistance;\x0a\x20\x20\x20\x20float\x20d2\x20=\x20d\x20*\x20d;\x0a\x20\x20\x20\x20float\x20attenuation\x20=\x201.0\x20/\x20(d2\x20+\x201.0);\x0a\x20\x20\x20\x20float\x20m\x20=\x20saturate(1.0\x20-\x20pow(d\x20/\x20r,\x204.0));\x0a\x20\x20\x20\x20float\x20m2\x20=\x20m\x20*\x20m;\x0a\x20\x20\x20\x20return\x20attenuation\x20*\x20m2;\x0a}\x0a\x0a#include\x20<hemisphereLightDecl>\x0a#include\x20<directionLightDecl>\x0a#include\x20<pointLightDecl>\x0a#include\x20<spotLightDecl>\x0a#include\x20<snowDecl>\x0a#include\x20<rainDecl>\x0a\x0a#ifdef\x20HAS_ANISOTROPY\x0avec3\x20getAnisotropicBentNormals(const\x20vec3\x20T,\x20const\x20vec3\x20B,\x20const\x20vec3\x20N,\x20const\x20vec3\x20V,\x20float\x20anisotropy)\x20{\x0a\x20\x20\x20\x20vec3\x20anisotropicFrameDirection\x20=\x20anisotropy\x20>=\x200.0\x20?\x20B\x20:\x20T;\x0a\x20\x20\x20\x20vec3\x20anisotropicFrameTangent\x20=\x20cross(normalize(anisotropicFrameDirection),\x20V);\x0a\x20\x20\x20\x20vec3\x20anisotropicFrameNormal\x20=\x20cross(anisotropicFrameTangent,\x20anisotropicFrameDirection);\x0a\x20\x20\x20\x20vec3\x20anisotropicNormal\x20=\x20normalize(mix(N,\x20anisotropicFrameNormal,\x20abs(anisotropy)));\x0a\x20\x20\x20\x20return\x20anisotropicNormal;\x0a}\x0a#endif\x0a\x0a#ifdef\x20HAS_VOLUME\x0avec3\x20computeColorAtDistanceInMedia(vec3\x20color,\x20float\x20distance)\x20{\x0a\x20\x20\x20\x20return\x20-log(color)\x20/\x20distance;\x0a}\x0avec3\x20cocaLambert(vec3\x20alpha,\x20float\x20distance)\x20{\x0a\x20\x20\x20\x20return\x20exp(-alpha\x20*\x20distance);\x0a}\x0a#endif\x0a\x0a\x0avec3\x20sRGBToLinear(vec3\x20srgbIn)\x20\x0a{\x0a\x20\x20\x20\x20return\x20pow(srgbIn,\x20vec3(2.2));\x0a}\x0a\x0avec4\x20sRGBToLinear(vec4\x20srgbIn)\x0a{\x0a\x20\x20\x20\x20srgbIn\x20=\x20srgbIn\x20;\x0a\x20\x20\x20\x20vec3\x20linearOut\x20=\x20pow(srgbIn.rgb,\x20vec3(2.2));\x0a\x20\x20\x20\x20return\x20vec4(linearOut,\x20srgbIn.a);\x0a}\x0a\x0avec3\x20LinearTosRGB(vec3\x20linearIn)\x20\x0a{\x0a#ifndef\x20HDR\x20\x0a\x20\x20\x20\x20return\x20pow(linearIn,\x20vec3(1.0/2.2));\x0a#else\x20\x0a\x20\x20\x20\x20return\x20linearIn;\x0a#endif\x20\x0a}\x0a\x0avec3\x20lambertianDiffuse(vec3\x20diffuseColor)\x20\x0a{\x0a\x20\x20\x20\x20return\x20diffuseColor\x20*\x20RECIPROCAL_PI;\x0a}\x0a\x0avec3\x20applyTonemapping(vec3\x20linearIn)\x20\x0a{\x0a\x20\x20\x20\x20vec3\x20color\x20=\x20linearIn\x20;\x0a\x20\x20\x20\x20return\x20czm_acesTonemapping(color);\x0a}\x0a\x0avec3\x20F_Schlick(\x20const\x20in\x20vec3\x20f0,\x20const\x20in\x20float\x20f90,\x20const\x20in\x20float\x20dotVH\x20)\x20{\x0a\x20\x20\x20\x20float\x20fresnel\x20=\x20exp2(\x20(\x20-\x205.55473\x20*\x20dotVH\x20-\x206.98316\x20)\x20*\x20dotVH\x20);\x0a\x20\x20\x20\x20return\x20f0\x20*\x20(\x201.0\x20-\x20fresnel\x20)\x20+\x20(\x20f90\x20*\x20fresnel\x20);\x0a}\x0a\x0afloat\x20GeometrySchlickGGX(float\x20roughness,\x20float\x20NoV)\x0a{\x0a\x20\x20\x20\x20float\x20k\x20=\x20pow(roughness\x20+\x201.0,\x202.0)\x20/\x208.0;\x0a\x20\x20\x20\x20return\x20NoV\x20/\x20(NoV\x20*\x20(1.0\x20-\x20k)\x20+\x20k);\x0a}\x0a\x0afloat\x20D_GGX(\x20const\x20in\x20float\x20alpha,\x20const\x20in\x20float\x20dotNH\x20)\x20{\x0a\x20\x20\x20\x20float\x20a2\x20=\x20pow2(\x20alpha\x20);\x0a\x20\x20\x20\x20float\x20denom\x20=\x20pow2(\x20dotNH\x20)\x20*\x20(\x20a2\x20-\x201.0\x20)\x20+\x201.0;\x0a\x20\x20\x20\x20return\x20RECIPROCAL_PI\x20*\x20a2\x20/\x20pow2(\x20denom\x20);\x0a}\x0a\x0avec3\x20BRDF_GGX(\x20const\x20in\x20vec3\x20lightDir,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20vec3\x20f0,\x20const\x20in\x20float\x20f90,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x20\x20\x20\x20float\x20alpha\x20=\x20roughness\x20*\x20roughness;\x0a\x20\x20\x20\x20vec3\x20halfDir\x20=\x20normalize(\x20lightDir\x20+\x20viewDir\x20);\x0a\x20\x20\x20\x20float\x20dotNL\x20=\x20clamp(\x20dot(\x20normal,\x20lightDir\x20),\x200.001,\x201.0\x20);\x0a\x20\x20\x20\x20float\x20dotNV\x20=\x20abs(\x20dot(\x20normal,\x20viewDir\x20)\x20)\x20+\x200.001;\x0a\x20\x20\x20\x20float\x20dotNH\x20=\x20saturate(\x20dot(\x20normal,\x20halfDir\x20)\x20);\x0a\x20\x20\x20\x20float\x20dotLH\x20=\x20saturate(\x20dot(\x20lightDir,\x20halfDir\x20)\x20);\x0a\x20\x20\x20\x20float\x20dotVH\x20=\x20saturate(\x20dot(\x20viewDir,\x20halfDir\x20)\x20);\x0a\x20\x20\x20\x20vec3\x20F\x20=\x20F_Schlick(\x20f0,\x20f90,\x20dotVH\x20);\x0a\x20\x20\x20\x20float\x20G\x20=\x20GeometrySchlickGGX(alpha,\x20dotNV)\x20*\x20GeometrySchlickGGX(alpha,\x20dotNL);\x0a\x20\x20\x20\x20float\x20D\x20=\x20D_GGX(\x20alpha,\x20dotNH\x20);\x0a\x20\x20\x20\x20return\x20F\x20*\x20(\x20G\x20*\x20D\x20)\x20/\x20(4.0\x20*\x20dotNL\x20*\x20dotNV);\x0a}\x0a\x0avoid\x20directPhysical(\x20const\x20in\x20IncidentLight\x20directLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x20\x20\x20\x20float\x20dotNL\x20=\x20saturate(\x20dot(\x20geometry.normal,\x20directLight.direction\x20)\x20);\x0a\x20\x20\x20\x20vec3\x20irradiance\x20=\x20dotNL\x20*\x20directLight.color;\x0a\x20\x20\x20\x20reflectedLight.directSpecular\x20+=\x20irradiance\x20*\x20BRDF_GGX(\x20directLight.direction,\x20geometry.viewDir,\x20geometry.normal,\x20material.specularColor,\x20material.specularF90,\x20material.roughness\x20);\x0a\x20\x20\x20\x20reflectedLight.directDiffuse\x20+=\x20irradiance\x20*\x20lambertianDiffuse(\x20material.diffuseColor\x20);\x0a}\x0a\x0a#ifdef\x20HAS_NORMAL_TEXTURE\x0avec3\x20perturbNormal2Arb(\x20vec3\x20eye_pos,\x20vec3\x20surf_norm,\x20vec2\x20uv\x20)\x20{\x0a\x20\x20\x20\x20vec3\x20q0\x20=\x20vec3(\x20dFdx(\x20eye_pos.x\x20),\x20dFdx(\x20eye_pos.y\x20),\x20dFdx(\x20eye_pos.z\x20)\x20);\x0a\x20\x20\x20\x20vec3\x20q1\x20=\x20vec3(\x20dFdy(\x20eye_pos.x\x20),\x20dFdy(\x20eye_pos.y\x20),\x20dFdy(\x20eye_pos.z\x20)\x20);\x0a\x20\x20\x20\x20vec2\x20st0\x20=\x20dFdx(\x20uv.st\x20);\x0a\x20\x20\x20\x20vec2\x20st1\x20=\x20dFdy(\x20uv.st\x20);\x0a\x20\x20\x20\x20float\x20scale\x20=\x20sign(\x20st1.t\x20*\x20st0.s\x20-\x20st0.t\x20*\x20st1.s\x20);\x0a\x20\x20\x20\x20vec3\x20S\x20=\x20normalize(\x20(\x20q0\x20*\x20st1.t\x20-\x20q1\x20*\x20st0.t\x20)\x20*\x20scale\x20);\x0a\x20\x20\x20\x20vec3\x20T\x20=\x20normalize(\x20(\x20-\x20q0\x20*\x20st1.s\x20+\x20q1\x20*\x20st0.s\x20)\x20*\x20scale\x20);\x0a\x20\x20\x20\x20vec3\x20N\x20=\x20normalize(\x20surf_norm\x20);\x0a\x20\x20\x20\x20mat3\x20tsn\x20=\x20mat3(\x20S,\x20T,\x20N\x20);\x0a\x20\x20\x20\x20vec3\x20mapN\x20=\x20texture(\x20uNormalTexture,\x20uv.xy\x20).xyz\x20*\x202.0\x20-\x201.0;\x0a\x20\x20\x20\x20mapN.xy\x20*=\x20uNormalTextureScale;\x0a\x20\x20\x20\x20mapN.xy\x20*=\x20(\x20float(\x20gl_FrontFacing\x20)\x20*\x202.0\x20-\x201.0\x20);\x0a\x20\x20\x20\x20return\x20normalize(\x20tsn\x20*\x20mapN\x20);\x0a}\x0a#endif\x0a\x0a#include\x20<cubeUV_reflection>\x0a\x0avec3\x20inverseTransformDirection(\x20in\x20vec3\x20dir\x20)\x20{\x0a\x20\x20\x20\x20mat3\x20fixedToENU\x20=\x20mat3(czm_modelView[0][0],\x20czm_modelView[1][0],\x20czm_modelView[2][0],\x20czm_modelView[0][1],\x20czm_modelView[1][1],\x20czm_modelView[2][1],\x20czm_modelView[0][2],\x20czm_modelView[1][2],\x20czm_modelView[2][2]);\x0a\x20\x20\x20\x20const\x20mat3\x20yUpToZUp\x20=\x20mat3(1.0,\x200.0,\x200.0,\x200.0,\x200.0,\x20-1.0,\x200.0,\x201.0,\x200.0);\x0a\x20\x20\x20\x20return\x20normalize(\x20yUpToZUp\x20*\x20fixedToENU\x20*\x20dir\x20);\x0a}\x0a\x0avoid\x20indirectDiffuse_Physical(\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20+=\x20irradiance\x20*\x20lambertianDiffuse(\x20material.diffuseColor\x20);\x0a}\x0a\x0avec2\x20DFGApprox(\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x20\x20\x20\x20float\x20dotNV\x20=\x20saturate(\x20dot(\x20normal,\x20viewDir\x20)\x20);\x0a\x20\x20\x20\x20const\x20vec4\x20c0\x20=\x20vec4(\x20-\x201,\x20-\x200.0275,\x20-\x200.572,\x200.022\x20);\x0a\x20\x20\x20\x20const\x20vec4\x20c1\x20=\x20vec4(\x201,\x200.0425,\x201.04,\x20-\x200.04\x20);\x0a\x20\x20\x20\x20vec4\x20r\x20=\x20roughness\x20*\x20c0\x20+\x20c1;\x0a\x20\x20\x20\x20float\x20a004\x20=\x20min(\x20r.x\x20*\x20r.x,\x20exp2(\x20-\x209.28\x20*\x20dotNV\x20)\x20)\x20*\x20r.x\x20+\x20r.y;\x0a\x20\x20\x20\x20vec2\x20fab\x20=\x20vec2(\x20-\x201.04,\x201.04\x20)\x20*\x20a004\x20+\x20r.zw;\x0a\x20\x20\x20\x20return\x20fab;\x0a}\x0a\x0avoid\x20computeMultiscattering(\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20specularColor,\x20const\x20in\x20float\x20specularF90,\x20const\x20in\x20float\x20roughness,\x20inout\x20vec3\x20singleScatter,\x20inout\x20vec3\x20multiScatter\x20)\x20{\x0a\x20\x20\x20\x20vec2\x20fab\x20=\x20DFGApprox(\x20normal,\x20viewDir,\x20roughness\x20);\x0a\x20\x20\x20\x20vec3\x20Fr\x20=\x20specularColor;\x0a\x20\x20\x20\x20vec3\x20FssEss\x20=\x20Fr\x20*\x20fab.x\x20+\x20specularF90\x20*\x20fab.y;\x0a\x20\x20\x20\x20float\x20Ess\x20=\x20fab.x\x20+\x20fab.y;\x0a\x20\x20\x20\x20float\x20Ems\x20=\x201.0\x20-\x20Ess;\x0a\x20\x20\x20\x20vec3\x20Favg\x20=\x20Fr\x20+\x20(\x201.0\x20-\x20Fr\x20)\x20*\x200.047619;\x0a\x20\x20\x20\x20vec3\x20Fms\x20=\x20FssEss\x20*\x20Favg\x20/\x20(\x201.0\x20-\x20Ems\x20*\x20Favg\x20);\x0a\x20\x20\x20\x20singleScatter\x20+=\x20FssEss;\x0a\x20\x20\x20\x20multiScatter\x20+=\x20Fms\x20*\x20Ems;\x0a}\x0a\x0avoid\x20indirectSpecular_Physical(\x20const\x20in\x20vec3\x20radiance,\x20const\x20in\x20vec3\x20irradiance,\x20const\x20in\x20GeometricContext\x20geometry,\x20const\x20in\x20PhysicalMaterial\x20material,\x20inout\x20ReflectedLight\x20reflectedLight\x20)\x20{\x0a\x20\x20\x20\x20vec3\x20singleScattering\x20=\x20vec3(\x200.0\x20);\x0a\x20\x20\x20\x20vec3\x20multiScattering\x20=\x20vec3(\x200.0\x20);\x0a\x20\x20\x20\x20vec3\x20cosineWeightedIrradiance\x20=\x20irradiance;\x0a\x20\x20\x20\x20computeMultiscattering(\x20geometry.normal,\x20geometry.viewDir,\x20material.specularColor,\x20material.specularF90,\x20material.roughness,\x20singleScattering,\x20multiScattering\x20);\x0a\x20\x20\x20\x20vec3\x20totalScattering\x20=\x20singleScattering\x20+\x20multiScattering;\x0a\x20\x20\x20\x20vec3\x20diffuse\x20=\x20material.diffuseColor\x20*\x20(\x201.0\x20-\x20max(\x20max(\x20totalScattering.r,\x20totalScattering.g\x20),\x20totalScattering.b\x20)\x20);\x0a\x20\x20\x20\x20reflectedLight.indirectSpecular\x20+=\x20radiance\x20*\x20singleScattering;\x0a\x20\x20\x20\x20reflectedLight.indirectSpecular\x20+=\x20multiScattering\x20*\x20cosineWeightedIrradiance;\x0a\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20+=\x20diffuse\x20*\x20cosineWeightedIrradiance;\x0a}\x0a\x0a//\x20vec3\x20getIBLIrradiance(\x20const\x20in\x20vec3\x20normal\x20)\x20{\x0a//\x20\x20\x20\x20\x20vec3\x20worldNormal\x20=\x20inverseTransformDirection(\x20normal\x20);\x0a//\x20\x20\x20\x20\x20vec4\x20envMapColor\x20=\x20textureCubeUV(\x20czm_hdrEnvMap,\x20worldNormal,\x201.0\x20);\x0a//\x20\x20\x20\x20\x20return\x20envMapColor.rgb;\x0a//\x20}\x0a\x0a//\x20vec3\x20getIBLRadiance(\x20const\x20in\x20vec3\x20viewDir,\x20const\x20in\x20vec3\x20normal,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a//\x20\x20\x20\x20\x20vec3\x20reflectVec\x20=\x20reflect(\x20-\x20viewDir,\x20normal\x20);\x0a//\x20\x20\x20\x20\x20reflectVec\x20=\x20normalize(\x20mix(\x20reflectVec,\x20normal,\x20roughness\x20*\x20roughness)\x20);\x0a//\x20\x20\x20\x20\x20reflectVec\x20=\x20inverseTransformDirection(\x20reflectVec\x20);\x0a//\x20\x20\x20\x20\x20vec4\x20envMapColor\x20=\x20textureCubeUV(\x20czm_hdrEnvMap,\x20reflectVec,\x20roughness\x20);\x0a//\x20\x20\x20\x20\x20return\x20envMapColor.rgb;\x0a//\x20}\x0a\x0afloat\x20computeSpecularOcclusion(\x20const\x20in\x20float\x20dotNV,\x20const\x20in\x20float\x20ambientOcclusion,\x20const\x20in\x20float\x20roughness\x20)\x20{\x0a\x20\x20\x20\x20return\x20saturate(\x20pow(\x20dotNV\x20+\x20ambientOcclusion,\x20exp2(\x20-\x2016.0\x20*\x20roughness\x20-\x201.0\x20)\x20)\x20-\x201.0\x20+\x20ambientOcclusion\x20);\x0a}\x0a\x0avec4\x20brdf(in\x20vec4\x20baseColorWithAlpha,\x20vec2\x20texCoord,\x20vec2\x20oriTexCoord,\x20vec3\x20posEC,\x20vec3\x20posMC,\x20vec3\x20vertexNormalEC,\x20vec4\x20sunLightColor)\x20{\x0a#ifndef\x20USE_BatchPBR\x0a\x20\x20\x20\x20baseColorWithAlpha\x20=\x20baseColorWithAlpha\x20*\x20uBaseColorFactor;\x0a#endif\x0a#ifdef\x20BaseColorReplace\x0a\x20\x20\x20\x20baseColorWithAlpha\x20=\x20uBaseColorFactor;\x0a#endif\x0a\x20\x20\x20\x20float\x20faceDirection\x20=\x20gl_FrontFacing\x20?\x201.0\x20:\x20-\x201.0;\x0a\x20\x20\x20\x20vec3\x20ng\x20=\x20length(vertexNormalEC)\x20<\x200.1\x20?\x20normalize(czm_normal\x20*\x20computeNormal(posMC.xyz))\x20:\x20normalize(vertexNormalEC);\x0a\x20\x20\x20\x20ng\x20=\x20ng\x20*\x20faceDirection;\x0a#ifdef\x20HAS_BASE_TEXTURE\x0a\x20\x20\x20\x20baseColorWithAlpha\x20=\x20texture(uBaseTexture,\x20oriTexCoord);\x0a\x20\x20\x20\x20baseColorWithAlpha\x20=\x20sRGBToLinear(baseColorWithAlpha)\x20*\x20uBaseColorFactor;\x0a#endif\x0a#ifdef\x20HAS_NORMAL_TEXTURE\x0a\x20\x20\x20\x20vec3\x20n\x20=\x20perturbNormal2Arb(posEC,\x20ng,\x20oriTexCoord);\x0a#ifdef\x20HAS_ANISOTROPY\x0a\x20\x20\x20\x20float\x20anisotropy\x20=\x20uAnisotropy.b;\x0a\x20\x20\x20\x20vec3\x20anisotropyDirection\x20=\x20vec3(uAnisotropy.xy,\x200.0);\x0a\x20\x20\x20\x20vec3\x20anisotropicTangent\x20=\x20normalize(tbn\x20*\x20anisotropyDirection);\x0a\x20\x20\x20\x20vec3\x20anisotropicBitangent\x20=\x20normalize(cross(tbn[2],\x20anisotropicTangent));\x0a\x20\x20\x20\x20n\x20=\x20getAnisotropicBentNormals(anisotropicTangent,\x20anisotropicBitangent,\x20n,\x20v,\x20anisotropy);\x0a#endif\x0a#else\x0a\x20\x20\x20\x20vec3\x20n\x20=\x20ng;\x0a#endif\x0a#ifdef\x20HAS_WETNESS\x0a\x20\x20\x20\x20mat3\x20fixedToENU_wetness\x20=\x20mat3(czm_modelView[0][0],\x20czm_modelView[1][0],\x20czm_modelView[2][0],\x20czm_modelView[0][1],\x20czm_modelView[1][1],\x20czm_modelView[2][1],\x20czm_modelView[0][2],\x20czm_modelView[1][2],\x20czm_modelView[2][2]);\x0a\x20\x20\x20\x20vec3\x20normalWS_wetness\x20=\x20normalize(fixedToENU_wetness\x20*\x20n);\x0a#endif\x0a#ifdef\x20HAS_RAIN\x0a\x20\x20\x20\x20n\x20=\x20rippleGenerator(uRippleTexture,uAnimationSpeed,normalWS_wetness,uWetnessFactor);\x0a#endif\x0a\x20\x20\x20\x20vec3\x20baseColor\x20=\x20baseColorWithAlpha.rgb;\x0a\x20\x20\x20\x20float\x20roughness\x20=\x20uRoughnessFactor;\x0a\x20\x20\x20\x20float\x20metalness\x20=\x20uMetallicFactor;\x0a\x20\x20\x20\x20vec4\x20emissiveFactor\x20=\x20uEmissiveFactor;\x0a\x20\x20\x20\x20vec2\x20emissiveTexCoord\x20=\x20texCoord.xy;\x0a#ifdef\x20PBR_THEME\x0a\x20\x20\x20\x20int\x20pbrIndex\x20=\x20int(vPBRIndex);\x0a\x20\x20\x20\x20if(vPBRIndex\x20<\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20baseColorWithAlpha;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20mat4\x20pbrPar\x20=\x20mat4(0.0);\x0a\x20\x20\x20\x20for(int\x20i\x20=\x200;i\x20<\x20NUM_PBR_MATERIALS;i++)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(i\x20==\x20pbrIndex)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20pbrPar\x20=\x20uPBRMaterials[i];\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20roughness\x20=\x20clamp(pbrPar[0][0],\x200.04,\x201.0);\x0a\x20\x20\x20\x20metalness\x20=\x20clamp(pbrPar[0][1],\x200.0,\x201.0);\x0a\x20\x20\x20\x20baseColor\x20=\x20(baseColorWithAlpha\x20/\x20uBaseColorFactor\x20*\x20vec4(pbrPar[0][2],\x20pbrPar[0][3],\x20pbrPar[1][0],\x20pbrPar[1][1])).rgb;\x0a#endif\x0a#ifdef\x20USE_BatchPBR\x0a\x20\x20\x20\x20metalness\x20=\x20vMetallicRoughness.x;\x0a\x20\x20\x20\x20roughness\x20=\x20vMetallicRoughness.y;\x0a\x20\x20\x20\x20emissiveFactor\x20=\x20vEmissiveFactor;\x0a\x20\x20\x20\x20emissiveTexCoord\x20=\x20texCoord.xy;\x0a#endif\x0a\x20\x20\x20\x20metalness\x20=\x20clamp(metalness,\x200.0,\x201.0);\x0a\x20\x20\x20\x20roughness\x20=\x20clamp(roughness,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x0a#ifdef\x20HAS_MetallicRoughness_TEXTURE\x0a\x20\x20\x20\x20vec3\x20metallicRoughness\x20=\x20texture(uMetallicRoughnessTexture,\x20oriTexCoord).rgb;\x0a\x20\x20\x20\x20metalness\x20=\x20clamp(metalness\x20*\x20metallicRoughness.r,\x200.0,\x201.0);\x0a\x20\x20\x20\x20roughness\x20=\x20clamp(roughness\x20*\x20metallicRoughness.g,\x200.04,\x201.0);\x0a#ifdef\x20HAS_WETNESS\x0a\x20\x20\x20\x20float\x20fWetness\x20=\x20clamp(uWetnessFactor,0.0,1.0);\x0a\x20\x20\x20\x20float\x20fWetness_correction\x20=\x20pow(4.0*fWetness,2.0);\x0a\x20\x20\x20\x20fWetness_correction\x20=\x20clamp(fWetness_correction,clamp(fWetness,0.0,0.9),1.0);\x0a\x20\x20\x20\x20float\x20fWerness_normalized\x20=\x20fWetness_correction\x20*\x20clamp(normalWS_wetness.z\x20+\x200.85,0.0,1.0);\x0a\x20\x20\x20\x20baseColor\x20=\x20mix(baseColor,baseColor*0.7,fWerness_normalized);\x0a\x20\x20\x20\x20roughness\x20=\x20mix(roughness,0.05,fWerness_normalized);\x0a#endif\x0a#ifdef\x20HAS_SNOW\x0a\x20\x20\x20\x20mat3\x20fixedToENU_snow\x20=\x20mat3(czm_modelView[0][0],\x20czm_modelView[1][0],\x20czm_modelView[2][0],\x20czm_modelView[0][1],\x20czm_modelView[1][1],\x20czm_modelView[2][1],\x20czm_modelView[0][2],\x20czm_modelView[1][2],\x20czm_modelView[2][2]);\x0a\x20\x20\x20\x20vec3\x20normalWS_snow\x20=\x20normalize(fixedToENU_snow\x20*\x20n);\x0a\x20\x20\x20\x20snowGenerator(uSnowMaskTexture,uSnowNormalTexture,\x20oriTexCoord,uSnowCoverageFactor,normalWS_snow,baseColor,roughness);\x0a#endif\x0a#endif\x0a\x0a\x20\x20\x20\x20vec3\x20lightColorHdr\x20=\x20vec3(2.0)\x20*\x20sunLightColor.rgb;\x0a\x20\x20\x20\x20vec3\x20l\x20=\x20normalize(czm_lightDirectionEC);\x0a\x20\x20\x20\x20vec3\x20v\x20=\x20-normalize(posEC);\x0a\x20\x20\x20\x20vec3\x20h\x20=\x20normalize(v\x20+\x20l);\x0a\x20\x20\x20\x20vec3\x20f0\x20=\x20vec3(0.04);\x0a\x20\x20\x20\x20vec3\x20diffuseColor\x20=\x20baseColor\x20*\x20(1.0\x20-\x20metalness)\x20*\x20(1.0\x20-\x20f0);\x0a\x20\x20\x20\x20vec3\x20specularColor\x20=\x20mix(f0,\x20baseColor,\x20metalness);\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20float\x20alpha\x20=\x20roughness\x20*\x20roughness;\x0a\x20\x20\x20\x20float\x20dotNL\x20=\x20clamp(\x20dot(\x20n,\x20l\x20),\x200.001,\x201.0\x20);\x0a\x20\x20\x20\x20float\x20dotNV\x20=\x20abs(\x20dot(\x20n,\x20v\x20)\x20)\x20+\x200.001;\x0a\x20\x20\x20\x20float\x20dotNH\x20=\x20saturate(\x20dot(\x20n,\x20h\x20)\x20);\x0a\x20\x20\x20\x20float\x20dotLH\x20=\x20saturate(\x20dot(\x20l,\x20h\x20)\x20);\x0a\x20\x20\x20\x20float\x20dotVH\x20=\x20saturate(\x20dot(\x20v,\x20h\x20)\x20);\x0a\x20\x20\x20\x20float\x20reflectance\x20=\x20max(max(specularColor.r,\x20specularColor.g),\x20specularColor.b);\x0a\x20\x20\x20\x20float\x20f90\x20=\x20clamp(reflectance\x20*\x2025.0,\x200.0,\x201.0);\x0a\x20\x20\x20\x20vec3\x20F\x20=\x20F_Schlick(\x20specularColor,\x20f90,\x20dotVH\x20);\x0a\x20\x20\x20\x20float\x20G\x20=\x20GeometrySchlickGGX(alpha,\x20dotNV)\x20*\x20GeometrySchlickGGX(alpha,\x20dotNL);\x0a\x20\x20\x20\x20float\x20D\x20=\x20D_GGX(\x20alpha,\x20dotNH\x20);\x0a\x20\x20\x20\x20vec3\x20diffuseContribution\x20=\x20(1.0\x20-\x20F)\x20*\x20lambertianDiffuse(diffuseColor);\x0a\x20\x20\x20\x20vec3\x20specularContribution\x20=\x20F\x20*\x20G\x20*\x20D\x20/\x20(4.0\x20*\x20dotNL\x20*\x20dotNV);\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec3\x20geometryNormal\x20=\x20ng;\x0a\x20\x20\x20\x20PhysicalMaterial\x20material;\x0a\x20\x20\x20\x20material.diffuseColor\x20=\x20diffuseColor;\x0a\x20\x20\x20\x20vec3\x20dxy\x20=\x20max(\x20abs(\x20dFdx(\x20geometryNormal\x20)\x20),\x20abs(\x20dFdy(\x20geometryNormal\x20)\x20)\x20);\x0a\x20\x20\x20\x20float\x20geometryRoughness\x20=\x20max(\x20max(\x20dxy.x,\x20dxy.y\x20),\x20dxy.z\x20);\x0a\x20\x20\x20\x20material.roughness\x20=\x20max(\x20roughness,\x200.0525\x20);\x0a\x20\x20\x20\x20material.roughness\x20+=\x20geometryRoughness;\x0a\x20\x20\x20\x20material.roughness\x20=\x20min(\x20material.roughness,\x201.0\x20);\x0a\x20\x20\x20\x20material.specularColor\x20=\x20specularColor;\x0a\x20\x20\x20\x20material.specularF90\x20=\x201.0;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20GeometricContext\x20geometry;\x0a\x20\x20\x20\x20geometry.position\x20=\x20posEC;\x0a\x20\x20\x20\x20geometry.normal\x20=\x20n;\x0a\x20\x20\x20\x20geometry.viewDir\x20=\x20v;\x0a\x20\x20\x20\x20ReflectedLight\x20reflectedLight\x20=\x20ReflectedLight(\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20),\x20vec3(\x200.0\x20)\x20);\x0a\x20\x20\x20\x20reflectedLight.directDiffuse\x20+=\x20dotNL\x20*\x20lightColorHdr\x20*\x20diffuseContribution;\x0a\x20\x20\x20\x20reflectedLight.directSpecular\x20+=\x20dotNL\x20*\x20lightColorHdr\x20*\x20specularContribution;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20IncidentLight\x20directLight;\x20\x0a\x20\x20\x20\x20#include\x20<lightSourceImpl>\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec3\x20irradiance\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20vec3\x20radiance\x20=\x20vec3(0.0);\x0a\x20\x20\x0a#ifdef\x20HAS_HEMISPHERE_LIGHTS\x0a\x20\x20\x20\x20HemisphereLight\x20hemiLight;\x0a\x20\x20\x20\x20hemiLight.skyColor\x20=\x20uSkyColor[0];\x0a\x20\x20\x20\x20hemiLight.groundColor\x20=\x20uGroundColor[0];\x0a\x20\x20\x20\x20hemiLight.direction\x20=\x20normalize(czm_normal\x20*\x20vec3(0.0,\x200.0,\x201.0));\x0a\x20\x20\x20\x20irradiance\x20+=\x20getHemisphereLightIrradiance(\x20hemiLight,\x20geometry\x20);\x0a#endif\x0a\x0a#ifdef\x20IBL\x0a\x0a#ifdef\x20KtxEnvMap\x0a\x20\x20\x20\x20mat3\x20fixedToENU\x20=\x20mat3(czm_modelView[0][0],\x20czm_modelView[1][0],\x20czm_modelView[2][0],\x20czm_modelView[0][1],\x20czm_modelView[1][1],\x20czm_modelView[2][1],\x20czm_modelView[0][2],\x20czm_modelView[1][2],\x20czm_modelView[2][2]);\x0a\x20\x20\x20\x20const\x20mat3\x20yUpToZUp\x20=\x20mat3(-1.0,\x200.0,\x200.0,\x200.0,\x200.0,\x20-1.0,\x200.0,\x201.0,\x200.0);\x0a\x20\x20\x20\x20vec3\x20cubeDir\x20=\x20normalize(\x20yUpToZUp\x20*\x20fixedToENU\x20*\x20reflect(-v,\x20n)\x20);\x0a\x20\x20\x20\x20vec3\x20worldNormal\x20=\x20normalize(\x20yUpToZUp\x20*\x20fixedToENU\x20*\x20n\x20);\x0a\x20\x20\x20\x20irradiance\x20=\x20czm_sphericalHarmonics(worldNormal,\x20czm_sphericalHarmonicCoefficients);\x0a\x20\x20\x20\x20radiance\x20=\x20czm_sampleOctahedralProjection(czm_specularEnvironmentMaps,\x20czm_specularEnvironmentMapSize,\x20cubeDir,\x20\x20roughness\x20*\x20czm_specularEnvironmentMapsMaximumLOD,\x20czm_specularEnvironmentMapsMaximumLOD);\x0a#else\x0a\x20\x20\x20\x20//\x20irradiance\x20+=\x20getIBLIrradiance(\x20geometry.normal\x20);\x0a\x20\x20\x20\x20//\x20radiance\x20+=\x20getIBLRadiance(\x20geometry.viewDir,\x20geometry.normal,\x20material.roughness\x20);\x0a#endif\x0a\x20\x20\x20\x20\x0a#else\x0a\x20\x20\x20\x20vec3\x20positionWC\x20=\x20vec3(czm_inverseView\x20*\x20vec4(posEC,\x201.0));\x0a\x20\x20\x20\x20vec3\x20r\x20=\x20normalize(czm_inverseViewRotation\x20*\x20normalize(reflect(v,\x20n)));\x0a\x20\x20\x20\x20float\x20vertexRadius\x20=\x20length(positionWC);\x0a\x20\x20\x20\x20float\x20horizonDotNadir\x20=\x201.0\x20-\x20min(1.0,\x20czm_ellipsoidRadii.x\x20/\x20vertexRadius);\x0a\x20\x20\x20\x20float\x20reflectionDotNadir\x20=\x20dot(r,\x20normalize(positionWC));\x0a\x20\x20\x20\x20r.x\x20=\x20-r.x;\x0a\x20\x20\x20\x20r\x20=\x20-normalize(czm_temeToPseudoFixed\x20*\x20r);\x0a\x20\x20\x20\x20r.x\x20=\x20-r.x;\x0a\x20\x20\x20\x20float\x20inverseRoughness\x20=\x201.04\x20-\x20roughness;\x0a\x20\x20\x20\x20inverseRoughness\x20*=\x20inverseRoughness;\x0a\x20\x20\x20\x20vec3\x20sceneSkyBox\x20=\x20textureCube(czm_environmentMap,\x20r).rgb\x20*\x20inverseRoughness;\x0a\x20\x20\x20\x20float\x20atmosphereHeight\x20=\x200.05;\x0a\x20\x20\x20\x20float\x20blendRegionSize\x20=\x200.1\x20*\x20((1.0\x20-\x20inverseRoughness)\x20*\x208.0\x20+\x201.1\x20-\x20horizonDotNadir);\x0a\x20\x20\x20\x20float\x20blendRegionOffset\x20=\x20roughness\x20*\x20-1.0;\x0a\x20\x20\x20\x20float\x20farAboveHorizon\x20=\x20clamp(horizonDotNadir\x20-\x20blendRegionSize\x20*\x200.5\x20+\x20blendRegionOffset,\x201.0e-10\x20-\x20blendRegionSize,\x200.99999);\x0a\x20\x20\x20\x20float\x20aroundHorizon\x20=\x20clamp(horizonDotNadir\x20+\x20blendRegionSize\x20*\x200.5,\x201.0e-10\x20-\x20blendRegionSize,\x200.99999);\x0a\x20\x20\x20\x20float\x20farBelowHorizon\x20=\x20clamp(horizonDotNadir\x20+\x20blendRegionSize\x20*\x201.5,\x201.0e-10\x20-\x20blendRegionSize,\x200.99999);\x0a\x20\x20\x20\x20float\x20smoothstepHeight\x20=\x20smoothstep(0.0,\x20atmosphereHeight,\x20horizonDotNadir);\x0a\x20\x20\x20\x20vec3\x20belowHorizonColor\x20=\x20mix(vec3(0.1,\x200.15,\x200.25),\x20vec3(0.4,\x200.7,\x200.9),\x20smoothstepHeight);\x0a\x20\x20\x20\x20vec3\x20nadirColor\x20=\x20belowHorizonColor\x20*\x200.5;\x0a\x20\x20\x20\x20vec3\x20aboveHorizonColor\x20=\x20mix(vec3(0.9,\x201.0,\x201.2),\x20belowHorizonColor,\x20roughness\x20*\x200.5);\x0a\x20\x20\x20\x20vec3\x20blueSkyColor\x20=\x20mix(vec3(0.18,\x200.26,\x200.48),\x20aboveHorizonColor,\x20reflectionDotNadir\x20*\x20inverseRoughness\x20*\x200.5\x20+\x200.75);\x0a\x20\x20\x20\x20vec3\x20zenithColor\x20=\x20mix(blueSkyColor,\x20sceneSkyBox,\x20smoothstepHeight);\x0a\x20\x20\x20\x20vec3\x20blueSkyDiffuseColor\x20=\x20vec3(0.7,\x200.85,\x200.9);\x0a\x20\x20\x20\x20float\x20diffuseIrradianceFromEarth\x20=\x20(1.0\x20-\x20horizonDotNadir)\x20*\x20(reflectionDotNadir\x20*\x200.25\x20+\x200.75)\x20*\x20smoothstepHeight;\x0a\x20\x20\x20\x20float\x20diffuseIrradianceFromSky\x20=\x20(1.0\x20-\x20smoothstepHeight)\x20*\x20(1.0\x20-\x20(reflectionDotNadir\x20*\x200.25\x20+\x200.25));\x0a\x20\x20\x20\x20vec3\x20diffuseIrradiance\x20=\x20blueSkyDiffuseColor\x20*\x20clamp(diffuseIrradianceFromEarth\x20+\x20diffuseIrradianceFromSky,\x200.0,\x201.0);\x0a\x20\x20\x20\x20float\x20notDistantRough\x20=\x20(1.0\x20-\x20horizonDotNadir\x20*\x20roughness\x20*\x200.8);\x0a\x20\x20\x20\x20vec3\x20specularIrradiance\x20=\x20mix(zenithColor,\x20aboveHorizonColor,\x20smoothstep(farAboveHorizon,\x20aroundHorizon,\x20reflectionDotNadir)\x20*\x20notDistantRough);\x0a\x20\x20\x20\x20specularIrradiance\x20=\x20mix(specularIrradiance,\x20belowHorizonColor,\x20smoothstep(aroundHorizon,\x20farBelowHorizon,\x20reflectionDotNadir)\x20*\x20inverseRoughness);\x0a\x20\x20\x20\x20specularIrradiance\x20=\x20mix(specularIrradiance,\x20nadirColor,\x20smoothstep(farBelowHorizon,\x201.0,\x20reflectionDotNadir)\x20*\x20inverseRoughness);\x0a\x20\x20\x20\x20irradiance\x20=\x20diffuseIrradiance;\x0a\x20\x20\x20\x20radiance\x20=\x20specularIrradiance;\x0a#endif\x0a\x0a\x20\x20\x20\x20indirectSpecular_Physical(radiance,\x20irradiance,\x20geometry,\x20material,\x20reflectedLight);\x0a\x0a#ifdef\x20HAS_OCCLUSION_TEXTURE\x0a\x20\x20\x20\x20float\x20ambientOcclusion\x20=\x20texture(uOcclusionTexture,\x20oriTexCoord.xy).r;\x0a\x20\x20\x20\x20reflectedLight.indirectDiffuse\x20*=\x20ambientOcclusion;\x0a#ifdef\x20IBL\x0a\x20\x20\x20\x20reflectedLight.indirectSpecular\x20*=\x20computeSpecularOcclusion(\x20dotNV,\x20ambientOcclusion,\x20material.roughness\x20);\x0a#endif\x0a#endif\x0a\x0avec3\x20color\x20=\x20reflectedLight.directDiffuse\x20+\x20reflectedLight.directSpecular\x20+\x20reflectedLight.indirectDiffuse\x20+\x20reflectedLight.indirectSpecular;\x0a\x0a#ifdef\x20HAS_EMISSIVE_TEXTURE\x0a\x20\x20\x20\x20emissiveTexCoord\x20=\x20emissiveTexCoord\x20*\x20uEmissiveUVOffsetAndTiling.zw\x20+\x20uEmissiveUVOffsetAndTiling.xy;\x0a\x20\x20\x20\x20vec3\x20emissive\x20=\x20texture(uEmissionTexture,\x20emissiveTexCoord).rgb;\x0a\x20\x20\x20\x20emissive\x20*=\x20emissiveFactor.rgb;\x0a\x20\x20\x20\x20color\x20+=\x20emissive;\x0a#else\x0a\x20\x20\x20\x20color\x20+=\x20emissiveFactor.rgb;\x0a#endif\x0a\x0a\x20\x20\x20\x20color\x20=\x20applyTonemapping(color);\x0a\x20\x20\x20\x20color\x20=\x20LinearTosRGB(color);\x0a\x20\x20\x20\x20\x0a#ifdef\x20MASK\x0a\x20\x20\x20\x20if\x20(baseColorWithAlpha.a\x20<\x20uAlphaCutoff)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20return\x20vec4(color.rgb,\x201.0);\x0a#endif\x0a\x20\x20\x20\x20return\x20vec4(color.rgb,\x20baseColorWithAlpha.a);\x0a}\x0a#endif\x0a', 'occlusionTextureIndex', 'maximumLevel', 'computeCullingVolume', 's3m_batchTable_operation', 'toNumber', 'getUniformMapCallback', 'RotateX', 'hierarchy', 'inflateEnd', '[object\x20ArrayBuffer]', 'invModelMatrix', '_cameraUp', 'projection', 'vertexArrayDestroyable', 'APPLY_SPLIT', 'TEXTURE_2D', 'pixelFormat', 'aNormalB', 'FlyTurningMode', '_gamma', 'inflateResetKeep', 'Position', 'Geode', 'uv9', 'distance', 'count', 'polyline-', 'Name', 'vertexAttributes', '\x0a#ifdef\x20GL_EXT_frag_depth\x0a#extension\x20GL_EXT_frag_depth\x20:\x20enable\x0a#endif\x0a#ifdef\x20GL_OES_standard_derivatives\x0a#extension\x20GL_OES_standard_derivatives\x20:\x20enable\x0a#endif\x0a\x0auniform\x20vec4\x20uVisibleAreaColor;\x0auniform\x20vec4\x20uHiddenAreaColor;\x0auniform\x20vec2\x20uTextureSize;\x0auniform\x20sampler2D\x20uGlobalDepthTexture;\x0auniform\x20sampler2D\x20uTexture;\x0auniform\x20mat4\x20uRenderTextureMatrix;\x0avarying\x20vec4\x20vClipPos;\x0a\x0afloat\x20getDepth(in\x20vec4\x20depth)\x0a{\x0a\x20\x20\x20\x20float\x20z_window\x20=\x20czm_unpackDepth(depth);\x0a\x20\x20\x20\x20return\x20z_window;\x0a}\x0a\x0afloat\x20getDepthFromShadowMap(in\x20sampler2D\x20viewShedTexture,\x20in\x20vec4\x20texCoord)\x0a{\x0a\x09vec2\x20tCoord;\x0a\x20\x20\x20\x20tCoord\x20=\x20texCoord.xy\x20*\x20uTextureSize\x20-\x200.5;\x0a\x09float\x20x0\x20=\x20floor(tCoord.x);\x0a\x09float\x20x1\x20=\x20ceil(tCoord.x);\x0a\x09float\x20y0\x20=\x20floor(tCoord.y);\x0a\x09float\x20y1\x20=\x20ceil(tCoord.y);\x0a\x09vec2\x20invTexSize\x20=\x201.0\x20/\x20uTextureSize;\x0a\x09vec2\x20t00\x20=\x20vec2((x0\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y0\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09vec2\x20t10\x20=\x20vec2((x1\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y0\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09vec2\x20t01\x20=\x20vec2((x0\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y1\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09vec2\x20t11\x20=\x20vec2((x1\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y1\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09float\x20z00\x20=\x20getDepth(texture(uTexture,\x20t00));\x0a\x09float\x20z10\x20=\x20getDepth(texture(uTexture,\x20t01));\x0a\x09float\x20z01\x20=\x20getDepth(texture(uTexture,\x20t10));\x0a\x09float\x20z11\x20=\x20getDepth(texture(uTexture,\x20t11));\x0a\x09float\x20depth\x20=\x20max(max(z00,\x20z01),\x20max(z10,\x20z11));\x0a\x09return\x20depth;\x0a}\x0a\x0avoid\x20main()\x0a{\x0a\x09vec4\x20depthTexCoord\x20=\x20vClipPos\x20/\x20vClipPos.w;\x0a\x09depthTexCoord.xy\x20=\x20depthTexCoord.xy\x20*\x200.5\x20+\x200.5;\x0a\x09float\x20sceneDepth\x20=\x20czm_unpackDepth(texture(uGlobalDepthTexture,\x20depthTexCoord.xy));\x0a\x09sceneDepth\x20=\x20sceneDepth\x20*\x202.0\x20-\x201.0;\x0a\x09vec4\x20pos\x20=\x20vClipPos;\x0a\x09pos.z\x20=\x20sceneDepth\x20*\x20pos.w;\x0a\x09vec4\x20renderTextureCoord\x20=\x20uRenderTextureMatrix\x20*\x20pos;\x0a\x09vec4\x20texCoord\x20=\x20renderTextureCoord\x20/\x20renderTextureCoord.w;\x0a\x09texCoord.xyz\x20=\x20texCoord.xyz\x20*\x200.5\x20+\x200.5;\x0a\x09float\x20depth\x20=\x20getDepthFromShadowMap(uTexture,\x20texCoord);\x0a\x09float\x20dxc\x20=\x20abs(dFdx(texCoord.z));\x0a\x09float\x20dyc\x20=\x20abs(dFdy(texCoord.z));\x0a\x09float\x20dF\x20=\x20max(dxc,\x20dyc)\x20*\x203.0;\x0a\x09float\x20bias\x20=\x201.0e-6\x20+\x20dF;\x0a\x09float\x20c\x20=\x20float(depth\x20+\x20bias\x20<\x20texCoord.z);\x0a\x09vec4\x20finalColor\x20=\x20mix(uVisibleAreaColor,\x20uHiddenAreaColor,\x20vec4(c));\x0a\x09if(finalColor.a\x20<\x200.1)\x0a\x09{\x0a\x09\x09discard;\x0a\x09}\x0a\x09out_FragColor\x20=\x20czm_gammaCorrect(finalColor);\x0a}\x0a', '_resource', 'DEGREE', 'queryBooleanValue', 'rangeMode', 'metallicRoughnessTexture', 'getNumberOfYTilesAtLevel', 'addTexture', 'textureBakeRenderableFlag', 'S3MPointCloudRenderEntity', 'GpuConstants', '/layers.json', 'times', 'Cartesian2', '_sightlineCameras', 'requestHeapPack', 'HeightmapTerrainData', 'Cannot\x20find\x20module\x20\x27', '_viewProjMatrix', 'blockRequest', 'children', 'materialCode', 'OSGBLayer', '_inverseViewRotation', '_isS3MBlock', 'LEFT_DOWN', 'rootName', '_queue', 'options.startObject\x20and\x20options.stopObject\x20are\x20required.', 'trim', 'north', 'updateObjsOperation', 'addFlattenRegion', 'cancelled', 'QuantizedMeshTerrainData', 'curDis', 'dequeue', 'subTexInfos', 'isFinite', 'OrthographicFrustum', 'shaderProgramToCreate', 'options', 'point\x20size', 'setInputAction', 'isChildBlock', 'HypsometricSettingEnum', 'decimalPlaces', 'box', 'SuperMapTerrainProvider', 'vertexColorInstance', '_boundingSphere', 'reflectMatrix', 'input', 'SILHOUETTE_SELECT_TYPE', 'roughnessFactor', '20301bZBlFX', 'beginFunc', 'tmpEntities', 'UpperCorner', 'RequestState', 'equalsEpsilon', 'Right', 'BLEND', 'WebMercatorProjection', 'ProgramDefines', '_lineEntity', 'viewport', 'VisibleDistanceMin', 'preUpdate', 'camera', '_hasNormalBuffer', 'inflateInit2', 'raw', '\x20cannot\x20be\x20zero:\x20', 'squareRoot', '_scheme', 'loadingTexture', '_currentFrustum', 'TileMatrixSet', 'attrLocation', 'texMatrix', 'BillboardMode', '_emissionColor', 'minimumLevel', '_cameraDirection', '_isFlyLoop', 'Inflate', '?token', 'spotLightDecl', 'globalDepthBuffer', 'TexCoord', 'logarithmicDepthFarToNearRatio', 'unloadTile', 'queryNumericAttribute', '_fillForeColor', 'max\x20visible\x20altitude', '_contrast', 'StartRow', 'Ambient', '_color', 'rectangle', '_isStopVisible', 'pack\x20imagery\x20index\x20invalid', 'subRequested', 'isLessThanOrEqualTo', '_inverseProjectionDirty', 'texImage2D', 'Space', 'ZIP', 'multiViewportIndex', '_capturePointColor', 'ProjectionImage.contrast', 'throwInstantiationError', 'Multiple', 'defineProperty', 'removeAllLimitBody', 'CallbackProperty', '100\x2020px\x20SimSun', 'RequestScheduler', 'COMPRESS_NORMAL', '_updateFramebuffer', 'setView', 'hookPickFunc', '_ancestorTextureBake', '_subdomainConfig', 'activeEvt', 'diffuse', 's3m:FileType', 'tilingScheme', 'geometry', 'isAlongline', 'ISERVER_TOKEN', 'random', 'indexBuffer', 'Pass', 'transmissionFactor', 'setVisibleInViewport', 'decode_texCoord6_min', 'style3D', 'list', 'minFresnel', 'Matrix3', 'startPackRequest', 'view', 'createTypedArray', 'constructor', 'wmts_sub', 'mod', 'TEXTURE_WRAP_T', 'provider', 'top', 'rectangleSouthwestInMeters', '_maxHeight', 'ColorTable', 'texCoordZMatrix', 'unknown\x20header\x20flags\x20set', 'FLATTEN', 'Texture', 'speed', '_clipPlane', 'textContent', 'imageryLayer', 'last', 'bool', '_labelBackgroundColor', 'UNSIGNED_SHORT', 'getDerivedResource', 'fetch\x20s3m\x20layer\x20config\x20xml\x20error:', 'getExtensionFromUri', '\x0a#ifdef\x20HAS_HEMISPHERE_LIGHTS\x0a\x0auniform\x20vec3\x20uSkyColor[\x20HEMISPHERE_LIGHTS\x20];\x0auniform\x20vec3\x20uGroundColor[\x20HEMISPHERE_LIGHTS\x20];\x0auniform\x20vec3\x20uHemisphereLightDirectionEC[\x20HEMISPHERE_LIGHTS\x20];\x0a\x20\x20\x20\x20\x0astruct\x20HemisphereLight\x20{\x0a\x20\x20\x20\x20vec3\x20direction;\x0a\x20\x20\x20\x20vec3\x20skyColor;\x0a\x20\x20\x20\x20vec3\x20groundColor;\x0a};\x0a\x0avec3\x20getHemisphereLightIrradiance(\x20const\x20in\x20HemisphereLight\x20hemiLight,\x20const\x20in\x20GeometricContext\x20geometry\x20)\x20{\x0a\x20\x20\x20\x20float\x20dotNL\x20=\x20dot(\x20geometry.normal,\x20hemiLight.direction\x20);\x0a\x20\x20\x20\x20float\x20hemiDiffuseWeight\x20=\x200.5\x20*\x20dotNL\x20+\x200.5;\x0a\x20\x20\x20\x20vec3\x20irradiance\x20=\x20mix(\x20hemiLight.groundColor,\x20hemiLight.skyColor,\x20hemiDiffuseWeight\x20);\x0a\x20\x20\x20\x20return\x20irradiance;\x0a}\x0a\x0a#endif\x0a', 'HAS_LIGHT', 'OPAQUE', 'join', '_maxVisibleValue', 'lat', 'drawingBufferWidth', '_calloutColor', 'USpeed', 'Instance', 'isS3MBlock', 'rainDecl', 'editPointColor', 'dirPolyline', 'setCustomClipPlane', 'defined', '_labelPixelOffsetScaleByDistance', '_sortKey', '_anisotropy', 'TransparencyOptimization', 'promise', '_enableClipPlane', '_displayStyle', '_encodedCameraPositionMCDirty', 'point', '13VXueNZ', 'lenbits', 'clone', 'RasterRegionVS', '_textureFilterMode', 'Rain', 'OrientedBoundingBox', '_multiChoose', 'decode_texCoord5_min', 'position', '_accumulationArea', 'decode_texCoord3_normConstant', 'reset', 'PRJ_TRANSVERSE_MERCATOR', 'pbrMetallicRoughness', 'uniform\x20sampler2D\x20uTexture0;\x0auniform\x20vec4\x20uVisibleColor;\x0auniform\x20vec4\x20uHiddenColor;\x0avarying\x20vec4\x20renderTextureCoord;\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec4\x20resultColor\x20=\x20uVisibleColor;\x0a\x20\x20\x20\x20vec4\x20texCoord\x20=\x20renderTextureCoord\x20/\x20renderTextureCoord.w;\x0a\x20\x20\x20\x20float\x20depth\x20=\x20texCoord.z\x20*\x200.5\x20+\x200.5;\x0a\x20\x20\x20\x20texCoord.xy\x20=\x20texCoord.xy\x20*\x200.5\x20+\x200.5;\x0a\x20\x20\x20\x20float\x20z_window\x20=\x20czm_unpackDepth(texture(uTexture0,\x20texCoord.xy));\x0a\x20\x20\x20\x20if(z_window\x20<\x20depth\x20&&\x20z_window\x20>\x200.0\x20&&\x20z_window\x20<\x201.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20resultColor\x20=\x20uHiddenColor;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20out_FragColor\x20=\x20resultColor;\x0a}', 'waitTime', '_visible', 'MaxHeight', 'Number\x20primitive\x20has\x20more\x20than\x2015\x20significant\x20digits:\x20', 'geoBounds', 'lendyn', 'CellWidth', 'cullPass', 'Math', 'CategoryRange', '_transmissionFactor', 'relativePath', 'createBoundingBoxForInstance', 'GLOBE', 'dimensions\x20position\x20is\x20required\x20to\x20create\x20CustomClipBox', 'viewProjectionMatrix', 'hasWaterMask', '_isLineVisible', 'subVertexOffsetArr', 'getStringFromTypedArray', 'LabelCollection', 'anisotropy', '_modelViewInfiniteProjectionDirty', 'TEXTURE_MAG_FILTER', 'normalTextureScale', 'COMPRESS_TEXCOORD', '_hash', 'altitudefree', 'uv2', 'regularEdgeCommand', 'Not\x20a', '_entireFrustum', 'options.url\x20is\x20required.', '1XRMSUf', 'ContextLimits', 'vertexCount', 'rippleTexture', '_maximumMemoryUsage', 'endX', '_metallicFactor', 'maxVisibleAltitude', 'decode_texCoord0_min', 'OSGBCacheFile_Water', 'aSideness', 'ambient', 'idsColorMap', 'drillPick', 'DoublyLinkedList', '_rectangleSouthwestInMeters', 'quadKey', 'instanceBounds', 'show', 'addAvailableTileRange', 'materials', 'MAX_VALUE', '_numberOfLevelZeroTilesY', '#ifdef\x20GL_EXT_frag_depth\x0a#extension\x20GL_EXT_frag_depth\x20:\x20enable\x0a#endif\x0a#ifdef\x20GL_OES_standard_derivatives\x0a#extension\x20GL_OES_standard_derivatives\x20:\x20enable\x0a#endif\x0a\x0auniform\x20mat4\x20uRenderTextureMatrix;\x0auniform\x20vec2\x20uTexture1_size;\x0auniform\x20sampler2D\x20uTexture1;\x0auniform\x20sampler2D\x20uDiffuseTexture;\x0auniform\x20float\x20uFeatheringScale;\x0auniform\x20vec3\x20uV3AffineX;\x0auniform\x20vec3\x20uV3AffineY;\x0a\x0avarying\x20vec4\x20vClipPos;\x0a\x0aconst\x20float\x20oldFeatureingRadius\x20=\x200.707;\x0avec4\x20feathering(vec4\x20oldColor,\x20vec2\x20texCoord){\x0a\x20\x20\x20\x20float\x20disToCenter\x20=\x20length(texCoord\x20-\x20vec2(0.5));\x0a\x20\x20\x20\x20float\x20roundRadius\x20=\x20oldFeatureingRadius\x20*\x20(1.0\x20-\x20uFeatheringScale);\x0a\x20\x20\x20\x20float\x20disToRoundBounds\x20=\x20disToCenter\x20-\x20roundRadius;\x0a\x20\x20\x20\x20float\x20featheringAlpha\x20=\x20min(1.0,\x201.0\x20-\x20disToRoundBounds\x20/\x20(oldFeatureingRadius\x20-\x20roundRadius));\x0a\x20\x20\x20\x20return\x20vec4(oldColor.rgb,\x20featheringAlpha);\x0a}\x0afloat\x20getDepth(in\x20vec4\x20depth)\x0a{\x0a\x09float\x20z_window\x20=\x20czm_unpackDepth(depth);\x0a\x09float\x20n_range\x20=\x20czm_depthRange.near;\x0a\x09float\x20f_range\x20=\x20czm_depthRange.far;\x0a\x09return\x20(2.0\x20*\x20z_window\x20-\x20n_range\x20-\x20f_range)\x20/\x20(f_range\x20-\x20n_range);\x0a}\x0a\x0afloat\x20getDepthFromShadowMap(in\x20sampler2D\x20viewShedTexture,\x20in\x20vec4\x20texCoord)\x0a{\x0a\x09vec2\x20tCoord;\x0a\x20\x20\x20\x20tCoord\x20=\x20texCoord.xy\x20*\x20uTexture1_size\x20-\x200.5;\x0a\x09float\x20x0\x20=\x20floor(tCoord.x);\x0a\x09float\x20x1\x20=\x20ceil(tCoord.x);\x0a\x09float\x20y0\x20=\x20floor(tCoord.y);\x0a\x09float\x20y1\x20=\x20ceil(tCoord.y);\x0a\x09vec2\x20invTexSize\x20=\x201.0\x20/\x20uTexture1_size;\x0a\x09vec2\x20t00\x20=\x20vec2((x0\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y0\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09vec2\x20t10\x20=\x20vec2((x1\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y0\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09vec2\x20t01\x20=\x20vec2((x0\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y1\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09vec2\x20t11\x20=\x20vec2((x1\x20+\x200.5)\x20*\x20invTexSize.x,\x20(y1\x20+\x200.5)\x20*\x20invTexSize.y);\x0a\x09float\x20z00\x20=\x20getDepth(texture(uTexture1,\x20t00));\x0a\x09float\x20z10\x20=\x20getDepth(texture(uTexture1,\x20t01));\x0a\x09float\x20z01\x20=\x20getDepth(texture(uTexture1,\x20t10));\x0a\x09float\x20z11\x20=\x20getDepth(texture(uTexture1,\x20t11));\x0a\x09float\x20depth\x20=\x20max(max(z00,\x20z01),\x20max(z10,\x20z11));\x0a\x09return\x20depth;\x0a}\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20//czm_writeDepthClamp();\x0a\x09vec4\x20depthTexCoord\x20=\x20vClipPos\x20/\x20vClipPos.w;\x0a\x09depthTexCoord.xy\x20=\x20depthTexCoord.xy\x20*\x200.5\x20+\x200.5;\x0a\x09float\x20sceneDepth\x20=\x20czm_unpackDepth(texture(czm_globeDepthTexture,\x20depthTexCoord.xy));\x0a\x09sceneDepth\x20=\x20czm_reverseLogDepth(sceneDepth);\x0a\x09sceneDepth\x20=\x20sceneDepth\x20*\x202.0\x20-\x201.0;\x0a\x09vec4\x20pos\x20=\x20vClipPos;\x0a\x09pos.z\x20=\x20sceneDepth\x20*\x20pos.w;\x0a\x09vec4\x20viewPos\x20=\x20czm_inverseProjection\x20*\x20pos;\x0a\x09vec4\x20renderTextureCoord\x20=\x20uRenderTextureMatrix\x20*\x20viewPos;\x0a\x09vec4\x20texCoord\x20=\x20renderTextureCoord\x20/\x20renderTextureCoord.w;\x0a\x09texCoord.xyz\x20=\x20texCoord.xyz\x20*\x200.5\x20+\x200.5;\x0a\x09if(texCoord.x\x20<\x200.0\x20||\x20texCoord.x\x20>\x201.0\x20||\x20texCoord.y\x20<\x200.0\x20||\x20texCoord.y\x20>\x201.0)\x0a\x09{\x0a\x09\x09discard;\x0a\x09}\x0a\x09float\x20depth\x20=\x20getDepthFromShadowMap(uTexture1,\x20texCoord);\x0a\x09depth\x20=\x20depth\x20*\x200.5\x20+\x200.5;\x0a\x09float\x20dxc\x20=\x20abs(dFdx(texCoord.z));\x0a\x09float\x20dyc\x20=\x20abs(dFdy(texCoord.z));\x0a\x09float\x20dF\x20=\x20max(dxc,\x20dyc)\x20*\x203.0;\x0a\x09float\x20bias\x20=\x201.0e-6\x20+\x20dF;\x0a\x09if(depth\x20+\x200.00002\x20<\x20texCoord.z)\x0a\x09{\x0a\x09\x09discard;\x0a\x09}\x0a\x09vec2\x20finalTexCoord\x20=\x20texCoord.xy;\x0a\x20\x20\x20\x20texCoord.x\x20=\x20uV3AffineX.x\x20*\x20finalTexCoord.x\x20+\x20uV3AffineX.y\x20*\x20finalTexCoord.y\x20+\x20uV3AffineX.z;\x0a\x20\x20\x20\x20texCoord.y\x20=\x20uV3AffineY.x\x20*\x20finalTexCoord.x\x20+\x20uV3AffineY.y\x20*\x20finalTexCoord.y\x20+\x20uV3AffineY.z;\x0a\x20\x20\x20\x20if(texCoord.x\x20>\x201.0\x20||\x20texCoord.y\x20>\x201.0\x20||\x20texCoord.x\x20<\x200.0\x20||\x20texCoord.y\x20<\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20}\x0a\x09out_FragColor\x20=\x20texture(uDiffuseTexture,\x20texCoord.xy);\x0a\x09out_FragColor\x20=\x20feathering(out_FragColor,\x20texCoord.xy);\x0a\x09//out_FragColor.rgb\x20=\x20czm_adjustColor(out_FragColor.rgb);\x0a}', 'previous', '_saturation', 'scheme', 'Transforms', '\x20not\x20a\x20primitive\x20number:\x20', 'waterBrightness', 'CRYPTO', 'createEdgeData', 'bind', 'lodRangeMode', 'childTile', 'brightness', 'check', 'createLinearGradient', 'createElement', 'measureEvt', 'Pitch', 'out\x20of\x20range:\x20', '_errorEvent', 'quadKeyPack', '%2B', 'xflags', 'dirty', 'setImage', 'DEGREES_PER_RADIAN', '_pointSize', '_baseColorTextureIndex', '_usePBR', '_levelZeroMaximumGeometricError', 'data/path/{z}/{x}/{y}.terrainz?v={version}', 'currentStopIndex', 'imageryLayers', 'getMatrix3', '\x0a\x0a#ifdef\x20HAS_DIR_LIGHTS\x0afor\x20(int\x20i\x20=\x200;\x20i\x20<\x20DIR_LIGHTS;\x20i++)\x20{\x0a\x20\x20\x20\x20directLight.color\x20=\x20uDirectionalLightColor[i];\x0a\x20\x20\x20\x20directLight.direction\x20=\x20uDirectionalLightDirectionEC[i];\x0a\x20\x20\x20\x20directLight.visible\x20=\x20true;\x0a\x20\x20\x20\x20directPhysical(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a}\x0a#endif\x0a\x0a#ifdef\x20HAS_POINT_LIGHTS\x0aPointLight\x20pointLight;\x0afor\x20(int\x20i\x20=\x200;\x20i\x20<\x20POINT_LIGHTS;\x20i++)\x20{\x0a\x20\x20\x20\x20pointLight.position\x20=\x20uPointLightPositionEC[i];\x0a\x20\x20\x20\x20pointLight.color\x20=\x20uPointLightColor[i];\x0a\x20\x20\x20\x20pointLight.distance\x20=\x20uPointLightDistanceAndDecay[i].x;\x0a\x20\x20\x20\x20pointLight.decay\x20=\x20uPointLightDistanceAndDecay[i].y;\x0a\x20\x20\x20\x20getPointDirectLightIrradiance(\x20pointLight,\x20geometry,\x20directLight\x20);\x0a\x20\x20\x20\x20if(!directLight.visible)\x20continue;\x0a\x20\x20\x20\x20directPhysical(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a}\x0a#endif\x0a\x0a#ifdef\x20HAS_SPOT_LIGHTS\x0aSpotLight\x20spotLight;\x0afor\x20(int\x20i\x20=\x200;\x20i\x20<\x20SPOT_LIGHTS;\x20i++)\x20{\x0a\x20\x20\x20\x20spotLight.position\x20=\x20uSpotLightPositionEC[i];\x0a\x20\x20\x20\x20spotLight.color\x20=\x20uSpotLightColor[i];\x0a\x20\x20\x20\x20spotLight.direction\x20=\x20uSpotLightDirectionEC[i];\x0a\x20\x20\x20\x20spotLight.coneCos\x20=\x20uSpotLightDistanceDecayCosPenumbra[i].z;\x0a\x20\x20\x20\x20spotLight.penumbraCos\x20=\x20uSpotLightDistanceDecayCosPenumbra[i].w;\x0a\x20\x20\x20\x20getSpotDirectLightIrradiance(\x20spotLight,\x20geometry,\x20directLight\x20);\x0a\x20\x20\x20\x20if(!directLight.visible)\x20continue;\x0a\x20\x20\x20\x20directPhysical(\x20directLight,\x20geometry,\x20material,\x20reflectedLight\x20);\x0a}\x0a#endif\x0a', '_frameState', 'wmts100', 'appendForwardSlash', '_lastTimeIndex', 'unpackArray', 'removeListenerFunc', 'plus', './utils/strings', '_availability', 'ViewPosition', 'skeletonNames', 'removeTargetPoint', 'radius', 'Matrix', '_blockScale', 'queryStringValue', 'southwest', 'VOL_AND_HYP', 'None', 'ProjectionImage.brightness', 'maximumRadius', 'resolve', 'invalid\x20bit\x20length\x20repeat', '_metallicRoughnessTextureIndex', '_scene', 'subTextureNamesBake', 'createdBaker', 'minInstensity', 'S3MCacheFileRenderEntity', 'toJSON', 'indexOfRefraction', 'HAS_NORMAL', 'UNSIGNED_BYTE', '#ifdef\x20GL_OES_standard_derivatives\x0a#extension\x20GL_OES_standard_derivatives\x20:\x20enable\x0a#endif\x0a\x20\x20\x20\x20varying\x20vec4\x20vColor;\x0a\x20\x20\x20\x20varying\x20vec4\x20vPositionMC;\x0a\x20\x20\x20\x20varying\x20float\x20vPixelDistance;\x0a#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSwipeRegion;\x0a\x20\x20\x20\x20void\x20rollerShutter(vec2\x20coord,\x20vec4\x20region)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20f\x20=\x20step(region.xw,\x20coord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20s\x20=\x20step(coord,\x20region.zy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(f.x\x20*\x20f.y\x20*\x20s.x\x20*\x20s.y\x20<\x201.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a#endif\x0avoid\x20main()\x0a{\x0a#ifdef\x20APPLY_SWIPE\x20\x0a\x20\x20\x20\x20rollerShutter(gl_FragCoord.xy,\x20uSwipeRegion);\x0a#endif\x0a\x09if(vColor.a\x20<\x200.1)\x0a\x09{\x0a\x09\x09discard;\x0a\x09}\x0a\x20\x20\x20\x20out_FragColor\x20=\x20vColor;\x0a\x20\x20\x20\x20float\x20distanceToCenter\x20=\x20length(gl_PointCoord\x20-\x20vec2(0.5));\x0a\x20\x20\x20\x20float\x20maxDistance\x20=\x20max(0.0,\x200.5\x20-\x20vPixelDistance);\x0a\x20\x20\x20\x20float\x20wholeAlpha\x20=\x201.0\x20-\x20smoothstep(maxDistance,\x200.5,\x20distanceToCenter);\x0a\x20\x20\x20\x20out_FragColor.a\x20*=\x20wholeAlpha;\x0a\x09if(out_FragColor.a\x20<\x200.1)\x0a\x09{\x0a\x09\x09discard;\x0a\x09}\x0a#ifdef\x20CLIP\x0a\x20\x20\x20\x20out_FragColor\x20*=\x20czm_clip(czm_modelView\x20*\x20vec4(vPositionMC.xyz,\x201.0),\x201.0);\x0a#endif\x0a\x20\x20\x20\x20out_FragColor\x20=\x20czm_gammaCorrect(out_FragColor);\x0a}', 'getTileCredits', 'setPBRMaterialFromJSON', 'extra', '_objsOperationList', 'fractionGroupSeparator', 'tileFormat', 'src', '\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20uniform\x20sampler2D\x20u_depthTexture;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20varying\x20vec2\x20v_textureCoordinates;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20void\x20main()\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20out_FragColor\x20=\x20czm_packDepth(texture(u_depthTexture,\x20v_textureCoordinates).r);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20', '_heightmapStructure', '/realspace', '_levels', 'isLeafTile', 'sin', 'byteLength', 'stencilCommand', 'namespaceURI', 'updateAndExecuteCommands', '_visibleColor', 'Z_NO_FLUSH', 'PBRMaterialType', 'geoMatrix', 'requestTileGeometry', 'distbits', 'nextSibling', 'isConvert', 'resetRosRenderFlag', 'totalMemoryUsageInBytes', './zlib/zstream', 'textureId', '_visibleViewport', 'MASK_INDETERMINATE', '_id', 'item', 'selectedColor', 'isAncestorBlock', '_fillStyle', 'getUint16', 'filteringoption', 'isFlyLoop', 'hasMetadata\x20must\x20not\x20be\x20called\x20before\x20the\x20terrain\x20provider\x20is\x20ready.', '_easingFunction', 'subRequest', 'fromGeometry', 'PolygonGeometryLibrary', 'inverse', 'play', 'showrouteline', 'jobScheduler', 'max', 'S3MB', '/config', 'ElementCount', 'vertexBufferToCreate', 'texturePackage', 'log2FarDepthFromNearPlusOne', 'total', 'altitudeMode\x20value', 'unshift', 'latitude', 'startObject', 'ImageryLayer', '_isTileMap', 'unknown\x20compression\x20method', 'wetnessFactor', 'getEstimatedLevelZeroGeometricErrorForAHeightmap', 'ParamType', 'SELECTION', 'defaultValue', 'isGreaterThanOrEqualTo', '_surroundDuration', 'heightmapWidth', 'getTileDataAvailable', 'schedule', '_isSkirtDirty', 'W_VISIBLE', 'red', 'TRIANGLES', 'REPLACE_COLOR_TYPE', 'WithinLayer3DGroup', '_minVisibleValue', '{level}', 'textureWidth', 'inverseViewMatrix', 'geoName', 'getScale', 'pause', 'format', '_heightmapHeight', 'fetchJson', 'FillStyle', 'physicalIndex', 'contextId', 'invViewMatrix', 'getSkyline2D', 'StopPlayMode', 'terrainProvider', 'Utils', '_catmullRomSpline', 'range', '\x0a\x20\x20\x20\x20in\x20vec4\x20aPosition;\x0a\x20\x20\x20\x20in\x20vec4\x20aColor;\x0a\x20\x20\x20\x20in\x20vec3\x20aNormal;\x0a#ifdef\x20TexCoord\x0a\x20\x20\x20\x20in\x20vec4\x20aTexCoord0;\x0a\x20\x20\x20\x20in\x20vec4\x20vTexCoord;\x0a#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20uniform\x20float\x20uTexture0Width;\x0a\x20\x20\x20\x20in\x20vec4\x20vTexCoordTransform;\x0a\x20\x20\x20\x20varying\x20vec4\x20vTexMatrix;\x0a#endif\x0a#endif\x0a#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20varying\x20float\x20wValue;\x20\x20\x20\x20\x0a#endif\x0a#ifdef\x20FLATTEN\x0a\x20\x20\x20\x20uniform\x20mat4\x20uGeoMatrix;\x0a\x20\x20\x20\x20uniform\x20mat4\x20uInverseGeoMatrix;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uFlattenTexture;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uFlattenRect;\x0a#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSelectedColor;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20varying\x20vec4\x20vSecondColor;\x0a\x20\x20\x20\x20varying\x20vec4\x20vPositionMC;\x0a\x20\x20\x20\x20varying\x20vec3\x20vPositionEC;\x0a#ifdef\x20VertexColor\x0a\x20\x20\x20\x20varying\x20vec4\x20vColor;\x0a#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_LEFT8\x20=\x20256.0;\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_RIGHT8\x20=\x201.0\x20/\x20256.0;\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_RIGHT4\x20=\x201.0\x20/\x2016.0;\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_LEFT4\x20=\x2016.0;\x0a\x20\x20\x20\x20void\x20getTextureMatrixFromZValue(in\x20float\x20nZ,\x20inout\x20float\x20XTran,\x20inout\x20float\x20YTran,\x20inout\x20float\x20scale)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(nZ\x20<=\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nDel8\x20=\x20floor(nZ\x20*\x20SHIFT_RIGHT8);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nDel16\x20=\x20floor(nDel8\x20*\x20SHIFT_RIGHT8);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nDel20\x20=\x20floor(nDel16\x20*\x20SHIFT_RIGHT4);\x0a\x20\x20\x20\x20\x20\x20\x20\x20YTran\x20=\x20nZ\x20-\x20nDel8\x20*\x20SHIFT_LEFT8;\x0a\x20\x20\x20\x20\x20\x20\x20\x20XTran\x20=\x20nDel8\x20-\x20nDel16\x20*\x20SHIFT_LEFT8;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nLevel\x20=\x20nDel16\x20-\x20nDel20\x20*\x20SHIFT_LEFT4;\x0a\x20\x20\x20\x20\x20\x20\x20\x20scale\x20=\x201.0\x20/\x20pow(2.0,\x20nLevel);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a#ifdef\x20FLATTEN\x0a\x20\x20\x20\x20float\x20unpackValue(vec4\x20packedValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20SHIFT_LEFT16\x20=\x2065536.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20SHIFT_LEFT8\x20=\x20256.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20value\x20=\x20packedValue\x20*\x20255.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20value.r\x20*\x20SHIFT_LEFT16\x20+\x20value.g\x20*\x20SHIFT_LEFT8\x20+\x20value.b\x20-\x209000.0;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec4\x20calculateHeight(vec4\x20vertexPos)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vecPos\x20=\x20uGeoMatrix\x20*\x20vec4(vertexPos.xyz,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20vecRatio\x20=\x20vec2(uFlattenRect.z\x20-\x20uFlattenRect.x,\x20uFlattenRect.w\x20-\x20uFlattenRect.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20vecTexCoord\x20=\x20vec2(vecPos.x\x20-\x20uFlattenRect.x,\x20vecPos.y\x20-\x20uFlattenRect.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vecTexCoord.x\x20=\x20vecTexCoord.x\x20/\x20vecRatio.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vecTexCoord.y\x20=\x20vecTexCoord.y\x20/\x20vecRatio.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vecTexCoord.x\x20>\x201.0\x20||\x20vecTexCoord.x\x20<\x200.0\x20||\x20vecTexCoord.y\x20>\x201.0\x20||\x20vecTexCoord.y\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vertexPos;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fHeight\x20=\x20unpackValue(texture(uFlattenTexture,\x20vecTexCoord.xy));\x0a\x20\x20\x20\x20\x20\x20\x20\x20fHeight\x20=\x20fHeight;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vecPos.z\x20>\x20fHeight)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vecPos.z\x20=\x20fHeight;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vecPos.w\x20=\x20vecPos.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20uInverseGeoMatrix\x20*\x20vec4(vecPos.xyz,\x201.0);\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x20\x20void\x20main()\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20#ifdef\x20TexCoord\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoord.xy\x20=\x20aTexCoord0.xy;\x0a\x20\x20\x20\x20#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix\x20=\x20vec4(0.0,0.0,1.0,0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoordTransform.x\x20=\x20aTexCoord0.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vTexCoordTransform.x\x20<\x20-90000.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix.z\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20getTextureMatrixFromZValue(floor(vTexCoordTransform.x),\x20vTexMatrix.x,\x20vTexMatrix.y,\x20vTexMatrix.z);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix.w\x20=\x20log2(uTexture0Width\x20*\x20vTexMatrix.z);\x0a\x20\x20\x20\x20#endif\x20\x20\x20\x20\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20vec4\x20vertexPos\x20=\x20aPosition;\x0a#ifdef\x20FLATTEN\x0a\x20\x20\x20\x20vertexPos\x20=\x20calculateHeight(vertexPos);\x0a#endif\x0a\x0a\x20\x20\x20\x20#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20\x20\x20\x20\x20wValue\x20=\x20vertexPos.w;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20positionMC\x20=\x20vec4(vertexPos.xyz,\x201.0);\x0a#ifdef\x20VertexColor\x0a\x20\x20\x20\x20\x20\x20\x20\x20vColor\x20=\x20aColor;\x0a#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vPositionMC\x20=\x20positionMC;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vPositionEC\x20=\x20(czm_modelView\x20*\x20positionMC).xyz;\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20czm_modelViewProjection\x20*\x20vec4(vertexPos.xyz,\x201.0);\x0a\x20\x20\x20\x20}\x0a', 'for', 'rangeDataList', 'fileExtension', 'updatePriority', 'GeoName', 'repeat', 'vertexColor', '^(?:([^:/?#]+):)?(?://([^/?#]*))?([^?#]*)(?:\x5c?([^#]*))?(?:#(.*))?$', 'AltitudeMode', 'DECIMAL_PLACES', 'createShaderProgram', '_enableDepthTest', 'ViewShedAnalysisVS', 'reflectRs', 'ModelEdgeFp', 'TEXTURE_MOVE', 'instanceIds', 'internalFormat', 'inverseProjection', 'noiseScale', '\x0a#ifdef\x20HAS_RAIN\x0auniform\x20float\x20uAnimationSpeed;\x0auniform\x20sampler2D\x20uRippleTexture;\x0auniform\x20float\x20uRippleScale;\x0auniform\x20float\x20uWindIntensity;\x0auniform\x20float\x20uRain;\x0auniform\x20float\x20uCameraDepth;\x0a\x20\x20\x20\x20\x0avoid\x20getTimeInfo(float\x20animationSpeed,\x20out\x20vec2\x20timeVec)\x0a{\x0a\x09float\x20time\x20=\x20czm_frameNumber\x20*\x20animationSpeed;\x0a\x09time\x20=\x20floor(30.0\x20*\x20time);\x0a\x09float\x20time_diff\x20=\x20floor(time*0.25);\x0a\x09time\x20=\x20mod(time,\x204.0);\x0a\x09time_diff\x20=\x20mod(time_diff,\x204.0);\x0a\x09timeVec\x20=\x20vec2(time,\x20time_diff);\x0a}\x0a\x0avoid\x20getPosInfo(vec4\x20posMC,\x20out\x20vec2\x20posMC_frac1,\x20out\x20vec2\x20posMC_frac2)\x0a{\x0a\x09float\x20ripple_scale\x20=\x201.0\x20/\x20uRippleScale;\x0a\x09vec2\x20posXY\x20=\x20posMC.xy\x20*\x20ripple_scale;\x0a\x09posMC_frac1\x20=\x20fract(posXY);\x0a\x09vec2\x20posStep\x20=\x20vec2(0.5);\x0a\x09posMC_frac2\x20=\x20fract(posXY\x20+\x20posStep);\x0a}\x0a\x0afloat\x20getAlpha(vec2\x20posMC_frac1)\x0a{\x0a\x09vec2\x20dist\x20=\x20(posMC_frac1\x20-\x20vec2(0.5))\x20*\x202.0;\x0a\x09dist\x20=\x20vec2(abs(dist.x),\x20abs(dist.y));\x0a\x09vec2\x20result\x20=\x20pow(dist,\x20vec2(5.0));\x0a\x09return\x20result.x\x20+\x20result.y;\x0a}\x0a\x0avec4\x20getRippleValue(sampler2D\x20uRippleTexture,\x20vec2\x20timeVec,\x20vec2\x20posMC_frac1,\x20vec2\x20posMC_frac2,\x20float\x20alpha)\x0a{\x0a\x09vec2\x20rippleUV_1\x20=\x20(timeVec\x20+\x20posMC_frac1)*0.25;\x0a\x09vec2\x20rippleUV_2\x20=\x20(timeVec\x20+\x20posMC_frac2)*0.25;\x0a\x09vec4\x20rippleValue_1\x20=\x20texture(uRippleTexture,\x20rippleUV_1.xy);\x0a\x09vec4\x20rippleValue_2\x20=\x20texture(uRippleTexture,\x20rippleUV_2.xy);\x0a\x09return\x20mix(rippleValue_1,\x20rippleValue_2,\x20alpha);\x0a}\x0a\x0avec3\x20getRippleNormal(vec4\x20rippleValue,\x20float\x20wind_intensity,\x20float\x20rain,\x20float\x20depthFade)\x0a{\x0a\x09vec2\x20rippleValueXY\x20=\x20rippleValue.xy;\x0a\x09vec2\x20rippleValueZW\x20=\x20rippleValue.zw;\x0a\x09const\x20vec2\x20_value\x20=\x20vec2(0.5);\x0a\x09vec2\x20part_1\x20=\x20(rippleValueZW\x20-\x20_value)\x20*\x20wind_intensity\x20*\x200.13;\x0a\x09vec2\x20part_2\x20=\x20(rippleValueXY\x20-\x20_value)\x20*\x200.6;\x0a\x09vec2\x20mergedValue\x20=\x20mix(part_1,\x20part_2,\x20rain)\x20*\x20depthFade;\x0a\x09return\x20vec3(mergedValue,\x201.0);\x0a}\x0a\x0afloat\x20getNormalAlpha(vec3\x20normalWS,float\x20wetness)\x0a{\x0a\x09float\x20valueZ\x20=\x20normalWS.z\x20-\x200.5;\x0a\x09float\x20wet_correction\x20=\x20wetness\x20*\x20clamp(valueZ\x20*\x202.5,\x200.0,\x201.0);\x0a\x09return\x20pow(wet_correction,\x2015.0);\x0a}\x0a\x0avec3\x20rippleNormalCorrection(vec3\x20rippleNormal,float\x20normalAlpha)\x0a{\x0a\x09const\x20vec3\x20blueNormal\x20=\x20vec3(0.0,\x200.0,\x201.0);\x0a\x09return\x20mix(blueNormal,\x20rippleNormal,\x20normalAlpha);\x0a}\x0a\x0avec3\x20rippleGenerator(sampler2D\x20uRippleTexture,\x20float\x20animationSpeed,vec3\x20normalWS,float\x20wetness)\x0a{\x0a\x09vec2\x20timeVec\x20=\x20vec2(1.0);\x0a\x09getTimeInfo(animationSpeed,\x20timeVec);\x0a\x09vec2\x20posMC_frac1\x20=\x20vec2(1.0);\x0a\x09vec2\x20posMC_frac2\x20=\x20vec2(1.0);\x0a\x09getPosInfo(vPositionMC,\x20posMC_frac1,\x20posMC_frac2);\x0a\x09float\x20alpha\x20=\x20getAlpha(posMC_frac1);\x0a\x09vec4\x20rippleValue\x20=\x20getRippleValue(uRippleTexture,\x20timeVec,\x20posMC_frac1,\x20posMC_frac2,\x20alpha);\x0a\x09vec3\x20rippleNormal\x20=\x20getRippleNormal(rippleValue,\x20uWindIntensity,\x20uRain,\x20uCameraDepth);\x0a\x09float\x20normalAlpha\x20=\x20getNormalAlpha(normalWS,\x20wetness);\x0a\x09return\x20normalize(rippleNormalCorrection(rippleNormal,\x20normalAlpha));\x0a}\x0a#endif\x0a', '_hintLineColor', 'deactivate', '_cache', 'CREDENTIAL', 'HORIZONTAL_LINE', 'createIfNeeded', '&layer=', 'aColor', 'CustomTilingScheme', 'direction', 'mode', 'MaxVisibleValue', 'stopObject', 'rectangle\x20must\x20not\x20be\x20called\x20before\x20the\x20imagery\x20provider\x20is\x20ready.', 'the\x20distance\x20is\x20greater\x20than\x200.0', '_compressType', 'handler', '%23', 'providerName', 'fromArray', 'Options', '_requestTiles', 'Exponent\x20not\x20an\x20integer:\x20', 'COMPRESS_VERTEX', 'reflectFramebuffer', 'tms', 'sphere', 'Available', '.bil?level=', 'toFormat', 'maxFresnel', 'updateGeoBounds', 'setting', 'sceneType', 'horizontalPolyline', 'blockCacheQueue', 'matrixU', '_viewerLineCommand', 'Clockwise', 'MarkerSize', 'setSelection\x20ids', '_tileversion', 'subRequestedBaker', 'IGNORE_NORMAL', 'viewPosition', 'MODULE_NOT_FOUND', 'TEXTURE_MAX_ANISOTROPY_EXT', 'edgeTotalLength', 'west', 'customDPI', 'rooturl', 'entities', '_visibleDistanceMax', 'addTargetPoint', '_sampleTerrainMostDetailed', 'unloadTiles', 'UNLOADED', 'parameter\x20stop\x20must\x20be\x20instanceof\x20RouteStop!', 'DVH', '_emissionTextureUrl', 'S3MCompressType', 'avail_in', 'hemisphereLightDecl', 'hasWaterMask\x20must\x20not\x20be\x20called\x20before\x20the\x20terrain\x20provider\x20is\x20ready.', 'urlScheme', 'createCommand', 'VisibleAltitudeMax', 'route', 'bTransparentSorting', '_stopsInfo', 'childNodes', 'intersection', '_isBlock', 'MeasureMode', 'tileHeight', 'projectionMatrix', '_hiddenColor', 'enqueue', 'maxCategory', '_tileFormat', 'text', '_points', 'Object\x20expected:\x20', 'pickPosition', 'Pixel', 'blockscale', 'plane', 'isBitSet', 'HypsometricSetting', '_vLabel', 'subTextureManager', 'Style', 'HAS_POINT_LIGHTS', 'createBakeTexture', 'Shininess', 'lte', 'pixelStorei', '_loadedEmissionTexture', 'edgeSP', 'HIDE', 'ended', 'UTiling', 'projection-image-', 'PolylineCollection', 'sign', 'An\x20error\x20occurred\x20while\x20accessing\x20', 'RotateZ', 'snowDecl', 'REPEAT', '_guid', 'script', 'regions', 'getHeading', 'query', 'toFraction', 'get\x20s3m\x20layer\x20config\x20failed,xml\x20document\x20undefined.', '_hypsometric', 'subName', '_modelView3DDirty', 'Tex', 'reflectPlane', 'options.context', 'FLOAT', 'lineCommand', 'generateMipmap', 'ROUND_HALF_CEIL', 'S3MTilesLayer', 'attributes', 'LineInterval', 'CANCELLED', '_imageReady', '_updateAll', 'addS3MTilesLayerByScp', 'setObjsColor', 'begin', 'BatchTable', 'S3ModelOldParser', 'MinY', 'FilterMode', '_projection', '_update', 'LEFT', 'computeVisibility', 'minus', '_cameraRight', 'DiffuseB', 'secondaryGroupSize', 'datas/', '_distance', 'chordLength', 'tileWidth\x20must\x20not\x20be\x20called\x20before\x20the\x20imagery\x20provider\x20is\x20ready.', 'prefix', '_url', 'minimumLevel\x20must\x20not\x20be\x20called\x20before\x20the\x20imagery\x20provider\x20is\x20ready.', '_waterPlanes', 'sml:Level', 'Mode_Height', 'adler', '_lineColor', 'stopPlayMode', 'VTiling', 'offsetY', 'queryFirstNode', 'decode_texCoord4_normConstant', 'isUpdate', 'LINEAR_MIPMAP_LINEAR', 'snowNormalTextureIndex', 'NONE', '_tileHeight', '_limitBodys', 'number', 'geoPackage', 'removeAll', 'decimalSeparator', 'shallowClone', 'sceneFramebuffer', 'Point', 'ROUND_HALF_UP', '_Water', 'Z_FINISH', 'CRN_DXT5', 'convertToColumbusCartesian', '_basePath', 'availability\x20must\x20not\x20be\x20called\x20before\x20the\x20terrain\x20provider\x20is\x20ready.', 'instanceMode', '_enableClip', 'pendingTextureCount', 'clearCommand', 'TextureName', 'renderTexture', 'shrinkBuf', 'active', '_proxy', 'UNPACK_FLIP_Y_WEBGL', 'Framebuffer', 'upWC', 'Radius', 'lineColor', 'angleBetween', 'matrix', 'EXCAVATION', 'windowBits', 'LEFT_UP', 'tileImage.', 'Style3D', 'hold', 'addCredential', 'processFrame', '_array', '_farDepthFromNearPlusOne', '_numberOfLevelZeroTilesX', 'statusCode', 'getElementsByTagNameNS', 'currentViewMatrix', '_maxVisibleAltitude', 'instanceCount', 'isTexBlock', 'Adapter', 'DeveloperError', 'textureData', 'wDescript', 'http://www.supermap.com/SuperMapCache/sci3d', 'reverse', 'tan', 'fromFile', 'config', 'subRequestNames', 'UNIT_W', 'allSettled', 'color', 's3mb', 'createTypedArrayFromArrayBuffer', '_requestVertexNormals', 'toExponential', 'EUCLID', 'result', 'values', 'png', 'video', 'setTranslation', 'TweenCollection', 'create', 'TransparentSorting', 'bindTexture', 'get\x20scene\x20config\x20failed,', 'reflect', 'readyTextureCount', 'releaseSelection', 'PROGRAM', 'currentFrustum', 'getPixel', 'shift', '_inverseView', '_credit', 'exports', 'loadConfig', '_selectedTiles', 'drawingBufferHeight', 'COLUMBUS_VIEW', 'toUrlUndefined', '_objsColorList', 'reportSuccess', 'get\x20s3m\x20layer\x20config\x20failed,extendxml.xml\x20foamat\x20error,layer\x20name\x20is\x20', 'toString', '_blockCacheQueue', 'initTexture', 'namespace', '_lineDisplayType', 'Invalid\x20BigNumber:\x20', '_requestImagery', '_tilingScheme', 'DisplayMode', 'positionToTileXY', 'realspace', '_urlTemplate', 'RouteCollection', 'Layer', 'Route', 'GeographicTilingScheme', 'SCENE2D', 'whave', 'subBatchValues', 'LineWidth', 'length', 'Visible', 'uv1', 'routes\x20is\x20required!', 'SHORT', 'textures', 'uniformState', 'AddressMode', 'crossorigin', '\x20not\x20true\x20or\x20false:\x20', 'snowMaskTexture', 'Constrast', 'done', 'PBR_THEME', '_allObjsHide', 'vSecondColor', 'loadImageFromTypedArray', 'BoundingBox', 'DEBUG', 'XMLParser', 'resolution', 'enableTextureRenderable', '_renderTextureMatrix', 'buffer', 'colorCommand', 'ambientColor', '_maximumLevel', '/tileset/data/path/', 'MinCategory', 'onStart', '_width', 'onData', 'parse', 'textureunitstate', 'JobType', 'boundingVolume', 'DrawCommand', '_stopArrived', '_tileWidth', 'bounds', 'FALTTEN', 'VertexNormal', 'blockKey', 'referencePoint_', '_addPoints', 'heightmapHeight', 'NONEARTHFLAT', 'indices', 'del', 'fileType', 'CullingVolume', 'proxy', 'baseUri', '_emissionTexCoordSpeed', '_scales', './zlib/constants', 'transpose', '_normal3DDirty', 'DrawMode', '_createCommand', 'shouldSelect', 'clear', 'enableTranslate', '_edgeCurrentCount', 'SetColor', 'needsStart', 'getUint8', '_fileExtension', 'RouteStop', 'ancestorTexture', 'PolygonGeometry', 'NEAREST', 'slice', 'deduplicate', 'log2', 'SubTextureManager', '#51ff00', 'BufferUsage', '_modelViewProjectionRelativeToEyeDirty', 'pauseTime', 'rootBatchIdMap', 'TERRAIN', 'packingRequest', 'uv5', '_changedEvt', 'XML', 'hypsometricSetting', 'Assets/Textures/middle-edit.png', 'extractEdgeInformation', '_ready', 'ConstType', 'DepthFramebuffer', 'sqrt', 'arrayBufferView', '_selectEnabled', '_eyeHeight', '&tilematrixset=', 'tileDiscardPolicy', '9489GFqrqg', 'UNSIGNED_INT', 'value', '.texblock', '_materialRelativePath', 'ncode', 'LINEAR_NONE', '543957uGceVE', '_textureStep', 'invalid\x20window\x20size', 'right', 'setDistDirByPoint', 'scroll', 'add\x20S3M\x20layer', 'freeze', 'S3MEdgeProcessor', '_readyPromise', '_infiniteProjection', 'AnalysisRegionMode', 'function', '_isCreateSkirt', 'replace', 'multiply', 'fpEntity', 'object', '_materialManager', 'BlockCacheNode', 'S3M', 'createBatchTable', 'mask', 'isBlock', 'isSameDocumentAs', 'SpecularR', 'Interpolation', '_drawEvt', 'textureunitstates', 'textureInitilized', 'add\x20all\x20layers\x20failed,', 'frameNumber', 'exec', '_viewProjMatrixs', 'compressType', 'ALWAYS', 'VertexArray', 'updateFrustum', '.water', 'hookCloneFunc', 'referencePointColor', 'waterTime', 'executeServerExcavationDecl', 'BLOCKPACK', 'unloadBlockTiles', 'transparentsorting', 'ndist', 'model', 'texturelod', 'crypto\x20unavailable', '_wmtstileMatrixSet', 'min', 'code', 'set', 'LayerStyle', '_stopMarkCollection', '_nextStopIndex', 'BigNumber', 'createSilhouetteEdgeAttributes', 'PostProcessStageSampleMode', 'Buf32', 'decode_texCoord7_normConstant', 'distanceToTile', 'isCrnTexture', 'getPath', '_duration', 'post', 'WaterEffect', 'fbo', 'S3MObliqueRenderEntity', 'Event', 'CredentialType', 'fromType', 'pickColorIdentifier', 'IMAGERY', 'getNumberOfXTilesAtLevel', 'FILL_LINE', '_fovy', '_renderTargets', 'roll', '{scale}', 'contentState', 'negated', 'floor', 'BIM', '_linesInterval', 'CLIP_FILT_BY_ID', 'uv6', 'Camera', 'refreshReferencePoint', 'NICEST', '_singleInstance', '_labelPixelOffset', 'Z_STREAM_END', 'sml:Bottom', 'isArray', '_hiddenAreaColor', 'Z_BUF_ERROR', '_tilt', 'geodes', 'sizeInBytes', 'themeStyle', '_normalTextureIndex', 'removeInputAction', 'numberOfLevelZeroTilesY', 'S3MLayerScheduler', 'getValue', 'far', '_tweens', 'Infinity', 'handleSuccess', 'setObjsColor\x20ids', 'sml:CellHeight', 'pointColor', 'magnitude', '_screenSpaceCameraController', '_modelViewProjectionDirty', '_invertViewMatrix', 'fromCornerPoints', 'COMPRESS_COLOR', 'useLogDepth', 'horizontalFov', '_v3AffineY', 'waterIndex', 'createIndexBuffer', 'fromPositions', 'prePassesUpdate', 'INCREMENT_WRAP', '_polyline', '_flattenPar', 'isViewer', 'SELECTED', 'normalTextureIndex', 'postProcessStages', 'TEXTURE_COORD_ONE_IS_W', 'Directly', '_contentResource', '_currentStopIndex', '_bImmediately', 'decode_texCoord0_normConstant', '../utils/common', 'addWaterPlane', 'renderTextureMatrix', 'MaxCategory', 'S3MTile', 'parseBuffer', 'arrayFloat', '_inverseNormalDirty', 'clearCustomClipBox', 'addToken', 'substring', 'scene\x20are\x20required.', 'NoLightNoTextureVS', 'totalDuration', 'call', './zlib/inflate', 'WGS84', 'directionWC', 'flyTo', 'Meter', 'createBuffers', 'PixelFormat', 'xOffset', 'the\x20index\x20is\x200~8', 'need\x20dictionary', '\x0a#ifdef\x20SERVEREXCAVATION\x0auniform\x20sampler2D\x20uServerExcavationTexture;\x0auniform\x20float\x20uServerExcavationMode;\x0auniform\x20vec4\x20uServerExcavationRect;\x0avarying\x20vec4\x20vServerExcavationVertexPos;\x0avec2\x20CalculateServerExcavationPolyTexCoord(vec4\x20vertexPos,\x20vec4\x20rectPos,\x20out\x20float\x20ptInRect)\x0a{\x0a\x20\x20\x20\x20vec2\x20vecRatio\x20=\x20vec2(rectPos.z\x20-\x20rectPos.x,\x20rectPos.w\x20-\x20rectPos.y);\x0a\x20\x20\x20\x20vec2\x20texCoord\x20=\x20vec2(vertexPos.x\x20-\x20rectPos.x,\x20vertexPos.y\x20-\x20rectPos.y);\x0a\x20\x20\x20\x20texCoord.x\x20=\x20texCoord.x\x20/\x20vecRatio.x;\x0a\x20\x20\x20\x20texCoord.y\x20=\x20texCoord.y\x20/\x20vecRatio.y;\x0a\x20\x20\x20\x20ptInRect\x20=\x20step(0.0,\x20texCoord.x)\x20*\x20step(0.0,\x20texCoord.y)\x20*\x20step(0.0,\x201.0\x20-\x20texCoord.x)\x20*\x20step(0.0,\x201.0\x20-\x20texCoord.y);\x0a\x20\x20\x20\x20texCoord\x20=\x20clamp(texCoord,\x20vec2(0.0),\x20vec2(1.0));\x0a\x20\x20\x20\x20return\x20texCoord;\x0a}\x0abool\x20executeServerExcavation()\x0a{\x0a\x20\x20\x20\x20float\x20hasExcavation\x20=\x201.0;\x0a\x20\x20\x20\x20vec2\x20vecExcavationTexCoord\x20=\x20CalculateServerExcavationPolyTexCoord(vServerExcavationVertexPos,\x20uServerExcavationRect,\x20hasExcavation);\x0a\x20\x20\x20\x20bool\x20excavationInside\x20=\x20(uServerExcavationMode\x20<\x200.5);\x0a\x20\x20\x20\x20if(hasExcavation\x20<\x200.1)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20!excavationInside;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20if(excavationInside)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20texture(uServerExcavationTexture,\x20vecExcavationTexCoord.xy).r\x20>\x200.5;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20texture(uServerExcavationTexture,\x20vecExcavationTexCoord.xy).r\x20<\x200.5;\x0a\x20\x20\x20\x20}\x0a}\x0a#endif', 'SceneFramebuffer', 'getFloat32', 'EndRow', 'snowNormalTexture', 'tilt', 'swipeRegion\x20must\x20be\x20a\x20instance\x20of\x20BoundingRectangle.', 'attachFiles', '_accumulationPositions', 'isUseHypColorTable', 'Snow', 'viewMatrix', 'setObjsColor\x20color', 'UseLineColor', 'ColorPoint', 'getLevelMaximumGeometricError', '_emissionTexCoordScale', 'isAltitudeFree', 'image', 'emission\x20color', 'Cesium3DTile', 'isLessThan', '_editPoints', 'clip', 'pickInfo', 'maximumLevel\x20must\x20not\x20be\x20called\x20before\x20the\x20imagery\x20provider\x20is\x20ready.', '_coverageArea', 'readyPromise', '_modelViewRelativeToEyeDirty', 'cacheNode', 'clampToGroundPolylinePositions', '_hintLineVisible', '_noValueColor', 'IsReal', 'SCREEN_ALIGNED', 'credit', 'onEnd', 'polygonOffset', 'USE_BatchPBR', 'decode_texCoord3_min', 'fill', 'edgeVA', 'isLineVisible', 'emissiveFactor', '\x0a#ifdef\x20HAS_DIR_LIGHTS\x0a\x0auniform\x20vec3\x20uDirectionalLightDirectionEC[\x20DIR_LIGHTS\x20];\x0auniform\x20vec3\x20uDirectionalLightColor[\x20DIR_LIGHTS\x20];\x0a\x20\x20\x20\x20\x0a#endif\x0a', 'removeObjsColor\x20ids', 'multiplyByPlane', '{tileversion}', '_roll', '_hue', 'left', '_bottomAltitude', 'clampToGroundPolylines', 'hookUpdateFunc', 'DiffuseR', 'next_in', 'update', 'MODULO_MODE', 'frameState', 'TEXTURE', 'greaterThanOrEquals', 'prepareRequest', 'free', 'Line', 'vertexShaderSource', 'keyWord', 'jsessionID', 'requestSubTextures', 'getURL', 'fetchText', 'RenderState', 'cache', 'toRadians', 'Scene', 'UNIT_Y', 'bumpSpeed', 'BoundingRectangle', 'FORMAT', 'maxHeight', 'batchTableBake', 'total_in', 'RESET', '_opacity', 'TextureMinificationFilter', '_viewRotation', 'ProjectionImage.saturation', 'isSct', 'ROUND_CEIL', 'AmbientA', 'destroy', 'useDepthPicking', 'selectedFrame', '_preStopIndex', '_sampleTerrainMostDetailedFunc', 'layerId', 'secondary_colour', 'ClearCommand', 'HAS_WETNESS', 'isUseColorByHeight', 'textureCache', 'binstring2buf', '_stencilCommand', 'deferred', 'flatten', 'toUrl', 'dividedBy', 'ProjectionImage', '1.0.0', '\x20failed,', 'Out', '_currentTargetName', 'inflateReset2', '0.$1', 'TRIANGLE_FAN', 'forEach', 'transform', '\x20Level:\x20', '_updateColorDictTable', 'Hypsometric', 'tileImages', '\x5cd{', '_updatePBRMaterial', 'INVALID_OBLIQUE', 'removeWaterPlane', 'CommonNoLigthNoTextureVp', 'uniformMap', 'TileAvailability', 'Plane', 'DECREMENT_WRAP', 'viewer', '_subdomains', 'Base', 'head', '&service=WMTS&request=GetTile', 'TextureAtlas', 'ScreenSpaceEventType', 'onStop', 'onUpdate', '_baseResource', '_isAlongline', 'OSGBGroup', 'UniformState', 'corridor', 'heightOffset', 'S3MPointCloudFS', 'PRJ_SPHERE_MERCATOR', 'sane', 'ColorType', 'cancelFlight', '_clearBaseResource', 'TRANSPARENT_BACK_COLOR', 'Extensions', 'HAS_CLEARCOAT', '_clearcoat', '_areaLabel', 'primitives', 'availabilityTilesLoaded', 'BACK', 'pbrParameterChange', 'srcY', '_subTexInfosBake', 'lineWidth', 'east', 'stringify', 'ARM_NONE', 'canTraverse', 'setObjsVisible', 'byteOffset', 'isReal', 'isGreaterThan', '}\x5cB', '_edgeDistanceFalloffFactor', 'littleEndianExtensionSize', 'ROUND_HALF_EVEN', 'RuntimeError', 'czm_batchTable_xywh2', 'lineEntity', 'S3MPixelFormat', 'averageHeight', '_tranverseRenderEntity', 'segmentCount', 'HAS_SPOT_LIGHTS', 'MASK', 'fetchImage', 'MinVisibleValue', '_visibleAreaColor', 'maximumComponent', '\x0a#ifdef\x20HAS_SPOT_LIGHTS\x0a\x0auniform\x20vec3\x20uSpotLightColor[\x20SPOT_LIGHTS\x20];\x0auniform\x20vec3\x20uSpotLightPositionEC[\x20SPOT_LIGHTS\x20];\x0auniform\x20vec3\x20uSpotLightDirectionEC[\x20SPOT_LIGHTS\x20];\x0auniform\x20vec4\x20uSpotLightDistanceDecayCosPenumbra[\x20SPOT_LIGHTS\x20];\x0auniform\x20vec3\x20uSpotLightExponent[\x20SPOT_LIGHTS\x20];\x0a\x20\x20\x20\x20\x0astruct\x20SpotLight\x20{\x0a\x20\x20\x20\x20vec3\x20position;\x0a\x20\x20\x20\x20vec3\x20direction;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20float\x20distance;\x0a\x20\x20\x20\x20float\x20decay;\x0a\x20\x20\x20\x20float\x20coneCos;\x0a\x20\x20\x20\x20float\x20penumbraCos;\x0a};\x0a\x0avoid\x20getSpotDirectLightIrradiance(\x20const\x20in\x20SpotLight\x20spotLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20\x20)\x20{\x0a\x20\x20\x20\x20vec3\x20lVector\x20=\x20spotLight.position\x20-\x20geometry.position;\x0a\x20\x20\x20\x20directLight.direction\x20=\x20normalize(\x20lVector\x20);\x0a\x20\x20\x20\x20float\x20lightDistance\x20=\x20length(\x20lVector\x20);\x0a\x20\x20\x20\x20float\x20angleCos\x20=\x20dot(\x20directLight.direction,\x20spotLight.direction\x20);\x0a\x20\x20\x20\x20if\x20(\x20angleCos\x20>\x20spotLight.coneCos\x20)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20spotEffect\x20=\x20smoothstep(\x20spotLight.coneCos,\x20spotLight.penumbraCos,\x20angleCos\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20directLight.color\x20=\x20spotLight.color;\x0a\x20\x20\x20\x20\x20\x20\x20\x20directLight.color\x20*=\x20spotEffect\x20*\x20punctualLightIntensityToIrradianceFactor(\x20lightDistance,\x20spotLight.distance,\x20spotLight.decay\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20directLight.visible\x20=\x20true;\x0a\x20\x20\x20\x20}\x20else\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20directLight.color\x20=\x20vec3(\x200.0\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20directLight.visible\x20=\x20false;\x0a\x20\x20\x20\x20}\x0a}\x0a\x0a#endif\x0a', 'addRoute', 'HYPSOMETRIC', 'RangeDataList', 'createEdgeDataByIndices', 'AmbientG', 'AttributeCompression', 'options.urls\x20is\x20required.', 'longitude', 'depthTextureToCopy', '_renderable', '\x0a#ifdef\x20HAS_POINT_LIGHTS\x0a\x0auniform\x20vec3\x20uPointLightPositionEC[\x20POINT_LIGHTS\x20];\x0auniform\x20vec3\x20uPointLightColor[\x20POINT_LIGHTS\x20];\x0auniform\x20vec2\x20uPointLightDistanceAndDecay[\x20POINT_LIGHTS\x20];\x0a\x0astruct\x20PointLight\x20{\x0a\x20\x20\x20\x20vec3\x20position;\x0a\x20\x20\x20\x20vec3\x20color;\x0a\x20\x20\x20\x20float\x20distance;\x0a\x20\x20\x20\x20float\x20decay;\x0a};\x0a\x0avoid\x20getPointDirectLightIrradiance(\x20const\x20in\x20PointLight\x20pointLight,\x20const\x20in\x20GeometricContext\x20geometry,\x20out\x20IncidentLight\x20directLight\x20)\x20{\x0a\x20\x20\x20\x20vec3\x20lVector\x20=\x20pointLight.position\x20-\x20geometry.position;\x0a\x20\x20\x20\x20directLight.direction\x20=\x20normalize(\x20lVector\x20);\x0a\x20\x20\x20\x20float\x20lightDistance\x20=\x20length(\x20lVector\x20);\x0a\x20\x20\x20\x20directLight.color\x20=\x20pointLight.color;\x0a\x20\x20\x20\x20directLight.color\x20*=\x20punctualLightIntensityToIrradianceFactor(\x20lightDistance,\x20pointLight.distance,\x20pointLight.decay\x20);\x0a\x20\x20\x20\x20directLight.visible\x20=\x20(\x20directLight.color\x20!=\x20vec3(\x200.0\x20)\x20);\x0a}\x0a\x0a#endif\x0a', 'createPickIds', 'aspectRatio', 'minHeight', 'activate', 'decode_texCoord1_normConstant', 'getSingleInstance', 'Z_SYNC_FLUSH', 'flattening', 'add\x20terrain\x20layer\x20', 'Argument', 'divideByScalar', 'tileWidth', 'units', 'subRequestNamesBake', '_showMeasureResult', 'Fill', 'nodeValue', '{s}', 'POLYGON_OFFSET', 'sort', '_trimTiles', 'hypsometric', 'removeAllTargetPoint', 'line\x20width', 'suffix', '_accumulationDis', 'normalTexture', 'tileXYToRectangle', '_isHeadingFree', 'coordUnit', 'isTiltFree', '_customDPI', 'visibility:hidden;position:absolute;top:0px;left:0px;', 'context', 'unproject', 'loadXML', 'hookDrillPickFunc', 'Horizontal', '_dblclickListener', 'MaxX', 'Opacity', 'pixel', 'isDestroyed', 'Fill_And_WireFrame', 'projection-image', 'priority', 'flipY', 'createVertexBuffer', 'indexBufferToCreate', 'Rectangle', 'No\x20scene\x20provided.', 'incorrect\x20data\x20check', 'IDENTITY', 'eastNorthUpToFixedFrame', 'REFRACTION', 'in\x20vec2\x20aSideness;\x0aattribute\x20vec3\x20aPosition0;\x0aattribute\x20vec3\x20aPosition1;\x0a\x0auniform\x20float\x20uLineWidth;\x0auniform\x20mat4\x20uRenderTextureMatrix;\x0a\x0avarying\x20vec4\x20renderTextureCoord;\x0a\x0avec4\x20resolvePosition(vec4\x20viewPosV0,\x20vec4\x20viewPosV1,\x20vec2\x20sidenessNorm)\x20{\x0a\x20\x20\x20\x20vec2\x20sideness\x20=\x20sidenessNorm\x20*\x202.0\x20-\x201.0;\x0a\x20\x20\x20\x20vec4\x20viewPos\x20=\x20mix(viewPosV0,\x20viewPosV1,\x20sidenessNorm.y);\x0a\x20\x20\x20\x20vec4\x20projPosV0\x20=\x20czm_projection\x20*\x20viewPosV0;\x0a\x20\x20\x20\x20vec4\x20projPosV1\x20=\x20czm_projection\x20*\x20viewPosV1;\x0a\x20\x20\x20\x20vec4\x20projPos\x20=\x20czm_projection\x20*\x20viewPos;\x0a\x20\x20\x20\x20vec3\x20screenSpaceLineNDC\x20=\x20(projPosV1.xyz\x20/\x20projPosV1.w\x20-\x20projPosV0.xyz\x20/\x20projPosV0.w);\x0a\x20\x20\x20\x20vec2\x20uNDCToPixel\x20=\x20vec2(czm_viewport.z\x20/\x202.0,\x20czm_viewport.w\x20/\x202.0);\x0a\x20\x20\x20\x20vec2\x20screenSpaceLinePixels\x20=\x20screenSpaceLineNDC.xy\x20*\x20uNDCToPixel;\x0a\x20\x20\x20\x20float\x20lineLengthPixels\x20=\x20length(screenSpaceLinePixels);\x0a\x20\x20\x20\x20float\x20dzPerPixel\x20=\x20screenSpaceLineNDC.z\x20/\x20lineLengthPixels;\x0a\x20\x20\x20\x20vec2\x20screenSpaceDirection\x20=\x20screenSpaceLinePixels\x20/\x20lineLengthPixels;\x0a\x20\x20\x20\x20vec2\x20perpendicularScreenSpaceDirection\x20=\x20vec2(screenSpaceDirection.y,\x20-screenSpaceDirection.x)\x20*\x20sideness.x;\x0a\x20\x20\x20\x20vec2\x20uPixelToNDC\x20=\x20vec2(2.0\x20/\x20czm_viewport.z,\x202.0\x20/\x20czm_viewport.w);\x0a\x20\x20\x20\x20float\x20halfLineWidth\x20=\x20max(uLineWidth,\x201.0)\x20*\x200.5;\x0a\x20\x20\x20\x20vec2\x20halfLineWidthNDC\x20=\x20halfLineWidth\x20*\x20uPixelToNDC;\x0a\x20\x20\x20\x20vec2\x20ndcOffset\x20=\x20screenSpaceDirection\x20*\x20halfLineWidthNDC\x20+\x20perpendicularScreenSpaceDirection\x20*\x20halfLineWidthNDC;\x0a\x20\x20\x20\x20projPos.xy\x20+=\x20ndcOffset\x20*\x20projPos.w;\x0a\x20\x20\x20\x20projPos.z\x20+=\x20(dzPerPixel\x20*\x20halfLineWidth)\x20*\x20sideness.y\x20*\x20projPos.w;\x0a\x20\x20\x20\x20return\x20projPos;\x0a}\x0a\x0avoid\x20main()\x20{\x0a\x20\x20\x20\x20vec4\x20viewPosV0\x20=\x20czm_modelView\x20*\x20vec4(aPosition0,\x201.0);\x0a\x20\x20\x20\x20vec4\x20viewPosV1\x20=\x20czm_modelView\x20*\x20vec4(aPosition1,\x201.0);\x0a\x20\x20\x20\x20gl_Position\x20=\x20resolvePosition(viewPosV0,\x20viewPosV1,\x20aSideness);\x0a\x20\x20\x20\x20vec4\x20viewPos\x20=\x20czm_inverseProjection\x20*\x20gl_Position;\x0a\x20\x20\x20\x20renderTextureCoord\x20=\x20uRenderTextureMatrix\x20*\x20viewPos;\x0a}', '_ellipsoid', 'Argument\x20not\x20an\x20object:\x20', 'Specular', 'BlendingState', 'texmodmatrix', 'objectToQuery', 'key', 'LINEAR', 'blockCacheSize', 'atan', 'south', '_setObjsOperationType', 'in\x20vec4\x20aPosition;\x0ain\x20vec4\x20aTexCoord0;\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20gl_Position\x20=\x20czm_modelViewProjection\x20*\x20aPosition;\x0a}', '_currentFlight', 's3m', 'LineColor', 'specularColor', 'referenceAddPoint', 'Easing', 'srcX', '_minVisibleAltitude', '_requestMetadata', 'textureCoordIsW', 'HAS_RAIN', 'TerrainProvider', 'chunks', 'Buffer', 'headingfree', 'silhouette', 'ShaderProgram', 'set\x20Objs\x20Operation\x20ids', '_emissionTextureAtlas', 'offset', 'isPositive', '_stopPlayMode', 'version', 'requestedFrame', '4999', 'colorBuffer', 'specular', 'Matrix4', 'Fov', 'symbol', 'aTexCoord', 'MeasureHandler.lineDisplayType', 'parent', 'POINTS', 'fillStyle\x20value', 'computeVisibilityWithPlaneMask', 'ProjectionImage.gamma', 'clampToGroundPolyline', 'TRANSLUCENT', '/login.json', 'fov', 'Bernstein', 'resource', 'rectangleToNativeRectangle', 'InstancePipe', 'GeographicProjection', 'raySphere', 'environmentVisible', 'tileXYToNativeRectangle', 'addColorStop', 'division', 'invalid\x20literal/length\x20code', 'vertCompressConstant', '_occlusionTextureIndex', 'queryChildNodes', 'Distance', 'comment', 'extractEdges', 'VisibleAltitudeMin', 'TRANSPARENT', 'ROUND_FLOOR', '_tempLayerName', 'readPixels', '_calloutWidth', '_mode', '_brightness', 'clipPlane', 'batchTable', 'handleError', 'multiplyByPoint', 'text/xml', 'ellipsoid', 'removeChild', 'header', 'getBaseUri', '_promise', 'passState', 'infiniteProjectionMatrix', '_cameraDepthBuffer', 'style', 'data/index/', 'rippleTextureIndex', 'SVC_Normal', 'options.rectangles,options.levels\x20is\x20required.', 'isZero', '_PBRMaterialParams', '_isSci3D', 'localName', 'fetchArrayBuffer', 'fromInfo', 'groupNode', 'getColorTexture', 'Buf16', 'Bottom', 'Levels', 'quadKeyIndex', '_stopObject', 'regular', 'InstanceBim', '_rootTiles', 'operationValue', 'concat', 'routestop', 'loadTileset', 'promisePack', '\x20invalid:\x20', 'wbits', '_pitch', '_interpolationMode', 'easingFunction', '_dirty', 'VisibleDistanceMax', 'TextureWrap', 'availability', '_routeName', 'updateBatchTableAttributes', 'SuperMap3D', 'updatedVisibilityFrame', 'nodeName', 'MinHeight', 'copyFromArrayView', 'insufficient\x20memory', 'startY', 'removeStop', 'QuadKey', '_updateObjsOperation', 'setOnlyObjsVisible', '_list', '_isCleared', 'TextureManager', 'PostProcessStageRain', 'inflate', 'isPowerOfTwo', 'initBakeTexture', 'isDrawing', 'gte', '_lineStripCollection', 'buffer\x20error', 'toCssColorString', 'UseInstanceSkeletonMatrix', 'alphaMode', 'ALL', 'DEFAULT', 'viewer\x20and\x20mode\x20is\x20required!', 'BillboardCollection', '_isConvert', 'pitch', 'availabilityLevels', '_editZ', 'msg', 'generateBuffer', '_isTerrainZ', 'StencilOperation', 'Ground', '_totalDuration', 'subdivideLine', 'execute', 'AverageHeight', '_addRenderedEdge', 'enable', 'alpha', '_baseColor', 'CatmullRomSpline', 'index\x20package\x20is\x20null', 'fromPointNormal', 'PrimitiveType', 'Check', 'precision', 'movingEvt', 'in\x20vec4\x20aPosition;\x0avarying\x20vec4\x20vClipVertex;\x0avarying\x20float\x20fWindowZ;\x0avec4\x20depthClampFarPlane(vec4\x20clipPos)\x0a{\x0a\x09fWindowZ\x20=\x20(0.5\x20*\x20(clipPos.z\x20/\x20clipPos.w)\x20+\x200.5)\x20*\x20clipPos.w;\x0a\x09clipPos.z\x20=\x20min(clipPos.z,\x20clipPos.w);\x0a\x09return\x20clipPos;\x0a}\x0avoid\x20main()\x0a{\x0a\x20\x20\x20vec4\x20pos\x20=\x20czm_modelViewProjection\x20*\x20vec4(aPosition.xyz,\x201.0);\x0a\x20\x20\x20gl_Position\x20=\x20depthClampFarPlane(pos);\x0a}\x0a', 'options.duration\x20is\x20required\x20and\x20must\x20be\x20positive.', 'gpuProgramParameters', 'baseColor', 'fragment', 'materialPass', '_scaleDenominators', 's3m_batchTable_pickColor', 'CESIUM_3D_TILE', '_floor', '_textureFilterAnisotropic', 'visibility', 'textureParameterBake', 'splice', 'triangulate', 'dataName', 'SVC_Vertex', 'WireFrame', 'VIOLET', '0123456789', 'visible', 'STATIC_DRAW', 'unpack', 'inverseTransformation', 'COMPUTE_TEXCOORD', 'fromCssColorString', 'enableBakeTextureRenderable', '_style3D', 'created', 'occlusionTexture', '&x={x}&y={y}&scale={scale}', 'queryStringAttribute', '_baseUri', 'SuperMapImageryProvider', 'maxInstensity', 'fromCharCode', 'GeoDeModMatrix', '_context', '411613KVXCdV', 'Request', 'cameraDepthBuffer', 'UNIT_Z', 'header\x20crc\x20mismatch', 'scale', 'HAS_SNOW', 'blockCache', '_hasWaterMask', 'EasingFunction', 'Title', 'edgeGeometry', '_offCenterFrustum', 'cartesianToCartographic', 'Excepted\x20S3MTilesLayer.subdomains\x20to\x20be\x20type\x20of\x20Array.', 'setInfo', 'HAS_EMISSIVE_TEXTURE', 'SVC_TexutreCoordIsW', 'the\x20depth\x20buffer\x20is\x20not\x20supported.', '_dictColorTable', 'getChildValue', 'loop', 'blockInfo', 'index', 'line\x20color', 'duration', 'DiffuseA', 'TileProviderError', 'shaderProgram', 'minCategory', 'FAILED', 'dpi', 'WebMercatorTilingScheme', 'FILL_FACEANDLINE', 'touch', '_heading', 'POST_EFFECT', 's3m:TransparencyOptimization', 'then', 'aPosition1', 'lerp', 'Selectable', 'sml:Left', '_tileCredits', 'compressedTextureSizeInBytes', '\x20base\x20', 'getPickRay', 'fillStyle', '_editObject', 'AlphaMode', 'requestImage', 'toBytes', '_ceiling', '_isDown', 'cross', 'valueOf', '_keymap', 'keys', '_createRasterRegion', 'rangeList', 'green', 'isHeightmap', 'getUint32', 'alongline', '_rectangle', 'LEFT_CLICK', 'read', 'renderEntities', 'Z_NEED_DICT', 'start', '240', 'PassState', 'instanceId', 'tilingScheme\x20must\x20not\x20be\x20called\x20before\x20the\x20imagery\x20provider\x20is\x20ready.', 'copyFrom', 'isEqualTo', 'getContext', '_image', 'refreshReferenceAddPoint', 'test', 'curTextureName', '?x={x}&y={y}&scale={scale}&origin={\x22x\x22:', '_isBigNumber', 'onComplete', 'SkyAtmosphere', 'textureParameter', 'the\x20index\x20is\x200~3', 'EPSILON7', 'set\x20Objs\x20Operation\x20operationType', 'SceneMode', 'getAttributeNodeNS', 'texture', 'CenterZ', 'stopName', 'tileImage', '_owner', 'fromCache', 'fromDegreesArrayHeights', '_measureEvt', 'FileType', 'fromCartesian4', 'pop', '_index', '\x0a\x20\x20\x20\x20in\x20vec4\x20aPosition;\x0a\x20\x20\x20\x20varying\x20vec4\x20vClipPos;\x0a\x20\x20\x20\x20void\x20main()\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vClipPos\x20=\x20czm_modelViewProjection\x20*\x20vec4(aPosition.xyz,\x201.0);\x0a\x09\x20\x20\x20\x20gl_Position\x20=\x20vClipPos;\x0a\x20\x20\x20\x20}\x0a', '_gl', 'wsize', '_processTiles', '_removeIndex', 'asin', 'true', 'epEntity', 'pickFeatures', '_view3DDirty', '_selections', 'ROUGHNESS', 'HAS_BASE_TEXTURE', '_updateAllObjsVisible', 'decode_texCoord1_min', '_subTextureManager', '_featheringScale', 'updateCamera', 'MaxY', 'specularEnvironmentMaps', 'quantized-mesh-1.0', 'TEXTURE_MIN_FILTER', 'Credit', 'CLIP', 'filtermax', 'indexType', 'distanceToCamera', 'gamma', 'fragmentShaderSource', 'isBuild', 'token', 'batchTableDirty', 'IntersectionTests', 'draw', 'isTileMap', 'FileExtentName', 'in\x20is\x20null', 'pako\x20inflate\x20(from\x20Nodeca\x20project)', 'requestNames', 'the\x20max\x20of\x20vertexTextureImageUnits\x20less\x201,\x20function\x20is\x20not\x20supported.', 'positionWC', '276913xSaSCT', 'endPause', 'center', '_inverseView3DDirty', 'Bounds', 'StopAround', 'instancesData', '_objsHideList', 'globe', 'credits', ',layer\x20name\x20is\x20', 'options\x20is\x20required.', 'inflateInit', 'uniform\x20sampler2D\x20uReflectMap;\x0auniform\x20sampler2D\x20uNoiseMap;\x0auniform\x20vec4\x20uTintColour;\x0auniform\x20vec4\x20uWaterColour;\x0auniform\x20vec4\x20uFillForeColor;\x0auniform\x20float\x20uFresnelPower;\x0auniform\x20float\x20uMinFresnel;\x0auniform\x20float\x20uMaxFresnel;\x0auniform\x20float\x20uNoiseScale;\x0auniform\x20float\x20uWaterBrightness;\x0avarying\x20vec2\x20vNoiseCoord;\x0avarying\x20vec3\x20vProjectionCoord;\x0avarying\x20vec3\x20vEyeDir;\x0avarying\x20vec3\x20vNormal;\x0avarying\x20vec4\x20vColor;\x0avarying\x20vec4\x20vSecondColor;\x0avarying\x20vec4\x20vPositionMC;\x0avarying\x20vec3\x20vPositionEC;\x0a\x0a#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSwipeRegion;\x0a#endif\x0a\x0a#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSwipeRegion;\x0a\x20\x20\x20\x20void\x20rollerShutter(vec2\x20coord,\x20vec4\x20region)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20f\x20=\x20step(region.xw,\x20coord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20s\x20=\x20step(coord,\x20region.zy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(f.x\x20*\x20f.y\x20*\x20s.x\x20*\x20s.y\x20<\x201.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x0a#ifdef\x20CLIP\x0a\x20\x20\x20\x20uniform\x20float\x20uClipMode;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uClipPlanes[6];\x0a\x20\x20\x20\x20float\x20getClipDistance(vec3\x20pos,\x20vec3\x20planeNormal,\x20float\x20disToOrigin)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20dot(planeNormal,\x20pos)\x20+\x20disToOrigin;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20clipBehindAllPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20#ifdef\x20CLIPPLANE\x0a\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[0].xyz,\x20uClipPlanes[0].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20clipBehindAnyPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if((distance\x20+\x20fBorderWidth)\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20float\x20clipAnythingButLine(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec4\x20clip(vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#ifdef\x20GL_OES_standard_derivatives\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dxc\x20=\x20abs(dFdx(vertex.x));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dyc\x20=\x20abs(dFdy(vertex.y));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x20max(dxc,\x20dyc);\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x201.0;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20clipResult\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x201.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAnyPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x202.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAllPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x203.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipAnythingButLine(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(clipResult\x20<\x20-0.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(clipResult\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x0avec4\x20AdjSaturation(in\x20vec4\x20inputColor,\x20in\x20float\x20saturation)\x0a{\x0a\x09vec3\x20lumCoeff\x20=\x20vec3(0.2125,\x200.7154,\x200.0721);\x0a\x09vec3\x20intensity\x20=\x20vec3(dot(inputColor.rgb,\x20lumCoeff));\x0a\x09vec3\x20tempColor\x20=\x20mix(intensity,\x20inputColor.rgb,\x20saturation);\x0a\x09return\x20vec4(tempColor,\x201.0);\x0a}\x0avoid\x20main()\x0a{\x0a#ifdef\x20APPLY_SWIPE\x20\x0a\x20\x20\x20\x20rollerShutter(gl_FragCoord.xy,\x20uSwipeRegion);\x0a#endif\x0a\x20\x20\x20\x20if(vColor.a\x20<\x200.1)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20out_FragColor\x20=\x20vColor;\x0a\x20\x20\x20\x20vec2\x20final\x20=\x20vProjectionCoord.xy\x20/\x20vProjectionCoord.z;\x0a\x20\x20\x20\x20vec3\x20noiseNormal\x20=\x20(texture(uNoiseMap,\x20(vNoiseCoord.xy\x20/\x205.0)).rgb\x20-\x200.5).rbg\x20*\x20uNoiseScale;\x0a\x20\x20\x20\x20final\x20+=\x20noiseNormal.xz;\x0a\x20\x20\x20\x20float\x20realMinFresnel,\x20realMaxFresnel;\x0a\x20\x20\x20\x20if(uMinFresnel\x20<\x20uMaxFresnel)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20realMinFresnel\x20=\x20uMinFresnel;\x0a\x20\x20\x20\x20\x20\x20\x20\x20realMaxFresnel\x20=\x20uMaxFresnel;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20realMinFresnel\x20=\x20uMaxFresnel;\x0a\x20\x20\x20\x20\x20\x20\x20\x20realMaxFresnel\x20=\x20uMinFresnel;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20float\x20fresnelBias\x20=\x20realMinFresnel;\x0a\x20\x20\x20\x20float\x20fresnelScale\x20=\x20(realMaxFresnel\x20-\x20realMinFresnel)\x20/\x201.0;\x0a\x20\x20\x20\x20float\x20fresnel\x20=\x20fresnelBias\x20+\x20fresnelScale\x20*\x20pow(1.0\x20+\x20dot(normalize(vEyeDir),\x20vNormal),\x20uFresnelPower);\x0a\x20\x20\x20\x20fresnel\x20=\x20clamp(fresnel,\x200.05,\x200.95);\x0a\x20\x20\x20\x20vec4\x20reflectionColour\x20=\x20texture(uReflectMap,\x20final);\x0a\x20\x20\x20\x20vec4\x20refractionColour\x20=\x20reflectionColour\x20+\x20uTintColour;\x0a\x20\x20\x20\x20vec4\x20resultColour\x20=\x20mix(uWaterColour,\x20reflectionColour,\x20fresnel);\x0a\x20\x20\x20\x20resultColour\x20=\x20AdjSaturation(resultColour,\x201.0);\x0a\x20\x20\x20\x20resultColour\x20=\x20resultColour\x20*\x20uWaterBrightness;\x0a\x20\x20\x20\x20resultColour.a\x20=\x20uWaterColour.a;\x0a\x20\x20\x20\x20resultColour\x20*=\x20uFillForeColor;\x0a\x20\x20\x20\x20out_FragColor\x20=\x20out_FragColor\x20*\x20resultColour;\x0a#ifdef\x20CLIP\x0a\x20\x20\x20\x20out_FragColor\x20*=\x20clip(vec4(vPositionEC,\x201.0));\x0a#endif\x0a\x20\x20\x20\x20if(out_FragColor.a\x20<\x200.1)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20}\x0a\x0a}', '_emissiveTextureIndex', 'utf8border', 'FACE', 'useWValue', '_coordUnit', 'ContentState', '_capturePointSize', 'hasOwnProperty', 'S3MTilesNoLightVS', 'blockSize', '_log2FarDepthFromNearPlusOne', 'Ray', '_blockCache', 'createGeometry', 'EMISSION_TEXTURE', 'ColorTableMinKey', 'positionCartographic', 'invalid\x20stored\x20block\x20lengths', 'componentsPerAttribute', 'textureHeight', '_ignoreGlobe', 'hcrc', 'quadKeyIndexPack', '.json', '_polygon', 'READY', 'TexCoord2', '_cacheKey', 'tintColour', 'amd', 'stopCount', 'RGBA', '_normalTextureScale', 'getCesiumBaseUrl', 'first\x20is\x20required', 'RegularInstanceStride', '_verticalFov', 'SkylineVp', 'credit\x20must\x20not\x20be\x20called\x20before\x20the\x20terrain\x20provider\x20is\x20ready.', 'aTexCoord0', 'indicesTypedArray', 'requestImage\x20must\x20not\x20be\x20called\x20before\x20the\x20imagery\x20provider\x20is\x20ready.', 'Assets/Textures/vertex-edit.png', 'commandList', 'isStopVisible', 'isNegative', 'chain', 'isVisible', '\x20\x20is\x20not\x20iterable(cannot\x20read\x20property\x20Symbol(Symbol.iterator))', 'assign', '_rain', 'tiles', 'rectangles', '/tileset/config', 'testLog', 'MULTI_TEX', 'lon', 'PLANECLIPMODE', 'constType', 'all', 'BYTES_PER_ELEMENT', 'getUrlComponent', 'updateObjsColor', 'uniform\x20vec4\x20uSkylineColor;\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20out_FragColor\x20=\x20uSkylineColor;\x0a}', 'LabelStyle', '_addPositions', 'Unable\x20to\x20determine\x20Cesium\x20base\x20URL\x20automatically,\x20try\x20defining\x20a\x20global\x20variable\x20called\x20SUPERMAP_BASE_URL.', 'subTextureNames', 'absoluteValue', 'Left', 'endPosition', 'toUpperCase', 'push', 'NON_OCCLUDED', 'Cartesian4', 'NO_TEXCOORD', 'buildModuleUrl', 'inflateSetDictionary', 'MaxZ', 'verticalPolyline', 'json', 'EPSILON6', 'prototype', 'toCartesian', 'fromPoints', 'sml:CompressType', 'ALPHA_BLEND', 'prjCoordSys', 'subTexturesToUpload', 'build', 'ScaleDenominator', '_dynamicCurrentStopIndex', 'extensions', '_waterParameters', 'wrap', 'Color', 'frustumCommandsList', 'subarray', 'SCTTerrainProvider', 'planeNormal', '&tileversion=', 'batchId', 'arraySet', 'postPassesUpdate', 'EMISSION_TEXTURE_COUNT\x20', 'refCount', 'tileUrlTemplates', 'ReflectFramebuffer', 'tweens', '_maximumPriority', 'vertexPackage', 'parentNode', 'S3MWaterRenderEntity', 'TextureMagnificationFilter', 'createWireFrame', 'name', 'autoplay', 'HAS_VOLUME', 'instanceDivisor', 'S3MCreateShaderProgramJob', '_hdr', '_aggregator', 'tileHeight\x20must\x20not\x20be\x20called\x20before\x20the\x20imagery\x20provider\x20is\x20ready.', '_combiInfo', 'addTokenWithKey', 'diffuseColor', 'FlyManager', 'remove', 'terrain', 'S3MContentParser', 'getRandomValues', 'SubTextureUploadJob', './zlib/gzheader', 'default', 'RGB_DXT1', 'EXT_shader_texture_lod', 'xmldom', 'GpuConstantDefinition', 'farToNearRatio', 'HAS_NORMAL_TEXTURE', 'incorrect\x20header\x20check', '_startObject', 'randomBytes', 'imageryProvider', 'paramType', 'contentReadyPromise', 'SILHOUETTE', 'selected', 'frustum', '_entityCollection', 'state', '_snow', 'volume', 'back', 'near', 'decode_texCoord2_normConstant', 'decode_position_min', 'Constant', 'the\x20position\x20is\x20[longitude,\x20latitude\x20,height]\x20and\x20is\x20not\x20equals\x20viewPosition', 'OSGFiles', 'modulo', 'drawEvt', 'baseColorTexture', 'uv3', 'WHITE', 'startPoint', 'aTextureBatchId', 'enabled', '_loadMaterialTexture', 'opaque', '_turningMode', '_oriClipPlane', 'delay', 'reject', 'multiple', 'northeast', 'AUTO_Z_AXIAL', '_v3AffineX', 'attachFile', '_inverseModelView3DDirty', 'addressmode', '_removeObjsOperationType', 'primitive', 'ancestorTextureBake', '_isAltitudeFree', 'Microsoft.XMLDOM', 'endPoint', 'ALPHABET', 'getAttribute', 'copy', 'RED', 'normalize', 'subtract', 'substr', 'oriTexture', 'layer3DType', 'arraySize', 'nodeType', 'buf2binstring', '_emissionTextureChanged', 'fromElements', 'output', 'fromHeadingPitchRoll', 'subdomains', '_tweenjs', '_currentTargetPoint', 'isInteger', '_segmentCount', 'Assets/Textures/grepin.png', 'RADIANS_PER_DEGREE', 'false', 'boundingbox', 'cellHeight', 'Area', 'xml\x20content\x20is\x20required\x20to\x20create\x20routes!', 'renderable', '_rectangleNortheastInMeters', 'VSpeed', 'multiplyByScalar', 'NORMAL_AND_DEPTH', 'finalResolution', '/rest/realspace/', '_editPoint', 'nlen', '_waitTime', '_edgeCurrentTotalLength', 'uv7', 'SVC_TexutreCoord', 'Bounce', 'bottom', 'BLUE', 'verticesCount', 'positions\x20is\x20required!', 'HAS_MetallicRoughness_TEXTURE', 'PerspectiveFrustum', 'isS3MB', 'ColorParams', '_updatePolygon', 'instanceIndex', 'SpecularG', 'toFixed', '_sentinel', 'clip_behind_all_plane', '_command', 'numberOfLevelZeroTilesX', '_urls', 'stream\x20error', 'gpuConstants', 'getItem', 'clipMode', 'search', 'RGBA_DXT5', 'OCCLUDED', 'LESS_OR_EQUAL', 'endY', 'USE_LINECOLOR', 'Heading', 'currentRoute', ',\x22y\x22:', 'TEXTURE_WRAP_S', 'comparedTo', 'Material', 'CLIPPLANE', '_displayMode', '&_cache=true', 'shiftedBy', 'invalid\x20literal/lengths\x20set', 'sml:Top', 'tile', 'addEventListener', 'scene', 'exponentiatedBy', 'minTexCoordValue', 'errorEvent', '_inverseModelViewDirty', '_value', 'VertexCompressOption', 'textureAtlasID', 'selectionInfoMap', '_swipeEnabled', 'EPSILON3', 'isGlobalVisible', '_sceneMode', 'BottomAltitude', 'wasMinPriorityChild', 'inflateGetHeader', 'invalid\x20code\x20--\x20missing\x20end-of-block', 'useLineColor', 'ViewShedAnalysisFS', 'isHeadingFree', 'metallicFactor', 'ScreenSpaceEventHandler', 'pick', 'stopViews', 'lodRangeData', 'pointSize', '_disLabel', 'ceil', 'bytesOffset', 'metallicRoughnessTextureIndex', 'bottomAltitude', 'lencode', 'easing', 'TAM_WRAP', 'rest/realspace', 'foveatedFactor', 'flattenChunks', 'setOnlyObjsVisible\x20ids', 'greaterThan', 'lastIndexOf', 'aPosition', 'Files', 'IBL', 'HAS_OCCLUSION_TEXTURE', '_altitudeMode', 'ClampMode', 'vertexBuffer', 'normalRangeConstant', 'updateMaterialBatchTable', 'minVerticesValue', 'DepthFunction', '_colorCommand', '_barrierPointArray', '&tilecol=', 'routeName', '&tilerow=', '_currentTween', '_indexOfRefraction', 'havedict', 'have', '_target', 'cullingVolume', 'IPORTAL_KEY', 'polyline', 'ready', '_depthBuffer', 'href', 'Z_OK', '_skirtScale', 'requestVertexNormals', 'NearFarScalar', 'offsetX', 'ROUND_HALF_FLOOR', 'maxVisibleDistance', 'decode_texCoord7_min', 'project', 'pow', '_updateFlattenFramebuffer', 'sml:Version', 'rosRenderFlag', 'processRequests', 'Cesium3DTileset', 'Cartesian3', 'getCache', 'getSizeInBytes', 'textureCoordinates', 'unloadBlockTile', 'aNormalA', 'serverKey', 'row', 'Buf8', '_getEmissionAtlasTextureRects', 'precision\x20highp\x20float;\x0aconst\x20float\x20uPixelRatio\x20=\x201.0;\x0a//\x20Inputs\x0ain\x20vec3\x20aPosition0;\x0ain\x20vec3\x20aPosition1;\x0a//in\x20float\x20aVariantOffset;\x0a//in\x20float\x20aVariantStroke;\x0a//in\x20float\x20aVariantExtension;\x0a\x0a#ifdef\x20SILHOUETTE\x0ain\x20vec3\x20aNormalA;\x0ain\x20vec3\x20aNormalB;\x0a#else\x20/*\x20SILHOUETTE\x20*/\x0ain\x20vec3\x20aNormal;\x0a#endif\x20/*\x20SILHOUETTE\x20*/\x0a\x0ain\x20vec2\x20aSideness;\x0a//in\x20vec2\x20aPackedAttributes;\x0a\x0astruct\x20UnpackedAttributes\x0a{\x0a\x20\x20\x20\x20vec2\x20sideness;\x0a\x20\x20\x20\x20vec2\x20sidenessNorm;\x0a\x20\x20\x20\x20float\x20lineWidthPixels;\x0a\x20\x20\x20\x20float\x20extensionLengthPixels;\x0a#if\x20(MODE\x20==\x202)\x0a\x20\x20\x20\x20float\x20type;\x0a#endif\x0a};\x0a\x0a//\x20Output\x20required\x20to\x20compute\x20color\x0avarying\x20vec4\x20vColor;\x0a//\x20Output\x20required\x20to\x20compute\x20distance\x20to\x20line/caps\x0avarying\x20vec3\x20vPosition;\x20\x0avarying\x20vec3\x20vViewPosition;\x0avarying\x20float\x20vRadius;\x0avarying\x20float\x20vLineLengthPixels;\x0avarying\x20float\x20vSizeFalloffFactor;\x0avarying\x20float\x20vDistanceFromEye;\x0a\x0auniform\x20float\x20uLineWidth;\x0auniform\x20vec4\x20uLineColor;\x0aconst\x20vec2\x20uDepthBias\x20=\x20vec2(0.5,\x20-4e-4);\x0a\x0a//\x20Utility\x20function\x20to\x20check\x20for\x20NaN\x20values\x0abool\x20isNaN(float\x20val)\x0a{\x0a\x20\x20\x20\x20return\x20(\x20val\x20<\x200.0\x20||\x200.0\x20<\x20val\x20||\x20val\x20==\x200.0\x20)\x20?\x20false\x20:\x20true;\x0a\x20\x20\x20\x20//\x20important:\x20some\x20nVidias\x20failed\x20to\x20cope\x20with\x20version\x20below.\x0a\x20\x20\x20\x20//\x20Probably\x20wrong\x20optimization.\x0a\x20\x20\x20\x20/*return\x20(\x20val\x20<=\x200.0\x20||\x200.0\x20<=\x20val\x20)\x20?\x20false\x20:\x20true;*/\x0a}\x0a\x0avec2\x20calculateProjectedBiasXY(vec4\x20projPos,\x20vec3\x20worldNormal)\x0a{\x0a\x20\x20\x20\x20float\x20offsetXY\x20=\x20uDepthBias.x;\x0a\x20\x20\x20\x20float\x20offsetZ\x20\x20=\x20uDepthBias.y;\x0a\x20\x20\x20\x20vec4\x20projNormal\x20=\x20czm_projection\x20*\x20czm_view\x20*\x20vec4(worldNormal,\x200.0);\x0a\x20\x20\x20\x20return\x20offsetXY\x20*\x20projPos.w\x20*\x202.0\x20/\x20czm_viewport.zw\x20*\x20normalize(projNormal.xyz).xy;\x0a}\x0a\x0a//\x20A\x20z-offset,\x20using\x20a\x20depth\x20based\x20heuristic.\x0afloat\x20calculateProjectedBiasZ(vec4\x20projPos)\x0a{\x0a\x20\x20\x20\x20float\x20fProjZ\x20=\x20projPos.z\x20/\x20projPos.w;\x0a\x20\x20\x20\x20if(fProjZ\x20<\x200.1)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x200.0;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20float\x20offsetZ\x20=\x20uDepthBias.y;\x0a\x20\x20\x20\x20return\x20sqrt(projPos.z)\x20*\x20offsetZ;\x0a}\x0a\x0avec4\x20adjustProjectedPosition(vec4\x20projPos,\x20vec3\x20worldNormal,\x20float\x20lineWidth)\x0a{\x0a\x20\x20\x20\x20vec2\x20offsetXY\x20=\x20calculateProjectedBiasXY(projPos,\x20worldNormal);\x0a\x20\x20\x20\x20//\x20we\x20currently\x20have\x20to\x20do\x20this\x20check\x20because\x20some\x20geometries\x20come\x20with\x200\x20length\x20edge\x20normals.\x0a\x20\x20\x20\x20if\x20(!isNaN(offsetXY.x)\x20&&\x20!isNaN(offsetXY.y))\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20projPos.xy\x20+=\x20offsetXY;\x0a\x20\x20\x20\x20}\x0a#ifdef\x20LOG_DEPTH\x0a\x20\x20\x20\x20vDistanceFromEye\x20=\x20projPos.w;\x0a#else\x0a\x20\x20\x20\x20projPos.z\x20+=\x20calculateProjectedBiasZ(projPos);\x0a#endif\x0a\x20\x20\x20\x20return\x20projPos;\x0a}\x0a\x0a#if\x20(MODE\x20==\x202\x20||\x20MODE\x20==\x201)\x0auniform\x20vec2\x20uStrokesTextureScale;\x0auniform\x20float\x20uStrokesLog2Resolution;\x0auniform\x20float\x20uStrokeVariants;\x0avarying\x20vec2\x20vStrokeUV;\x0avarying\x20float\x20vLineIndex;\x0avoid\x20calculateStyleOutputsSketch(float\x20lineLength,\x20UnpackedAttributes\x20unpackedAttributes)\x0a{\x0a\x20\x20\x20\x20vec2\x20sidenessNorm\x20=\x20unpackedAttributes.sidenessNorm;\x0a\x20\x20\x20\x20float\x20lineIndex\x20=\x20clamp(ceil(log2(lineLength)),\x200.0,\x20uStrokesLog2Resolution);\x0a\x20\x20\x20\x20vStrokeUV\x20=\x20vec2(exp2(lineIndex)\x20*\x20sidenessNorm.y,\x20lineIndex\x20*\x20uStrokeVariants\x20+\x20aVariantStroke\x20+\x200.5)\x20*\x20uStrokesTextureScale;\x0a\x20\x20\x20\x20vStrokeUV.x\x20+=\x20aVariantOffset;\x0a\x20\x20\x20\x20vLineIndex\x20=\x20lineIndex;\x0a}\x0a#endif\x0a\x0a#if\x20(MODE\x20==\x200)\x0avoid\x20calculateStyleOutputs(vec4\x20viewPosV0,\x20vec4\x20viewPosV1,\x20vec4\x20worldPosV0,\x20vec4\x20worldPosV1,\x20vec4\x20projPos,\x20vec3\x20worldNormal,\x20UnpackedAttributes\x20unpackedAttributes)\x0a{}\x0a#elif\x20(MODE\x20==\x201)\x0avoid\x20calculateStyleOutputs(vec4\x20viewPosV0,\x20vec4\x20viewPosV1,\x20vec4\x20worldPosV0,\x20vec4\x20worldPosV1,\x20vec4\x20projPos,\x20vec3\x20worldNormal,\x20UnpackedAttributes\x20unpackedAttributes)\x0a{\x0a\x20\x20\x20\x20calculateStyleOutputsSketch(vLineLengthPixels,\x20unpackedAttributes);\x0a}\x0a#elif\x20(MODE\x20==\x202)\x0avarying\x20float\x20vType;\x0avoid\x20calculateStyleOutputs(vec4\x20viewPosV0,\x20vec4\x20viewPosV1,\x20vec4\x20worldPosV0,\x20vec4\x20worldPosV1,\x20vec4\x20projPos,\x20vec3\x20worldNormal,\x20UnpackedAttributes\x20unpackedAttributes)\x0a{\x0a\x20\x20\x20\x20vType\x20=\x20unpackedAttributes.type;\x0a\x20\x20\x20\x20if\x20(unpackedAttributes.type\x20<=\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20calculateStyleOutputsSketch(vLineLengthPixels,\x20unpackedAttributes);\x0a\x20\x20\x20\x20}\x0a}\x0a#endif\x0a\x0a\x0a//\x20Solid\x0a#if\x20(MODE\x20==\x202\x20||\x20MODE\x20==\x200)\x0afloat\x20calculateLineAmplitudeSolid()\x0a{\x0a\x20\x20\x20\x20return\x200.0;\x0a}\x0a#endif\x0a#if\x20(MODE\x20==\x200)\x0afloat\x20calculateLineAmplitude(UnpackedAttributes\x20unpackedAttributes)\x0a{\x0a\x20\x20\x20\x20return\x20calculateLineAmplitudeSolid();\x0a}\x0a#endif\x0a//\x20Sketch\x0a#if\x20(MODE\x20==\x202\x20||\x20MODE\x20==\x201)\x0a\x20\x20\x20\x20uniform\x20float\x20uStrokesAmplitude;\x0afloat\x20calculateLineAmplitudeSketch()\x0a{\x0a\x20\x20\x20\x20return\x20uStrokesAmplitude;\x0a}\x0a#endif\x0a#if\x20(MODE\x20==\x201)\x0afloat\x20calculateLineAmplitude(UnpackedAttributes\x20unpackedAttributes)\x0a{\x0a\x20\x20\x20\x20return\x20calculateLineAmplitudeSketch();\x0a}\x0a#endif\x0a//\x20Uber\x0a#if\x20(MODE\x20==\x202)\x0afloat\x20calculateLineAmplitude(UnpackedAttributes\x20unpackedAttributes)\x0a{\x0a\x20\x20\x20\x20float\x20type\x20=\x20unpackedAttributes.type;\x0a\x20\x20\x20\x20if\x20(type\x20<=\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20calculateLineAmplitudeSketch();\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20calculateLineAmplitudeSolid();\x0a\x20\x20\x20\x20}\x0a}\x0a#endif\x0a\x0a\x0auniform\x20float\x20uDistanceFalloffFactor;\x0afloat\x20distanceBasedPerspectiveFactor(float\x20distance)\x0a{\x0a\x20\x20\x20\x20return\x20clamp(sqrt(uDistanceFalloffFactor\x20/\x20distance),\x200.0,\x201.0);\x0a}\x0a\x0a#define\x20COMPONENT_COLOR_FIELD_OFFSET\x200.0\x0a#define\x20COMPONENT_OTHER_FIELDS_OFFSET\x201.0\x0a#define\x20COMPONENT_FIELD_COUNT\x202.0\x0a#define\x20LINE_WIDTH_FRACTION_FACTOR\x208.0\x0a#define\x20EXTENSION_LENGTH_OFFSET\x20128.0\x0a#define\x20COMPONENT_TEX_WIDTH\x204096.0\x0a\x0astruct\x20ComponentData\x0a{\x0a\x20\x20\x20\x20float\x20lineWidth;\x0a\x20\x20\x20\x20float\x20extensionLength;\x0a\x20\x20\x20\x20float\x20type;\x0a};\x0a\x0a\x0aComponentData\x20readComponentData()\x0a{\x0a\x20\x20\x20\x20return\x20ComponentData(uLineWidth,\x200.0,\x200.0);\x0a}\x0a\x0avec3\x20modelToWorldNormal(vec3\x20normal)\x0a{\x0a\x20\x20\x20\x20return\x20(czm_model\x20*\x20vec4(normal,\x200.0)).xyz;\x0a}\x0a\x0avec3\x20silhouetteWorldNormal(vec3\x20normalA,\x20vec3\x20normalB)\x0a{\x0a\x20\x20\x20\x20return\x20modelToWorldNormal(normalize(normalA\x20+\x20normalB));\x0a}\x0a\x0a//\x20Fall-off\x20extension\x20length\x20for\x20shorter\x20strokes,\x20starting\x20from\x20strokes\x20that\x20are\x20256\x20size,\x0a//\x20fall-off\x20exponentially\x0afloat\x20calculateExtensionLength(float\x20extensionLength,\x20float\x20lineLength)\x0a{\x0a\x20\x20\x20\x20return\x20extensionLength\x20/\x20(log2(max(1.0,\x20256.0\x20/\x20lineLength))\x20*\x200.2\x20+\x201.0);\x0a}\x0a\x0a#ifdef\x20SILHOUETTE\x0a//\x20#uniforms:\x20czm_view,\x20czm_model\x0abool\x20isSilhouetteEdge(vec4\x20viewPos,\x20vec3\x20normalA,\x20vec3\x20normalB)\x0a{\x0a//\x20transform\x20the\x20two\x20face\x20normals\x0a\x20\x20\x20\x20vec3\x20viewNormalA\x20=\x20(czm_view\x20*\x20czm_model\x20*\x20vec4(normalA,\x200.0)).xyz;\x0a\x20\x20\x20\x20vec3\x20viewNormalB\x20=\x20(czm_view\x20*\x20czm_model\x20*\x20vec4(normalB,\x200.0)).xyz;\x0a//\x20compute\x20the\x20direction\x20from\x20the\x20edge\x20to\x20the\x20camera\x0a\x20\x20\x20\x20vec3\x20viewDir\x20=\x20-viewPos.xyz;\x0a//\x20check\x20which\x20of\x20the\x20two\x20faces\x20are\x20visible\x0a//\x20display\x20the\x20edge\x20if\x20exactly\x20one\x20of\x20the\x20two\x20is\x20visible\x0a\x20\x20\x20\x20float\x20faceAVisible\x20=\x20dot(viewDir,\x20viewNormalA);\x0a//\x20positive\x20if\x20visible\x0a\x20\x20\x20\x20float\x20faceBVisible\x20=\x20dot(viewDir,\x20viewNormalB);\x0a//\x20positive\x20if\x20visible\x0a//\x201\x20if\x20exactly\x20one\x20face\x20visible,\x200\x20otherwise\x0a\x20\x20\x20\x20return\x20faceAVisible\x20*\x20faceBVisible\x20<\x200.0;\x0a}\x0a#endif\x20/*\x20SILHOUETTE\x20*/\x0a\x0avoid\x20clipLineSegmentToNearPlane(vec3\x20p0,vec3\x20p1,out\x20bool\x20clipped,out\x20bool\x20culledByNearPlane,out\x20vec4\x20clippedPositionEC)\x0a{\x0a\x20\x20\x20\x20culledByNearPlane\x20=\x20false;\x0a\x20\x20\x20\x20clipped\x20=\x20false;\x0a\x20\x20\x20\x20vec3\x20p0ToP1\x20=\x20p1\x20-\x20p0;\x0a\x20\x20\x20\x20float\x20magnitude\x20=\x20length(p0ToP1);\x0a\x20\x20\x20\x20vec3\x20direction\x20=\x20normalize(p0ToP1);\x0a\x20\x20\x20\x20float\x20endPoint0Distance\x20=\x20\x20czm_currentFrustum.x\x20+\x20p0.z;\x0a\x20\x20\x20\x20float\x20denominator\x20=\x20-direction.z;\x0a\x20\x20\x20\x20if\x20(endPoint0Distance\x20>\x200.0\x20&&\x20abs(denominator)\x20<\x20czm_epsilon7)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20culledByNearPlane\x20=\x20true;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x20if\x20(endPoint0Distance\x20>\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20t\x20=\x20endPoint0Distance\x20/\x20denominator;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(t\x20<\x200.0\x20||\x20t\x20>\x20magnitude)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20culledByNearPlane\x20=\x20true;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p0\x20=\x20p0\x20+\x20t\x20*\x20direction;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20p0.z\x20=\x20min(p0.z,\x20-czm_currentFrustum.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipped\x20=\x20true;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20clippedPositionEC\x20=\x20vec4(p0,\x201.0);\x0a}\x0a\x0afloat\x20writeNonPerspective(float\x20value,\x20float\x20w)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20w;\x0a}\x0a\x0avec2\x20writeNonPerspective(vec2\x20value,\x20float\x20w)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20w;\x0a}\x0a\x0avec3\x20writeNonPerspective(vec3\x20value,\x20float\x20w)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20w;\x0a}\x0a\x0avec4\x20writeNonPerspective(vec4\x20value,\x20float\x20w)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20w;\x0a}\x0a\x0avec4\x20calculateGeometricOutputs(vec4\x20viewPosV0,\x20vec4\x20viewPosV1,\x20vec4\x20worldPosV0,\x20vec4\x20worldPosV1,\x20vec3\x20worldNormal,\x20UnpackedAttributes\x20unpackedAttributes)\x0a{\x0a\x20\x20\x20\x20vec2\x20sideness\x20=\x20unpackedAttributes.sideness;\x0a\x20\x20\x20\x20vec2\x20sidenessNorm\x20=\x20unpackedAttributes.sidenessNorm;\x0a\x20\x20\x20\x20vec4\x20clippedViewPosV0;\x20\x20\x20\x20bool\x20clippedV0,culledV0;\x20\x20\x20\x20clipLineSegmentToNearPlane(viewPosV0.xyz,\x20viewPosV1.xyz,\x20clippedV0,\x20culledV0,\x20clippedViewPosV0);\x20\x20\x20\x20vec4\x20clippedViewPosV1;\x20\x20\x20\x20bool\x20clippedV1,\x20culledV1;\x20\x20\x20\x20clipLineSegmentToNearPlane(viewPosV1.xyz,\x20viewPosV0.xyz,\x20clippedV1,\x20culledV1,\x20clippedViewPosV1);\x20\x20\x20\x20vec4\x20viewPos\x20=\x20mix(clippedViewPosV0,\x20clippedViewPosV1,\x20sidenessNorm.y);\x0a\x20\x20\x20\x20vViewPosition\x20=\x20viewPos.xyz\x20/\x20viewPos.w;\x0a\x20\x20\x20\x20vec4\x20projPosV0\x20=\x20czm_projection\x20*\x20clippedViewPosV0;\x0a\x20\x20\x20\x20vec4\x20projPosV1\x20=\x20czm_projection\x20*\x20clippedViewPosV1;\x0a\x20\x20\x20\x20vec4\x20projPos\x20=\x20czm_projection\x20*\x20viewPos;\x0a\x20\x20\x20\x20vec3\x20screenSpaceLineNDC\x20=\x20(projPosV1.xyz\x20/\x20projPosV1.w\x20-\x20projPosV0.xyz\x20/\x20projPosV0.w);\x0a\x20\x20\x20\x20vec2\x20uNDCToPixel\x20=\x20vec2(czm_viewport.z\x20/\x202.0,\x20czm_viewport.w\x20/\x202.0);\x0a\x20\x20\x20\x20vec2\x20screenSpaceLinePixels\x20=\x20screenSpaceLineNDC.xy\x20*\x20uNDCToPixel;\x0a\x20\x20\x20\x20float\x20lineLengthPixels\x20=\x20length(screenSpaceLinePixels);\x0a\x20\x20\x20\x20float\x20dzPerPixel\x20=\x20screenSpaceLineNDC.z\x20/\x20lineLengthPixels;\x0a\x20\x20\x20\x20vec2\x20screenSpaceDirection\x20=\x20screenSpaceLinePixels\x20/\x20lineLengthPixels;\x0a\x20\x20\x20\x20vec2\x20perpendicularScreenSpaceDirection\x20=\x20vec2(screenSpaceDirection.y,\x20-screenSpaceDirection.x)\x20*\x20sideness.x;\x0a\x20\x20\x20\x20float\x20falloffFactor\x20=\x20distanceBasedPerspectiveFactor(-viewPos.z)\x20*\x20uPixelRatio;\x0a\x20\x20\x20\x20float\x20lineWidthPixels\x20=\x20unpackedAttributes.lineWidthPixels\x20*\x20falloffFactor;\x0a\x20\x20\x20\x20float\x20extensionLengthPixels\x20=\x20calculateExtensionLength(unpackedAttributes.extensionLengthPixels,\x20lineLengthPixels)\x20*\x20falloffFactor;\x0a\x20\x20\x20\x20float\x20lineAmplitudePixels\x20=\x20calculateLineAmplitude(unpackedAttributes)\x20*\x20uPixelRatio;\x0a\x20\x20\x20\x20vSizeFalloffFactor\x20=\x20falloffFactor;\x0a\x20\x20\x20\x20float\x20lineWidthAndAmplitudePixels\x20=\x20lineWidthPixels\x20+\x20lineAmplitudePixels\x20+\x20lineAmplitudePixels;\x0a\x20\x20\x20\x20float\x20extendedLineLengthPixels\x20=\x20lineLengthPixels\x20+\x20extensionLengthPixels\x20+\x20extensionLengthPixels;\x0a#ifdef\x20ANTIALIASING\x0a\x20\x20\x20\x20const\x20float\x20aaPaddingPixels\x20=\x201.0;\x0a\x20\x20\x20\x20//\x20Line\x20size\x20with\x20padding\x0a\x20\x20\x20\x20float\x20halfAAPaddedLineWidthAndAmplitudePixels\x20=\x20lineWidthAndAmplitudePixels\x20*\x200.5\x20+\x20aaPaddingPixels;\x0a\x20\x20\x20\x20float\x20aaPaddedRoundedCapSizePixels\x20=\x20lineWidthPixels\x20*\x200.5\x20+\x20aaPaddingPixels;\x0a\x20\x20\x20\x20//\x20Line\x20length\x20with\x20padding\x0a\x20\x20\x20\x20float\x20aaPaddedLineLengthPixels\x20=\x20extendedLineLengthPixels\x20+\x20aaPaddingPixels\x20+\x20aaPaddingPixels;\x0a\x20\x20\x20\x20float\x20halfAAPaddedLineLengthPixels\x20=\x20aaPaddedLineLengthPixels\x20*\x200.5;\x0a#else\x20/*\x20ANTIALIASING\x20*/\x0a\x20\x20\x20\x20//\x20Even\x20if\x20there\x20is\x20no\x20AA,\x20we\x20still\x20want\x20to\x20do\x20proper\x20<1px\x20rendering,\x0a\x20\x20\x20\x20//\x20so\x20we\x20effectively\x20clamp\x20the\x20pixel\x20sizes\x20to\x20minimum\x20of\x201px\x20and\x20compute\x0a\x20\x20\x20\x20//\x20coverage\x20in\x20the\x20fragment\x20shader\x20\x20\x20\x0a\x20\x20\x20\x20float\x20halfAAPaddedLineWidthAndAmplitudePixels\x20=\x20max(lineWidthAndAmplitudePixels,\x201.0)\x20*\x200.5;\x0a\x20\x20\x20\x20float\x20aaPaddedRoundedCapSizePixels\x20=\x20max(lineWidthPixels,\x201.0)\x20*\x200.5;\x0a\x20\x20\x20\x20float\x20halfAAPaddedLineLengthPixels\x20=\x20max(extendedLineLengthPixels,\x201.0)\x20*\x200.5;\x0a#endif\x20/*\x20ANTIALIASING\x20*/\x0a\x20\x20\x20\x20//\x20Half\x20line\x20width\x20in\x20NDC\x20including\x20padding\x20for\x20anti\x20aliasing\x0a\x20\x20\x20\x20vec2\x20uPixelToNDC\x20=\x20vec2(2.0\x20/\x20czm_viewport.z,\x202.0\x20/\x20czm_viewport.w);\x0a\x20\x20\x20\x20vec2\x20halfAAPaddedLineWidthAndAmplitudeNDC\x20=\x20halfAAPaddedLineWidthAndAmplitudePixels\x20*\x20uPixelToNDC;\x0a\x20\x20\x20\x20vec2\x20aaPaddedRoundedCapSizeNDC\x20=\x20aaPaddedRoundedCapSizePixels\x20*\x20uPixelToNDC;\x0a\x20\x20\x20\x20vec2\x20extensionLengthNDC\x20=\x20extensionLengthPixels\x20*\x20uPixelToNDC;\x0a\x20\x20\x20\x20//\x20Compute\x20screen\x20space\x20position\x20of\x20vertex,\x20offsetting\x20for\x20line\x20size\x20and\x20end\x20caps\x0a\x20\x20\x20\x20vec2\x20ndcOffset\x20=\x20(screenSpaceDirection\x20*\x20sideness.y\x20*\x20(aaPaddedRoundedCapSizeNDC\x20+\x20extensionLengthNDC)\x20+\x20perpendicularScreenSpaceDirection\x20*\x20halfAAPaddedLineWidthAndAmplitudeNDC);\x0a\x20\x20\x20\x20projPos.xy\x20+=\x20ndcOffset\x20*\x20projPos.w;\x0a\x20\x20\x20\x20projPos.z\x20+=\x20(dzPerPixel\x20*\x20(aaPaddedRoundedCapSizePixels\x20+\x20extensionLengthPixels))\x20*\x20sideness.y\x20*\x20projPos.w;\x0a\x20\x20\x20\x20projPos\x20=\x20adjustProjectedPosition(projPos,\x20worldNormal,\x201.0\x20+\x20max((lineWidthAndAmplitudePixels\x20-\x201.0)\x20*\x200.5,\x200.0));\x0a\x20\x20\x20\x20//\x20Line\x20length\x20with\x20end\x20caps\x0a\x20\x20\x20\x20float\x20aaPaddedLineWithCapsLengthPixels\x20=\x20extendedLineLengthPixels\x20+\x20aaPaddedRoundedCapSizePixels\x20+\x20aaPaddedRoundedCapSizePixels;\x0a\x20\x20\x20\x20float\x20pixelPositionAlongLine\x20=\x20aaPaddedLineWithCapsLengthPixels\x20*\x20sidenessNorm.y\x20-\x20aaPaddedRoundedCapSizePixels;\x0a\x20\x20\x20\x20//\x20Position\x20in\x20pixels\x20with\x20origin\x20at\x20first\x20vertex\x20of\x20line\x20segment\x0a\x20\x20\x20\x20//\x20The\x20line\x20width\x20radius\x20in\x20pixels\x0a\x20\x20\x20\x20vRadius\x20=\x20lineWidthPixels\x20*\x200.5;\x0a\x20\x20\x20\x20vLineLengthPixels\x20=\x20extendedLineLengthPixels;\x0a\x20\x20\x20\x20vPosition\x20=\x20writeNonPerspective(vec3(halfAAPaddedLineWidthAndAmplitudePixels\x20*\x20sideness.x,\x20pixelPositionAlongLine,\x20pixelPositionAlongLine\x20/\x20extendedLineLengthPixels),\x20projPos.w);\x0a#ifdef\x20SILHOUETTE\x0a\x20\x20\x20\x20gl_Position\x20=\x20isSilhouetteEdge(viewPosV0,\x20aNormalA,\x20aNormalB)\x20?\x20projPos\x20:\x20vec4(10.0,\x2010.0,\x2010.0,\x201.0);\x0a#else\x20/*\x20SILHOUETTE\x20*/\x0a\x20\x20\x20\x20gl_Position\x20=\x20projPos;\x0a#endif\x20/*\x20SILHOUETTE\x20*/\x0a\x0a#if\x20(MODE\x20==\x202)\x0a\x20\x20\x20\x20if\x20(unpackedAttributes.type\x20<=\x200.0\x20&&\x20lineLengthPixels\x20<=\x203.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20vec4(10.0,\x2010.0,\x2010.0,\x201.0);\x0a\x20\x20\x20\x20}\x0a#elif\x20(MODE\x20==\x201)\x0a\x20\x20\x20\x20if\x20(lineLengthPixels\x20<=\x203.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20vec4(10.0,\x2010.0,\x2010.0,\x201.0);\x20\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x20\x20return\x20projPos;\x0a}\x0a\x0a\x0a#if\x20(MODE\x20==\x202)\x0aUnpackedAttributes\x20unpackAttributes(ComponentData\x20component)\x0a{\x0a\x20\x20\x20\x20vec2\x20sidenessNorm\x20=\x20aSideness;\x0a\x20\x20\x20\x20vec2\x20sideness\x20=\x20sidenessNorm\x20*\x202.0\x20-\x201.0;\x0a\x20\x20\x20\x20float\x20fType\x20=\x20component.type;\x0a\x20\x20\x20\x20float\x20extensionLengthPixels\x20=\x20component.extensionLength;\x0a\x20\x20\x20\x20float\x20lineWidth\x20=\x20component.lineWidth;\x0a\x20\x20\x20\x20if\x20(fType\x20<=\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20extensionLengthPixels\x20*=\x20aVariantExtension\x20*\x202.0\x20-\x201.0;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20return\x20UnpackedAttributes(sideness,\x20sidenessNorm,\x20lineWidth,\x20extensionLengthPixels,\x20fType);\x0a}\x0a#else\x20/*\x20(MODE\x20==\x202)\x20*/\x0aUnpackedAttributes\x20unpackAttributes(ComponentData\x20component)\x0a{\x0a\x20\x20\x20\x20vec2\x20sidenessNorm\x20=\x20aSideness;\x0a\x20\x20\x20\x20vec2\x20sideness\x20=\x20sidenessNorm\x20*\x202.0\x20-\x201.0;\x0a\x20\x20\x20\x20float\x20extensionLengthPixels\x20=\x20component.extensionLength;\x0a#if\x20(MODE\x20==\x201)\x0a\x20\x20\x20\x20extensionLengthPixels\x20*=\x20aVariantExtension\x20*\x202.0\x20-\x201.0;\x0a#endif\x0a\x20\x20\x20\x20float\x20lineWidth\x20=\x20component.lineWidth;\x0a\x20\x20\x20\x20return\x20UnpackedAttributes(sideness,\x20sidenessNorm,\x20lineWidth,\x20extensionLengthPixels);\x0a}\x0a#endif\x20/*\x20(MODE\x20==\x202)\x20*/\x0a\x0avarying\x20float\x20fSelected;\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20fSelected\x20=\x200.0;\x0a\x20\x20\x20\x20ComponentData\x20component\x20=\x20readComponentData();\x0a\x20\x20\x20\x20UnpackedAttributes\x20unpackedAttributes\x20=\x20unpackAttributes(component);\x0a\x20\x20\x20\x20vec4\x20worldPosV0\x20=\x20czm_model\x20*\x20vec4(aPosition0,\x201.0);\x0a\x20\x20\x20\x20vec4\x20worldPosV1\x20=\x20czm_model\x20*\x20vec4(aPosition1,\x201.0);\x0a\x20\x20\x20\x20vec4\x20viewPosV0\x20=\x20czm_modelView\x20*\x20vec4(aPosition0,\x201.0);\x0a\x20\x20\x20\x20vec4\x20viewPosV1\x20=\x20czm_modelView\x20*\x20vec4(aPosition1,\x201.0);\x0a#ifdef\x20SILHOUETTE\x0a\x20\x20\x20\x20vec3\x20worldNormal\x20=\x20silhouetteWorldNormal(aNormalA,\x20aNormalB);\x0a#else\x20/*\x20SILHOUETTE\x20*/\x0a\x20\x20\x20\x20vec3\x20worldNormal\x20=\x20modelToWorldNormal(aNormal);\x0a#endif\x20/*\x20SILHOUETTE\x20*/\x0a\x20\x20\x20\x20//\x20General\x20geometric\x20computation\x20for\x20all\x20types\x20of\x20edges\x0a\x20\x20\x20\x20vec4\x20projPos\x20=\x20calculateGeometricOutputs(viewPosV0,\x20viewPosV1,\x20worldPosV0,\x20worldPosV1,\x20worldNormal,\x20unpackedAttributes);\x0a\x20\x20\x20\x20vColor\x20=\x20uLineColor;\x0a}', 'matrixV', 'AssociativeArray', 'compressedTexImage2D', 'AutoConstantEntry', 'Level', 'dimensions', 'Geometry', 'getQuery', 'updateVisibility', 'S3MPointCloudVS', 'MaterialPass', 'path', 'getVisibleInViewport', 'atuoConstants', 'emissiveTexture', 'detected\x20subdomain\x20url\x20scheme,\x20but\x20no\x20subdomain\x20provided.', '_billboardMode', 'aTexCoordZ', 'BRDF', 'inflateRaw', 'Sampler', '_schuduler', 'TRIANGLE_FILTRATE', 'bits', 'textureRenderableFlag', '{y}', 'framebuffer', 'stopCollection', 'combine', 'isLeaf', 'ANTIALIASING', 'waterColour', 'location', 'ZERO', 'computeFlyToLocationForRectangle', 'setRosRenderFlag', '_inverseViewProjectionDirty', 'height', 'RIGHT_CLICK', 'startX', 'TerrainFileLayer', 'boundingSphere', 'heightRange', '_layers', 'setBatchedAttribute', 'Credential.value\x20is\x20necessory.', 'modelMatrix', 'S3MTilesVS', 'equals', 'VertexColor', 'aPosition0', 'pickPositionSupported', 'split', 'Smoothly', 'queryBooleanAttribute', 'HeightReference', 'NOT_EQUAL', 'SKELETONSELECT_ENABLE', 'pbrMaterialsArr', 'Linear', 'tail', 'apply', 'fData', 'queryNodes', 'undefined', 'fromTranslation', 'hookLoadTilesetFunc', 'time', '_lineWidth', 'end', 'shininess', 'options.url\x20or\x20options.video\x20or\x20options.image\x20are\x20required.', 'PolygonPipeline', 'depthTexture', 'setTyped', '_lineCommand', 'texParameteri', '_dictTable', 'Index', 'appendChild', 'only_keep_line', 'RequestType', 'normal', 'FLOOD_ANALYSIS', 'EMPTY_OBJECT', 'calculateResolution', 'parameter\x20stop\x20is\x20required!', 'noise', 'fromRectangle3D', 'initLayerSetting', 'setAttribute', 'charAt', 'nodejs.util.inspect.custom', 'analysisMode', 'uv4', './crc32', '_viewProjectionDirty', 'planePos', 'No\x20url\x20provided.', 'charCodeAt', 'ColorTableMaxKey', 'centerZDepth', 'width', '_selectedColor', 'uVisibleColor', 'multipliedBy', 'getTexture', 'PACK', 'yOffset', 'verticalFov', 'touchedFrame', 'removeLimitbody', 'typeOf', 'isAbsolute', 'FILL_AND_OUTLINE', 'newFrame', 'Saturation', 'Authentication\x20error', 'RotateY', 'wnext', 'next_out', 'resolve\x20Layer\x20Extend\x20XML\x20error:', 'BLACK', 'fromBoundingSpheres', '_addedStops', '#ffe500', 'WEBP', '_stopName', 'depthStencilTexture', 'routes', '_hasVertexNormals', '.s3m', 'pendingRequests', 'PIPELINE', '_subBatchValuesBake', 'OVERLAY', 'blue', 'performance', 'distcode', 'Ellipsoid', 'instance\x20buffer\x20is\x20null', 'LINES', 'image/png', 'sml:CellWidth', 'data/index/{y}/{x}.{fileExtension}?level={level}', 'distdyn', '_blockCacheSize', '80827fgNFZI', '_imageBuffer', 'S3mModel', 'createTexture', '_invertViewProjectionMatrix', 'decode_texCoord4_min', 'err', 'RGB', 'GREATER', './inftrees', 'avail_out', 'firstChild', 'the\x20distance\x20is\x20greater\x20than\x200.0\x20an\x20less\x20than\x201.0', 'dot', '_minCategory', 'image/webp', '_swipeRegion', 'createOneEdgeCommand', 'Tween', 'VideoName', '../', 'StoreType', 'readyState', 'rayPlane', '/datas/', 'rect', 'invalid\x20block\x20type', 'isRoot', 'geoMap', 'withAlpha', 'peek', 'data/path/', '_primitives', 'snowMaskTextureIndex', '_currentDis', 'computeNeighbors', 'scene\x20is\x20required!', 'APPLY_SWIPE', 'MinX', 'PointSize', '/lib/inflate.js', 'contains', '_positions', '_rectangles', 'removeDotSegments', 'type', 'buf2string', '_heightmapWidth', 'StartCol', 'hasMetadata', 'data_type', 'points', '_buildModuleUrlFromBaseUrl', 'CesiumExt', 'instanceBuffer', 'material', 'sum', 'visibleDistanceMin', '_point', 'PhysicalIndex', 'string', 'RenderTarget', 'clampToGroundPolygonPositions', 'NaN', 'invGeoMatrix', 'priorityHolder', 'hookRequestContentFunc', 'convertTo3DCartesian', 'fillForeColor', 'baseColorTextureIndex', 'cancel', '_video', 'availabilityPromiseCache', 'indicesCount', 'Vertical', 'removeObjsColor', 'clamp', 'directionLightDecl', 'FIXED_ANGLE', 'addLimitbody', '_terrainDataStructure', 'UNIT_X', '_minHeight', 'Brightness', 'noValueColor', 'ProjectionImage.hue', 'Polygon', 'createPickId', 'Queue', '_flyStatus', 'invalid\x20distance\x20code', '_minWValue', '_requestImageError', '_tileDiscardPolicy', 'edgeCount', 'Diffuse', 'selectIndexData', 'Carteisan3', 'uniform\x20sampler2D\x20colorTexture;\x0avarying\x20vec2\x20v_textureCoordinates;\x0auniform\x20int\x20density;\x0auniform\x20float\x20speed;\x0auniform\x20float\x20angle;\x0a\x0afloat\x20snow(vec2\x20uv,\x20float\x20scale)\x0a{\x0a\x20\x20\x20\x20float\x20time\x20=\x20czm_frameNumber\x20/\x2060.0;\x0a\x20\x20\x20\x20float\x20w\x20=\x20smoothstep(1.0\x20,\x200.0,\x20-uv.y\x20*\x20(scale\x20/\x2010.0));\x0a\x20\x20\x20\x20if(w\x20<\x200.1)\x20return\x200.0;\x20//\x20雪花消失\x0a\x20\x20\x20\x20uv\x20+=\x20time\x20/\x20scale;\x20//\x20随时间移动\x0a\x20\x20\x20\x20uv.y\x20+=\x20time\x20*\x20cos(angle)\x20*\x20speed\x20/\x20scale;\x0a\x20\x20\x20\x20uv.x\x20+=\x20sin(uv.y\x20+\x20time\x20*\x20sin(angle)\x20*\x20speed)\x20/\x20scale;\x20//\x20左右摇摆\x0a\x20\x20\x20\x20uv\x20*=\x20scale;\x0a\x20\x20\x20\x20vec2\x20s\x20=\x20floor(uv);\x0a\x20\x20\x20\x20vec2\x20f\x20=\x20fract(uv);\x0a\x20\x20\x20\x20vec2\x20p;\x0a\x20\x20\x20\x20float\x20k\x20=\x203.0;\x0a\x20\x20\x20\x20float\x20d;\x0a\x20\x20\x20\x20p\x20=\x200.5\x20+\x200.35\x20*\x20sin(11.0\x20*\x20fract(sin((s\x20+\x20p\x20+\x20scale)\x20*\x20mat2(7,\x203,\x206,\x205))\x20*\x205.0))\x20-\x20f;\x0a\x20\x20\x20\x20d\x20=\x20length(p);\x0a\x20\x20\x20\x20k\x20=\x20min(d,\x20k);\x0a\x20\x20\x20\x20k\x20=\x20smoothstep(0.0,\x20k,\x20sin(f.x\x20+\x20f.y)\x20*\x200.01);\x0a\x20\x20\x20\x20return\x20k\x20*\x20w\x20*\x20clamp(float(density)\x20/\x205.0,\x201.0,\x205.0);\x0a}\x0a\x0a\x0avoid\x20main(void){\x0a\x20\x20\x20\x20vec2\x20resolution\x20=\x20czm_viewport.zw;\x0a\x20\x20\x20\x20vec2\x20uv\x20=\x20(gl_FragCoord.xy\x20*\x202.0\x20-\x20resolution.xy)\x20/\x20min(resolution.x,\x20resolution.y);\x0a\x20\x20\x20\x20vec3\x20finalColor\x20=\x20vec3(0);\x0a\x20\x20\x20\x20float\x20c\x20=\x200.0;\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x202;\x20i\x20<\x205;\x20i++)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(density\x20<\x20i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20c\x20+=\x20snow(uv,\x20float(i));\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x206;\x20i\x20<\x2010;\x20i+=\x202)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(density\x20<\x20i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20c\x20+=\x20snow(uv,\x20float(i));\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20for\x20(int\x20i\x20=\x2015;\x20i\x20<\x2030;\x20i+=\x205)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(density\x20<\x20i)\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20break;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20c\x20+=\x20snow(uv,\x20float(i));\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20finalColor\x20=\x20vec3(c);\x0a\x20\x20\x20\x20if(c\x20>\x200.8)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20finalColor\x20=\x20vec3(max(5.0,\x20c));\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20out_FragColor\x20=\x20mix(texture(colorTexture,\x20v_textureCoordinates),\x20vec4(finalColor,\x201.0),\x200.15);\x0a}', 'distanceToNext', '_isTiltFree', 'flags', '_cameraDir', '_updateObjsColor', 'MOUSE_MOVE', 'DiffuseG', 'RangeMode', 'ShaderSource', 'HAS_SKELETONSELECTED', 'parseFromString', 'clearcoat', 'createGuid', 'bottomAltitude\x20value', 'next', 'NUM_PBR_MATERIALS\x20', '_clipMode', '_getEmissionTexAtlasTilingAndOffset', '_editPointIndex', 'rectangleNortheastInMeters', '_requestWaterMask', 'stop', 'DrawHandler', 'Cartographic', 'toStringTag', '_delay', 'Top', 'LINE_STRIP', 'heading', 'now', 'OperationType'];
const Adapter = Cesium
function _0x557c(_0x1305c0, _0xc8b441) {
    _0x1305c0 = _0x1305c0 - 0xc4;
    let _0x17403f = _0x1740[_0x1305c0];
    return _0x17403f;
}
(function (_0x1131a5, _0x154838) {
    const _0x10aea1 = _0x557c;
    while (!![]) {
        try {
            const _0x59c91e = parseInt(_0x10aea1(0x3df)) + -parseInt(_0x10aea1(0x3d8)) * -parseInt(_0x10aea1(0xa1e)) + parseInt(_0x10aea1(0x9f4)) * -parseInt(_0x10aea1(0x9ad)) + parseInt(_0x10aea1(0x65f)) * parseInt(_0x10aea1(0x186)) + parseInt(_0x10aea1(0x6ef)) + -parseInt(_0x10aea1(0x8fb)) + -parseInt(_0x10aea1(0xca)) * -parseInt(_0x10aea1(0x155));
            if (_0x59c91e === _0x154838)
                break;
            else
                _0x1131a5['push'](_0x1131a5['shift']());
        } catch (_0x16b38e) {
            _0x1131a5['push'](_0x1131a5['shift']());
        }
    }
}(_0x1740, 0x8f7ba),
    !function (_0x303b5a, _0x1606ec) {
        const _0x17c5ce = _0x557c;
        _0x17c5ce(0x3f0) == typeof exports && _0x17c5ce(0x8a8) != typeof module ? _0x1606ec(exports) : _0x17c5ce(0x3eb) == typeof define && define[_0x17c5ce(0x71a)] ? define([_0x17c5ce(0x359)], _0x1606ec) : _0x1606ec((_0x303b5a = _0x17c5ce(0x8a8) != typeof globalThis ? globalThis : _0x303b5a || self)[_0x17c5ce(0x604)] = {});
    }(this, function (_0x1de603) {
        'use strict';
        const _0x324b8e = _0x557c;

        function _0x42e1f3(_0x1605aa) {
            const _0x5c14c4 = _0x557c;

            this['context'] = _0x1605aa,
                this['sceneFramebuffer'] = new Adapter['SceneFramebuffer'](),
                this[_0x5c14c4(0x5dc)] = new Adapter['PassState'](_0x1605aa),
                this[_0x5c14c4(0x5dc)][_0x5c14c4(0xd5)] = new Adapter[(_0x5c14c4(0x4d0))](),
                this[_0x5c14c4(0x5bf)] = {
                    'isSunVisible': !0x1,
                    'isMoonVisible': !0x1,
                    'isSkyAtmosphereVisible': !0x1,
                    'isSkyBoxVisible': !0x1,
                    'isGlobalVisible': !0x0,
                    'isObjectVisible': !0x0
                },
                this[_0x5c14c4(0x8ce)] = 0x0,
                this[_0x5c14c4(0x88d)] = 0x0,
                this[_0x5c14c4(0xa48)] = void 0x0,
                this[_0x5c14c4(0x316)] = void 0x0,
                this['framebuffer'] = void 0x0,
                this[_0x5c14c4(0x548)] = void 0x0,
                this['rs'] = void 0x0,
                this[_0x5c14c4(0x8b1)] = void 0x0,
                this[_0x5c14c4(0x882)] = void 0x0,
                this[_0x5c14c4(0x2ff)] = !0x1;
        }
        _0x42e1f3['prototype'][_0x324b8e(0x10b)] = function (_0x4ee99a) {
            const _0xc4c588 = _0x324b8e;
            let _0x8a7a9d = _0x4ee99a[_0xc4c588(0x142)]
                , _0x2e4457 = _0x4ee99a[_0xc4c588(0x35c)];
            this['framebuffer'] && this[_0xc4c588(0x8ce)] === _0x8a7a9d && this[_0xc4c588(0x88d)] === _0x2e4457 || (this[_0xc4c588(0x8ce)] = _0x8a7a9d,
                this[_0xc4c588(0x88d)] = _0x2e4457,
                this[_0xc4c588(0x8b1)] = this[_0xc4c588(0x8b1)] && !this['depthTexture'][_0xc4c588(0x575)]() && this[_0xc4c588(0x8b1)][_0xc4c588(0x4dd)](),
                this[_0xc4c588(0x8b1)] = new Adapter[(_0xc4c588(0x130))]({
                    'context': _0x4ee99a,
                    'width': _0x8a7a9d,
                    'height': _0x2e4457,
                    'pixelFormat': Adapter[_0xc4c588(0x480)][_0xc4c588(0x71c)],
                    'pixelDatatype': Adapter['PixelDatatype'][_0xc4c588(0x1e0)],
                    'sampler': new Adapter[(_0xc4c588(0x87c))]({
                        'wrapS': Adapter[_0xc4c588(0x600)][_0xc4c588(0xa76)],
                        'wrapT': Adapter[_0xc4c588(0x600)]['CLAMP_TO_EDGE'],
                        'minificationFilter': Adapter['TextureMinificationFilter'][_0xc4c588(0x3bd)],
                        'magnificationFilter': Adapter[_0xc4c588(0x76e)][_0xc4c588(0x3bd)]
                    })
                }),
                this[_0xc4c588(0x882)] = this[_0xc4c588(0x882)] && !this['framebuffer'][_0xc4c588(0x575)]() && this[_0xc4c588(0x882)][_0xc4c588(0x4dd)](),
                this['framebuffer'] = new Adapter[(_0xc4c588(0x31d))]({
                    'context': _0x4ee99a,
                    'colorTextures': [this[_0xc4c588(0x8b1)]],
                    'destroyAttachments': !0x1
                }));
        }
            ,
            _0x42e1f3[_0x324b8e(0x74f)][_0x324b8e(0xa1a)] = function (_0xf7b4d) {
                const _0x2a9f73 = _0x324b8e;
                if (this['rs'] && Adapter[_0x2a9f73(0x4d0)][_0x2a9f73(0x898)](this[_0x2a9f73(0x5dc)]['viewport'], this['rs']['viewport']) || (this['rs'] = Adapter[_0x2a9f73(0x4ca)][_0x2a9f73(0x6bf)]({
                    'viewport': this[_0x2a9f73(0x5dc)]['viewport']
                })),
                    !this['copyDepthCommand']) {
                    let _0xbb6203 = _0x2a9f73(0x1e9);
                    this['copyDepthCommand'] = _0xf7b4d['createViewportQuadCommand'](_0xbb6203, {
                        'uniformMap': {
                            'u_depthTexture': () => this[_0x2a9f73(0x548)]
                        },
                        'owner': this
                    });
                }
                this[_0x2a9f73(0x316)] || (this['clearCommand'] = new Adapter[(_0x2a9f73(0x4e4))]({
                    'color': new Adapter['Color'](0x0, 0x0, 0x0, 0x0),
                    'stencil': 0x0,
                    'depth': 0x1,
                    'owner': this
                })),
                    this[_0x2a9f73(0xa48)]['renderState'] = this['rs'],
                    this[_0x2a9f73(0xa48)]['framebuffer'] = this[_0x2a9f73(0x882)],
                    this['clearCommand']['framebuffer'] = this[_0x2a9f73(0x882)];
            }
            ,
            _0x42e1f3[_0x324b8e(0x74f)][_0x324b8e(0x2e1)] = function (_0x38f8ae) {
                const _0x3f6a9b = _0x324b8e;
                this['sceneFramebuffer'][_0x3f6a9b(0x4bc)](_0x38f8ae[_0x3f6a9b(0x56c)], _0x38f8ae[_0x3f6a9b(0x122)]['viewport'], _0x38f8ae[_0x3f6a9b(0x775)]),
                    this[_0x3f6a9b(0x5dc)][_0x3f6a9b(0x882)] = this[_0x3f6a9b(0x30a)][_0x3f6a9b(0x9df)](),
                    Adapter[_0x3f6a9b(0x4d0)][_0x3f6a9b(0x157)](_0x38f8ae['view']['viewport'], this[_0x3f6a9b(0x5dc)][_0x3f6a9b(0xd5)]);
                let _0x1d59ec = _0x38f8ae[_0x3f6a9b(0x56c)];
                return this[_0x3f6a9b(0x10b)](_0x1d59ec),
                    this[_0x3f6a9b(0xa1a)](_0x1d59ec),
                    this['clearCommand'][_0x3f6a9b(0x62c)](_0x1d59ec, this[_0x3f6a9b(0x5dc)]),
                    _0x38f8ae[_0x3f6a9b(0x4be)][_0x3f6a9b(0xa4c)][_0x3f6a9b(0xa0b)] = !0x0,
                    this[_0x3f6a9b(0xcb)] && this['beginFunc'](_0x38f8ae['frameState']),
                    this[_0x3f6a9b(0x5dc)];
            }
            ,
            _0x42e1f3[_0x324b8e(0x74f)][_0x324b8e(0x8ad)] = function (_0xc1993e, _0x3db5a5) {
                const _0x9d153a = _0x324b8e;
                _0xc1993e[_0x9d153a(0xa4c)][_0x9d153a(0x821)] = !0x1,
                    _0xc1993e[_0x9d153a(0xa4c)]['depth'] = !0x1,
                    this[_0x9d153a(0x548)] = _0x3db5a5[_0x9d153a(0x882)][_0x9d153a(0x8e8)],
                    this[_0x9d153a(0xa48)] && this[_0x9d153a(0xa48)][_0x9d153a(0x62c)](_0xc1993e['context'], _0x3db5a5),
                    this[_0x9d153a(0xa89)] && this[_0x9d153a(0xa89)](_0xc1993e);
            }
            ,
            _0x42e1f3[_0x324b8e(0x74f)][_0x324b8e(0xa5b)] = function (_0x2f55e0) {
                const _0xd1ade8 = _0x324b8e;
                if (!this['isUpdate'])
                    return;
                const _0x129baa = _0x2f55e0[_0xd1ade8(0x4be)];
                _0x129baa['commandList'][_0xd1ade8(0x376)] = 0x0,
                    _0x129baa[_0xd1ade8(0x423)] = !0x0,
                    _0x2f55e0[_0xd1ade8(0x4de)] = !0x1;
                const _0x127392 = this[_0xd1ade8(0x2e1)](_0x2f55e0);
                _0x2f55e0['updateEnvironment'](),
                    _0x2f55e0[_0xd1ade8(0x1f2)](_0x127392, Adapter[_0xd1ade8(0x75c)][_0xd1ade8(0x8e2)]),
                    this['end'](_0x2f55e0[_0xd1ade8(0x4be)], _0x127392),
                    _0x129baa[_0xd1ade8(0x423)] = !0x1,
                    _0x2f55e0['useDepthPicking'] = !0x0;
            }
            ,
            _0x42e1f3['prototype'][_0x324b8e(0x575)] = function () {
                return !0x1;
            }
            ,
            _0x42e1f3[_0x324b8e(0x74f)][_0x324b8e(0x4dd)] = function () {
                const _0x4bc50d = _0x324b8e;
                if (this['depthTexture'] = this['depthTexture'] && !this[_0x4bc50d(0x8b1)][_0x4bc50d(0x575)]() && this[_0x4bc50d(0x8b1)][_0x4bc50d(0x4dd)](),
                    this[_0x4bc50d(0x882)] = this['framebuffer'] && !this[_0x4bc50d(0x882)][_0x4bc50d(0x575)]() && this[_0x4bc50d(0x882)]['destroy'](),
                    this[_0x4bc50d(0xa48)]) {
                    let _0x35422c = this['copyDepthCommand']['sp'];
                    _0x35422c = _0x35422c && !_0x35422c[_0x4bc50d(0x575)]() && _0x35422c[_0x4bc50d(0x4dd)](),
                        this[_0x4bc50d(0xa48)] = void 0x0;
                }
                return this['clearCommand'] = void 0x0,
                    this['depthTextureToCopy'] = void 0x0,
                    this[_0x4bc50d(0x2ff)] = !0x1,
                    Adapter['destroyObject'](this);
            }
            ;
        var _0x585ed7 = _0x324b8e(0x639)
            , _0x2e9404 = '\x0a#ifdef\x20GL_EXT_frag_depth\x0a#extension\x20GL_EXT_frag_depth\x20:\x20enable\x0a#endif\x0auniform\x20vec4\x20uColor;\x0aout\x20float\x20fWindowZ;\x0avoid\x20main()\x0a{\x0a#ifdef\x20GL_EXT_frag_depth\x0a\x09gl_FragDepthEXT\x20=\x20min(fWindowZ\x20*\x20gl_FragCoord.w,\x201.0);\x0a#endif\x0a\x20\x20\x20out_FragColor\x20=\x20uColor;\x0a}'
            , _0x472182 = _0x324b8e(0x6c6)
            , _0x2798df = _0x324b8e(0x19d);
        const _0x1f29ae = Adapter[_0x324b8e(0x14b)];
        function _0x2ba0a2() { }
        _0x2ba0a2[_0x324b8e(0x32f)] = function (_0x58bd85, _0x1a2385, _0x370a81) {
            const _0x10ddf2 = _0x324b8e;
            var _0x4844a1 = [];
            if (_0x58bd85[_0x10ddf2(0x32f)])
                _0x4844a1 = _0x58bd85['getElementsByTagNameNS'](_0x1a2385, _0x370a81);
            else {
                for (var _0x322224, _0x117008, _0x194da6 = _0x58bd85[_0x10ddf2(0xa35)]('*'), _0x23a28c = 0x0, _0x1da207 = _0x194da6['length']; _0x23a28c < _0x1da207; ++_0x23a28c)
                    _0x117008 = (_0x322224 = _0x194da6[_0x23a28c])[_0x10ddf2(0x2f2)] ? _0x322224[_0x10ddf2(0x2f2)] + ':' + _0x370a81 : _0x370a81,
                        '*' !== _0x370a81 && _0x117008 !== _0x322224['nodeName'] || '*' !== _0x1a2385 && _0x1a2385 !== _0x322224[_0x10ddf2(0x1f1)] || _0x4844a1['push'](_0x322224);
            }
            return _0x4844a1;
        }
            ,
            _0x2ba0a2[_0x324b8e(0x6b9)] = function (_0x25603e, _0x13057d, _0x3e50a4) {
                const _0x555b90 = _0x324b8e;
                var _0x3ed81d = null;
                if (_0x25603e[_0x555b90(0x6b9)])
                    _0x3ed81d = _0x25603e[_0x555b90(0x6b9)](_0x13057d, _0x3e50a4);
                else {
                    for (var _0x3308a5, _0x167aae = _0x25603e['attributes'], _0x26fba4 = 0x0, _0x8ba433 = _0x167aae[_0x555b90(0x376)]; _0x26fba4 < _0x8ba433; ++_0x26fba4)
                        if ((_0x3308a5 = _0x167aae[_0x26fba4])[_0x555b90(0x1f1)] === _0x13057d && (_0x3308a5[_0x555b90(0x2f2)] ? _0x3308a5[_0x555b90(0x2f2)] + ':' + _0x3e50a4 : _0x3e50a4) === _0x3308a5[_0x555b90(0x606)]) {
                            _0x3ed81d = _0x3308a5;
                            break;
                        }
                }
                return _0x3ed81d;
            }
            ,
            _0x2ba0a2[_0x324b8e(0x673)] = function (_0x5f09e4, _0x283dfb) {
                const _0x1980ae = _0x324b8e;
                var _0x3a09a3 = _0x283dfb || '';
                if (_0x5f09e4) {
                    for (var _0x4d053a = _0x5f09e4[_0x1980ae(0x906)]; _0x4d053a; _0x4d053a = _0x4d053a[_0x1980ae(0x1f9)])
                        switch (_0x4d053a[_0x1980ae(0x7c2)]) {
                            case 0x3:
                            case 0x4:
                                _0x3a09a3 += _0x4d053a['nodeValue'];
                        }
                }
                return _0x3a09a3;
            }
            ,
            _0x2ba0a2['queryNumericAttribute'] = function (_0x2eb751, _0x5160f0) {
                const _0x10ede9 = _0x324b8e;
                if (_0x1f29ae(_0x2eb751)) {
                    var _0x5bac79 = _0x2eb751[_0x10ede9(0x7b9)](_0x5160f0);
                    if (null !== _0x5bac79) {
                        var _0x276ef7 = parseFloat(_0x5bac79);
                        return isNaN(_0x276ef7) ? void 0x0 : _0x276ef7;
                    }
                }
            }
            ,
            _0x2ba0a2[_0x324b8e(0x658)] = function (_0x181df5, _0x114fbd) {
                const _0x9b76e5 = _0x324b8e;
                if (_0x1f29ae(_0x181df5)) {
                    var _0x35c96f = _0x181df5[_0x9b76e5(0x7b9)](_0x114fbd);
                    return null !== _0x35c96f ? _0x35c96f : void 0x0;
                }
            }
            ,
            _0x2ba0a2[_0x324b8e(0x89e)] = function (_0x1e7344, _0x273cf5) {
                const _0x101ceb = _0x324b8e;
                if (_0x1f29ae(_0x1e7344)) {
                    var _0x49a7f7 = _0x1e7344[_0x101ceb(0x7b9)](_0x273cf5);
                    return _0x101ceb(0x7cf) !== (_0x49a7f7 = _0x49a7f7[_0x101ceb(0xa2b)]()) && (_0x101ceb(0x6cc) === _0x49a7f7 || void 0x0);
                }
            }
            ,
            _0x2ba0a2[_0x324b8e(0x2fd)] = function (_0x5288ed, _0x19ee3a, _0x1e267f) {
                const _0xd42840 = _0x324b8e;
                if (_0x1f29ae(_0x5288ed))
                    for (var _0x31d676 = _0x5288ed[_0xd42840(0x2a1)], _0x585970 = _0x31d676[_0xd42840(0x376)], _0xcc1b27 = 0x0; _0xcc1b27 < _0x585970; _0xcc1b27++) {
                        var _0x490c15 = _0x31d676[_0xcc1b27];
                        if (_0x1e267f) {
                            if (_0x490c15['localName'] === _0x19ee3a && -0x1 !== _0x1e267f[_0xd42840(0xa59)](_0x490c15[_0xd42840(0x1f1)]))
                                return _0x490c15;
                        } else {
                            if (_0x490c15[_0xd42840(0x5e7)] === _0x19ee3a)
                                return _0x490c15;
                        }
                    }
            }
            ,
            _0x2ba0a2[_0x324b8e(0x8a7)] = function (_0x184975, _0x5cbd8e, _0x25c821) {
                const _0x1d91ef = _0x324b8e;
                if (_0x1f29ae(_0x184975)) {
                    for (var _0x310a3e = [], _0x24204b = _0x2ba0a2[_0x1d91ef(0x32f)](_0x184975, '*', _0x5cbd8e), _0x362af6 = _0x24204b[_0x1d91ef(0x376)], _0x322a21 = 0x0; _0x322a21 < _0x362af6; _0x322a21++) {
                        var _0x455b4b = _0x24204b[_0x322a21];
                        _0x25c821 ? _0x455b4b[_0x1d91ef(0x5e7)] === _0x5cbd8e && -0x1 !== _0x25c821[_0x1d91ef(0xa59)](_0x455b4b[_0x1d91ef(0x1f1)]) && _0x310a3e['push'](_0x455b4b) : _0x455b4b[_0x1d91ef(0x5e7)] === _0x5cbd8e && _0x310a3e['push'](_0x455b4b);
                    }
                    return _0x310a3e;
                }
            }
            ,
            _0x2ba0a2[_0x324b8e(0x5c6)] = function (_0x24aad9, _0x386485, _0x55cece) {
                const _0x2a025d = _0x324b8e;
                if (!_0x1f29ae(_0x24aad9))
                    return [];
                for (var _0x416cf0 = [], _0x42a212 = _0x24aad9[_0x2a025d(0x2a1)], _0x2e3fcf = _0x42a212[_0x2a025d(0x376)], _0x1a24a2 = 0x0; _0x1a24a2 < _0x2e3fcf; _0x1a24a2++) {
                    var _0x2af95e = _0x42a212[_0x1a24a2];
                    _0x55cece ? _0x2af95e[_0x2a025d(0x5e7)] === _0x386485 && -0x1 !== _0x55cece[_0x2a025d(0xa59)](_0x2af95e[_0x2a025d(0x1f1)]) && _0x416cf0[_0x2a025d(0x745)](_0x2af95e) : _0x2af95e[_0x2a025d(0x5e7)] === _0x386485 && _0x416cf0[_0x2a025d(0x745)](_0x2af95e);
                }
                return _0x416cf0;
            }
            ,
            _0x2ba0a2[_0x324b8e(0x9c7)] = function (_0x4934b3, _0x5b2dd1, _0x3eb628) {
                const _0x20bf6b = _0x324b8e;
                var _0xd75471 = _0x2ba0a2[_0x20bf6b(0x2fd)](_0x4934b3, _0x5b2dd1, _0x3eb628);
                if (_0x1f29ae(_0xd75471)) {
                    var _0x4eb9bf = parseFloat(_0xd75471['textContent']);
                    return isNaN(_0x4eb9bf) ? void 0x0 : _0x4eb9bf;
                }
            }
            ,
            _0x2ba0a2[_0x324b8e(0x1cf)] = function (_0x19a913, _0x5cccbc, _0x104798) {
                const _0x1fade2 = _0x324b8e;
                var _0x16e3ba = _0x2ba0a2[_0x1fade2(0x2fd)](_0x19a913, _0x5cccbc, _0x104798);
                if (_0x1f29ae(_0x16e3ba))
                    return _0x16e3ba[_0x1fade2(0x133)][_0x1fade2(0xac7)]();
            }
            ,
            _0x2ba0a2['queryBooleanValue'] = function (_0x353917, _0x5f191f, _0x177630) {
                const _0x35cf24 = _0x324b8e;
                var _0x269af1 = _0x2ba0a2[_0x35cf24(0x2fd)](_0x353917, _0x5f191f, _0x177630);
                if (_0x1f29ae(_0x269af1)) {
                    var _0x4879f7 = _0x269af1[_0x35cf24(0x133)]['trim']();
                    return '1' === _0x4879f7 || /^true$/i[_0x35cf24(0x6ae)](_0x4879f7);
                }
            }
            ;
        const _0x411c42 = Adapter[_0x324b8e(0xa4a)]
            , _0x54d001 = Adapter[_0x324b8e(0xab7)]
            , _0x2cd3cf = Adapter[_0x324b8e(0x85d)]
            , _0x3ade60 = Adapter[_0x324b8e(0x747)]
            , _0x5674fd = Adapter['Color']
            , _0x182bf = Adapter['ComponentDatatype']
            , _0x5ef600 = Adapter[_0x324b8e(0x14b)]
            , _0x1eb12f = Adapter[_0x324b8e(0x225)]
            , _0x4cebe0 = Adapter['destroyObject']
            , _0x5309c9 = Adapter[_0x324b8e(0x335)]
            , _0x4ebf06 = Adapter[_0x324b8e(0x98e)]
            , _0x157682 = Adapter['Math']
            , _0x432f04 = Adapter[_0x324b8e(0x5ab)]
            , _0x4a9fd7 = Adapter[_0x324b8e(0x635)]
            , _0x4faa5b = Adapter[_0x324b8e(0x636)]
            , _0x4a0139 = Adapter['appendForwardSlash']
            , _0x3af2ee = Adapter[_0x324b8e(0x57c)]
            , _0x416332 = Adapter[_0x324b8e(0xa4d)]
            , _0x534a8c = Adapter['Cartographic']
            , _0x147cef = Adapter['Pass']
            , _0x8684ae = Adapter[_0x324b8e(0x59d)]
            , _0x5b5b1a = Adapter[_0x324b8e(0x3c3)]
            , _0x5ce80a = Adapter[_0x324b8e(0x39a)]
            , _0x2cb7df = Adapter[_0x324b8e(0x4ca)]
            , _0x5e899d = Adapter['Texture']
            , _0x77f3fe = Adapter[_0x324b8e(0x5a0)]
            , _0x44c759 = Adapter[_0x324b8e(0x403)]
            , _0x278da5 = Adapter[_0x324b8e(0x966)]
            , _0x4614a6 = Adapter[_0x324b8e(0x586)]
            , _0x3cfc14 = Adapter[_0x324b8e(0x6b8)]
            , _0x355b21 = Adapter[_0x324b8e(0x628)]
            , _0x1eaa35 = Adapter[_0x324b8e(0xa10)]
            , _0x21cf54 = Adapter[_0x324b8e(0x83d)]
            , _0x2a4fab = Adapter[_0x324b8e(0x9c9)];
        function _0x521203(_0x3477f9) {
            const _0x11788f = _0x324b8e;
            if (!_0x5ef600(_0x3477f9))
                throw new _0x5309c9(_0x11788f(0x476));
            if (!_0x3477f9[_0x11788f(0x56c)][_0x11788f(0x8b1)])
                throw new _0x5309c9(_0x11788f(0x671));
            this[_0x11788f(0x80b)] = _0x3477f9,
                this[_0x11788f(0x5de)] = void 0x0,
                this[_0x11788f(0x8b3)] = void 0x0,
                this[_0x11788f(0x4e9)] = void 0x0,
                this[_0x11788f(0x83e)] = void 0x0,
                this[_0x11788f(0xc5)] = new _0x411c42(),
                this[_0x11788f(0x9fa)] = [0x0, 0x0, 0x0],
                this[_0x11788f(0xa5e)] = 0x0,
                this[_0x11788f(0x5fb)] = 0x0,
                this[_0x11788f(0x4b4)] = 0x0,
                this[_0x11788f(0xa5a)] = 0x5a,
                this[_0x11788f(0x721)] = 0x3c,
                this[_0x11788f(0x2ef)] = 0xc8,
                this[_0x11788f(0x25b)] = new _0x5674fd(0x1, 0x1, 0x1, 0x1),
                this['_hintLineVisible'] = !0x0,
                this[_0x11788f(0xa12)] = void 0x0,
                this[_0x11788f(0x7cc)] = 0x14,
                this[_0x11788f(0x454)] = new _0x432f04(),
                this[_0x11788f(0xabc)] = new _0x432f04(),
                this['_renderTextureMatrix'] = new _0x432f04(),
                this[_0x11788f(0x2e7)] = !0x0,
                this[_0x11788f(0x942)] = void 0x0,
                this['_brightness'] = 0x1,
                this['_contrast'] = 0x1,
                this[_0x11788f(0x4b5)] = 0x0,
                this[_0x11788f(0x19f)] = 0x1,
                this[_0x11788f(0xaa0)] = 0x1,
                this[_0x11788f(0x6d6)] = 0x0,
                this[_0x11788f(0x7ae)] = new _0x2cd3cf(0x1, 0x0, 0x0),
                this['_v3AffineY'] = new _0x2cd3cf(0x0, 0x1, 0x0),
                this[_0x11788f(0x166)] = !0x0,
                this['_visibleDistanceMax'] = 0x1f4,
                this['isBuild'] = !0x1;
        }
        function _0x5bd345(_0x4b898b) {
            const _0x2be4c5 = _0x324b8e;
            _0x5ef600(_0x4b898b[_0x2be4c5(0x4e9)]) && (_0x4b898b[_0x2be4c5(0x4e9)][_0x2be4c5(0x99e)] = _0x4b898b[_0x2be4c5(0x4e9)][_0x2be4c5(0x99e)] && _0x4b898b['_stencilCommand'][_0x2be4c5(0x99e)][_0x2be4c5(0x4dd)](),
                _0x4b898b[_0x2be4c5(0x4e9)]['shaderProgram'] = _0x4b898b['_stencilCommand'][_0x2be4c5(0x67b)] && _0x4b898b[_0x2be4c5(0x4e9)]['shaderProgram']['destroy'](),
                _0x4b898b[_0x2be4c5(0x4e9)] = void 0x0),
                _0x5ef600(_0x4b898b[_0x2be4c5(0x83e)]) && (_0x4b898b[_0x2be4c5(0x83e)][_0x2be4c5(0x99e)] = _0x4b898b[_0x2be4c5(0x83e)]['vertexArray'] && _0x4b898b[_0x2be4c5(0x83e)][_0x2be4c5(0x99e)][_0x2be4c5(0x4dd)](),
                    _0x4b898b[_0x2be4c5(0x83e)][_0x2be4c5(0x67b)] = _0x4b898b['_colorCommand']['shaderProgram'] && _0x4b898b[_0x2be4c5(0x83e)]['shaderProgram']['destroy'](),
                    _0x4b898b[_0x2be4c5(0x83e)] = void 0x0),
                _0x5ef600(_0x4b898b[_0x2be4c5(0x8b3)]) && (_0x4b898b[_0x2be4c5(0x8b3)][_0x2be4c5(0x99e)] = _0x4b898b['_lineCommand']['vertexArray'] && _0x4b898b[_0x2be4c5(0x8b3)][_0x2be4c5(0x99e)][_0x2be4c5(0x4dd)](),
                    _0x4b898b['_lineCommand'][_0x2be4c5(0x67b)] = _0x4b898b[_0x2be4c5(0x8b3)][_0x2be4c5(0x67b)] && _0x4b898b[_0x2be4c5(0x8b3)]['shaderProgram'][_0x2be4c5(0x4dd)](),
                    _0x4b898b[_0x2be4c5(0x8b3)] = void 0x0);
        }
        function _0x403426(_0x37b249, _0x5cec0a, _0x45f27a) {
            const _0x372204 = _0x324b8e;
            if (_0x2cd3cf[_0x372204(0xaa5)](_0x37b249[_0x372204(0x6ee)], _0x5cec0a[_0x372204(0x6f1)]) > _0x45f27a)
                return !0x0;
            return _0x37b249[_0x372204(0x791)][_0x372204(0xa8f)](_0x37b249[_0x372204(0x6ee)], _0x37b249['directionWC'], _0x37b249['upWC'])[_0x372204(0x2e9)](_0x5cec0a) === _0x416332[_0x372204(0xa6f)];
        }
        function _0x1584ad(_0x34052f) {
            const _0x58d5a5 = _0x324b8e
                , _0x3e5033 = _0x2ba0a2[_0x58d5a5(0x1cf)](_0x34052f, _0x58d5a5(0x90e))
                , _0x462448 = _0x2ba0a2[_0x58d5a5(0x2fd)](_0x34052f, _0x58d5a5(0x5ac))
                , _0x113c6d = _0x2ba0a2[_0x58d5a5(0x9c7)](_0x462448, _0x58d5a5(0x570))
                , _0x2fac6f = _0x2ba0a2[_0x58d5a5(0x9c7)](_0x462448, _0x58d5a5(0x945))
                , _0x26a04c = _0x2ba0a2[_0x58d5a5(0x9c7)](_0x34052f, _0x58d5a5(0x5c7))
                , _0x3deada = _0x2ba0a2[_0x58d5a5(0x9c7)](_0x34052f, _0x58d5a5(0x7fd))
                , _0x4d53b0 = _0x2ba0a2[_0x58d5a5(0x9c7)](_0x34052f, _0x58d5a5(0x1ae))
                , _0xa8bb20 = _0x2ba0a2[_0x58d5a5(0x9c7)](_0x34052f, 'Roll')
                , _0x2d8a78 = _0x2ba0a2[_0x58d5a5(0x2fd)](_0x34052f, _0x58d5a5(0x1c9))
                , _0x3466d1 = [0x0, 0x0, 0x0];
            _0x3466d1[0x0] = _0x2ba0a2['queryNumericValue'](_0x2d8a78, 'X'),
                _0x3466d1[0x1] = _0x2ba0a2[_0x58d5a5(0x9c7)](_0x2d8a78, 'Y'),
                _0x3466d1[0x2] = _0x2ba0a2['queryNumericValue'](_0x2d8a78, 'Z');
            const _0x1b52e5 = _0x2ba0a2[_0x58d5a5(0x2fd)](_0x34052f, _0x58d5a5(0x1cd))
                , _0x292719 = _0x2ba0a2[_0x58d5a5(0x1cf)](_0x1b52e5, 'U')
                , _0x5b474a = _0x2ba0a2[_0x58d5a5(0x1cf)](_0x1b52e5, 'V');
            _0x2ba0a2[_0x58d5a5(0x1cf)](_0x1b52e5, 'W');
            const _0x5a1fd0 = _0x292719[_0x58d5a5(0x89c)](',')
                , _0x306c03 = new _0x2cd3cf(parseFloat(_0x5a1fd0[0x0]), parseFloat(_0x5a1fd0[0x1]), parseFloat(_0x5a1fd0[0x2]))
                , _0x1a390d = _0x5b474a[_0x58d5a5(0x89c)](',')
                , _0x374426 = new _0x2cd3cf(parseFloat(_0x1a390d[0x0]), parseFloat(_0x1a390d[0x1]), parseFloat(_0x1a390d[0x2]))
                , _0x1de558 = _0x2ba0a2[_0x58d5a5(0x2fd)](_0x34052f, 'Bounds');
            let _0x5df882;
            if (_0x1de558) {
                const _0x20d760 = _0x157682[_0x58d5a5(0x4cc)](_0x2ba0a2['queryNumericValue'](_0x1de558, _0x58d5a5(0x742)))
                    , _0x1f4937 = _0x157682[_0x58d5a5(0x4cc)](_0x2ba0a2[_0x58d5a5(0x9c7)](_0x1de558, _0x58d5a5(0x978)))
                    , _0x116e6a = _0x157682[_0x58d5a5(0x4cc)](_0x2ba0a2[_0x58d5a5(0x9c7)](_0x1de558, _0x58d5a5(0xd0)))
                    , _0x461bf7 = _0x157682[_0x58d5a5(0x4cc)](_0x2ba0a2['queryNumericValue'](_0x1de558, _0x58d5a5(0x5ed)))
                    , _0x3a386c = new _0x3af2ee(_0x20d760, _0x461bf7, _0x116e6a, _0x1f4937);
                let _0x4778a1 = _0x26a04c * Math[_0x58d5a5(0x994)](_0x157682['toRadians'](_0x4d53b0));
                _0x4778a1 = _0x4d53b0 < 0x0 ? -_0x4778a1 : _0x4778a1;
                const _0x429266 = _0x3466d1[0x2] + _0x4778a1;
                _0x5df882 = _0x411c42[_0x58d5a5(0x8c0)](_0x3a386c, void 0x0, _0x429266);
            }
            return {
                'videoName': _0x3e5033,
                'viewPosition': _0x3466d1,
                'heading': _0x3deada,
                'pitch': _0x4d53b0,
                'roll': _0xa8bb20,
                'horizontalFov': _0x113c6d,
                'verticalFov': _0x2fac6f,
                'matrixU': _0x306c03,
                'matrixV': _0x374426,
                'distance': _0x26a04c,
                'boundingSphere': _0x5df882
            };
        }
        function _0x387290(_0x503959, _0x3dcbb8) {
            const _0x2696d1 = _0x324b8e;
            let _0x2f98f9 = document['getElementById'](_0x2696d1(0x577));
            _0x5ef600(_0x2f98f9) || (_0x2f98f9 = document['createElement']('div'),
                _0x2f98f9[_0x2696d1(0x8c2)]('id', _0x2696d1(0x577)),
                document['body']['appendChild'](_0x2f98f9));
            const _0x214227 = document[_0x2696d1(0x1ac)](_0x2696d1(0x349));
            return _0x214227[_0x2696d1(0x5df)] = _0x2696d1(0x56b),
                _0x214227[_0x2696d1(0x8c2)]('width', '320'),
                _0x214227[_0x2696d1(0x8c2)](_0x2696d1(0x88d), _0x2696d1(0x6a5)),
                _0x214227[_0x2696d1(0x8c2)](_0x2696d1(0x771), _0x2696d1(0x771)),
                _0x214227[_0x2696d1(0x8c2)](_0x2696d1(0x674), 'loop'),
                _0x214227[_0x2696d1(0x8c2)](_0x2696d1(0x37e), 'crossorigin'),
                _0x214227[_0x2696d1(0x8c2)](_0x2696d1(0x1e8), _0x503959),
                _0x214227[_0x2696d1(0x8c2)]('id', _0x2696d1(0x2c1) + _0x3dcbb8),
                _0x2f98f9[_0x2696d1(0x8b7)](_0x214227),
                _0x214227;
        }
        Object[_0x324b8e(0xa38)](_0x521203[_0x324b8e(0x74f)], {
            'viewPosition': {
                'get': function () {
                    return this['_viewPosition'];
                },
                'set': function (_0x3b9963) {
                    const _0x4f607a = _0x324b8e;
                    this[_0x4f607a(0x9fa)] = _0x3b9963,
                        this[_0x4f607a(0x2e7)] = !0x0;
                }
            },
            'direction': {
                'get': function () {
                    const _0x1631a4 = _0x324b8e;
                    return this[_0x1631a4(0xa5e)];
                },
                'set': function (_0x3917dc) {
                    const _0x288d84 = _0x324b8e;
                    this[_0x288d84(0xa5e)] = _0x3917dc,
                        this[_0x288d84(0x2e7)] = !0x0;
                }
            },
            'pitch': {
                'get': function () {
                    const _0x58c463 = _0x324b8e;
                    return this[_0x58c463(0x5fb)];
                },
                'set': function (_0x1672af) {
                    const _0x337e08 = _0x324b8e;
                    this[_0x337e08(0x5fb)] = _0x1672af,
                        this[_0x337e08(0x2e7)] = !0x0;
                }
            },
            'roll': {
                'get': function () {
                    const _0x4a2bf1 = _0x324b8e;
                    return this[_0x4a2bf1(0x4b4)];
                },
                'set': function (_0x40b721) {
                    const _0x5e7b91 = _0x324b8e;
                    this[_0x5e7b91(0x4b4)] = _0x40b721,
                        this[_0x5e7b91(0x2e7)] = !0x0;
                }
            },
            'horizontalFov': {
                'get': function () {
                    const _0x446df1 = _0x324b8e;
                    return this[_0x446df1(0xa5a)];
                },
                'set': function (_0x38392a) {
                    this['_horizontalFov'] = _0x38392a,
                        this['_update'] = !0x0;
                }
            },
            'verticalFov': {
                'get': function () {
                    return this['_verticalFov'];
                },
                'set': function (_0x2a2bc6) {
                    const _0x2e4bbc = _0x324b8e;
                    this[_0x2e4bbc(0x721)] = _0x2a2bc6,
                        this[_0x2e4bbc(0x2e7)] = !0x0;
                }
            },
            'distance': {
                'get': function () {
                    const _0x4fa900 = _0x324b8e;
                    return this[_0x4fa900(0x2ef)];
                },
                'set': function (_0x3eb0e2) {
                    const _0x5423a1 = _0x324b8e;
                    if (_0x3eb0e2 <= 0x0)
                        throw new _0x5309c9(_0x5423a1(0x269));
                    this['_distance'] = _0x3eb0e2,
                        this[_0x5423a1(0x2e7)] = !0x0;
                }
            },
            'featheringScale': {
                'get': function () {
                    return this['_featheringScale'];
                },
                'set': function (_0x96fd1) {
                    const _0x1a64c7 = _0x324b8e;
                    if (_0x96fd1 < 0x0 || _0x96fd1 > 0x1)
                        throw new _0x5309c9(_0x1a64c7(0x907));
                    this[_0x1a64c7(0x6d6)] = _0x96fd1;
                }
            },
            'hintLineColor': {
                'get': function () {
                    return this['_hintLineColor'];
                },
                'set': function (_0x3e6517) {
                    const _0x4f255e = _0x324b8e;
                    _0x5ef600(_0x3e6517) && (this['_hintLineColor'] = _0x5674fd[_0x4f255e(0x157)](_0x3e6517, this[_0x4f255e(0x25b)]));
                }
            },
            'hintLineVisible': {
                'get': function () {
                    return this['_hintLineVisible'];
                },
                'set': function (_0x571d90) {
                    const _0x38b59c = _0x324b8e;
                    this[_0x38b59c(0x4a3)] = _0x571d90;
                }
            },
            'brightness': {
                'get': function () {
                    const _0x42241f = _0x324b8e;
                    return this[_0x42241f(0x5d1)];
                },
                'set': function (_0x49feef) {
                    const _0x22912d = _0x324b8e;
                    _0x4faa5b[_0x22912d(0x8d8)][_0x22912d(0x305)]['greaterThanOrEquals'](_0x22912d(0x1d3), _0x49feef, 0x0),
                        this['_brightness'] = _0x49feef;
                }
            },
            'contrast': {
                'get': function () {
                    return this['_contrast'];
                },
                'set': function (_0x1950bf) {
                    const _0x781ab4 = _0x324b8e;
                    _0x4faa5b['typeOf']['number'][_0x781ab4(0x4c0)](_0x781ab4(0x102), _0x1950bf, 0x0),
                        this['_contrast'] = _0x1950bf;
                }
            },
            'hue': {
                'get': function () {
                    const _0x214d17 = _0x324b8e;
                    return this[_0x214d17(0x4b5)];
                },
                'set': function (_0x53cabe) {
                    const _0x150a4a = _0x324b8e;
                    _0x4faa5b[_0x150a4a(0x8d8)][_0x150a4a(0x305)][_0x150a4a(0x4c0)](_0x150a4a(0x950), _0x53cabe, 0x0),
                        this[_0x150a4a(0x4b5)] = _0x53cabe;
                }
            },
            'saturation': {
                'get': function () {
                    const _0x20d469 = _0x324b8e;
                    return this[_0x20d469(0x19f)];
                },
                'set': function (_0x4e1543) {
                    const _0x4a61ec = _0x324b8e;
                    _0x4faa5b['typeOf'][_0x4a61ec(0x305)]['greaterThanOrEquals'](_0x4a61ec(0x4d9), _0x4e1543, 0x0),
                        this[_0x4a61ec(0x19f)] = _0x4e1543;
                }
            },
            'gamma': {
                'get': function () {
                    const _0xe0806 = _0x324b8e;
                    return this[_0xe0806(0xaa0)];
                },
                'set': function (_0x1931a2) {
                    const _0x8edd60 = _0x324b8e;
                    _0x4faa5b['typeOf'][_0x8edd60(0x305)][_0x8edd60(0x831)](_0x8edd60(0x5b4), _0x1931a2, 0x0),
                        this[_0x8edd60(0xaa0)] = _0x1931a2;
                }
            },
            'visible': {
                'get': function () {
                    const _0x3c3156 = _0x324b8e;
                    return this[_0x3c3156(0x166)];
                },
                'set': function (_0x4d43a0) {
                    const _0xeded58 = _0x324b8e;
                    _0x4faa5b[_0xeded58(0x8d8)][_0xeded58(0x136)]('ProjectionImage.visible', _0x4d43a0),
                        this[_0xeded58(0x166)] = _0x4d43a0;
                }
            },
            'visibleDistanceMax': {
                'get': function () {
                    const _0x393e2b = _0x324b8e;
                    return this[_0x393e2b(0x28f)];
                },
                'set': function (_0x595256) {
                    const _0x2de5fb = _0x324b8e;
                    _0x4faa5b[_0x2de5fb(0x8d8)][_0x2de5fb(0x305)]('ProjectionImage.visibleDistance', _0x595256),
                        this[_0x2de5fb(0x28f)] = _0x595256;
                }
            }
        }),
            _0x521203['prototype'][_0x324b8e(0x4bc)] = function (_0x41de9e) {
                const _0x110668 = _0x324b8e
                    , _0x5de66a = _0x41de9e[_0x110668(0x56c)]
                    , _0x6dbfdc = _0x41de9e['commandList']
                    , _0x5ed1cf = _0x41de9e[_0x110668(0xd8)];
                _0x41de9e[_0x110668(0x423)] || !this[_0x110668(0x166)] || _0x5ed1cf[_0x110668(0xa21)] || _0x5ef600(this[_0x110668(0xa73)]) && _0x403426(_0x5ed1cf, this['_boundingSphereFromXML'], this[_0x110668(0x28f)]) || 0x0 !== this['_boundingSphere']['radius'] && !this['_update'] && _0x403426(_0x5ed1cf, this[_0x110668(0xc5)], this[_0x110668(0x28f)]) || (_0x432f04[_0x110668(0x3ee)](this[_0x110668(0xabc)], _0x5ed1cf[_0x110668(0x234)], this['_renderTextureMatrix']),
                    _0x5ef600(this[_0x110668(0x942)]) && this['_video'][_0x110668(0x911)] >= 0x2 && (_0x5ef600(this[_0x110668(0xa12)]) ? this[_0x110668(0xa12)][_0x110668(0x6a9)](this['_video']) : this[_0x110668(0xa12)] = new _0x5e899d({
                        'context': _0x5de66a,
                        'source': this[_0x110668(0x942)]
                    })),
                    _0x5ef600(this[_0x110668(0xa12)]) && (this[_0x110668(0x80b)],
                        this[_0x110668(0x2e7)] && (_0x5ef600(this[_0x110668(0x5de)]) || (this['_cameraDepthBuffer'] = new _0x42e1f3(_0x5de66a)),
                            this[_0x110668(0x2e7)] = !0x1,
                            _0x5bd345(this),
                            function (_0x358142, _0x21e111, _0x510308) {
                                const _0x319066 = _0x110668
                                    , _0x50eb15 = _0x358142['_horizontalFov'] * _0x157682['RADIANS_PER_DEGREE']
                                    , _0xd3d572 = _0x358142[_0x319066(0x721)] * _0x157682['RADIANS_PER_DEGREE']
                                    , _0x320a21 = Math['tan'](0.5 * _0x50eb15) / Math[_0x319066(0x33a)](0.5 * _0xd3d572);
                                _0x358142['_distance'];
                                const _0x3b7164 = Math[_0x319066(0x212)](_0x358142[_0x319066(0x2ef)], 0xa)
                                    , _0x19242b = _0x358142[_0x319066(0xa5e)] * _0x157682[_0x319066(0x7ce)]
                                    , _0x54da24 = _0x358142[_0x319066(0x5fb)] * _0x157682[_0x319066(0x7ce)]
                                    , _0xecac65 = _0x358142[_0x319066(0x4b4)] * _0x157682['RADIANS_PER_DEGREE']
                                    , _0x483c2f = _0x2cd3cf[_0x319066(0x6c0)](_0x358142[_0x319066(0x9fa)])[0x0]
                                    , _0xa7c624 = _0x510308[_0x319066(0xd8)]
                                    , _0xddcef3 = _0xa7c624[_0x319066(0x791)][_0x319066(0x54c)]
                                    , _0x180251 = _0xa7c624[_0x319066(0x791)][_0x319066(0x5b8)]
                                    , _0x44848d = _0xa7c624['frustum'][_0x319066(0x797)]
                                    , _0x35ccbb = _0xa7c624[_0x319066(0x791)]['far']
                                    , _0x560d10 = new _0x2cd3cf()
                                    , _0x1d713c = _0xa7c624[_0x319066(0x97a)]
                                    , _0x32aab8 = _0xa7c624[_0x319066(0x622)]
                                    , _0x158d4f = _0xa7c624[_0x319066(0x42e)];
                                _0x2cd3cf[_0x319066(0x157)](_0xa7c624['position'], _0x560d10),
                                    _0x358142['_cameraDepthBuffer'][_0x319066(0x2ff)] = !0x0;
                                const _0x55a053 = _0x510308[_0x319066(0x457)];
                                _0x358142[_0x319066(0x5de)][_0x319066(0xcb)] = function () {
                                    const _0x5ccbe3 = _0x319066;
                                    _0x510308[_0x5ccbe3(0x457)] = !0x1,
                                        _0x2cd3cf[_0x5ccbe3(0x157)](_0xa7c624[_0x5ccbe3(0x15e)], _0x560d10),
                                        _0xa7c624['frustum']['aspectRatio'] = _0x320a21,
                                        _0xa7c624[_0x5ccbe3(0x791)]['fov'] = _0x320a21 >= 0x1 ? _0x50eb15 : _0xd3d572,
                                        _0xa7c624[_0x5ccbe3(0x791)][_0x5ccbe3(0x797)] = 0x1,
                                        _0xa7c624[_0x5ccbe3(0x791)][_0x5ccbe3(0x44a)] = _0x3b7164,
                                        _0x55a053 && (_0xa7c624[_0x5ccbe3(0x791)][_0x5ccbe3(0x797)] = 0.1,
                                            _0xa7c624['frustum']['far'] = 0x5f5e100),
                                        _0xa7c624[_0x5ccbe3(0x10c)]({
                                            'destination': _0x483c2f,
                                            'orientation': {
                                                'heading': _0x19242b,
                                                'pitch': _0x54da24,
                                                'roll': _0xecac65
                                            }
                                        }),
                                        _0x432f04[_0x5ccbe3(0x3ee)](_0xa7c624[_0x5ccbe3(0x791)][_0x5ccbe3(0x2a6)], _0xa7c624['viewMatrix'], _0x358142['_viewProjMatrix']),
                                        _0x432f04[_0x5ccbe3(0x157)](_0xa7c624['inverseViewMatrix'], _0x358142[_0x5ccbe3(0x454)]),
                                        _0x2cd3cf[_0x5ccbe3(0x157)](_0x2cd3cf[_0x5ccbe3(0x889)], _0x358142[_0x5ccbe3(0xc5)][_0x5ccbe3(0x6f1)]),
                                        _0x358142[_0x5ccbe3(0xc5)][_0x5ccbe3(0x1cc)] = _0x358142['_distance'],
                                        _0x411c42[_0x5ccbe3(0x4f7)](_0x358142['_boundingSphere'], _0x358142[_0x5ccbe3(0x454)], _0x358142[_0x5ccbe3(0xc5)]);
                                }
                                    ,
                                    _0x358142['_cameraDepthBuffer'][_0x319066(0xa89)] = function () {
                                        const _0x36ed11 = _0x319066;
                                        _0xa7c624[_0x36ed11(0x10c)]({
                                            'destination': _0x560d10,
                                            'orientation': {
                                                'heading': _0x1d713c,
                                                'pitch': _0x32aab8,
                                                'roll': _0x158d4f
                                            },
                                            'convert': !0x1
                                        }),
                                            _0xa7c624[_0x36ed11(0x791)][_0x36ed11(0x54c)] = _0xddcef3,
                                            _0xa7c624['frustum'][_0x36ed11(0x5b8)] = _0x180251,
                                            _0xa7c624[_0x36ed11(0x791)][_0x36ed11(0x797)] = _0x44848d,
                                            _0xa7c624[_0x36ed11(0x791)][_0x36ed11(0x44a)] = _0x35ccbb,
                                            _0x510308['useLogDepth'] = _0x55a053,
                                            _0x358142[_0x36ed11(0x5de)][_0x36ed11(0x2ff)] = !0x1;
                                    }
                                    ;
                            }(this, 0x0, _0x41de9e),
                            function (_0x40e86c, _0x157a66, _0x18a73f) {
                                const _0x117422 = _0x110668
                                    , _0x2ef569 = (_0x40e86c[_0x117422(0x7cc)] + 0x1) * (_0x40e86c[_0x117422(0x7cc)] + 0x1) + 0x1
                                    , _0x1ed85f = _0x182bf[_0x117422(0x123)](_0x182bf[_0x117422(0x2d5)], 0x3 * _0x2ef569);
                                let _0x2055f1 = 0x3;
                                const _0x34b83b = _0x40e86c[_0x117422(0xa5a)] * _0x157682[_0x117422(0x7ce)]
                                    , _0x1bc446 = _0x40e86c[_0x117422(0x721)] * _0x157682['RADIANS_PER_DEGREE']
                                    , _0x1b720c = (Math[_0x117422(0x33a)](0.5 * _0x34b83b),
                                        Math['tan'](0.5 * _0x1bc446));
                                _0x40e86c[_0x117422(0x2ef)];
                                const _0x241f0b = _0x40e86c[_0x117422(0x2ef)] * _0x1b720c
                                    , _0x5dca55 = Math['PI'] - 0.5 * _0x34b83b;
                                let _0x226c21 = 0x0
                                    , _0x464b85 = 0x0
                                    , _0x94c828 = _0x34b83b / _0x40e86c[_0x117422(0x7cc)];
                                for (let _0xe39855 = 0x0; _0xe39855 < _0x40e86c[_0x117422(0x7cc)] + 0x1; _0xe39855++) {
                                    _0x226c21 = _0x5dca55 + _0xe39855 * _0x94c828;
                                    const _0x533e99 = _0x241f0b / (_0x40e86c[_0x117422(0x2ef)] / Math['cos'](_0x226c21))
                                        , _0x12a108 = Math[_0x117422(0x58c)](_0x533e99)
                                        , _0x16b8f1 = -_0x12a108
                                        , _0x206399 = 0x2 * _0x12a108 / _0x40e86c['_segmentCount'];
                                    for (let _0x5b4e9e = 0x0; _0x5b4e9e < _0x40e86c[_0x117422(0x7cc)] + 0x1; _0x5b4e9e++)
                                        _0x464b85 = _0x16b8f1 + _0x5b4e9e * _0x206399,
                                            _0x1ed85f[_0x2055f1++] = _0x40e86c[_0x117422(0x2ef)] * Math[_0x117422(0x994)](_0x464b85) * Math[_0x117422(0x1ee)](_0x226c21),
                                            _0x1ed85f[_0x2055f1++] = _0x40e86c[_0x117422(0x2ef)] * Math[_0x117422(0x1ee)](_0x464b85),
                                            _0x1ed85f[_0x2055f1++] = _0x40e86c[_0x117422(0x2ef)] * Math['cos'](_0x464b85) * Math['cos'](_0x226c21);
                                }
                                const _0x5ad3d8 = 0x2 * (0x4 + 0x5 * _0x40e86c[_0x117422(0x7cc)] + 0x2 * _0x40e86c[_0x117422(0x7cc)] * 0x3)
                                    , _0x1edf87 = _0x40e86c['_segmentCount'] * _0x40e86c[_0x117422(0x7cc)] * 0x3 * 0x2 + 0x3 * _0x40e86c[_0x117422(0x7cc)] * 0x4
                                    , _0x526140 = _0x182bf[_0x117422(0x123)](_0x182bf['UNSIGNED_SHORT'], _0x5ad3d8)
                                    , _0x42cc2f = _0x182bf[_0x117422(0x123)](_0x182bf[_0x117422(0x138)], _0x1edf87);
                                let _0x4a1511 = 0x0;
                                for (let _0x275021 = 0x0; _0x275021 < _0x40e86c[_0x117422(0x7cc)]; _0x275021++)
                                    for (let _0x4ccfe1 = 0x0; _0x4ccfe1 < _0x40e86c[_0x117422(0x7cc)]; _0x4ccfe1++)
                                        _0x42cc2f[_0x4a1511++] = 0x1 + _0x275021 + _0x4ccfe1 * (_0x40e86c[_0x117422(0x7cc)] + 0x1),
                                            _0x42cc2f[_0x4a1511++] = 0x1 + _0x275021 + 0x1 + _0x4ccfe1 * (_0x40e86c[_0x117422(0x7cc)] + 0x1),
                                            _0x42cc2f[_0x4a1511++] = 0x1 + _0x275021 + (_0x4ccfe1 + 0x1) * (_0x40e86c[_0x117422(0x7cc)] + 0x1),
                                            _0x42cc2f[_0x4a1511++] = 0x1 + _0x275021 + 0x1 + _0x4ccfe1 * (_0x40e86c[_0x117422(0x7cc)] + 0x1),
                                            _0x42cc2f[_0x4a1511++] = 0x1 + _0x275021 + 0x1 + (_0x4ccfe1 + 0x1) * (_0x40e86c[_0x117422(0x7cc)] + 0x1),
                                            _0x42cc2f[_0x4a1511++] = 0x1 + _0x275021 + (_0x4ccfe1 + 0x1) * (_0x40e86c[_0x117422(0x7cc)] + 0x1);
                                for (let _0x5e26d3 = 0x0; _0x5e26d3 < _0x40e86c[_0x117422(0x7cc)]; _0x5e26d3++)
                                    _0x42cc2f[_0x4a1511++] = _0x5e26d3 + 0x1 + 0x1,
                                        _0x42cc2f[_0x4a1511++] = _0x5e26d3 + 0x1,
                                        _0x42cc2f[_0x4a1511++] = 0x0,
                                        _0x42cc2f[_0x4a1511++] = 0x0,
                                        _0x42cc2f[_0x4a1511++] = _0x5e26d3 + _0x40e86c[_0x117422(0x7cc)] * (_0x40e86c[_0x117422(0x7cc)] + 0x1) + 0x1,
                                        _0x42cc2f[_0x4a1511++] = _0x5e26d3 + 0x1 + _0x40e86c[_0x117422(0x7cc)] * (_0x40e86c[_0x117422(0x7cc)] + 0x1) + 0x1;
                                for (let _0x46f049 = 0x0; _0x46f049 < _0x40e86c[_0x117422(0x7cc)]; _0x46f049++)
                                    _0x42cc2f[_0x4a1511++] = 0x0,
                                        _0x42cc2f[_0x4a1511++] = _0x46f049 * (_0x40e86c['_segmentCount'] + 0x1) + 0x1,
                                        _0x42cc2f[_0x4a1511++] = (_0x46f049 + 0x1) * (_0x40e86c[_0x117422(0x7cc)] + 0x1) + 0x1,
                                        _0x42cc2f[_0x4a1511++] = _0x40e86c['_segmentCount'] + (_0x46f049 + 0x1) * (_0x40e86c[_0x117422(0x7cc)] + 0x1) + 0x1,
                                        _0x42cc2f[_0x4a1511++] = _0x40e86c[_0x117422(0x7cc)] + _0x46f049 * (_0x40e86c[_0x117422(0x7cc)] + 0x1) + 0x1,
                                        _0x42cc2f[_0x4a1511++] = 0x0;
                                _0x4a1511 = 0x0,
                                    _0x526140[_0x4a1511++] = 0x0,
                                    _0x526140[_0x4a1511++] = 0x1,
                                    _0x526140[_0x4a1511++] = 0x0,
                                    _0x526140[_0x4a1511++] = _0x40e86c[_0x117422(0x7cc)] + 0x1,
                                    _0x526140[_0x4a1511++] = 0x0,
                                    _0x526140[_0x4a1511++] = _0x40e86c['_segmentCount'] * (_0x40e86c[_0x117422(0x7cc)] + 0x1) + 0x1,
                                    _0x526140[_0x4a1511++] = 0x0,
                                    _0x526140[_0x4a1511++] = (_0x40e86c['_segmentCount'] + 0x1) * (_0x40e86c['_segmentCount'] + 0x1);
                                for (let _0x1ddaa7 = 0x0; _0x1ddaa7 < 0x5; _0x1ddaa7++)
                                    for (let _0x1e0a51 = 0x0; _0x1e0a51 < _0x40e86c['_segmentCount']; _0x1e0a51++)
                                        _0x526140[_0x4a1511++] = 0x1 + _0x1e0a51 + 0x5 * (_0x40e86c[_0x117422(0x7cc)] + 0x1) * _0x1ddaa7,
                                            _0x526140[_0x4a1511++] = 0x1 + (_0x1e0a51 + 0x1) + 0x5 * (_0x40e86c[_0x117422(0x7cc)] + 0x1) * _0x1ddaa7;
                                for (let _0x1f7e9b = 0x0; _0x1f7e9b < 0x5; _0x1f7e9b++)
                                    for (let _0x8cf449 = 0x0; _0x8cf449 < _0x40e86c['_segmentCount']; _0x8cf449++)
                                        _0x526140[_0x4a1511++] = 0x1 + (_0x40e86c['_segmentCount'] + 0x1) * _0x8cf449 + 0x5 * _0x1f7e9b,
                                            _0x526140[_0x4a1511++] = 0x1 + (_0x40e86c['_segmentCount'] + 0x1) * (_0x8cf449 + 0x1) + 0x5 * _0x1f7e9b;
                                const _0x3ee63a = _0x8684ae['createVertexBuffer']({
                                    'context': _0x157a66,
                                    'typedArray': _0x1ed85f,
                                    'usage': _0x5b5b1a[_0x117422(0x64e)]
                                })
                                    , _0x397f82 = []
                                    , _0x2758c4 = {
                                        'aPosition': 0x0
                                    };
                                _0x397f82[_0x117422(0x745)]({
                                    'index': _0x2758c4[_0x117422(0x833)],
                                    'vertexBuffer': _0x3ee63a,
                                    'componentsPerAttribute': 0x3,
                                    'componentDatatype': _0x182bf['FLOAT'],
                                    'offsetInBytes': 0x0,
                                    'strideInBytes': 0xc,
                                    'normalize': !0x1
                                });
                                const _0x5f550f = _0x8684ae['createIndexBuffer']({
                                    'context': _0x157a66,
                                    'typedArray': _0x526140,
                                    'usage': _0x5b5b1a[_0x117422(0x64e)],
                                    'indexDatatype': _0x4ebf06['UNSIGNED_SHORT']
                                })
                                    , _0x2d81a7 = _0x8684ae[_0x117422(0x45b)]({
                                        'context': _0x157a66,
                                        'typedArray': _0x42cc2f,
                                        'usage': _0x5b5b1a[_0x117422(0x64e)],
                                        'indexDatatype': _0x4ebf06['UNSIGNED_SHORT']
                                    });
                                _0x40e86c[_0x117422(0x8b3)] = new _0x5ce80a({
                                    'primitiveType': _0x4a9fd7[_0x117422(0x8f5)],
                                    'modelMatrix': _0x40e86c['_invertViewMatrix'],
                                    'boundingVolume': _0x40e86c[_0x117422(0xc5)],
                                    'pass': _0x147cef['OPAQUE'],
                                    'owner': _0x40e86c,
                                    'cull': !0x0
                                }),
                                    _0x40e86c['_lineCommand'][_0x117422(0x99e)] = new _0x44c759({
                                        'context': _0x157a66,
                                        'attributes': _0x397f82,
                                        'indexBuffer': _0x5f550f
                                    }),
                                    _0x40e86c[_0x117422(0x8b3)][_0x117422(0x67b)] = _0x77f3fe[_0x117422(0x6bf)]({
                                        'context': _0x157a66,
                                        'vertexShaderSource': _0x585ed7,
                                        'fragmentShaderSource': _0x2e9404,
                                        'attributeLocations': _0x2758c4
                                    }),
                                    _0x40e86c[_0x117422(0x8b3)]['renderState'] = _0x2cb7df['fromCache']({
                                        'cull': {
                                            'enabled': !0x1
                                        },
                                        'depthTest': {
                                            'enabled': !0x0
                                        }
                                    });
                                const _0x169865 = [];
                                for (let _0x34921d = 0x0; _0x34921d < 0x6; _0x34921d++)
                                    _0x169865[_0x34921d] = new _0x3ade60(0x0, 0x0, 0x0, 0x0);
                                _0x40e86c[_0x117422(0x8b3)][_0x117422(0x501)] = {
                                    'uDiffuseColor': function () {
                                        const _0x3fc595 = _0x117422;
                                        return _0x40e86c[_0x3fc595(0x25b)];
                                    },
                                    'clip_mode': function () {
                                        return 0x0;
                                    },
                                    'clip_planes': function () {
                                        return _0x169865;
                                    },
                                    'clip_line_color': function () {
                                        const _0x14d624 = _0x117422;
                                        return _0x3ade60[_0x14d624(0x33e)];
                                    }
                                },
                                    _0x40e86c[_0x117422(0x4e9)] = new _0x5ce80a({
                                        'primitiveType': _0x4a9fd7['TRIANGLES'],
                                        'modelMatrix': _0x40e86c[_0x117422(0x454)],
                                        'boundingVolume': _0x40e86c[_0x117422(0xc5)],
                                        'pass': _0x147cef[_0x117422(0x13e)],
                                        'owner': _0x40e86c,
                                        'cull': !0x0
                                    }),
                                    _0x40e86c['_stencilCommand'][_0x117422(0x99e)] = new _0x44c759({
                                        'context': _0x157a66,
                                        'attributes': _0x397f82,
                                        'indexBuffer': _0x2d81a7
                                    }),
                                    _0x40e86c[_0x117422(0x4e9)][_0x117422(0x67b)] = _0x77f3fe['fromCache']({
                                        'context': _0x157a66,
                                        'vertexShaderSource': _0x585ed7,
                                        'fragmentShaderSource': _0x2e9404,
                                        'attributeLocations': _0x2758c4
                                    });
                                let _0x2c18ab = {
                                    'enabled': !0x0,
                                    'frontFunction': _0x1eaa35[_0x117422(0x402)],
                                    'frontOperation': {
                                        'fail': _0x355b21[_0x117422(0xa65)],
                                        'zFail': _0x355b21[_0x117422(0xa65)],
                                        'zPass': _0x355b21[_0x117422(0x45e)]
                                    },
                                    'backFunction': _0x1eaa35[_0x117422(0x402)],
                                    'backOperation': {
                                        'fail': _0x355b21[_0x117422(0xa65)],
                                        'zFail': _0x355b21[_0x117422(0xa65)],
                                        'zPass': _0x355b21[_0x117422(0x504)]
                                    },
                                    'reference': 0x0,
                                    'mask': -0x1
                                };
                                _0x40e86c[_0x117422(0x4e9)][_0x117422(0x9c1)] = _0x2cb7df[_0x117422(0x6bf)]({
                                    'depthMask': !0x1,
                                    'colorMask': {
                                        'red': !0x1,
                                        'green': !0x1,
                                        'blue': !0x1,
                                        'alpha': !0x1
                                    },
                                    'depthTest': {
                                        'enabled': !0x0,
                                        'func': _0x21cf54[_0x117422(0x903)]
                                    },
                                    'stencilTest': _0x2c18ab,
                                    'stencilMask': 0x1
                                }),
                                    _0x40e86c['_stencilCommand']['uniformMap'] = {
                                        'uColor': function () {
                                            const _0x3654c5 = _0x117422;
                                            return _0x5674fd[_0x3654c5(0x7a1)];
                                        }
                                    },
                                    _0x40e86c[_0x117422(0x83e)] = new _0x5ce80a({
                                        'primitiveType': _0x4a9fd7[_0x117422(0x22e)],
                                        'modelMatrix': _0x40e86c[_0x117422(0x454)],
                                        'boundingVolume': _0x40e86c['_boundingSphere'],
                                        'pass': _0x147cef[_0x117422(0x13e)],
                                        'owner': _0x40e86c,
                                        'cull': !0x0
                                    }),
                                    _0x40e86c[_0x117422(0x83e)][_0x117422(0x99e)] = new _0x44c759({
                                        'context': _0x157a66,
                                        'attributes': _0x397f82,
                                        'indexBuffer': _0x2d81a7
                                    });
                                const _0x5d0a3b = new _0x278da5({
                                    'name': _0x117422(0x252),
                                    'sources': [_0x472182]
                                });
                                _0x40e86c[_0x117422(0x83e)]['shaderProgram'] = _0x77f3fe[_0x117422(0x6bf)]({
                                    'context': _0x157a66,
                                    'vertexShaderSource': _0x5d0a3b,
                                    'fragmentShaderSource': _0x2798df,
                                    'attributeLocations': _0x2758c4
                                }),
                                    _0x2c18ab = {
                                        'enabled': !0x0,
                                        'frontFunction': _0x1eaa35[_0x117422(0x8a0)],
                                        'frontOperation': {
                                            'fail': _0x355b21[_0x117422(0xa65)],
                                            'zFail': _0x355b21[_0x117422(0xa65)],
                                            'zPass': _0x355b21[_0x117422(0x504)]
                                        },
                                        'backFunction': _0x1eaa35[_0x117422(0x8a0)],
                                        'backOperation': {
                                            'fail': _0x355b21['KEEP'],
                                            'zFail': _0x355b21[_0x117422(0xa65)],
                                            'zPass': _0x355b21[_0x117422(0x504)]
                                        },
                                        'reference': 0x0,
                                        'mask': -0x1
                                    },
                                    _0x40e86c[_0x117422(0x83e)]['renderState'] = _0x2cb7df['fromCache']({
                                        'cull': {
                                            'enabled': !0x1
                                        },
                                        'depthTest': {
                                            'enabled': !0x1
                                        },
                                        'depthMask': !0x1,
                                        'stencilTest': _0x2c18ab,
                                        'blending': _0x4614a6[_0x117422(0x753)]
                                    }),
                                    _0x40e86c[_0x117422(0x83e)][_0x117422(0x501)] = {
                                        'uRenderTextureMatrix': function () {
                                            const _0x1e4638 = _0x117422;
                                            return _0x40e86c[_0x1e4638(0x38c)];
                                        },
                                        'uTexture1_size': function () {
                                            const _0x5ef857 = _0x117422
                                                , _0x9a9beb = _0x40e86c['_cameraDepthBuffer'][_0x5ef857(0x8b1)];
                                            return new _0x54d001(_0x9a9beb[_0x5ef857(0x8ce)], _0x9a9beb[_0x5ef857(0x88d)]);
                                        },
                                        'uTexture1': function () {
                                            const _0x2b0a8d = _0x117422;
                                            return _0x40e86c[_0x2b0a8d(0x5de)][_0x2b0a8d(0x8b1)];
                                        },
                                        'uDiffuseTexture': function () {
                                            const _0x4a7aed = _0x117422;
                                            return _0x40e86c[_0x4a7aed(0xa12)];
                                        },
                                        'uBrightness': function () {
                                            const _0x10fa0c = _0x117422;
                                            return _0x40e86c[_0x10fa0c(0x5d1)];
                                        },
                                        'uContrast': function () {
                                            const _0x142ad0 = _0x117422;
                                            return _0x40e86c[_0x142ad0(0xf3)];
                                        },
                                        'uHue': function () {
                                            const _0x4a3e6f = _0x117422;
                                            return _0x40e86c[_0x4a3e6f(0x4b5)];
                                        },
                                        'uSaturation': function () {
                                            const _0x598a66 = _0x117422;
                                            return _0x40e86c[_0x598a66(0x19f)];
                                        },
                                        'uOneOverGamma': function () {
                                            const _0x2390b0 = _0x117422;
                                            return 0x1 / _0x40e86c[_0x2390b0(0xaa0)];
                                        },
                                        'uFeatheringScale': function () {
                                            const _0x55fc49 = _0x117422;
                                            return _0x40e86c[_0x55fc49(0x6d6)];
                                        },
                                        'uV3AffineX': function () {
                                            const _0x4264fe = _0x117422;
                                            return _0x40e86c[_0x4264fe(0x7ae)];
                                        },
                                        'uV3AffineY': function () {
                                            const _0x5edba8 = _0x117422;
                                            return _0x40e86c[_0x5edba8(0x459)];
                                        }
                                    };
                            }(this, _0x5de66a)),
                        _0x5ef600(this['_cameraDepthBuffer']['depthTexture']) && (_0x5ef600(this[_0x110668(0x4e9)]) && _0x6dbfdc[_0x110668(0x745)](this[_0x110668(0x4e9)]),
                            _0x5ef600(this['_colorCommand']) && _0x6dbfdc[_0x110668(0x745)](this[_0x110668(0x83e)]),
                            _0x5ef600(this[_0x110668(0x8b3)]) && this[_0x110668(0x4a3)])));
            }
            ,
            _0x521203[_0x324b8e(0x74f)][_0x324b8e(0x1b5)] = function (_0x4f6e26) {
                const _0x19785b = _0x324b8e;
                if (!_0x5ef600(_0x4f6e26))
                    throw new _0x5309c9(_0x19785b(0x6fa));
                if (!_0x5ef600(_0x4f6e26[_0x19785b(0xa62)]) && !_0x5ef600(_0x4f6e26[_0x19785b(0x349)]) && !_0x5ef600(_0x4f6e26[_0x19785b(0x496)]))
                    throw new _0x5309c9(_0x19785b(0x8af));
                if (_0x5ef600(_0x4f6e26[_0x19785b(0xa62)])) {
                    const _0x28c1ee = _0x2a4fab['createIfNeeded'](_0x4f6e26['url'])
                        , _0xd63ee3 = this;
                    _0x28c1ee[_0x19785b(0x53b)]()[_0x19785b(0x685)](_0x2cc796 => {
                        const _0x49b87d = _0x19785b;
                        _0x5ef600(_0xd63ee3[_0x49b87d(0xa12)]) && _0xd63ee3[_0x49b87d(0xa12)]['destroy'](),
                            _0xd63ee3[_0x49b87d(0xa12)] = new _0x5e899d({
                                'context': _0xd63ee3[_0x49b87d(0x80b)][_0x49b87d(0x65e)],
                                'source': _0x2cc796
                            });
                    }
                    );
                } else
                    _0x5ef600(_0x4f6e26[_0x19785b(0x496)]) ? _0x5ef600(this[_0x19785b(0xa12)]) ? this[_0x19785b(0xa12)][_0x19785b(0x6a9)](_0x4f6e26[_0x19785b(0x496)]) : this[_0x19785b(0xa12)] = new _0x5e899d({
                        'context': this[_0x19785b(0x80b)][_0x19785b(0x65e)],
                        'source': _0x4f6e26[_0x19785b(0x496)]
                    }) : this[_0x19785b(0x942)] = _0x4f6e26[_0x19785b(0x349)];
            }
            ,
            _0x521203['prototype'][_0x324b8e(0x3e3)] = function (_0xa7f541) {
                const _0x462a9c = _0x324b8e;
                if (_0xa7f541[0x0] === this[_0x462a9c(0x9fa)][0x0] && _0xa7f541[0x1] === this['_viewPosition'][0x1] && _0xa7f541[0x2] === this[_0x462a9c(0x9fa)][0x2])
                    throw new _0x5309c9(_0x462a9c(0x79b));
                const _0x3bc587 = this[_0x462a9c(0x80b)][_0x462a9c(0xd8)]
                    , _0x12b02d = _0x3bc587['_projection'];
                let _0x9e94ff, _0x2a0e62;
                if (this[_0x462a9c(0x80b)][_0x462a9c(0x265)] === _0x3cfc14['SCENE3D'])
                    _0x9e94ff = _0x2cd3cf[_0x462a9c(0x6c0)](_0xa7f541)[0x0],
                        _0x2a0e62 = _0x2cd3cf[_0x462a9c(0x6c0)](this[_0x462a9c(0x9fa)])[0x0];
                else {
                    const _0x18c23e = _0x534a8c['fromDegrees'](_0xa7f541[0x0], _0xa7f541[0x1], _0xa7f541[0x2]);
                    _0x9e94ff = _0x12b02d[_0x462a9c(0x856)](_0x18c23e, new _0x2cd3cf());
                    const _0x4befc3 = _0x534a8c[_0x462a9c(0xa08)](this['_viewPosition'][0x0], this[_0x462a9c(0x9fa)][0x1], this[_0x462a9c(0x9fa)][0x2]);
                    _0x2a0e62 = _0x12b02d[_0x462a9c(0x856)](_0x4befc3, new _0x2cd3cf());
                }
                const _0x300cf1 = new _0x2cd3cf();
                _0x2cd3cf[_0x462a9c(0x7bd)](_0x9e94ff, _0x2a0e62, _0x300cf1);
                const _0x535e9c = _0x2cd3cf[_0x462a9c(0x451)](_0x300cf1);
                _0x2cd3cf[_0x462a9c(0x7bc)](_0x300cf1, _0x300cf1),
                    this[_0x462a9c(0xaa5)] = _0x535e9c;
                const _0x22e6fc = _0x3bc587[_0x462a9c(0x97a)]
                    , _0xaf4c35 = _0x3bc587[_0x462a9c(0x622)]
                    , _0x528541 = _0x3bc587[_0x462a9c(0x42e)]
                    , _0x501ded = new _0x2cd3cf();
                _0x2cd3cf['clone'](_0x3bc587['position'], _0x501ded);
                const _0x42d915 = _0x300cf1[_0x462a9c(0x157)]();
                let _0x6085af = _0x2a0e62[_0x462a9c(0x157)]();
                _0x6085af = _0x2cd3cf[_0x462a9c(0x7bc)](_0x6085af, _0x6085af),
                    Math[_0x462a9c(0xa8b)](_0x2cd3cf[_0x462a9c(0x908)](_0x6085af, _0x42d915)) >= 0x1 && (_0x6085af = Math[_0x462a9c(0xa8b)](_0x2cd3cf[_0x462a9c(0x908)](_0x42d915, _0x2cd3cf[_0x462a9c(0x4ce)])) < 0x1 ? _0x2cd3cf[_0x462a9c(0x157)](_0x2cd3cf['UNIT_Y'], _0x6085af) : _0x2cd3cf[_0x462a9c(0x157)](_0x2cd3cf[_0x462a9c(0x662)], _0x6085af));
                let _0x358e13 = new _0x2cd3cf();
                _0x2cd3cf[_0x462a9c(0x695)](_0x6085af, _0x42d915, _0x358e13),
                    _0x358e13 = _0x2cd3cf[_0x462a9c(0x7bc)](_0x358e13, _0x358e13),
                    _0x2cd3cf[_0x462a9c(0x695)](_0x42d915, _0x358e13, _0x6085af),
                    _0x6085af = _0x2cd3cf[_0x462a9c(0x7bc)](_0x6085af, _0x6085af),
                    _0x3bc587['setView']({
                        'destination': _0x2a0e62,
                        'orientation': {
                            'direction': _0x42d915,
                            'up': _0x6085af
                        },
                        'convert': !0x1
                    }),
                    this[_0x462a9c(0x264)] = _0x3bc587[_0x462a9c(0x97a)] * _0x157682[_0x462a9c(0x1b6)],
                    this[_0x462a9c(0x622)] = _0x3bc587[_0x462a9c(0x622)] * _0x157682[_0x462a9c(0x1b6)],
                    _0x3bc587[_0x462a9c(0x10c)]({
                        'destination': _0x501ded,
                        'orientation': {
                            'heading': _0x22e6fc,
                            'pitch': _0xaf4c35,
                            'roll': _0x528541
                        },
                        'convert': !0x1
                    });
            }
            ,
            _0x521203[_0x324b8e(0x74f)][_0x324b8e(0x66e)] = function (_0x1d3274) {
                const _0x198ef4 = _0x324b8e;
                if (!_0x5ef600(_0x1d3274))
                    throw new _0x5309c9(_0x198ef4(0x8ca));
                const _0x88ee6b = this;
                return _0x2a4fab[_0x198ef4(0x260)](_0x1d3274)[_0x198ef4(0x992)]()[_0x198ef4(0x685)](function (_0x3c13fd) {
                    const _0xf5a994 = _0x198ef4
                        , _0x410a3a = _0x1584ad(_0x3c13fd[_0xf5a994(0x906)]);
                    _0x88ee6b[_0xf5a994(0x264)] = _0x410a3a[_0xf5a994(0x97a)],
                        _0x88ee6b[_0xf5a994(0x622)] = _0x1eb12f(_0x410a3a[_0xf5a994(0x622)], _0x88ee6b[_0xf5a994(0x622)]),
                        _0x88ee6b[_0xf5a994(0x4b4)] = _0x1eb12f(_0x410a3a[_0xf5a994(0x42e)], _0x88ee6b[_0xf5a994(0x4b4)]),
                        _0x88ee6b[_0xf5a994(0x458)] = _0x410a3a[_0xf5a994(0x458)],
                        _0x88ee6b['verticalFov'] = _0x410a3a[_0xf5a994(0x8d5)],
                        _0x2cd3cf[_0xf5a994(0x157)](_0x410a3a[_0xf5a994(0x27f)], _0x88ee6b[_0xf5a994(0x7ae)]),
                        _0x2cd3cf['clone'](_0x410a3a['matrixV'], _0x88ee6b['_v3AffineY']),
                        _0x88ee6b['distance'] = _0x410a3a[_0xf5a994(0xaa5)],
                        _0x88ee6b[_0xf5a994(0x287)] = _0x410a3a[_0xf5a994(0x287)],
                        _0x88ee6b['_boundingSphereFromXML'] = _0x410a3a['boundingSphere'];
                }, _0x2ca0d9 => {
                    const _0x40ff70 = _0x198ef4;
                    console[_0x40ff70(0x9dc)](_0x2ca0d9);
                }
                );
            }
            ,
            _0x521203[_0x324b8e(0x5e9)] = function (_0x284934, _0x12f42, _0x1ed819) {
                const _0x4f6902 = _0x324b8e;
                if (!_0x5ef600(_0x284934))
                    throw new _0x5309c9(_0x4f6902(0x57d));
                if (!_0x5ef600(_0x12f42))
                    throw new _0x5309c9(_0x4f6902(0x8ca));
                return _0x2a4fab['createIfNeeded'](_0x12f42)[_0x4f6902(0x992)]()[_0x4f6902(0x685)](function (_0x479dcf) {
                    const _0x16759b = _0x4f6902
                        , _0x27b68e = {}
                        , _0x1d760a = _0x479dcf['firstChild'];
                    for (let _0x438741 = 0x0, _0x1e14b7 = _0x1d760a[_0x16759b(0xabe)][_0x16759b(0x376)]; _0x438741 < _0x1e14b7; _0x438741++) {
                        const _0x1741e1 = _0x1584ad(_0x1d760a[_0x16759b(0xabe)][_0x438741]);
                        let _0x191ad = _0x1741e1[_0x16759b(0xa53)];
                        _0x191ad = _0x5ef600(_0x1ed819) ? _0x4a0139(_0x1ed819) + _0x1741e1['videoName'] : _0x12f42['slice'](0x0, _0x12f42[_0x16759b(0x832)]('/') + 0x1) + _0x1741e1['videoName'];
                        const _0x363cb5 = new _0x521203(_0x284934)
                            , _0x23759d = _0x387290(_0x191ad, _0x363cb5[_0x16759b(0x2c8)]);
                        _0x363cb5['viewPosition'] = _0x1741e1[_0x16759b(0x287)],
                            _0x363cb5[_0x16759b(0x264)] = _0x1741e1[_0x16759b(0x97a)],
                            _0x363cb5[_0x16759b(0x622)] = _0x1741e1[_0x16759b(0x622)],
                            _0x363cb5[_0x16759b(0x458)] = _0x1741e1[_0x16759b(0x458)],
                            _0x363cb5[_0x16759b(0x8d5)] = _0x1741e1[_0x16759b(0x8d5)],
                            _0x2cd3cf['clone'](_0x1741e1[_0x16759b(0x27f)], _0x363cb5[_0x16759b(0x7ae)]),
                            _0x2cd3cf[_0x16759b(0x157)](_0x1741e1[_0x16759b(0x868)], _0x363cb5[_0x16759b(0x459)]),
                            _0x363cb5[_0x16759b(0xaa5)] = _0x1741e1['distance'],
                            _0x363cb5[_0x16759b(0x1b5)]({
                                'video': _0x23759d
                            }),
                            _0x363cb5['_boundingSphere'] = XML = _0x1741e1[_0x16759b(0x891)],
                            _0x23759d[_0x16759b(0x80a)]('loadeddata', function (_0x15dcce) {
                                const _0x1eb1c3 = _0x16759b;
                                _0x15dcce[_0x1eb1c3(0x756)]();
                            }
                            [_0x16759b(0x1a6)](_0x23759d, _0x363cb5)),
                            _0x27b68e[_0x1741e1[_0x16759b(0xa53)]] = _0x363cb5;
                    }
                    return _0x27b68e;
                }, _0x426d92 => {
                    const _0x2f55e2 = _0x4f6902;
                    console[_0x2f55e2(0x9dc)](_0x426d92);
                }
                );
            }
            ,
            _0x521203[_0x324b8e(0x74f)][_0x324b8e(0x756)] = function () {
                const _0x572af8 = _0x324b8e;
                this[_0x572af8(0x6e3)] || (this[_0x572af8(0x6e3)] = !0x0,
                    this[_0x572af8(0x80b)][_0x572af8(0x51f)][_0x572af8(0x9cb)](this),
                    this[_0x572af8(0x1c5)] = this['scene'][_0x572af8(0xd7)][_0x572af8(0x80a)](_0x27fb6c => {
                        const _0x40bb0e = _0x572af8;
                        _0x5ef600(this[_0x40bb0e(0x5de)]) && this[_0x40bb0e(0x5de)]['renderToTexture'](_0x27fb6c);
                    }
                        , this));
            }
            ,
            _0x521203[_0x324b8e(0x74f)]['clear'] = function () {
                const _0x1d5d79 = _0x324b8e;
                this['isBuild'] && (this[_0x1d5d79(0x6e3)] = !0x1,
                    this[_0x1d5d79(0x1c5)](),
                    this[_0x1d5d79(0x80b)][_0x1d5d79(0x51f)]['remove'](this));
            }
            ,
            _0x521203[_0x324b8e(0x74f)][_0x324b8e(0x4dd)] = function () {
                const _0x52d5d9 = _0x324b8e
                    , _0x33956b = document['getElementById'](_0x52d5d9(0x2c1) + this[_0x52d5d9(0x2c8)]);
                if (_0x33956b) {
                    const _0x16e602 = _0x33956b[_0x52d5d9(0x76c)];
                    _0x16e602['removeChild'](_0x33956b),
                        0x0 === _0x16e602[_0x52d5d9(0xabe)]['length'] && _0x16e602[_0x52d5d9(0x76c)][_0x52d5d9(0x5d8)](_0x16e602);
                }
                return this[_0x52d5d9(0x5de)] = this[_0x52d5d9(0x5de)] && this['_cameraDepthBuffer'][_0x52d5d9(0x4dd)](),
                    _0x5bd345(this),
                    this[_0x52d5d9(0xa12)] = this['_texture'] && !this[_0x52d5d9(0xa12)]['isDestroyed']() && this['_texture'][_0x52d5d9(0x4dd)](),
                    this[_0x52d5d9(0x80b)][_0x52d5d9(0x51f)][_0x52d5d9(0x77c)](this),
                    _0x4cebe0(this);
            }
            ;
        var _0x5bc231 = _0x324b8e(0x582)
            , _0x5f585a = _0x324b8e(0x164);
        function _0x1c149a(_0x15f0b1) {
            const _0x14cd49 = _0x324b8e;
            this[_0x14cd49(0x80b)] = _0x15f0b1,
                this[_0x14cd49(0x7f0)] = void 0x0,
                this[_0x14cd49(0x9fa)] = [0x0, 0x0, 0x0],
                this[_0x14cd49(0x961)] = new Adapter[(_0x14cd49(0x85d))](),
                this['_viewProjMatrixs'] = new Adapter[(_0x14cd49(0x869))](),
                this[_0x14cd49(0xa2f)] = new Adapter[(_0x14cd49(0x869))](),
                this['_visibleColor'] = new Adapter['Color'](0x0, 0x1, 0x0, 0x1),
                this[_0x14cd49(0x2a7)] = new Adapter[(_0x14cd49(0x75c))](0x1, 0x0, 0x0, 0x1),
                this[_0x14cd49(0x987)] = new Adapter[(_0x14cd49(0x869))](),
                this[_0x14cd49(0xab8)] = new Adapter[(_0x14cd49(0x869))](),
                this[_0x14cd49(0x2e7)] = !0x1,
                this[_0x14cd49(0x2de)] = !0x1,
                this['_barrierPointArray'] = new Adapter[(_0x14cd49(0x869))](),
                this[_0x14cd49(0xa37)] = new Adapter[(_0x14cd49(0x869))](),
                this[_0x14cd49(0xa8a)] = new Adapter[(_0x14cd49(0x869))](),
                this[_0x14cd49(0x8ac)] = 0x2,
                this['isBuild'] = !0x1;
        }
        function _0x1f0ca9(_0x17745d, _0x453a07, _0x1c6299) {
            const _0x21782d = _0x324b8e
                , _0x2a15c8 = _0x1c6299[_0x21782d(0xd8)]
                , _0x5ec54c = _0x2a15c8[_0x21782d(0x2e6)];
            let _0x294250;
            if (_0x17745d[_0x21782d(0x80b)][_0x21782d(0x265)] === Adapter['SceneMode']['SCENE3D'])
                _0x294250 = Adapter[_0x21782d(0x85d)][_0x21782d(0x6c0)](_0x17745d['_viewPosition'])[0x0];
            else {
                const _0xe4572b = Adapter[_0x21782d(0x975)][_0x21782d(0xa08)](_0x17745d[_0x21782d(0x9fa)][0x0], _0x17745d['_viewPosition'][0x1], _0x17745d[_0x21782d(0x9fa)][0x2]);
                _0x294250 = _0x5ec54c['project'](_0xe4572b, new Adapter[(_0x21782d(0x85d))]());
            }
            const _0x4bf44e = new Adapter[(_0x21782d(0x85d))](0x0, 0x0, 0x0);
            _0x17745d['_targetPoints'][_0x21782d(0x17f)];
            let _0x2b3c5a = 0x0;
            const _0x48611c = _0x17745d[_0x21782d(0x7ca)];
            let _0x2b5f6a;
            if (_0x17745d[_0x21782d(0x80b)][_0x21782d(0x265)] === Adapter[_0x21782d(0x6b8)][_0x21782d(0x9cc)])
                _0x2b5f6a = Adapter[_0x21782d(0x85d)][_0x21782d(0x6c0)](_0x48611c)[0x0];
            else {
                const _0x26af3e = Adapter[_0x21782d(0x975)][_0x21782d(0xa08)](_0x48611c[0x0], _0x48611c[0x1], _0x48611c[0x2]);
                _0x2b5f6a = _0x5ec54c[_0x21782d(0x856)](_0x26af3e, new Adapter[(_0x21782d(0x85d))]());
            }
            const _0x2c4d7a = new Adapter[(_0x21782d(0x85d))]();
            Adapter[_0x21782d(0x85d)]['subtract'](_0x2b5f6a, _0x294250, _0x2c4d7a),
                Adapter['Cartesian3'][_0x21782d(0x7bc)](_0x2c4d7a, _0x2c4d7a),
                Adapter[_0x21782d(0x85d)][_0x21782d(0x9cb)](_0x4bf44e, _0x2c4d7a, _0x4bf44e),
                _0x2b3c5a = Math[_0x21782d(0x212)](_0x2b3c5a, Adapter[_0x21782d(0x85d)][_0x21782d(0xaa5)](_0x2b5f6a, _0x294250)),
                Adapter['Cartesian3'][_0x21782d(0x7bc)](_0x4bf44e, _0x4bf44e),
                Adapter[_0x21782d(0x85d)][_0x21782d(0x157)](_0x4bf44e, _0x17745d[_0x21782d(0x961)]);
            const _0x2f877d = new Adapter[(_0x21782d(0x85d))]()
                , _0x4d827a = new Adapter[(_0x21782d(0x85d))]()
                , _0x96a981 = new Adapter['Cartesian3']();
            let _0x5f4e1f = _0x2a15c8[_0x21782d(0x791)][_0x21782d(0x5b8)];
            Adapter[_0x21782d(0x85d)][_0x21782d(0x157)](_0x2a15c8[_0x21782d(0x15e)], _0x2f877d),
                Adapter[_0x21782d(0x85d)][_0x21782d(0x157)](_0x2a15c8[_0x21782d(0x264)], _0x4d827a),
                Adapter['Cartesian3'][_0x21782d(0x157)](_0x2a15c8['up'], _0x96a981);
            const _0x5b7167 = 0x2 * Adapter[_0x21782d(0x16d)]['PI'] / 0x3
                , _0x438891 = _0x2a15c8[_0x21782d(0x791)][_0x21782d(0x797)]
                , _0x30a349 = _0x2a15c8[_0x21782d(0x791)]['far']
                , _0x151a7c = _0x1c6299[_0x21782d(0x457)]
                , _0x33a20a = _0x17745d[_0x21782d(0x4f2)];
            let _0x937084 = _0x17745d['_depthBuffers']['get'](_0x33a20a);
            Adapter['defined'](_0x937084) || (_0x937084 = new _0x42e1f3(_0x453a07),
                _0x17745d[_0x21782d(0xa37)][_0x21782d(0x414)](_0x33a20a, _0x937084)),
                _0x937084[_0x21782d(0x2ff)] = !0x0,
                _0x937084[_0x21782d(0xcb)] = () => {
                    const _0x281371 = _0x21782d;
                    _0x1c6299[_0x281371(0x457)] = !0x1,
                        Adapter[_0x281371(0x85d)]['clone'](_0x2a15c8[_0x281371(0x15e)], _0x2f877d),
                        Adapter[_0x281371(0x85d)]['clone'](_0x2a15c8[_0x281371(0x264)], _0x4d827a),
                        Adapter[_0x281371(0x85d)][_0x281371(0x157)](_0x2a15c8['up'], _0x96a981),
                        _0x5f4e1f = _0x2a15c8[_0x281371(0x791)][_0x281371(0x5b8)],
                        _0x2a15c8[_0x281371(0x791)][_0x281371(0x5b8)] = _0x5b7167;
                    const _0x4b1cb6 = _0x4bf44e;
                    let _0x3dd473 = new Adapter['Cartesian3']();
                    _0x3dd473 = Adapter[_0x281371(0x85d)]['clone'](_0x294250, _0x3dd473),
                        _0x3dd473 = Adapter[_0x281371(0x85d)]['normalize'](_0x3dd473, _0x3dd473),
                        Math[_0x281371(0xa8b)](Adapter[_0x281371(0x85d)]['dot'](_0x3dd473, _0x4b1cb6)) >= 0x1 && (_0x3dd473 = Math[_0x281371(0xa8b)](Adapter[_0x281371(0x85d)][_0x281371(0x908)](_0x4b1cb6, Adapter[_0x281371(0x85d)][_0x281371(0x4ce)])) < 0x1 ? Adapter['Cartesian3'][_0x281371(0x157)](Cartesian3[_0x281371(0x4ce)], _0x3dd473) : Adapter[_0x281371(0x85d)][_0x281371(0x157)](Adapter['Cartesian3'][_0x281371(0x662)], _0x3dd473));
                    let _0x408ddc = new Adapter[(_0x281371(0x85d))]();
                    Adapter[_0x281371(0x85d)][_0x281371(0x695)](_0x3dd473, _0x4b1cb6, _0x408ddc),
                        _0x408ddc = Adapter[_0x281371(0x85d)][_0x281371(0x7bc)](_0x408ddc, _0x408ddc),
                        Adapter[_0x281371(0x85d)][_0x281371(0x695)](_0x4b1cb6, _0x408ddc, _0x3dd473),
                        _0x3dd473 = Adapter[_0x281371(0x85d)][_0x281371(0x7bc)](_0x3dd473, _0x3dd473);
                    const _0x1e8b63 = {
                        'destination': _0x294250,
                        'orientation': {
                            'direction': _0x4b1cb6,
                            'up': _0x3dd473
                        },
                        'convert': !0x1
                    };
                    _0x2a15c8[_0x281371(0x10c)](_0x1e8b63),
                        _0x17745d[_0x281371(0xab8)][_0x281371(0x414)](_0x33a20a, _0x1e8b63),
                        _0x2a15c8[_0x281371(0x791)][_0x281371(0x797)] = 0x1,
                        _0x2a15c8[_0x281371(0x791)][_0x281371(0x44a)] = Math[_0x281371(0x826)](Math['max'](_0x2b3c5a, 0xa));
                    const _0x4bb01e = _0x17745d[_0x281371(0x80b)][_0x281371(0x91b)][_0x281371(0x91b)];
                    for (let _0x413107 = 0x0; _0x413107 < _0x4bb01e[_0x281371(0x376)]; ++_0x413107) {
                        const _0x243bef = _0x4bb01e[_0x413107];
                        Adapter['defined'](_0x243bef[_0x281371(0x3a7)]) || (_0x243bef['preShow'] = _0x243bef[_0x281371(0x198)],
                            _0x243bef['show'] = !0x1);
                    }
                    const _0x28e36a = new Adapter[(_0x281371(0x5ab))]();
                    Adapter[_0x281371(0x5ab)][_0x281371(0x3ee)](_0x2a15c8[_0x281371(0x791)][_0x281371(0x2a6)], _0x2a15c8[_0x281371(0x48f)], _0x28e36a),
                        _0x17745d[_0x281371(0x400)]['set'](_0x33a20a, _0x28e36a),
                        _0x17745d['_renderTextureMatrixs'][_0x281371(0x414)](_0x33a20a, new Adapter[(_0x281371(0x5ab))]());
                }
                ,
                _0x937084['endFunc'] = function () {
                    const _0x4857f3 = _0x21782d;
                    _0x1c6299[_0x4857f3(0x457)] = _0x151a7c,
                        _0x2a15c8[_0x4857f3(0x791)][_0x4857f3(0x5b8)] = _0x5f4e1f,
                        _0x2a15c8['setView']({
                            'destination': _0x2f877d,
                            'orientation': {
                                'direction': _0x4d827a,
                                'up': _0x96a981
                            },
                            'convert': !0x1
                        }),
                        _0x2a15c8['frustum'][_0x4857f3(0x797)] = _0x438891,
                        _0x2a15c8['frustum']['far'] = _0x30a349,
                        _0x937084[_0x4857f3(0x2ff)] = !0x1;
                    const _0x28b0cc = _0x17745d[_0x4857f3(0x80b)][_0x4857f3(0x91b)][_0x4857f3(0x91b)];
                    for (let _0x333453 = 0x0; _0x333453 < _0x28b0cc[_0x4857f3(0x376)]; ++_0x333453) {
                        const _0x4ef22c = _0x28b0cc[_0x333453];
                        Adapter[_0x4857f3(0x14b)](_0x4ef22c['fileType']) || (_0x4ef22c[_0x4857f3(0x198)] = _0x4ef22c[_0x4857f3(0xa4f)]);
                    }
                    if (!_0x17745d[_0x4857f3(0x2e7)]) {
                        const _0x237306 = function (_0x5ab567, _0x249a04) {
                            const _0x1361ef = _0x4857f3
                                , _0x172d3f = _0x5ab567[_0x1361ef(0x987)][_0x1361ef(0xa61)](_0x249a04);
                            if (!Adapter[_0x1361ef(0x14b)](_0x172d3f))
                                return;
                            const _0x5a8394 = {
                                'isViewer': !0x0
                            }
                                , _0xa230bc = Adapter[_0x1361ef(0x85d)][_0x1361ef(0x6c0)](_0x172d3f)[0x0]
                                , _0x446e0d = new Adapter[(_0x1361ef(0x747))](_0xa230bc['x'], _0xa230bc['y'], _0xa230bc['z'], 0x1)
                                , _0x293a66 = _0x5ab567[_0x1361ef(0x400)][_0x1361ef(0xa61)](_0x249a04);
                            if (Adapter[_0x1361ef(0x5ab)]['multiplyByVector'](_0x293a66, _0x446e0d, _0x446e0d),
                                Adapter[_0x1361ef(0x747)][_0x1361ef(0x555)](_0x446e0d, _0x446e0d['w'], _0x446e0d),
                                _0x446e0d['x'] > 0x1 || _0x446e0d['x'] < -0x1 || _0x446e0d['y'] > 0x1 || _0x446e0d['y'] < -0x1)
                                return _0x5a8394;
                            const _0x10b27e = _0x5ab567['scene']['context']
                                , _0x3c0f42 = _0x10b27e[_0x1361ef(0x142)]
                                , _0x148055 = _0x10b27e[_0x1361ef(0x35c)]
                                , _0x4d2d0e = (0.5 * _0x446e0d['x'] + 0.5) * _0x3c0f42 - 0.5
                                , _0x45c921 = (0.5 * _0x446e0d['y'] + 0.5) * _0x148055 - 0.5;
                            if (_0x4d2d0e < 0x0 || _0x45c921 < 0x0)
                                return _0x5a8394;
                            const _0x4e23b5 = Math[_0x1361ef(0x432)](_0x4d2d0e)
                                , _0x93fa09 = _0x4d2d0e - _0x4e23b5
                                , _0x25344e = Math['floor'](_0x45c921)
                                , _0xb3d7c7 = _0x45c921 - _0x25344e
                                , _0x2a3a0f = _0x5ab567['_depthBuffers'][_0x1361ef(0xa61)](_0x249a04)
                                , _0x482d5d = _0x10b27e[_0x1361ef(0x5ce)]({
                                    'framebuffer': _0x2a3a0f[_0x1361ef(0x882)],
                                    'x': _0x4e23b5,
                                    'y': _0x25344e,
                                    'width': 0x2,
                                    'height': 0x2
                                })
                                , _0x39ee20 = new Adapter['Cartesian4']();
                            new Adapter[(_0x1361ef(0x85d))]();
                            const _0x33d1c1 = new Adapter['Cartesian4'](0x1 / 0xff, 0x1 / 0xfe01, 0x1 / 0x99246ff, 0x1 / 0xfc05fc01)
                                , _0x3a776f = [];
                            _0x5ab567[_0x1361ef(0x80b)];
                            const _0x5020f1 = _0x10b27e['uniformState'][_0x1361ef(0x354)];
                            _0x5020f1['x'],
                                _0x5020f1['y'];
                            for (let _0x25d403 = 0x0; _0x25d403 < 0x4; _0x25d403++) {
                                const _0x2039ea = Adapter['Cartesian4'][_0x1361ef(0x64f)](_0x482d5d, 0x4 * _0x25d403, _0x39ee20)
                                    , _0x4aec04 = Adapter[_0x1361ef(0x747)]['dot'](_0x2039ea, _0x33d1c1);
                                if (!(_0x4aec04 < 0x1 && _0x4aec04 > 0x0))
                                    return _0x5a8394;
                                _0x3a776f[_0x25d403] = 0x2 * _0x4aec04 - 0x1;
                            }
                            const _0xfce433 = (0x1 - _0x93fa09) * _0x3a776f[0x0] + _0x93fa09 * _0x3a776f[0x1]
                                , _0x437f45 = (0x1 - _0x93fa09) * _0x3a776f[0x2] + _0x93fa09 * _0x3a776f[0x3]
                                , _0x287ac6 = (0x1 - _0xb3d7c7) * _0xfce433 + _0xb3d7c7 * _0x437f45;
                            if (_0x446e0d['z'] - _0x287ac6 > 0.000001) {
                                const _0x455c13 = new Adapter[(_0x1361ef(0x5ab))]();
                                Adapter['Matrix4'][_0x1361ef(0x20e)](_0x293a66, _0x455c13),
                                    _0x446e0d['z'] = _0x287ac6,
                                    Adapter['Matrix4'][_0x1361ef(0xa2d)](_0x455c13, _0x446e0d, _0x446e0d),
                                    Adapter['Cartesian4'][_0x1361ef(0x555)](_0x446e0d, _0x446e0d['w'], _0x446e0d);
                                const _0x2e45e0 = Adapter[_0x1361ef(0x975)]['fromCartesian'](_0x446e0d);
                                _0x5a8394[_0x1361ef(0x15e)] = _0x2e45e0,
                                    _0x5a8394[_0x1361ef(0x461)] = !0x1,
                                    _0x5a8394['st'] = new Adapter[(_0x1361ef(0xab7))](_0x4e23b5, _0x25344e);
                            }
                            return _0x5a8394;
                        }(_0x17745d, _0x33a20a);
                        _0x17745d['_barrierPointArray'][_0x4857f3(0x414)](_0x33a20a, _0x237306);
                    }
                }
                ;
        }
        Object['defineProperties'](_0x1c149a[_0x324b8e(0x74f)], {
            'viewPosition': {
                'get': function () {
                    return this['_viewPosition'];
                },
                'set': function (_0x2e8cef) {
                    const _0xf85691 = _0x324b8e;
                    this[_0xf85691(0x9fa)] = _0x2e8cef,
                        this[_0xf85691(0x2de)] = !0x0,
                        this[_0xf85691(0x2e7)] = !0x0;
                }
            },
            'visibleColor': {
                'get': function () {
                    const _0x2e6695 = _0x324b8e;
                    return this[_0x2e6695(0x1f3)];
                },
                'set': function (_0x3c8e70) {
                    const _0x5f34b7 = _0x324b8e;
                    void 0x0 !== _0x3c8e70 && (this[_0x5f34b7(0x1f3)] = Adapter[_0x5f34b7(0x75c)][_0x5f34b7(0x157)](_0x3c8e70, this[_0x5f34b7(0x1f3)]));
                }
            },
            'hiddenColor': {
                'get': function () {
                    const _0x19a495 = _0x324b8e;
                    return this[_0x19a495(0x2a7)];
                },
                'set': function (_0x3fdd29) {
                    const _0x2a80d3 = _0x324b8e;
                    void 0x0 !== _0x3fdd29 && (this[_0x2a80d3(0x2a7)] = Adapter[_0x2a80d3(0x75c)]['clone'](_0x3fdd29, this[_0x2a80d3(0x2a7)]));
                }
            },
            'lineWidth': {
                'get': function () {
                    const _0x1f4aeb = _0x324b8e;
                    return this[_0x1f4aeb(0x8ac)];
                },
                'set': function (_0x330801) {
                    const _0x187cb1 = _0x324b8e;
                    void 0x0 !== _0x330801 && (this[_0x187cb1(0x8ac)] = _0x330801);
                }
            }
        }),
            _0x1c149a[_0x324b8e(0x74f)][_0x324b8e(0x290)] = function (_0x1e0a8e) {
                const _0x78dc6e = _0x324b8e
                    , _0x5d0b21 = _0x1e0a8e[_0x78dc6e(0x770)]
                    , _0x3da081 = _0x1e0a8e[_0x78dc6e(0x15e)];
                return !(!Adapter[_0x78dc6e(0x14b)](_0x5d0b21) || !Adapter[_0x78dc6e(0x14b)](_0x3da081)) && (this[_0x78dc6e(0x987)][_0x78dc6e(0x414)](_0x5d0b21, _0x3da081),
                    this[_0x78dc6e(0x4f2)] = _0x5d0b21,
                    this['_currentTargetPoint'] = _0x3da081,
                    this[_0x78dc6e(0x2e7)] = !0x0,
                    this['_barrierPointArray'][_0x78dc6e(0x414)](_0x5d0b21, {}),
                    !0x0);
            }
            ,
            _0x1c149a[_0x324b8e(0x74f)][_0x324b8e(0x1cb)] = function (_0xfc903) {
                const _0x466aef = _0x324b8e;
                this['_barrierPointArray']['remove'](_0xfc903);
                const _0x1f1f0e = this[_0x466aef(0x987)][_0x466aef(0x77c)](_0xfc903);
                if (this['_sightlineCameras'][_0x466aef(0x77c)](_0xfc903),
                    !_0x1f1f0e)
                    return !0x1;
                this[_0x466aef(0x400)][_0x466aef(0x77c)](_0xfc903),
                    this['_renderTextureMatrixs'][_0x466aef(0x77c)](_0xfc903);
                const _0x398350 = this[_0x466aef(0xa37)][_0x466aef(0xa61)](_0xfc903);
                Adapter[_0x466aef(0x14b)](_0x398350) && (_0x398350[_0x466aef(0x4dd)](),
                    this[_0x466aef(0xa37)][_0x466aef(0x77c)](_0xfc903));
                const _0x55ef49 = this[_0x466aef(0xa8a)][_0x466aef(0xa61)](_0xfc903);
                if (Adapter[_0x466aef(0x14b)](_0x55ef49)) {
                    for (let _0x5b5a10 = 0x0; _0x5b5a10 < _0x55ef49[_0x466aef(0x376)]; _0x5b5a10++) {
                        const _0x3b8c41 = _0x55ef49[_0x5b5a10];
                        _0x3b8c41[_0x466aef(0x67b)] = _0x3b8c41[_0x466aef(0x67b)] && !_0x3b8c41[_0x466aef(0x67b)][_0x466aef(0x575)]() && _0x3b8c41[_0x466aef(0x67b)][_0x466aef(0x4dd)](),
                            _0x3b8c41['vertexArray'] = _0x3b8c41[_0x466aef(0x99e)] && !_0x3b8c41['vertexArray']['isDestroyed']() && _0x3b8c41[_0x466aef(0x99e)][_0x466aef(0x4dd)]();
                    }
                    this[_0x466aef(0xa8a)][_0x466aef(0x77c)](_0xfc903);
                }
                return this[_0x466aef(0x2e7)] = !0x0,
                    !0x0;
            }
            ,
            _0x1c149a[_0x324b8e(0x74f)][_0x324b8e(0x561)] = function () {
                const _0x441c12 = _0x324b8e;
                this[_0x441c12(0x83f)][_0x441c12(0x307)](),
                    this[_0x441c12(0x987)]['removeAll'](),
                    this[_0x441c12(0xab8)][_0x441c12(0x307)]();
                for (let _0x5c3c5d in this[_0x441c12(0xa37)][_0x441c12(0x17f)])
                    this[_0x441c12(0xa37)][_0x441c12(0x17f)][_0x441c12(0x704)](_0x5c3c5d) && this['_depthBuffers']['_hash'][_0x5c3c5d]['destroy']();
                this[_0x441c12(0xa37)]['removeAll']();
                for (let _0xb9578d = 0x0, _0x493646 = this['_commands'][_0x441c12(0x376)]; _0xb9578d < _0x493646; _0xb9578d++) {
                    const _0x4474ef = this[_0x441c12(0xa8a)][_0x441c12(0x347)][_0xb9578d];
                    for (let _0x119728 = 0x0; _0x119728 < _0x4474ef[_0x441c12(0x376)]; _0x119728++) {
                        const _0x33b3de = _0x4474ef[_0x119728];
                        _0x33b3de['shaderProgram'] = _0x33b3de['shaderProgram'] && !_0x33b3de[_0x441c12(0x67b)][_0x441c12(0x575)]() && _0x33b3de['shaderProgram'][_0x441c12(0x4dd)](),
                            _0x33b3de['vertexArray'] = _0x33b3de[_0x441c12(0x99e)] && !_0x33b3de[_0x441c12(0x99e)][_0x441c12(0x575)]() && _0x33b3de[_0x441c12(0x99e)][_0x441c12(0x4dd)]();
                    }
                }
                this[_0x441c12(0xa8a)][_0x441c12(0x307)](),
                    this[_0x441c12(0x400)][_0x441c12(0x307)](),
                    this[_0x441c12(0xa2f)][_0x441c12(0x307)](),
                    this[_0x441c12(0x2e7)] = !0x0;
            }
            ;
        const _0x4e25c5 = new Adapter[(_0x324b8e(0x5ab))](0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1);
        let _0x3b1e74 = null;
        function _0x1f2fe7() {
            const _0x2bf22a = new Uint16Array(0x6);
            let _0x2111d8 = 0x0;
            return _0x2bf22a[_0x2111d8++] = 0x2,
                _0x2bf22a[_0x2111d8++] = 0x1,
                _0x2bf22a[_0x2111d8++] = 0x0,
                _0x2bf22a[_0x2111d8++] = 0x3,
                _0x2bf22a[_0x2111d8++] = 0x2,
                _0x2bf22a[_0x2111d8++] = 0x0,
                _0x2bf22a;
        }
        let _0x3a5855 = null
            , _0x1efae1 = new Adapter[(_0x324b8e(0x75c))]()
            , _0x3149a6 = new Adapter[(_0x324b8e(0x75c))]();
        function _0x59afeb(_0x41b670, _0x408abd, _0x186ab9) {
            const _0x241cd4 = _0x324b8e
                , _0x2068c1 = _0x186ab9[_0x241cd4(0xd8)][_0x241cd4(0x2e6)];
            let _0x5649f3;
            if (_0x41b670['scene']['mode'] === Adapter[_0x241cd4(0x6b8)][_0x241cd4(0x9cc)])
                _0x5649f3 = Adapter['Cartesian3'][_0x241cd4(0x6c0)](_0x41b670[_0x241cd4(0x9fa)])[0x0];
            else {
                const _0x309c18 = Adapter[_0x241cd4(0x975)][_0x241cd4(0xa08)](_0x41b670['_viewPosition'][0x0], _0x41b670[_0x241cd4(0x9fa)][0x1], _0x41b670[_0x241cd4(0x9fa)][0x2]);
                _0x5649f3 = _0x2068c1[_0x241cd4(0x856)](_0x309c18, new Adapter['Cartesian3']());
            }
            const _0x24e22b = _0x41b670[_0x241cd4(0x7ca)];
            let _0x22c0ea;
            if (_0x41b670['scene'][_0x241cd4(0x265)] === Adapter[_0x241cd4(0x6b8)][_0x241cd4(0x9cc)])
                _0x22c0ea = Adapter['Cartesian3']['fromDegreesArrayHeights'](_0x24e22b)[0x0];
            else {
                let _0x11d3ae = Adapter['Cartographic'][_0x241cd4(0xa08)](_0x24e22b[0x0], _0x24e22b[0x1], _0x24e22b[0x2]);
                _0x22c0ea = _0x2068c1[_0x241cd4(0x856)](_0x11d3ae, new Adapter[(_0x241cd4(0x85d))]());
            }
            const _0x717c47 = new Adapter[(_0x241cd4(0x85d))]();
            Adapter[_0x241cd4(0x85d)][_0x241cd4(0x7bd)](_0x22c0ea, _0x5649f3, _0x717c47);
            const _0x2c9a72 = function (_0x270bf9) {
                const _0x1f0398 = _0x241cd4;
                if (Adapter[_0x1f0398(0x14b)](_0x3b1e74))
                    return _0x3b1e74;
                const _0x111c09 = new Float32Array(0x8);
                let _0x1f3a13 = 0x0;
                return _0x111c09[_0x1f3a13++] = 0x0,
                    _0x111c09[_0x1f3a13++] = 0x0,
                    _0x111c09[_0x1f3a13++] = 0x0,
                    _0x111c09[_0x1f3a13++] = 0x1,
                    _0x111c09[_0x1f3a13++] = 0x1,
                    _0x111c09[_0x1f3a13++] = 0x1,
                    _0x111c09[_0x1f3a13++] = 0x1,
                    _0x111c09[_0x1f3a13++] = 0x0,
                    _0x3b1e74 = Adapter[_0x1f0398(0x59d)][_0x1f0398(0x57a)]({
                        'context': _0x270bf9,
                        'typedArray': _0x111c09,
                        'usage': Adapter[_0x1f0398(0x3c3)]['STATIC_DRAW']
                    }),
                    _0x3b1e74['vertexArrayDestroyable'] = !0x1,
                    _0x3b1e74;
            }(_0x408abd)
                , _0x5c5245 = function (_0x30e57f, _0xe6fca8) {
                    const _0x594576 = _0x241cd4
                        , _0x766983 = Adapter[_0x594576(0xa57)][_0x594576(0x123)](Adapter[_0x594576(0xa57)][_0x594576(0x2d5)], 0x6);
                    return _0x766983[0x0] = 0x0,
                        _0x766983[0x1] = 0x0,
                        _0x766983[0x2] = 0x0,
                        _0x766983[0x3] = _0xe6fca8['x'],
                        _0x766983[0x4] = _0xe6fca8['y'],
                        _0x766983[0x5] = _0xe6fca8['z'],
                        Adapter[_0x594576(0x59d)]['createVertexBuffer']({
                            'context': _0x30e57f,
                            'typedArray': _0x766983,
                            'usage': Adapter[_0x594576(0x3c3)][_0x594576(0x64e)]
                        });
                }(_0x408abd, _0x717c47)
                , _0x2984b8 = []
                , _0x375ec5 = {
                    'aSideness': 0x0
                };
            _0x2984b8[_0x241cd4(0x745)]({
                'index': _0x375ec5['aSideness'],
                'vertexBuffer': _0x2c9a72,
                'componentsPerAttribute': 0x2,
                'componentDatatype': Adapter['ComponentDatatype'][_0x241cd4(0x2d5)],
                'offsetInBytes': 0x0,
                'strideInBytes': 0x8,
                'normalize': !0x1
            }),
                _0x375ec5['aPosition0'] = 0x1,
                _0x2984b8[_0x241cd4(0x745)]({
                    'index': _0x375ec5[_0x241cd4(0x89a)],
                    'vertexBuffer': _0x5c5245,
                    'componentsPerAttribute': 0x3,
                    'componentDatatype': Adapter[_0x241cd4(0xa57)][_0x241cd4(0x2d5)],
                    'offsetInBytes': 0x0,
                    'strideInBytes': 0xc,
                    'normalize': !0x1,
                    'instanceDivisor': 0x1
                }),
                _0x375ec5[_0x241cd4(0x686)] = 0x2,
                _0x2984b8[_0x241cd4(0x745)]({
                    'index': _0x375ec5[_0x241cd4(0x686)],
                    'vertexBuffer': _0x5c5245,
                    'componentsPerAttribute': 0x3,
                    'componentDatatype': Adapter['ComponentDatatype'][_0x241cd4(0x2d5)],
                    'offsetInBytes': 0xc,
                    'strideInBytes': 0xc,
                    'normalize': !0x1,
                    'instanceDivisor': 0x1
                });
            const _0x3df42d = function (_0x5c76d7) {
                const _0xd79fa = _0x241cd4;
                return Adapter[_0xd79fa(0x14b)](_0x3a5855) || (_0x3a5855 = Adapter[_0xd79fa(0x59d)][_0xd79fa(0x45b)]({
                    'context': _0x5c76d7,
                    'typedArray': _0x1f2fe7(),
                    'usage': Adapter[_0xd79fa(0x3c3)][_0xd79fa(0x64e)],
                    'indexDatatype': Adapter[_0xd79fa(0x98e)]['UNSIGNED_SHORT']
                }),
                    _0x3a5855[_0xd79fa(0xa9a)] = !0x1),
                    _0x3a5855;
            }(_0x408abd)
                , _0x314e8e = new Adapter[(_0x241cd4(0x39a))]({
                    'primitiveType': Adapter['PrimitiveType'][_0x241cd4(0x22e)],
                    'pass': Adapter[_0x241cd4(0x119)][_0x241cd4(0x13e)],
                    'owner': _0x41b670,
                    'boundingVolume': new Adapter[(_0x241cd4(0xa4a))](_0x5649f3, 0x2710),
                    'cull': !0x1
                });
            let _0x5f15cb = new Adapter['Matrix4']();
            Adapter['Matrix4']['clone'](Adapter['Matrix4'][_0x241cd4(0x57f)], _0x5f15cb),
                Adapter['Matrix4']['setTranslation'](_0x5f15cb, _0x5649f3, _0x5f15cb),
                _0x41b670[_0x241cd4(0x80b)][_0x241cd4(0x265)] !== Adapter[_0x241cd4(0x6b8)][_0x241cd4(0x9cc)] && Adapter[_0x241cd4(0x5ab)][_0x241cd4(0x3ee)](_0x4e25c5, _0x5f15cb, _0x5f15cb),
                _0x314e8e[_0x241cd4(0x896)] = _0x5f15cb,
                _0x314e8e['vertexArray'] = new Adapter[(_0x241cd4(0x403))]({
                    'context': _0x408abd,
                    'attributes': _0x2984b8,
                    'indexBuffer': _0x3df42d
                }),
                _0x314e8e['shaderProgram'] = Adapter['ShaderProgram']['fromCache']({
                    'context': _0x408abd,
                    'vertexShaderSource': _0x5bc231,
                    'fragmentShaderSource': _0x5f585a,
                    'attributeLocations': _0x375ec5
                }),
                _0x314e8e['renderState'] = Adapter[_0x241cd4(0x4ca)][_0x241cd4(0x6bf)]({
                    'cull': {
                        'enabled': !0x1
                    },
                    'depthTest': {
                        'enabled': !0x0
                    }
                });
            const _0x39edd3 = _0x41b670['_currentTargetName'];
            _0x314e8e['uniformMap'] = {
                'uRenderTextureMatrix': function () {
                    return _0x41b670['_renderTextureMatrixs']['get'](_0x39edd3);
                },
                'uTexture0': function () {
                    const _0x20b658 = _0x241cd4;
                    return _0x41b670[_0x20b658(0xa37)][_0x20b658(0xa61)](_0x39edd3)['depthTexture'];
                },
                'uVisibleColor': function () {
                    const _0x59fe95 = _0x241cd4;
                    return _0x41b670[_0x59fe95(0x1f3)];
                },
                'uHiddenColor': function () {
                    const _0x4f4f20 = _0x241cd4;
                    return _0x41b670[_0x4f4f20(0x2a7)];
                },
                'uLineWidth': function () {
                    const _0x509eba = _0x241cd4;
                    return _0x41b670[_0x509eba(0x8ac)];
                }
            };
            const _0x2004a4 = Adapter[_0x241cd4(0x39a)][_0x241cd4(0x309)](_0x314e8e);
            _0x2004a4['pass'] = Adapter[_0x241cd4(0x119)]['OPAQUE'],
                _0x2004a4[_0x241cd4(0x9c1)] = Adapter[_0x241cd4(0x4ca)]['fromCache']({
                    'depthMask': !0x1,
                    'depthTest': {
                        'enabled': !0x1
                    },
                    'blending': Adapter[_0x241cd4(0x586)]['ALPHA_BLEND']
                }),
                _0x2004a4[_0x241cd4(0x501)]['uHiddenColor'] = function () {
                    const _0x3af9de = _0x241cd4;
                    return Adapter[_0x3af9de(0x75c)]['clone'](_0x41b670['_hiddenColor'], _0x1efae1),
                        _0x1efae1[_0x3af9de(0x630)] = 0.2,
                        _0x1efae1;
                }
                ,
                _0x2004a4[_0x241cd4(0x501)][_0x241cd4(0x8d0)] = function () {
                    const _0x598891 = _0x241cd4;
                    return Adapter[_0x598891(0x75c)]['clone'](_0x41b670[_0x598891(0x1f3)], _0x3149a6),
                        _0x3149a6[_0x598891(0x630)] = 0.2,
                        _0x3149a6;
                }
                ,
                _0x41b670[_0x241cd4(0xa8a)][_0x241cd4(0x414)](_0x39edd3, [_0x2004a4, _0x314e8e]);
        }
        _0x1c149a[_0x324b8e(0x74f)]['update'] = function (_0x21dcf2) {
            const _0x34f95e = _0x324b8e;
            if (_0x21dcf2[_0x34f95e(0x423)] || _0x21dcf2[_0x34f95e(0xa4c)][_0x34f95e(0x821)] || _0x21dcf2[_0x34f95e(0xa4c)][_0x34f95e(0xa0b)])
                return;
            const _0x2af36c = _0x21dcf2[_0x34f95e(0xd8)];
            for (let _0x107ce4 in this[_0x34f95e(0x400)][_0x34f95e(0x17f)])
                if (this[_0x34f95e(0x400)][_0x34f95e(0x17f)]['hasOwnProperty'](_0x107ce4)) {
                    const _0x526ca4 = this[_0x34f95e(0x400)][_0x34f95e(0xa61)](_0x107ce4);
                    Adapter[_0x34f95e(0x5ab)][_0x34f95e(0x3ee)](_0x526ca4, _0x2af36c[_0x34f95e(0x234)], this[_0x34f95e(0xa2f)][_0x34f95e(0xa61)](_0x107ce4));
                }
            if (this[_0x34f95e(0x2e7)]) {
                if (this[_0x34f95e(0x2e7)] = !0x1,
                    this[_0x34f95e(0x987)]['values'][_0x34f95e(0x376)] < 0x1)
                    return;
                if (this[_0x34f95e(0x2de)]) {
                    this[_0x34f95e(0x2de)] = !0x1;
                    for (let _0x3ec2d6 in this[_0x34f95e(0x987)][_0x34f95e(0x17f)])
                        if (this['_targetPoints'][_0x34f95e(0x17f)][_0x34f95e(0x704)](_0x3ec2d6)) {
                            const _0x3c53d1 = this['_targetPoints']['get'](_0x3ec2d6);
                            this[_0x34f95e(0x7ca)] = _0x3c53d1,
                                this[_0x34f95e(0x4f2)] = _0x3ec2d6,
                                _0x1f0ca9(this, this['scene'][_0x34f95e(0x56c)], _0x21dcf2),
                                _0x59afeb(this, this[_0x34f95e(0x80b)][_0x34f95e(0x56c)], _0x21dcf2);
                        }
                } else
                    _0x1f0ca9(this, this[_0x34f95e(0x80b)][_0x34f95e(0x56c)], _0x21dcf2),
                        _0x59afeb(this, this[_0x34f95e(0x80b)][_0x34f95e(0x56c)], _0x21dcf2);
            }
            if (!_0x21dcf2[_0x34f95e(0xa4c)][_0x34f95e(0x821)]) {
                const _0x4b2142 = this[_0x34f95e(0xa8a)]['length'];
                for (let _0x302688 = 0x0; _0x302688 < _0x4b2142; _0x302688++)
                    if (Adapter['defined'](this['_depthBuffers'][_0x34f95e(0x347)][_0x302688][_0x34f95e(0x882)])) {
                        const _0x50c478 = this['_commands'][_0x34f95e(0x347)][_0x302688];
                        _0x21dcf2['commandList']['push'](_0x50c478[0x0]),
                            _0x21dcf2[_0x34f95e(0x728)][_0x34f95e(0x745)](_0x50c478[0x1]);
                    }
            }
        }
            ,
            _0x1c149a[_0x324b8e(0x74f)]['getBarrierPoint'] = function (_0x3920df, _0x4f262f) {
                const _0x11fc4c = _0x324b8e
                    , _0x403807 = this[_0x11fc4c(0x83f)][_0x11fc4c(0xa61)](_0x3920df);
                return defined(_0x4f262f) && _0x4f262f[_0x11fc4c(0x1a6)](null, _0x403807)(),
                    _0x403807;
            }
            ,
            _0x1c149a[_0x324b8e(0x74f)][_0x324b8e(0x756)] = function () {
                const _0x1dda76 = _0x324b8e;
                this[_0x1dda76(0x6e3)] || (this[_0x1dda76(0x6e3)] = !0x0,
                    this[_0x1dda76(0x80b)][_0x1dda76(0x51f)][_0x1dda76(0x9cb)](this),
                    this['removeListenerFunc'] = this['scene'][_0x1dda76(0xd7)][_0x1dda76(0x80a)]((_0x8f3f63, _0x32b3fe) => {
                        const _0x54d1d6 = _0x1dda76;
                        for (let _0x210f3e in this[_0x54d1d6(0xa37)][_0x54d1d6(0x17f)])
                            this['_depthBuffers'][_0x54d1d6(0x17f)][_0x54d1d6(0x704)](_0x210f3e) && this['_depthBuffers'][_0x54d1d6(0x17f)][_0x210f3e][_0x54d1d6(0xa5b)](_0x8f3f63);
                    }
                        , this));
            }
            ,
            _0x1c149a['prototype'][_0x324b8e(0x3b3)] = function () {
                const _0x548e7d = _0x324b8e;
                this[_0x548e7d(0x6e3)] && (this[_0x548e7d(0x6e3)] = !0x1,
                    this[_0x548e7d(0x1c5)](),
                    this[_0x548e7d(0x80b)][_0x548e7d(0x51f)]['remove'](this));
            }
            ,
            _0x1c149a[_0x324b8e(0x74f)][_0x324b8e(0x575)] = function () {
                return !0x1;
            }
            ,
            _0x1c149a['prototype'][_0x324b8e(0x4dd)] = function () {
                const _0x1985e8 = _0x324b8e;
                return this[_0x1985e8(0x561)](),
                    this[_0x1985e8(0x80b)]['primitives'][_0x1985e8(0x77c)](this),
                    Adapter['destroyObject'](this);
            }
            ;
        var _0x41d56d = _0x324b8e(0x58f)
            , _0x3c31fb = _0x324b8e(0x73c);
        window[_0x324b8e(0x334)] = Cesium;
        const _0x4e5aca = Adapter[_0x324b8e(0x869)]
            , _0x5cec26 = Adapter[_0x324b8e(0xa4a)]
            , _0x2d0805 = Adapter[_0x324b8e(0x85d)]
            , _0x3f2b51 = Adapter['Cartesian4']
            , _0x3f5581 = Adapter[_0x324b8e(0x975)]
            , _0x3f00b4 = Adapter[_0x324b8e(0x75c)]
            , _0x33faaa = Adapter[_0x324b8e(0xa57)]
            , _0x2cad9f = Adapter[_0x324b8e(0x14b)]
            , _0x5eb038 = Adapter[_0x324b8e(0x9ef)]
            , _0x30d0f2 = Adapter[_0x324b8e(0x335)]
            , _0x5d6bf4 = Adapter[_0x324b8e(0x98e)]
            , _0x3f8b41 = Adapter[_0x324b8e(0x16d)]
            , _0x459d76 = Adapter['Matrix4']
            , _0x220b76 = Adapter['PrimitiveType'];
        Adapter[_0x324b8e(0x500)],
            Adapter['CommonNoTextureFp'];
        const _0xb046fe = Adapter['Pass']
            , _0x235b08 = Adapter[_0x324b8e(0x59d)]
            , _0x1fc770 = Adapter['BufferUsage']
            , _0x17f9f6 = Adapter[_0x324b8e(0x187)]
            , _0x2bee13 = Adapter[_0x324b8e(0x39a)]
            , _0x273bc2 = Adapter[_0x324b8e(0x4ca)]
            , _0x1d1123 = Adapter[_0x324b8e(0x5a0)]
            , _0x39300f = Adapter[_0x324b8e(0x403)]
            , _0x445659 = Adapter[_0x324b8e(0x6b8)]
            , _0x1c2554 = Adapter[_0x324b8e(0x2c2)]
            , _0x2a0687 = Adapter[_0x324b8e(0x802)]
            , _0x9a0c2e = Adapter['Transforms'];
        function _0xe7c908(_0x116d36) {
            const _0x56e95a = _0x324b8e;
            if (!_0x2cad9f(_0x116d36))
                throw new _0x30d0f2(_0x56e95a(0x476));
            if (!_0x116d36[_0x56e95a(0x56c)][_0x56e95a(0x8b1)])
                throw new _0x30d0f2(_0x56e95a(0x671));
            if (_0x17f9f6['maximumVertexTextureImageUnits'] < 0x1)
                throw new _0x30d0f2(_0x56e95a(0x6ed));
            this['_displayMode'] = {
                'LINE': 0x0,
                'FACE': 0x1
            },
                this[_0x56e95a(0x80b)] = _0x116d36,
                this[_0x56e95a(0x84c)] = void 0x0,
                this[_0x56e95a(0x7f0)] = void 0x0,
                this[_0x56e95a(0x8b3)] = void 0x0,
                this[_0x56e95a(0x280)] = void 0x0,
                this['_boundingSphere'] = new _0x5cec26(),
                this[_0x56e95a(0x9fa)] = [0x0, 0x0, 0x0],
                this[_0x56e95a(0xa5e)] = 0x0,
                this[_0x56e95a(0x5fb)] = 0x0,
                this[_0x56e95a(0x152)] = this['_displayMode'][_0x56e95a(0xa3f)],
                this['_invertViewMatrix'] = new _0x459d76(),
                this['_invertViewProjectionMatrix'] = new _0x459d76(),
                this[_0x56e95a(0xf6)] = new _0x3f00b4(0x1, 0x0, 0x0, 0x1),
                this['_radius'] = -0x1,
                this[_0x56e95a(0x711)] = !0x1,
                this[_0x56e95a(0x304)] = new _0x4e5aca(),
                this['_update'] = !0x1,
                this['_points'] = [],
                this[_0x56e95a(0x8ac)] = 0x1,
                this['_lineStripCollection'] = _0x116d36[_0x56e95a(0x51f)][_0x56e95a(0x9cb)](new _0x1c2554()),
                this[_0x56e95a(0x6e3)] = !0x1;
        }
        function _0x1f8b16(_0x4cc5b5) {
            const _0x5f0807 = _0x324b8e;
            _0x2cad9f(_0x4cc5b5[_0x5f0807(0x7f0)]) && (_0x4cc5b5[_0x5f0807(0x7f0)][_0x5f0807(0x99e)] = _0x4cc5b5[_0x5f0807(0x7f0)][_0x5f0807(0x99e)] && _0x4cc5b5['_command'][_0x5f0807(0x99e)][_0x5f0807(0x4dd)](),
                _0x4cc5b5[_0x5f0807(0x7f0)][_0x5f0807(0x67b)] = _0x4cc5b5[_0x5f0807(0x7f0)][_0x5f0807(0x67b)] && _0x4cc5b5['_command'][_0x5f0807(0x67b)][_0x5f0807(0x4dd)](),
                _0x4cc5b5[_0x5f0807(0x7f0)] = void 0x0),
                _0x2cad9f(_0x4cc5b5['_lineCommand']) && (_0x4cc5b5[_0x5f0807(0x8b3)][_0x5f0807(0x99e)] = _0x4cc5b5[_0x5f0807(0x8b3)]['vertexArray'] && _0x4cc5b5[_0x5f0807(0x8b3)]['vertexArray']['destroy'](),
                    _0x4cc5b5['_lineCommand']['shaderProgram'] = _0x4cc5b5['_lineCommand'][_0x5f0807(0x67b)] && _0x4cc5b5[_0x5f0807(0x8b3)][_0x5f0807(0x67b)]['destroy'](),
                    _0x4cc5b5[_0x5f0807(0x8b3)] = void 0x0),
                _0x2cad9f(_0x4cc5b5[_0x5f0807(0xa88)]) && (_0x4cc5b5[_0x5f0807(0xa88)]['vertexArray'] = _0x4cc5b5[_0x5f0807(0xa88)][_0x5f0807(0x99e)] && _0x4cc5b5[_0x5f0807(0xa88)][_0x5f0807(0x99e)][_0x5f0807(0x4dd)](),
                    _0x4cc5b5[_0x5f0807(0xa88)][_0x5f0807(0x67b)] = _0x4cc5b5['_faceCommand']['shaderProgram'] && _0x4cc5b5[_0x5f0807(0xa88)][_0x5f0807(0x67b)]['destroy'](),
                    _0x4cc5b5[_0x5f0807(0xa88)] = void 0x0);
        }
        function _0x80fc4(_0x3ecdc5, _0x36941c, _0x159c41) {
            const _0x228dbe = _0x324b8e
                , _0xf53682 = _0x36941c[_0x228dbe(0x142)] + 0x1
                , _0x4a4c56 = _0x33faaa[_0x228dbe(0x123)](_0x33faaa[_0x228dbe(0x2d5)], 0x4 * _0xf53682)
                , _0x45522d = _0x33faaa['createTypedArray'](_0x33faaa[_0x228dbe(0x2d5)], 0x2 * _0xf53682)
                , _0x559fbb = _0x33faaa[_0x228dbe(0x123)](_0x33faaa[_0x228dbe(0x138)], _0xf53682 - 0x1)
                , _0x124836 = _0x33faaa['createTypedArray'](_0x33faaa[_0x228dbe(0x138)], _0xf53682);
            _0x45522d[0x0] = -0x1;
            for (let _0x35a9dd = 0x1; _0x35a9dd < _0xf53682; _0x35a9dd++)
                _0x45522d[0x2 * _0x35a9dd] = _0x35a9dd / (_0xf53682 - 0x1),
                    _0x45522d[0x2 * _0x35a9dd + 0x1] = 0x0;
            for (let _0x3b2df9 = 0x0; _0x3b2df9 < _0xf53682 - 0x1; _0x3b2df9++)
                _0x559fbb[_0x3b2df9] = _0x3b2df9 + 0x1,
                    _0x124836[_0x3b2df9] = _0x3b2df9;
            _0x124836[_0xf53682 - 0x1] = _0xf53682 - 0x1;
            const _0x379baa = _0x235b08[_0x228dbe(0x57a)]({
                'context': _0x36941c,
                'typedArray': _0x4a4c56,
                'usage': _0x1fc770['STATIC_DRAW']
            })
                , _0x44d96d = []
                , _0x5436dc = {
                    'aPosition': 0x0
                };
            _0x44d96d[_0x228dbe(0x745)]({
                'index': _0x5436dc['aPosition'],
                'vertexBuffer': _0x379baa,
                'componentsPerAttribute': 0x4,
                'componentDatatype': _0x33faaa['FLOAT'],
                'offsetInBytes': 0x0,
                'strideInBytes': 0x10,
                'normalize': !0x1
            }),
                _0x5436dc[_0x228dbe(0x724)] = 0x1;
            const _0x3786bd = _0x235b08[_0x228dbe(0x57a)]({
                'context': _0x36941c,
                'typedArray': _0x45522d,
                'usage': _0x1fc770[_0x228dbe(0x64e)]
            });
            _0x44d96d[_0x228dbe(0x745)]({
                'index': _0x5436dc[_0x228dbe(0x724)],
                'vertexBuffer': _0x3786bd,
                'componentsPerAttribute': 0x2,
                'componentDatatype': _0x33faaa[_0x228dbe(0x2d5)],
                'offsetInBytes': 0x0,
                'strideInBytes': 0x8,
                'normalize': !0x1
            });
            const _0x14a063 = _0x235b08[_0x228dbe(0x45b)]({
                'context': _0x36941c,
                'typedArray': _0x559fbb,
                'usage': _0x1fc770[_0x228dbe(0x64e)],
                'indexDatatype': _0x5d6bf4[_0x228dbe(0x138)]
            })
                , _0x2bf2d2 = _0x235b08[_0x228dbe(0x45b)]({
                    'context': _0x36941c,
                    'typedArray': _0x124836,
                    'usage': _0x1fc770['STATIC_DRAW'],
                    'indexDatatype': _0x5d6bf4[_0x228dbe(0x138)]
                })
                , _0x1dd723 = {
                    'uSkylineColor': function () {
                        const _0x4aa2ae = _0x228dbe;
                        return _0x3ecdc5[_0x4aa2ae(0xf6)];
                    }
                };
            _0x3ecdc5[_0x228dbe(0x8b3)] = new _0x2bee13({
                'primitiveType': _0x220b76[_0x228dbe(0x979)],
                'modelMatrix': _0x3ecdc5[_0x228dbe(0x454)],
                'boundingVolume': _0x3ecdc5[_0x228dbe(0xc5)],
                'pass': _0xb046fe[_0x228dbe(0x13e)],
                'owner': _0x3ecdc5,
                'cull': !0x1
            }),
                _0x3ecdc5[_0x228dbe(0x8b3)]['vertexArray'] = new _0x39300f({
                    'context': _0x36941c,
                    'attributes': _0x44d96d,
                    'indexBuffer': _0x14a063
                }),
                _0x3ecdc5[_0x228dbe(0x8b3)][_0x228dbe(0x67b)] = _0x1d1123[_0x228dbe(0x6bf)]({
                    'context': _0x36941c,
                    'vertexShaderSource': _0x41d56d,
                    'fragmentShaderSource': _0x3c31fb,
                    'attributeLocations': _0x5436dc
                }),
                _0x3ecdc5['_lineCommand'][_0x228dbe(0x9c1)] = _0x273bc2[_0x228dbe(0x6bf)]({
                    'cull': {
                        'enabled': !0x1
                    },
                    'depthTest': {
                        'enabled': !0x0
                    }
                }),
                _0x3ecdc5[_0x228dbe(0x8b3)][_0x228dbe(0x501)] = _0x1dd723,
                _0x3ecdc5[_0x228dbe(0xa88)] = new _0x2bee13({
                    'primitiveType': _0x220b76[_0x228dbe(0x4f5)],
                    'modelMatrix': _0x3ecdc5['_invertViewMatrix'],
                    'boundingVolume': _0x3ecdc5[_0x228dbe(0xc5)],
                    'pass': _0xb046fe[_0x228dbe(0x13e)],
                    'owner': _0x3ecdc5,
                    'cull': !0x1
                }),
                _0x3ecdc5['_faceCommand'][_0x228dbe(0x99e)] = new _0x39300f({
                    'context': _0x36941c,
                    'attributes': _0x44d96d,
                    'indexBuffer': _0x2bf2d2
                }),
                _0x3ecdc5[_0x228dbe(0xa88)][_0x228dbe(0x67b)] = _0x1d1123[_0x228dbe(0x6bf)]({
                    'context': _0x36941c,
                    'vertexShaderSource': _0x41d56d,
                    'fragmentShaderSource': _0x3c31fb,
                    'attributeLocations': _0x5436dc
                }),
                _0x3ecdc5[_0x228dbe(0xa88)][_0x228dbe(0x9c1)] = _0x273bc2[_0x228dbe(0x6bf)]({
                    'cull': {
                        'enabled': !0x1
                    },
                    'depthTest': {
                        'enabled': !0x0
                    }
                }),
                _0x3ecdc5[_0x228dbe(0xa88)]['uniformMap'] = _0x1dd723;
        }
        Object[_0x324b8e(0xa38)](_0xe7c908[_0x324b8e(0x74f)], {
            'viewPosition': {
                'get': function () {
                    return this['_viewPosition'];
                },
                'set': function (_0x1b68d4) {
                    const _0x1c509a = _0x324b8e;
                    this[_0x1c509a(0x9fa)] = _0x1b68d4,
                        this[_0x1c509a(0x2e7)] = !0x0;
                }
            },
            'color': {
                'get': function () {
                    const _0x2a78bd = _0x324b8e;
                    return this[_0x2a78bd(0xf6)];
                },
                'set': function (_0x1857e3) {
                    const _0x4208e1 = _0x324b8e;
                    _0x2cad9f(_0x1857e3) && (this[_0x4208e1(0xf6)] = _0x3f00b4[_0x4208e1(0x157)](_0x1857e3, this[_0x4208e1(0xf6)]));
                }
            },
            'direction': {
                'get': function () {
                    return this['_direction'];
                },
                'set': function (_0x2f6235) {
                    const _0x39ebe7 = _0x324b8e;
                    this[_0x39ebe7(0xa5e)] = _0x2f6235,
                        this[_0x39ebe7(0x2e7)] = !0x0;
                }
            },
            'pitch': {
                'get': function () {
                    const _0x2de612 = _0x324b8e;
                    return this[_0x2de612(0x5fb)];
                },
                'set': function (_0x3b253c) {
                    const _0x3e405b = _0x324b8e;
                    this[_0x3e405b(0x5fb)] = _0x3b253c,
                        this[_0x3e405b(0x2e7)] = !0x0;
                }
            },
            'displayMode': {
                'get': function () {
                    const _0x3d7313 = _0x324b8e;
                    return this[_0x3d7313(0x804)];
                }
            },
            'displayStyle': {
                'get': function () {
                    const _0x1f7ba3 = _0x324b8e;
                    return this[_0x1f7ba3(0x152)];
                },
                'set': function (_0x5c56ec) {
                    const _0x1ecd80 = _0x324b8e;
                    this[_0x1ecd80(0x152)] = _0x5c56ec;
                }
            },
            'radius': {
                'get': function () {
                    const _0x50acbe = _0x324b8e;
                    return this[_0x50acbe(0x9dd)];
                },
                'set': function (_0xfdb687) {
                    const _0x3dfa42 = _0x324b8e;
                    this[_0x3dfa42(0x9dd)] = _0xfdb687,
                        this[_0x3dfa42(0x2e7)] = !0x0;
                }
            },
            'lineWidth': {
                'get': function () {
                    return this['_lineWidth'];
                },
                'set': function (_0x339cfa) {
                    const _0x576d08 = _0x324b8e;
                    this[_0x576d08(0x8ac)] = _0x339cfa,
                        this[_0x576d08(0x2e7)] = !0x0;
                }
            },
            'ignoreGlobe': {
                'get': function () {
                    return this['_ignoreGlobe'];
                },
                'set': function (_0x2ce699) {
                    const _0x59deb0 = _0x324b8e;
                    this['_ignoreGlobe'] = _0x2ce699,
                        _0x2cad9f(this[_0x59deb0(0x84c)]) && (this[_0x59deb0(0x84c)][_0x59deb0(0x5bf)]['isGlobalVisible'] = !this[_0x59deb0(0x711)],
                            this['_update'] = !0x0);
                }
            }
        }),
            _0xe7c908[_0x324b8e(0x74f)][_0x324b8e(0x4bc)] = function (_0x44adfd) {
                const _0x4d6a8e = _0x324b8e;
                if (!_0x44adfd[_0x4d6a8e(0x423)]) {
                    this[_0x4d6a8e(0x2e7)] && (_0x2cad9f(this[_0x4d6a8e(0x84c)]) || (this[_0x4d6a8e(0x84c)] = new _0x42e1f3(this[_0x4d6a8e(0x80b)][_0x4d6a8e(0x56c)]),
                        this[_0x4d6a8e(0x84c)]['environmentVisible'][_0x4d6a8e(0x816)] = !this['_ignoreGlobe']),
                        this[_0x4d6a8e(0x2e7)] = !0x1,
                        _0x1f8b16(this),
                        function (_0x4ebc6d, _0x4d46b8, _0x1f0a22) {
                            const _0xecb5eb = _0x4d6a8e
                                , _0x184e96 = _0x4ebc6d[_0xecb5eb(0x9fa)][0x2];
                            let _0x47d68b = 0.0005 * _0x184e96;
                            _0x47d68b = _0x47d68b < 0x1 ? 0x1 : _0x47d68b;
                            const _0x4bb131 = Math[_0xecb5eb(0xa8b)](_0x184e96) + 0x615299;
                            let _0x2a1296 = Math[_0xecb5eb(0x3d2)]((_0x4bb131 - 0x615299) * (_0x4bb131 + 0x615299));
                            _0x184e96 < 0x0 && _0x2a1296 < 0xc350 ? _0x2a1296 = 0xc350 : _0x184e96 < 0x64 && _0x184e96 > 0x0 && (_0x2a1296 *= 0x32);
                            const _0x51c9d3 = _0x4ebc6d['_direction'] * _0x3f8b41['RADIANS_PER_DEGREE']
                                , _0x459115 = _0x4ebc6d[_0xecb5eb(0x5fb)] * _0x3f8b41[_0xecb5eb(0x7ce)]
                                , _0x3c25b0 = _0x1f0a22[_0xecb5eb(0xd8)]
                                , _0x3a2131 = _0x3c25b0[_0xecb5eb(0x2e6)];
                            let _0x19d5ae;
                            if (_0x4ebc6d['scene'][_0xecb5eb(0x265)] === _0x445659[_0xecb5eb(0x9cc)])
                                _0x19d5ae = _0x2d0805[_0xecb5eb(0x6c0)](_0x4ebc6d[_0xecb5eb(0x9fa)])[0x0];
                            else {
                                const _0x1b6f4d = _0x3f5581[_0xecb5eb(0xa08)](_0x4ebc6d['_viewPosition'][0x0], _0x4ebc6d[_0xecb5eb(0x9fa)][0x1], _0x4ebc6d[_0xecb5eb(0x9fa)][0x2]);
                                _0x19d5ae = _0x3a2131[_0xecb5eb(0x856)](_0x1b6f4d, new _0x2d0805());
                            }
                            let _0x31b53f = _0x3c25b0['frustum'][_0xecb5eb(0x797)]
                                , _0x2710c5 = _0x3c25b0[_0xecb5eb(0x791)]['far'];
                            const _0x4e0e5e = new _0x2d0805();
                            let _0xc2de5e = _0x3c25b0['heading']
                                , _0x297ad1 = _0x3c25b0[_0xecb5eb(0x622)];
                            _0x2d0805['clone'](_0x3c25b0[_0xecb5eb(0x15e)], _0x4e0e5e),
                                _0x4ebc6d[_0xecb5eb(0x84c)][_0xecb5eb(0x2ff)] = !0x0,
                                _0x4ebc6d[_0xecb5eb(0x84c)][_0xecb5eb(0xcb)] = function () {
                                    const _0x466f61 = _0xecb5eb;
                                    _0x31b53f = _0x3c25b0[_0x466f61(0x791)][_0x466f61(0x797)],
                                        _0x2710c5 = _0x3c25b0[_0x466f61(0x791)][_0x466f61(0x44a)],
                                        _0xc2de5e = _0x3c25b0[_0x466f61(0x97a)],
                                        _0x297ad1 = _0x3c25b0[_0x466f61(0x622)],
                                        _0x2d0805['clone'](_0x3c25b0[_0x466f61(0x15e)], _0x4e0e5e),
                                        _0x3c25b0['frustum']['near'] = _0x47d68b,
                                        _0x3c25b0['frustum'][_0x466f61(0x44a)] = _0x2a1296;
                                    const _0x238863 = {
                                        'destination': _0x19d5ae,
                                        'orientation': {
                                            'heading': _0x51c9d3,
                                            'pitch': _0x459115
                                        },
                                        'convert': !0x1
                                    };
                                    if (_0x3c25b0[_0x466f61(0x10c)](_0x238863),
                                        _0x4ebc6d['skylineCamera'] = _0x238863,
                                        _0x459d76[_0x466f61(0x157)](_0x3c25b0[_0x466f61(0x234)], _0x4ebc6d[_0x466f61(0x454)]),
                                        _0x459d76[_0x466f61(0x3ee)](_0x3c25b0[_0x466f61(0x791)]['projectionMatrix'], _0x3c25b0[_0x466f61(0x48f)], _0x4ebc6d[_0x466f61(0x8ff)]),
                                        _0x459d76[_0x466f61(0x20e)](_0x4ebc6d['_invertViewProjectionMatrix'], _0x4ebc6d[_0x466f61(0x8ff)]),
                                        _0x4ebc6d['scene']['mode'] === _0x445659['SCENE3D'])
                                        _0x2d0805[_0x466f61(0x157)](_0x19d5ae, _0x4ebc6d[_0x466f61(0xc5)][_0x466f61(0x6f1)]);
                                    else {
                                        const _0x4839f7 = _0x9a0c2e[_0x466f61(0x310)](_0x2d0805[_0x466f61(0xa08)](_0x4ebc6d[_0x466f61(0x9fa)][0x0], _0x4ebc6d[_0x466f61(0x9fa)][0x1], _0x4ebc6d[_0x466f61(0x9fa)][0x2]));
                                        _0x2d0805[_0x466f61(0x157)](_0x4839f7, _0x4ebc6d[_0x466f61(0xc5)][_0x466f61(0x6f1)]);
                                    }
                                    _0x4ebc6d[_0x466f61(0xc5)][_0x466f61(0x1cc)] = _0x2a1296;
                                }
                                ,
                                _0x4ebc6d[_0xecb5eb(0x84c)]['endFunc'] = function () {
                                    const _0x40f45f = _0xecb5eb;
                                    if (_0x2cad9f(_0x4ebc6d[_0x40f45f(0x8b3)])) {
                                        _0x4ebc6d[_0x40f45f(0x2ac)][_0x40f45f(0x376)] = 0x0;
                                        const _0x443146 = _0x4d46b8[_0x40f45f(0x5ce)]({
                                            'framebuffer': _0x4ebc6d[_0x40f45f(0x84c)][_0x40f45f(0x882)]
                                        });
                                        let _0xd5bd12 = _0x4ebc6d[_0x40f45f(0x8b3)][_0x40f45f(0x99e)]['getAttribute'](0x0);
                                        const _0x40a32b = 0x0
                                            , _0x359f26 = 0x4 * (_0x4d46b8['drawingBufferWidth'] + 0x1)
                                            , _0x3494ca = _0x33faaa[_0x40f45f(0x123)](_0xd5bd12[_0x40f45f(0xa55)], _0x359f26);
                                        _0x3494ca[0x0] = 0x0,
                                            _0x3494ca[0x1] = 0x0,
                                            _0x3494ca[0x2] = 0x0,
                                            _0x3494ca[0x3] = 0x1,
                                            0x4 * _0x359f26 !== _0xd5bd12['vertexBuffer'][_0x40f45f(0x443)] && (_0x1f8b16(_0x4ebc6d),
                                                _0x80fc4(_0x4ebc6d, _0x4d46b8),
                                                _0xd5bd12 = _0x4ebc6d[_0x40f45f(0x8b3)][_0x40f45f(0x99e)][_0x40f45f(0x7b9)](0x0));
                                        const _0x574935 = new _0x3f2b51()
                                            , _0x5f1e32 = new _0x3f2b51(0x1, 0x1 / 0xff, 0x1 / 0xfe01, 0x1 / 0x99246ff)
                                            , _0x4e6e29 = _0x4d46b8[_0x40f45f(0x37c)]
                                            , _0x1081b9 = _0x4e6e29[_0x40f45f(0x258)]
                                            , _0x88b3ce = _0x4e6e29[_0x40f45f(0x354)]
                                            , _0x311b9f = _0x88b3ce['x']
                                            , _0x55c39e = _0x88b3ce['y'];
                                        for (let _0x1eb8a2 = 0x0; _0x1eb8a2 < _0x4d46b8[_0x40f45f(0x142)]; _0x1eb8a2++) {
                                            let _0x1a64f2 = 0x0
                                                , _0x277570 = _0x4d46b8[_0x40f45f(0x35c)] - 0x1;
                                            for (; _0x277570 > -0x1; _0x277570--) {
                                                const _0x3e8168 = 0x4 * (_0x4d46b8[_0x40f45f(0x142)] * _0x277570 + _0x1eb8a2)
                                                    , _0x50e1ea = _0x3f2b51[_0x40f45f(0x64f)](_0x443146, _0x3e8168, _0x574935);
                                                if (_0x3f2b51[_0x40f45f(0x555)](_0x50e1ea, 0xff, _0x50e1ea),
                                                    _0x1a64f2 = _0x3f2b51[_0x40f45f(0x908)](_0x50e1ea, _0x5f1e32),
                                                    _0x1a64f2 > 0x0)
                                                    break;
                                                _0x1a64f2 = 0x0;
                                            }
                                            if (_0x4ebc6d[_0x40f45f(0x80b)][_0x40f45f(0x4be)]['useLogDepth'] && _0x1a64f2 > 0x0) {
                                                const _0x50e4e6 = _0x1a64f2 * _0x4e6e29[_0x40f45f(0x218)];
                                                _0x1a64f2 = _0x55c39e * (0x1 - _0x311b9f / (Math['pow'](0x2, _0x50e4e6) - 0x1 + _0x311b9f)) / (_0x55c39e - _0x311b9f);
                                            }
                                            _0x574935['x'] = _0x1eb8a2 / _0x4d46b8[_0x40f45f(0x142)] * 0x2 - 0x1,
                                                _0x574935['y'] = _0x277570 / _0x4d46b8[_0x40f45f(0x35c)] * 0x2 - 0x1,
                                                _0x574935['z'] = 0x2 * _0x1a64f2 - 0x1,
                                                _0x574935['w'] = 0x1,
                                                _0x459d76[_0x40f45f(0xa2d)](_0x1081b9, _0x574935, _0x574935);
                                            const _0x593ce1 = new _0x2d0805(_0x574935['x'], _0x574935['y'], _0x574935['z']);
                                            _0x2d0805[_0x40f45f(0x555)](_0x593ce1, _0x574935['w'], _0x593ce1);
                                            const _0x6009c1 = _0x2d0805['magnitude'](_0x593ce1);
                                            _0x4ebc6d[_0x40f45f(0x9dd)] > 0x0 && _0x6009c1 > _0x4ebc6d['_radius'] && (_0x2d0805[_0x40f45f(0x7bc)](_0x593ce1, _0x593ce1),
                                                _0x593ce1['x'] *= _0x4ebc6d[_0x40f45f(0x9dd)],
                                                _0x593ce1['y'] *= _0x4ebc6d[_0x40f45f(0x9dd)],
                                                _0x593ce1['z'] *= _0x4ebc6d[_0x40f45f(0x9dd)]),
                                                _0x574935['x'] = _0x593ce1['x'],
                                                _0x574935['y'] = _0x593ce1['y'],
                                                _0x574935['z'] = _0x593ce1['z'],
                                                _0x574935['w'] = 0x1;
                                            let _0x2d55ee = _0x2d0805[_0x40f45f(0x6c3)](_0x459d76['multiplyByVector'](_0x4ebc6d['_invertViewMatrix'], _0x574935, new _0x3f2b51()));
                                            if (_0x4ebc6d[_0x40f45f(0x80b)][_0x40f45f(0x265)] === _0x445659[_0x40f45f(0x35d)] && (_0x2d55ee = _0x9a0c2e[_0x40f45f(0x93e)](_0x2d55ee)),
                                                _0x4ebc6d['_points'][_0x40f45f(0x376)] > 0x0) {
                                                const _0x219fb3 = _0x2d0805[_0x40f45f(0xaa5)](_0x4ebc6d[_0x40f45f(0x2ac)][_0x4ebc6d['_points'][_0x40f45f(0x376)] - 0x1], _0x2d55ee);
                                                if (_0x219fb3 > 0x3e8) {
                                                    const _0x181c5c = Math[_0x40f45f(0x826)](_0x219fb3 / 0x3e8);
                                                    for (let _0x40e3c2 = 0x1; _0x40e3c2 < _0x181c5c; _0x40e3c2++) {
                                                        let _0x5a9da6 = new _0x2d0805();
                                                        _0x5a9da6 = _0x2d0805[_0x40f45f(0x687)](_0x4ebc6d[_0x40f45f(0x2ac)][_0x4ebc6d[_0x40f45f(0x2ac)]['length'] - 0x1], _0x2d55ee, _0x40e3c2 / _0x181c5c, _0x5a9da6),
                                                            _0x4ebc6d[_0x40f45f(0x2ac)]['push'](_0x5a9da6);
                                                    }
                                                }
                                            }
                                            _0x4ebc6d[_0x40f45f(0x2ac)][_0x40f45f(0x745)](_0x2d55ee),
                                                _0x3494ca[0x4 * (_0x1eb8a2 + 0x1)] = _0x574935['x'],
                                                _0x3494ca[0x4 * (_0x1eb8a2 + 0x1) + 0x1] = _0x574935['y'],
                                                _0x3494ca[0x4 * (_0x1eb8a2 + 0x1) + 0x2] = _0x574935['z'],
                                                _0x3494ca[0x4 * (_0x1eb8a2 + 0x1) + 0x3] = _0x574935['w'];
                                        }
                                        _0xd5bd12['vertexBuffer'][_0x40f45f(0x608)](_0x3494ca, _0x40a32b);
                                        for (let _0x5ee5db = 0x0; _0x5ee5db < _0x4ebc6d['_limitBodys'][_0x40f45f(0x347)]['length']; _0x5ee5db++)
                                            _0x4ebc6d['_limitBodys'][_0x40f45f(0x347)][_0x5ee5db][_0x40f45f(0x4bc)](_0x4d46b8, _0x3c25b0);
                                        _0x4ebc6d[_0x40f45f(0x618)]['removeAll'](),
                                            _0x4ebc6d['_lineWidth'] >= 0x2 && _0x4ebc6d[_0x40f45f(0x618)][_0x40f45f(0x9cb)]({
                                                'width': _0x4ebc6d['_lineWidth'],
                                                'positions': _0x4ebc6d[_0x40f45f(0x2ac)],
                                                'material': _0x2a0687[_0x40f45f(0x427)](_0x2a0687[_0x40f45f(0x517)], {
                                                    'color': _0x4ebc6d[_0x40f45f(0xf6)]
                                                })
                                            });
                                    }
                                    _0x3c25b0[_0x40f45f(0x10c)]({
                                        'destination': _0x4e0e5e,
                                        'orientation': {
                                            'heading': _0xc2de5e,
                                            'pitch': _0x297ad1,
                                            'roll': _0x3c25b0[_0x40f45f(0x42e)]
                                        },
                                        'convert': !0x1
                                    }),
                                        _0x3c25b0[_0x40f45f(0x791)]['near'] = _0x31b53f,
                                        _0x3c25b0['frustum'][_0x40f45f(0x44a)] = _0x2710c5,
                                        _0x4ebc6d[_0x40f45f(0x84c)][_0x40f45f(0x2ff)] = !0x1;
                                }
                                ;
                        }(this, this[_0x4d6a8e(0x80b)][_0x4d6a8e(0x56c)], _0x44adfd),
                        _0x80fc4(this, this[_0x4d6a8e(0x80b)][_0x4d6a8e(0x56c)]));
                    for (let _0x39f810 = 0x0; _0x39f810 < this['_limitBodys'][_0x4d6a8e(0x347)][_0x4d6a8e(0x376)]; _0x39f810++) {
                        const _0x41a811 = this[_0x4d6a8e(0x304)][_0x4d6a8e(0x347)][_0x39f810];
                        _0x2cad9f(_0x41a811) && _0x2cad9f(_0x41a811['_command']) && _0x44adfd[_0x4d6a8e(0x728)][_0x4d6a8e(0x745)](_0x41a811[_0x4d6a8e(0x7f0)]);
                    }
                    this['_displayStyle'] === this[_0x4d6a8e(0x804)][_0x4d6a8e(0xa3f)] ? _0x2cad9f(this['_lineCommand']) && this[_0x4d6a8e(0x8ac)] < 0x2 && _0x44adfd[_0x4d6a8e(0x728)][_0x4d6a8e(0x745)](this[_0x4d6a8e(0x8b3)]) : _0x2cad9f(this[_0x4d6a8e(0xa88)]) && _0x44adfd[_0x4d6a8e(0x728)][_0x4d6a8e(0x745)](this['_faceCommand']);
                }
            }
            ,
            _0xe7c908[_0x324b8e(0x74f)][_0x324b8e(0x23f)] = function () {
                const _0x43cd0e = _0x324b8e;
                if (this[_0x43cd0e(0x2e7)])
                    return;
                const _0x374ace = this[_0x43cd0e(0x80b)][_0x43cd0e(0x56c)]
                    , _0x2782bc = _0x374ace['readPixels']({
                        'framebuffer': this[_0x43cd0e(0x84c)]['framebuffer']
                    });
                _0x374ace[_0x43cd0e(0x142)];
                const _0x40a00d = []
                    , _0x5404a6 = []
                    , _0x269ef6 = []
                    , _0x149526 = []
                    , _0x37476f = new _0x3f2b51()
                    , _0x4ef077 = new _0x3f2b51(0x1, 0x1 / 0xff, 0x1 / 0xfe01, 0x1 / 0x99246ff);
                for (let _0x19c4b4 = 0x0; _0x19c4b4 < _0x374ace[_0x43cd0e(0x142)]; _0x19c4b4++) {
                    let _0x1b6351 = 0x0;
                    for (let _0x224d10 = _0x374ace[_0x43cd0e(0x35c)] - 0x1; _0x224d10 > -0x1; _0x224d10--) {
                        const _0x289413 = 0x4 * (_0x374ace[_0x43cd0e(0x142)] * _0x224d10 + _0x19c4b4)
                            , _0x46f8df = _0x3f2b51['unpack'](_0x2782bc, _0x289413, _0x37476f);
                        if (_0x3f2b51[_0x43cd0e(0x555)](_0x46f8df, 0xff, _0x46f8df),
                            _0x1b6351 = _0x3f2b51[_0x43cd0e(0x908)](_0x46f8df, _0x4ef077),
                            _0x1b6351 > 0x0) {
                            _0x40a00d['push'](_0x19c4b4 / _0x374ace[_0x43cd0e(0x142)]),
                                _0x5404a6[_0x43cd0e(0x745)](_0x224d10 / _0x374ace[_0x43cd0e(0x35c)]),
                                _0x269ef6[_0x43cd0e(0x745)](_0x19c4b4),
                                _0x149526['push'](_0x224d10);
                            break;
                        }
                    }
                }
                return {
                    'x': _0x40a00d,
                    'y': _0x5404a6,
                    'drawingBufferXArr': _0x269ef6,
                    'drawingBufferYArr': _0x149526
                };
            }
            ,
            _0xe7c908[_0x324b8e(0x74f)][_0x324b8e(0xa72)] = function () {
                const _0x5e6f1f = _0x324b8e;
                if (this[_0x5e6f1f(0x2e7)])
                    return;
                const _0x16dc85 = []
                    , _0x259cb8 = []
                    , _0x361ff1 = [];
                let _0x34b417;
                for (let _0x46dc5e = 0x0, _0xb0b1c3 = this[_0x5e6f1f(0x2ac)][_0x5e6f1f(0x376)]; _0x46dc5e < _0xb0b1c3; _0x46dc5e++)
                    _0x34b417 = _0x3f5581[_0x5e6f1f(0x9d0)](this['_points'][_0x46dc5e]),
                        _0x16dc85[_0x5e6f1f(0x745)](_0x34b417[_0x5e6f1f(0x547)] * _0x3f8b41[_0x5e6f1f(0x1b6)]),
                        _0x259cb8[_0x5e6f1f(0x745)](_0x34b417[_0x5e6f1f(0x21c)] * _0x3f8b41[_0x5e6f1f(0x1b6)]),
                        _0x361ff1['push'](_0x34b417[_0x5e6f1f(0x88d)]);
                return {
                    'x': _0x16dc85,
                    'y': _0x259cb8,
                    'z': _0x361ff1
                };
            }
            ,
            _0xe7c908[_0x324b8e(0x74f)][_0x324b8e(0x94a)] = function (_0x51b770) {
                const _0x459fbf = _0x324b8e
                    , _0x875fdb = _0x51b770[_0x459fbf(0x770)]
                    , _0x14e0e4 = _0x51b770['position'];
                if (!_0x2cad9f(_0x875fdb) || !_0x2cad9f(_0x14e0e4))
                    return !0x1;
                let _0x15378b = this[_0x459fbf(0x304)]['get'](_0x875fdb);
                if (_0x2cad9f(_0x15378b))
                    return !0x1;
                _0x15378b = new LimitBody(_0x14e0e4, this),
                    this[_0x459fbf(0x304)][_0x459fbf(0x414)](_0x875fdb, _0x15378b),
                    _0x2cad9f(this[_0x459fbf(0x84c)]) && (this['_depthBuffer'][_0x459fbf(0x2ff)] = !0x0);
            }
            ,
            _0xe7c908[_0x324b8e(0x74f)][_0x324b8e(0x8d7)] = function (_0x24d0ef) {
                const _0x7ca2bb = _0x324b8e;
                return !!this[_0x7ca2bb(0x304)][_0x7ca2bb(0x77c)](_0x24d0ef);
            }
            ,
            _0xe7c908['prototype'][_0x324b8e(0x106)] = function () {
                const _0x1b8a2a = _0x324b8e;
                for (let _0x42e686 = 0x0; _0x42e686 < this['_limitBodys'][_0x1b8a2a(0x347)]['length']; _0x42e686++)
                    this[_0x1b8a2a(0x304)][_0x1b8a2a(0x347)][_0x42e686][_0x1b8a2a(0x4dd)](),
                        this[_0x1b8a2a(0x304)][_0x1b8a2a(0x347)][_0x42e686] = null;
                this[_0x1b8a2a(0x304)][_0x1b8a2a(0x307)]();
            }
            ,
            _0xe7c908['prototype']['getSkylineSectorParameter'] = function () {
                const _0x19052b = _0x324b8e
                    , _0x5f59e4 = this[_0x19052b(0xa72)]();
                if (!_0x2cad9f(_0x5f59e4))
                    return;
                const _0x3f7a0b = _0x5f59e4['x']
                    , _0x46f0b8 = _0x5f59e4['y']
                    , _0x3c1fa3 = _0x5f59e4['z'];
                let _0x4e185e, _0x1fea1e, _0x2fb56a;
                const _0x22ea4a = new Point3Ds();
                for (let _0x4021eb = 0x0, _0x320811 = _0x3f7a0b[_0x19052b(0x376)]; _0x4021eb < _0x320811; _0x4021eb++)
                    _0x4e185e = _0x3f7a0b[_0x4021eb],
                        _0x1fea1e = _0x46f0b8[_0x4021eb],
                        _0x2fb56a = _0x3c1fa3[_0x4021eb],
                        _0x22ea4a[_0x19052b(0x9cb)](new Point3D(_0x4e185e, _0x1fea1e, _0x2fb56a));
                return {
                    'geoLine3D': new GeoLine3D([_0x22ea4a]),
                    'viewPos': new Point3D(this['_viewPosition'][0x0], this[_0x19052b(0x9fa)][0x1], this[_0x19052b(0x9fa)][0x2])
                };
            }
            ,
            _0xe7c908[_0x324b8e(0x74f)][_0x324b8e(0x756)] = function () {
                const _0x14302d = _0x324b8e;
                this[_0x14302d(0x6e3)] || (this[_0x14302d(0x6e3)] = !0x0,
                    this[_0x14302d(0x80b)][_0x14302d(0x51f)][_0x14302d(0x9cb)](this),
                    this[_0x14302d(0x1c5)] = this[_0x14302d(0x80b)][_0x14302d(0xd7)][_0x14302d(0x80a)](_0x40a9e2 => {
                        const _0x3238a3 = _0x14302d;
                        _0x2cad9f(this[_0x3238a3(0x84c)]) && this[_0x3238a3(0x84c)]['renderToTexture'](_0x40a9e2);
                    }
                        , this));
            }
            ,
            _0xe7c908[_0x324b8e(0x74f)]['clear'] = function () {
                const _0x147689 = _0x324b8e;
                this['isBuild'] && (this[_0x147689(0x6e3)] = !0x1,
                    this[_0x147689(0x106)](),
                    this[_0x147689(0x618)][_0x147689(0x307)](),
                    this['removeListenerFunc'](),
                    this[_0x147689(0x80b)]['primitives'][_0x147689(0x77c)](this));
            }
            ,
            _0xe7c908['prototype'][_0x324b8e(0x575)] = function () {
                return !0x1;
            }
            ,
            _0xe7c908['prototype'][_0x324b8e(0x4dd)] = function () {
                const _0x40d0ad = _0x324b8e;
                return this[_0x40d0ad(0x84c)] = this['_depthBuffer'] && this[_0x40d0ad(0x84c)][_0x40d0ad(0x4dd)](),
                    _0x1f8b16(this),
                    this[_0x40d0ad(0x106)](),
                    this[_0x40d0ad(0x80b)][_0x40d0ad(0x51f)][_0x40d0ad(0x77c)](this),
                    _0x5eb038(this);
            }
            ;
        var _0x238463 = _0x324b8e(0xaaa);
        function _0x4d4ee0(_0x6e5d0d) {
            const _0x40efc2 = _0x324b8e;
            this[_0x40efc2(0x80b)] = _0x6e5d0d,
                this[_0x40efc2(0x661)] = new _0x42e1f3(_0x6e5d0d[_0x40efc2(0x65e)]),
                this[_0x40efc2(0xec)] = new _0x42e1f3(_0x6e5d0d[_0x40efc2(0x65e)]),
                this['segmentCount'] = 0x14,
                this[_0x40efc2(0x9fa)] = [0x0, 0x0, 0x0],
                this[_0x40efc2(0xa5e)] = 0x0,
                this[_0x40efc2(0x5fb)] = 0x0,
                this[_0x40efc2(0xa5a)] = 0x5a,
                this['_verticalFov'] = 0x3c,
                this[_0x40efc2(0x2ef)] = 0x64,
                this[_0x40efc2(0x53d)] = new Adapter['Color'](0x0, 0x1, 0x0, 0.5),
                this[_0x40efc2(0x43f)] = new Adapter[(_0x40efc2(0x75c))](0x1, 0x0, 0x0, 0.5),
                this[_0x40efc2(0x25b)] = new Adapter[(_0x40efc2(0x75c))](0x1, 0x1, 0x1, 0x1),
                this['boundingSphere'] = new Adapter[(_0x40efc2(0xa4a))](),
                this[_0x40efc2(0x174)] = new Adapter[(_0x40efc2(0x5ab))](),
                this[_0x40efc2(0x23e)] = new Adapter[(_0x40efc2(0x5ab))](),
                this[_0x40efc2(0x46d)] = new Adapter[(_0x40efc2(0x5ab))](),
                this['colorCommand'] = void 0x0,
                this[_0x40efc2(0x1f0)] = void 0x0,
                this['lineCommand'] = void 0x0,
                this['dirty'] = !0x1,
                this['isBuild'] = !0x1;
        }
        Object[_0x324b8e(0xa38)](_0x4d4ee0[_0x324b8e(0x74f)], {
            'viewPosition': {
                'get': function () {
                    return this['_viewPosition'];
                },
                'set': function (_0x7d8a29) {
                    const _0x3d5301 = _0x324b8e;
                    this[_0x3d5301(0x9fa)] = _0x7d8a29;
                }
            },
            'direction': {
                'get': function () {
                    return this['_direction'];
                },
                'set': function (_0x420e58) {
                    const _0x27ae10 = _0x324b8e;
                    this[_0x27ae10(0xa5e)] = _0x420e58,
                        this['dirty'] = !0x0;
                }
            },
            'pitch': {
                'get': function () {
                    const _0x399c63 = _0x324b8e;
                    return this[_0x399c63(0x5fb)];
                },
                'set': function (_0x20cef4) {
                    const _0x4522ca = _0x324b8e;
                    this[_0x4522ca(0x5fb)] = _0x20cef4,
                        this[_0x4522ca(0x1b4)] = !0x0;
                }
            },
            'horizontalFov': {
                'get': function () {
                    const _0x32960b = _0x324b8e;
                    return this[_0x32960b(0xa5a)];
                },
                'set': function (_0x455e3a) {
                    this['_horizontalFov'] = _0x455e3a,
                        this['dirty'] = !0x0;
                }
            },
            'verticalFov': {
                'get': function () {
                    return this['_verticalFov'];
                },
                'set': function (_0x3edbe2) {
                    const _0x589377 = _0x324b8e;
                    this['_verticalFov'] = _0x3edbe2,
                        this[_0x589377(0x1b4)] = !0x0;
                }
            },
            'distance': {
                'get': function () {
                    const _0x55581b = _0x324b8e;
                    return this[_0x55581b(0x2ef)];
                },
                'set': function (_0x29fbfc) {
                    const _0x1e7830 = _0x324b8e;
                    this[_0x1e7830(0x2ef)] = Math[_0x1e7830(0x212)](_0x29fbfc, 0x0),
                        this['dirty'] = !0x0;
                }
            }
        }),
            _0x4d4ee0[_0x324b8e(0x74f)]['_updateCamera'] = function (_0x55da5d) {
                const _0x522111 = _0x324b8e;
                let _0x57b47a = _0x55da5d[_0x522111(0xd8)]
                    , _0x3fc917 = this[_0x522111(0xa5a)] * Adapter[_0x522111(0x16d)][_0x522111(0x7ce)]
                    , _0x4d24e0 = this[_0x522111(0x721)] * Adapter[_0x522111(0x16d)][_0x522111(0x7ce)]
                    , _0x24c3c8 = Math[_0x522111(0x33a)](0.5 * _0x3fc917) / Math[_0x522111(0x33a)](0.5 * _0x4d24e0);
                this[_0x522111(0x2ef)];
                let _0xebc4b1 = Math[_0x522111(0x212)](this['_distance'], 0xa)
                    , _0x14411b = this[_0x522111(0xa5e)] * Adapter[_0x522111(0x16d)][_0x522111(0x7ce)]
                    , _0x388418 = this['_pitch'] * Adapter[_0x522111(0x16d)][_0x522111(0x7ce)]
                    , _0x1013dd = Adapter[_0x522111(0x85d)][_0x522111(0x6c0)](this[_0x522111(0x9fa)])[0x0]
                    , _0x44d593 = _0x57b47a[_0x522111(0x791)][_0x522111(0x54c)]
                    , _0x2b9637 = _0x57b47a[_0x522111(0x791)][_0x522111(0x5b8)]
                    , _0x341dac = _0x57b47a[_0x522111(0x791)][_0x522111(0x797)]
                    , _0x475607 = _0x57b47a[_0x522111(0x791)][_0x522111(0x44a)]
                    , _0x183409 = new Adapter[(_0x522111(0x85d))]()
                    , _0x425171 = _0x57b47a[_0x522111(0x97a)]
                    , _0x3dc8e0 = _0x57b47a['pitch'];
                Adapter['Cartesian3'][_0x522111(0x157)](_0x57b47a['position'], _0x183409);
                let _0x15244a = _0x55da5d[_0x522111(0x457)]
                    , _0x155d40 = this[_0x522111(0x80b)][_0x522111(0x787)];
                this[_0x522111(0x661)]['isUpdate'] = !0x0,
                    this[_0x522111(0x661)]['beginFunc'] = _0x410116 => {
                        const _0x3c1991 = _0x522111;
                        _0x410116[_0x3c1991(0x457)] = !0x1,
                            _0x44d593 = _0x57b47a[_0x3c1991(0x791)][_0x3c1991(0x54c)],
                            _0x2b9637 = _0x57b47a[_0x3c1991(0x791)][_0x3c1991(0x5b8)],
                            _0x341dac = _0x57b47a[_0x3c1991(0x791)][_0x3c1991(0x797)],
                            _0x475607 = _0x57b47a['frustum'][_0x3c1991(0x44a)],
                            _0x425171 = _0x57b47a['heading'],
                            _0x3dc8e0 = _0x57b47a['pitch'],
                            Adapter[_0x3c1991(0x85d)][_0x3c1991(0x157)](_0x57b47a[_0x3c1991(0x15e)], _0x183409),
                            _0x57b47a[_0x3c1991(0x791)]['aspectRatio'] = _0x24c3c8,
                            _0x57b47a['frustum'][_0x3c1991(0x5b8)] = _0x3fc917,
                            _0x57b47a['frustum'][_0x3c1991(0x797)] = 0x1,
                            _0x57b47a[_0x3c1991(0x791)][_0x3c1991(0x44a)] = _0xebc4b1 + 0x1,
                            _0x57b47a[_0x3c1991(0x10c)]({
                                'destination': _0x1013dd,
                                'orientation': {
                                    'heading': _0x14411b,
                                    'pitch': _0x388418,
                                    'roll': _0x57b47a[_0x3c1991(0x42e)]
                                }
                            });
                        const _0x5d5d4e = this[_0x3c1991(0x80b)]['_primitives']['_primitives'];
                        for (let _0x5a718a = 0x0; _0x5a718a < _0x5d5d4e['length']; ++_0x5a718a) {
                            const _0x168161 = _0x5d5d4e[_0x5a718a];
                            Adapter[_0x3c1991(0x14b)](_0x168161[_0x3c1991(0x3a7)]) || (_0x168161[_0x3c1991(0xa4f)] = _0x168161[_0x3c1991(0x198)],
                                _0x168161[_0x3c1991(0x198)] = !0x1);
                        }
                        Adapter[_0x3c1991(0x5ab)][_0x3c1991(0x3ee)](_0x57b47a[_0x3c1991(0x791)][_0x3c1991(0x2a6)], _0x57b47a['viewMatrix'], this[_0x3c1991(0x174)]),
                            Adapter[_0x3c1991(0x5ab)]['clone'](_0x57b47a[_0x3c1991(0x234)], this[_0x3c1991(0x23e)]),
                            Adapter[_0x3c1991(0x85d)][_0x3c1991(0x157)](Adapter[_0x3c1991(0x85d)]['ZERO'], this[_0x3c1991(0x891)]['center']),
                            this[_0x3c1991(0x891)][_0x3c1991(0x1cc)] = this[_0x3c1991(0x2ef)],
                            Adapter[_0x3c1991(0xa4a)][_0x3c1991(0x4f7)](this['boundingSphere'], this[_0x3c1991(0x23e)], this[_0x3c1991(0x891)]);
                    }
                    ,
                    this[_0x522111(0x661)][_0x522111(0xa89)] = _0x15151b => {
                        const _0x24c3bd = _0x522111;
                        _0x57b47a['setView']({
                            'destination': _0x183409,
                            'orientation': {
                                'heading': _0x425171,
                                'pitch': _0x3dc8e0,
                                'roll': _0x57b47a[_0x24c3bd(0x42e)]
                            },
                            'convert': !0x1
                        }),
                            _0x57b47a['frustum']['aspectRatio'] = _0x44d593,
                            _0x57b47a[_0x24c3bd(0x791)][_0x24c3bd(0x5b8)] = _0x2b9637,
                            _0x57b47a[_0x24c3bd(0x791)][_0x24c3bd(0x797)] = _0x341dac,
                            _0x57b47a[_0x24c3bd(0x791)][_0x24c3bd(0x44a)] = _0x475607;
                        const _0x2022ea = this['scene'][_0x24c3bd(0x91b)][_0x24c3bd(0x91b)];
                        for (let _0x5b4afa = 0x0; _0x5b4afa < _0x2022ea[_0x24c3bd(0x376)]; ++_0x5b4afa) {
                            const _0x21a188 = _0x2022ea[_0x5b4afa];
                            Adapter[_0x24c3bd(0x14b)](_0x21a188[_0x24c3bd(0x3a7)]) || (_0x21a188['show'] = _0x21a188['preShow']);
                        }
                        this['cameraDepthBuffer'][_0x24c3bd(0x2ff)] = !0x1,
                            _0x15151b[_0x24c3bd(0x457)] = _0x15244a;
                    }
                    ,
                    this['globalDepthBuffer'][_0x522111(0x2ff)] = !0x0,
                    this['globalDepthBuffer'][_0x522111(0xcb)] = _0xcc4420 => {
                        const _0x61732d = _0x522111;
                        _0xcc4420[_0x61732d(0x457)] = !0x1,
                            _0x57b47a['frustum'][_0x61732d(0x797)] = 0xa,
                            this[_0x61732d(0x80b)][_0x61732d(0x787)] = this[_0x61732d(0x80b)][_0x61732d(0xee)];
                    }
                    ,
                    this['globalDepthBuffer'][_0x522111(0xa89)] = _0x43fcbb => {
                        const _0x4148cc = _0x522111;
                        if (this[_0x4148cc(0x80b)][_0x4148cc(0x122)][_0x4148cc(0x75d)][_0x4148cc(0x376)] > 0x0) {
                            let _0x1f1a25 = this[_0x4148cc(0x80b)][_0x4148cc(0x122)][_0x4148cc(0x75d)][0x0];
                            _0x57b47a[_0x4148cc(0x791)]['near'] = _0x1f1a25['near'],
                                _0x57b47a[_0x4148cc(0x791)]['far'] = _0x1f1a25['far'];
                        }
                        let _0x9f0bb6 = Adapter['Matrix4'][_0x4148cc(0x20e)](_0x57b47a['frustum'][_0x4148cc(0x2a6)], new Adapter[(_0x4148cc(0x5ab))]())
                            , _0x57269e = Adapter[_0x4148cc(0x5ab)][_0x4148cc(0x3ee)](_0x57b47a['inverseViewMatrix'], _0x9f0bb6, new Adapter['Matrix4']());
                        Adapter[_0x4148cc(0x5ab)][_0x4148cc(0x3ee)](this[_0x4148cc(0x174)], _0x57269e, this[_0x4148cc(0x46d)]),
                            _0x43fcbb[_0x4148cc(0x457)] = _0x15244a,
                            this['scene'][_0x4148cc(0x787)] = _0x155d40,
                            _0x57b47a[_0x4148cc(0x791)][_0x4148cc(0x797)] = _0x341dac,
                            _0x57b47a['frustum']['far'] = _0x475607;
                    }
                    ;
            }
            ,
            _0x4d4ee0[_0x324b8e(0x74f)][_0x324b8e(0x3b1)] = function (_0x2bdb64) {
                const _0x258703 = _0x324b8e;
                let _0x2d7850 = function (_0x597680) {
                    const _0x1d841a = _0x557c
                        , _0x39ab91 = _0x597680[_0x1d841a(0x538)]
                        , _0x278f88 = _0x597680['segmentCount'] + 0x1
                        , _0x3850c5 = _0x597680[_0x1d841a(0x2ef)];
                    let _0x4b1426 = _0x278f88 * _0x278f88 + 0x1
                        , _0xab5055 = Adapter[_0x1d841a(0xa57)][_0x1d841a(0x123)](Adapter[_0x1d841a(0xa57)][_0x1d841a(0x2d5)], 0x3 * _0x4b1426)
                        , _0x26c1c1 = _0x597680[_0x1d841a(0xa5a)] * Adapter[_0x1d841a(0x16d)]['RADIANS_PER_DEGREE']
                        , _0x53d204 = _0x597680['_verticalFov'] * Adapter[_0x1d841a(0x16d)][_0x1d841a(0x7ce)]
                        , _0x4303fb = Math[_0x1d841a(0x33a)](0.5 * _0x53d204)
                        , _0x6b132a = Math['PI'] - 0.5 * _0x26c1c1
                        , _0x169327 = _0x3850c5 * _0x4303fb
                        , _0x1828e9 = 0x0
                        , _0x57816e = 0x0
                        , _0x522fcb = _0x26c1c1 / _0x39ab91
                        , _0x36021e = 0x3;
                    for (let _0x9a2cf1 = 0x0; _0x9a2cf1 < _0x278f88; _0x9a2cf1++) {
                        _0x1828e9 = _0x6b132a + _0x9a2cf1 * _0x522fcb;
                        let _0x45ba08 = _0x169327 / (_0x3850c5 / Math[_0x1d841a(0x994)](_0x1828e9))
                            , _0x1ea11c = Math[_0x1d841a(0x58c)](_0x45ba08)
                            , _0x37bf33 = -_0x1ea11c
                            , _0x478c37 = 0x2 * _0x1ea11c / _0x39ab91;
                        for (let _0x44cd4f = 0x0; _0x44cd4f < _0x278f88; _0x44cd4f++) {
                            _0x57816e = _0x37bf33 + _0x44cd4f * _0x478c37;
                            let _0x2df9fb = _0x3850c5 * Math[_0x1d841a(0x994)](_0x57816e) * Math[_0x1d841a(0x1ee)](_0x1828e9)
                                , _0x24c556 = _0x3850c5 * Math[_0x1d841a(0x1ee)](_0x57816e)
                                , _0x592301 = _0x3850c5 * Math[_0x1d841a(0x994)](_0x57816e) * Math[_0x1d841a(0x994)](_0x1828e9);
                            _0xab5055[_0x36021e++] = _0x2df9fb,
                                _0xab5055[_0x36021e++] = _0x24c556,
                                _0xab5055[_0x36021e++] = _0x592301;
                        }
                    }
                    return _0xab5055;
                }(this)
                    , _0x729b1a = function (_0x56310a) {
                        const _0x19915f = _0x557c
                            , _0x3fc9c2 = _0x56310a[_0x19915f(0x538)]
                            , _0x1a3a1c = _0x3fc9c2 + 0x1;
                        let _0x41311a = _0x3fc9c2 * _0x3fc9c2 * 0x3 * 0x2 + 0x3 * _0x3fc9c2 * 0x4
                            , _0x1c1144 = Adapter['ComponentDatatype'][_0x19915f(0x123)](Adapter['ComponentDatatype']['UNSIGNED_SHORT'], _0x41311a)
                            , _0x2952cc = 0x0;
                        for (let _0x5754ab = 0x0; _0x5754ab < _0x3fc9c2; _0x5754ab++)
                            for (let _0x275627 = 0x0; _0x275627 < _0x3fc9c2; _0x275627++)
                                _0x1c1144[_0x2952cc++] = 0x1 + _0x5754ab + _0x275627 * _0x1a3a1c,
                                    _0x1c1144[_0x2952cc++] = 0x1 + _0x5754ab + 0x1 + _0x275627 * _0x1a3a1c,
                                    _0x1c1144[_0x2952cc++] = 0x1 + _0x5754ab + (_0x275627 + 0x1) * _0x1a3a1c,
                                    _0x1c1144[_0x2952cc++] = 0x1 + _0x5754ab + 0x1 + _0x275627 * _0x1a3a1c,
                                    _0x1c1144[_0x2952cc++] = 0x1 + _0x5754ab + 0x1 + (_0x275627 + 0x1) * _0x1a3a1c,
                                    _0x1c1144[_0x2952cc++] = 0x1 + _0x5754ab + (_0x275627 + 0x1) * _0x1a3a1c;
                        for (let _0x2cf066 = 0x0; _0x2cf066 < _0x3fc9c2; _0x2cf066++)
                            _0x1c1144[_0x2952cc++] = _0x2cf066 + 0x1 + 0x1,
                                _0x1c1144[_0x2952cc++] = _0x2cf066 + 0x1,
                                _0x1c1144[_0x2952cc++] = 0x0,
                                _0x1c1144[_0x2952cc++] = 0x0,
                                _0x1c1144[_0x2952cc++] = _0x2cf066 + _0x3fc9c2 * _0x1a3a1c + 0x1,
                                _0x1c1144[_0x2952cc++] = _0x2cf066 + 0x1 + _0x3fc9c2 * _0x1a3a1c + 0x1;
                        for (let _0x39023f = 0x0; _0x39023f < _0x3fc9c2; _0x39023f++)
                            _0x1c1144[_0x2952cc++] = 0x0,
                                _0x1c1144[_0x2952cc++] = _0x39023f * _0x1a3a1c + 0x1,
                                _0x1c1144[_0x2952cc++] = (_0x39023f + 0x1) * _0x1a3a1c + 0x1,
                                _0x1c1144[_0x2952cc++] = _0x3fc9c2 + (_0x39023f + 0x1) * _0x1a3a1c + 0x1,
                                _0x1c1144[_0x2952cc++] = _0x3fc9c2 + _0x39023f * _0x1a3a1c + 0x1,
                                _0x1c1144[_0x2952cc++] = 0x0;
                        return _0x1c1144;
                    }(this)
                    , _0x33249a = function (_0x5b2c42) {
                        const _0x57fe22 = _0x557c
                            , _0x6cc97c = _0x5b2c42[_0x57fe22(0x538)]
                            , _0x2b68d6 = _0x6cc97c + 0x1
                            , _0x55519b = 0x2 * (0x4 + 0x5 * _0x6cc97c + 0x2 * _0x6cc97c * 0x3);
                        let _0x31db65 = Adapter[_0x57fe22(0xa57)][_0x57fe22(0x123)](Adapter['ComponentDatatype']['UNSIGNED_SHORT'], _0x55519b)
                            , _0xd3229e = 0x0;
                        _0x31db65[_0xd3229e++] = 0x0,
                            _0x31db65[_0xd3229e++] = 0x1,
                            _0x31db65[_0xd3229e++] = 0x0,
                            _0x31db65[_0xd3229e++] = _0x2b68d6,
                            _0x31db65[_0xd3229e++] = 0x0,
                            _0x31db65[_0xd3229e++] = _0x6cc97c * _0x2b68d6 + 0x1,
                            _0x31db65[_0xd3229e++] = 0x0,
                            _0x31db65[_0xd3229e++] = _0x2b68d6 * _0x2b68d6;
                        for (let _0x1fd47e = 0x0; _0x1fd47e < 0x5; _0x1fd47e++)
                            for (let _0x3544fe = 0x0; _0x3544fe < _0x6cc97c; _0x3544fe++)
                                _0x31db65[_0xd3229e++] = 0x1 + _0x3544fe + 0x5 * _0x2b68d6 * _0x1fd47e,
                                    _0x31db65[_0xd3229e++] = 0x1 + (_0x3544fe + 0x1) + 0x5 * _0x2b68d6 * _0x1fd47e;
                        for (let _0x548b0b = 0x0; _0x548b0b < 0x5; _0x548b0b++)
                            for (let _0xd14458 = 0x0; _0xd14458 < _0x6cc97c; _0xd14458++)
                                _0x31db65[_0xd3229e++] = 0x1 + _0x2b68d6 * _0xd14458 + 0x5 * _0x548b0b,
                                    _0x31db65[_0xd3229e++] = 0x1 + _0x2b68d6 * (_0xd14458 + 0x1) + 0x5 * _0x548b0b;
                        return _0x31db65;
                    }(this)
                    , _0x4e840c = _0x2bdb64[_0x258703(0x56c)]
                    , _0x2a2c60 = Adapter[_0x258703(0x59d)][_0x258703(0x57a)]({
                        'context': _0x4e840c,
                        'typedArray': _0x2d7850,
                        'usage': Adapter[_0x258703(0x3c3)]['STATIC_DRAW']
                    })
                    , _0x4f4b68 = Adapter[_0x258703(0x59d)][_0x258703(0x45b)]({
                        'context': _0x4e840c,
                        'typedArray': _0x729b1a,
                        'usage': Adapter[_0x258703(0x3c3)][_0x258703(0x64e)],
                        'indexDatatype': Adapter[_0x258703(0x98e)][_0x258703(0x138)]
                    })
                    , _0x287800 = [{
                        'index': 0x0,
                        'vertexBuffer': _0x2a2c60,
                        'componentsPerAttribute': 0x3,
                        'componentDatatype': Adapter['ComponentDatatype'][_0x258703(0x2d5)],
                        'offsetInBytes': 0x0,
                        'strideInBytes': 0xc,
                        'normalize': !0x1
                    }]
                    , _0x227a12 = {
                        'aPosition': 0x0
                    }
                    , _0x57756f = new Adapter[(_0x258703(0x403))]({
                        'context': _0x4e840c,
                        'attributes': _0x287800,
                        'indexBuffer': _0x4f4b68
                    })
                    , _0x112b5e = new Adapter[(_0x258703(0x966))]({
                        'sources': [_0x472182]
                    })
                    , _0xd70ac4 = new Adapter[(_0x258703(0x966))]({
                        'sources': [_0x238463]
                    })
                    , _0x47a534 = Adapter[_0x258703(0x5a0)][_0x258703(0x6bf)]({
                        'context': _0x4e840c,
                        'vertexShaderSource': _0x112b5e,
                        'fragmentShaderSource': _0xd70ac4,
                        'attributeLocations': _0x227a12
                    })
                    , _0x237145 = Adapter[_0x258703(0x4ca)][_0x258703(0x6bf)]({
                        'cull': {
                            'enabled': !0x1
                        },
                        'depthTest': {
                            'enabled': !0x1
                        },
                        'depthMask': !0x1,
                        'stencilTest': {
                            'enabled': !0x0,
                            'frontFunction': Adapter['StencilFunction']['NOT_EQUAL'],
                            'frontOperation': {
                                'fail': Adapter[_0x258703(0x628)]['KEEP'],
                                'zFail': Adapter['StencilOperation'][_0x258703(0xa65)],
                                'zPass': Adapter['StencilOperation'][_0x258703(0x504)]
                            },
                            'backFunction': Adapter[_0x258703(0xa10)][_0x258703(0x8a0)],
                            'backOperation': {
                                'fail': Adapter[_0x258703(0x628)]['KEEP'],
                                'zFail': Adapter[_0x258703(0x628)][_0x258703(0xa65)],
                                'zPass': Adapter[_0x258703(0x628)][_0x258703(0x504)]
                            },
                            'reference': 0x0,
                            'mask': -0x1
                        },
                        'blending': Adapter[_0x258703(0x586)]['ALPHA_BLEND']
                    });
                this['colorCommand'] = new Adapter[(_0x258703(0x39a))]({
                    'primitiveType': Adapter[_0x258703(0x635)]['TRIANGLES'],
                    'modelMatrix': this[_0x258703(0x23e)],
                    'boundingVolume': this[_0x258703(0x891)],
                    'pass': Adapter['Pass'][_0x258703(0x13e)],
                    'shaderProgram': _0x47a534,
                    'vertexArray': _0x57756f,
                    'renderState': _0x237145,
                    'owner': this,
                    'cull': !0x0
                }),
                    this['colorCommand'][_0x258703(0x501)] = {
                        'uVisibleAreaColor': () => this[_0x258703(0x53d)],
                        'uHiddenAreaColor': () => this[_0x258703(0x43f)],
                        'uRenderTextureMatrix': () => this['renderTextureMatrix'],
                        'uTextureSize': () => {
                            const _0x3ad04f = _0x258703;
                            let _0x4f2c89 = this['cameraDepthBuffer'][_0x3ad04f(0x8b1)];
                            return new Adapter[(_0x3ad04f(0xab7))](_0x4f2c89[_0x3ad04f(0x8ce)], _0x4f2c89[_0x3ad04f(0x88d)]);
                        }
                        ,
                        'uTexture': () => this['cameraDepthBuffer'][_0x258703(0x8b1)],
                        'uGlobalDepthTexture': () => this[_0x258703(0xec)][_0x258703(0x8b1)]
                    };
                let _0xd6863e = Adapter['DrawCommand'][_0x258703(0x309)](this[_0x258703(0x38e)]);
                _0xd6863e[_0x258703(0x9c1)] = Adapter[_0x258703(0x4ca)][_0x258703(0x6bf)]({
                    'depthMask': !0x1,
                    'colorMask': {
                        'red': !0x1,
                        'green': !0x1,
                        'blue': !0x1,
                        'alpha': !0x1
                    },
                    'depthTest': {
                        'enabled': !0x0,
                        'func': Adapter[_0x258703(0x83d)][_0x258703(0x903)]
                    },
                    'stencilTest': {
                        'enabled': !0x0,
                        'frontFunction': Adapter[_0x258703(0xa10)][_0x258703(0x402)],
                        'frontOperation': {
                            'fail': Adapter[_0x258703(0x628)]['KEEP'],
                            'zFail': Adapter[_0x258703(0x628)][_0x258703(0xa65)],
                            'zPass': Adapter[_0x258703(0x628)][_0x258703(0x45e)]
                        },
                        'backFunction': Adapter[_0x258703(0xa10)]['ALWAYS'],
                        'backOperation': {
                            'fail': Adapter['StencilOperation'][_0x258703(0xa65)],
                            'zFail': Adapter[_0x258703(0x628)]['KEEP'],
                            'zPass': Adapter[_0x258703(0x628)][_0x258703(0x504)]
                        },
                        'reference': 0x0,
                        'mask': -0x1
                    }
                }),
                    this[_0x258703(0x1f0)] = _0xd6863e;
                let _0x545d67 = Adapter[_0x258703(0x59d)][_0x258703(0x45b)]({
                    'context': _0x4e840c,
                    'typedArray': _0x33249a,
                    'usage': Adapter[_0x258703(0x3c3)][_0x258703(0x64e)],
                    'indexDatatype': Adapter[_0x258703(0x98e)][_0x258703(0x138)]
                });
                this[_0x258703(0x2d6)] = new Adapter[(_0x258703(0x39a))]({
                    'primitiveType': Adapter['PrimitiveType']['LINES'],
                    'modelMatrix': this['invViewMatrix'],
                    'boundingVolume': this[_0x258703(0x891)],
                    'pass': Adapter['Pass']['OPAQUE'],
                    'owner': this,
                    'cull': !0x0
                }),
                    this[_0x258703(0x2d6)][_0x258703(0x99e)] = new Adapter[(_0x258703(0x403))]({
                        'context': _0x4e840c,
                        'attributes': _0x287800,
                        'indexBuffer': _0x545d67
                    }),
                    this[_0x258703(0x2d6)][_0x258703(0x67b)] = Adapter[_0x258703(0x5a0)][_0x258703(0x6bf)]({
                        'context': _0x4e840c,
                        'vertexShaderSource': _0x585ed7,
                        'fragmentShaderSource': _0x2e9404,
                        'attributeLocations': _0x227a12
                    }),
                    this[_0x258703(0x2d6)][_0x258703(0x9c1)] = Adapter['RenderState'][_0x258703(0x6bf)]({
                        'cull': {
                            'enabled': !0x1
                        },
                        'depthTest': {
                            'enabled': !0x0
                        },
                        'blending': Adapter[_0x258703(0x586)][_0x258703(0x753)]
                    }),
                    this['lineCommand'][_0x258703(0x501)] = {
                        'uColor': () => this[_0x258703(0x25b)]
                    };
            }
            ,
            _0x4d4ee0[_0x324b8e(0x74f)][_0x324b8e(0x3e3)] = function (_0x47a07f) {
                const _0x3f8dc1 = _0x324b8e;
                let _0x5f00dd = this[_0x3f8dc1(0x80b)][_0x3f8dc1(0xd8)];
                _0x5f00dd['_projection'];
                let _0x49cb0c = Adapter['Cartesian3']['fromDegreesArrayHeights'](_0x47a07f)[0x0]
                    , _0x52c035 = Adapter[_0x3f8dc1(0x85d)]['fromDegreesArrayHeights'](this[_0x3f8dc1(0x9fa)])[0x0]
                    , _0xaaab73 = new Adapter[(_0x3f8dc1(0x85d))]();
                Adapter['Cartesian3'][_0x3f8dc1(0x7bd)](_0x49cb0c, _0x52c035, _0xaaab73);
                let _0x448f61 = Adapter[_0x3f8dc1(0x85d)][_0x3f8dc1(0x451)](_0xaaab73);
                Adapter[_0x3f8dc1(0x85d)][_0x3f8dc1(0x7bc)](_0xaaab73, _0xaaab73),
                    this['distance'] = _0x448f61;
                let _0x614061 = _0x5f00dd[_0x3f8dc1(0x97a)]
                    , _0x4e35c2 = _0x5f00dd[_0x3f8dc1(0x622)]
                    , _0x1966a6 = _0x5f00dd[_0x3f8dc1(0x42e)]
                    , _0x4d8f3c = new Adapter[(_0x3f8dc1(0x85d))]();
                Adapter[_0x3f8dc1(0x85d)][_0x3f8dc1(0x157)](_0x5f00dd['position'], _0x4d8f3c);
                let _0x591c35 = _0xaaab73[_0x3f8dc1(0x157)]()
                    , _0x1e523a = _0x52c035[_0x3f8dc1(0x157)]();
                _0x1e523a = Adapter['Cartesian3'][_0x3f8dc1(0x7bc)](_0x1e523a, _0x1e523a),
                    Math[_0x3f8dc1(0xa8b)](Adapter[_0x3f8dc1(0x85d)]['dot'](_0x1e523a, _0x591c35)) >= 0x1 && (_0x1e523a = Math['abs'](Adapter[_0x3f8dc1(0x85d)][_0x3f8dc1(0x908)](_0x591c35, Adapter[_0x3f8dc1(0x85d)]['UNIT_Y'])) < 0x1 ? Adapter[_0x3f8dc1(0x85d)][_0x3f8dc1(0x157)](Cartesian3['UNIT_Y'], _0x1e523a) : Adapter[_0x3f8dc1(0x85d)][_0x3f8dc1(0x157)](Cartesian3['UNIT_Z'], _0x1e523a));
                let _0x235d95 = new Adapter[(_0x3f8dc1(0x85d))]();
                Adapter[_0x3f8dc1(0x85d)][_0x3f8dc1(0x695)](_0x1e523a, _0x591c35, _0x235d95),
                    _0x235d95 = Adapter['Cartesian3']['normalize'](_0x235d95, _0x235d95),
                    Adapter[_0x3f8dc1(0x85d)]['cross'](_0x591c35, _0x235d95, _0x1e523a),
                    _0x1e523a = Adapter[_0x3f8dc1(0x85d)][_0x3f8dc1(0x7bc)](_0x1e523a, _0x1e523a),
                    _0x5f00dd['setView']({
                        'destination': _0x52c035,
                        'orientation': {
                            'direction': _0x591c35,
                            'up': _0x1e523a
                        },
                        'convert': !0x1
                    }),
                    this[_0x3f8dc1(0x264)] = _0x5f00dd[_0x3f8dc1(0x97a)] * Adapter['Math'][_0x3f8dc1(0x1b6)],
                    this[_0x3f8dc1(0x622)] = _0x5f00dd[_0x3f8dc1(0x622)] * Adapter[_0x3f8dc1(0x16d)][_0x3f8dc1(0x1b6)],
                    _0x5f00dd['setView']({
                        'destination': _0x4d8f3c,
                        'orientation': {
                            'heading': _0x614061,
                            'pitch': _0x4e35c2,
                            'roll': _0x1966a6
                        },
                        'convert': !0x1
                    });
            }
            ,
            _0x4d4ee0[_0x324b8e(0x74f)][_0x324b8e(0x9e6)] = function () {
                const _0x44f908 = _0x324b8e;
                this[_0x44f908(0x38e)] && (this[_0x44f908(0x38e)][_0x44f908(0x99e)] = this[_0x44f908(0x38e)][_0x44f908(0x99e)] && !this[_0x44f908(0x38e)][_0x44f908(0x99e)][_0x44f908(0x575)]() && this[_0x44f908(0x38e)][_0x44f908(0x99e)][_0x44f908(0x4dd)](),
                    this[_0x44f908(0x38e)][_0x44f908(0x67b)] = this['colorCommand'][_0x44f908(0x67b)] && !this[_0x44f908(0x38e)][_0x44f908(0x67b)]['isDestroyed']() && this[_0x44f908(0x38e)][_0x44f908(0x67b)][_0x44f908(0x4dd)](),
                    this[_0x44f908(0x38e)] = void 0x0),
                    this[_0x44f908(0x1f0)] && (this['stencilCommand'][_0x44f908(0x99e)] = this[_0x44f908(0x1f0)][_0x44f908(0x99e)] && !this[_0x44f908(0x1f0)][_0x44f908(0x99e)]['isDestroyed']() && this[_0x44f908(0x1f0)]['vertexArray']['destroy'](),
                        this['stencilCommand'][_0x44f908(0x67b)] = this['stencilCommand']['shaderProgram'] && !this[_0x44f908(0x1f0)][_0x44f908(0x67b)]['isDestroyed']() && this['stencilCommand'][_0x44f908(0x67b)]['destroy'](),
                        this['stencilCommand'] = void 0x0),
                    this['lineCommand'] && (this[_0x44f908(0x2d6)][_0x44f908(0x99e)] = this['lineCommand'][_0x44f908(0x99e)] && !this[_0x44f908(0x2d6)][_0x44f908(0x99e)]['isDestroyed']() && this[_0x44f908(0x2d6)][_0x44f908(0x99e)][_0x44f908(0x4dd)](),
                        this[_0x44f908(0x2d6)][_0x44f908(0x67b)] = this[_0x44f908(0x2d6)][_0x44f908(0x67b)] && !this[_0x44f908(0x2d6)][_0x44f908(0x67b)][_0x44f908(0x575)]() && this[_0x44f908(0x2d6)][_0x44f908(0x67b)]['destroy'](),
                        this[_0x44f908(0x2d6)] = void 0x0);
            }
            ,
            _0x4d4ee0[_0x324b8e(0x74f)]['update'] = function (_0x4c561b) {
                const _0x1d79d5 = _0x324b8e;
                _0x4c561b['fbo'] || _0x4c561b[_0x1d79d5(0xa4c)][_0x1d79d5(0x821)] || _0x4c561b[_0x1d79d5(0xa4c)]['depth'] || (this[_0x1d79d5(0x1b4)] && (this['dirty'] = !0x1,
                    this['_destroyCommand'](),
                    this['_updateCamera'](_0x4c561b),
                    this['_createCommand'](_0x4c561b)),
                    this['stencilCommand'] && _0x4c561b[_0x1d79d5(0x728)][_0x1d79d5(0x745)](this[_0x1d79d5(0x1f0)]),
                    this['colorCommand'] && _0x4c561b[_0x1d79d5(0x728)][_0x1d79d5(0x745)](this[_0x1d79d5(0x38e)]),
                    this[_0x1d79d5(0x2d6)] && _0x4c561b[_0x1d79d5(0x728)][_0x1d79d5(0x745)](this['lineCommand']));
            }
            ,
            _0x4d4ee0[_0x324b8e(0x74f)]['build'] = function () {
                const _0x28130b = _0x324b8e;
                this['isBuild'] || (this[_0x28130b(0x6e3)] = !0x0,
                    this[_0x28130b(0x80b)][_0x28130b(0x51f)]['add'](this),
                    this[_0x28130b(0x1c5)] = this[_0x28130b(0x80b)][_0x28130b(0xd7)][_0x28130b(0x80a)]((_0x63fca4, _0x1a4e41) => {
                        const _0x4e949a = _0x28130b;
                        this['cameraDepthBuffer'][_0x4e949a(0xa5b)](_0x63fca4),
                            this[_0x4e949a(0xec)][_0x4e949a(0xa5b)](_0x63fca4);
                    }
                        , this));
            }
            ,
            _0x4d4ee0['prototype'][_0x324b8e(0x3b3)] = function () {
                const _0xef3206 = _0x324b8e;
                this['isBuild'] && (this[_0xef3206(0x6e3)] = !0x1,
                    this[_0xef3206(0x1c5)](),
                    this[_0xef3206(0x80b)]['primitives'][_0xef3206(0x77c)](this));
            }
            ,
            _0x4d4ee0[_0x324b8e(0x74f)][_0x324b8e(0x575)] = function () {
                return !0x1;
            }
            ,
            _0x4d4ee0[_0x324b8e(0x74f)]['destroy'] = function () {
                const _0x39bc0d = _0x324b8e;
                if (this[_0x39bc0d(0x661)] = this[_0x39bc0d(0x661)][_0x39bc0d(0x4dd)](),
                    this[_0x39bc0d(0xec)] = this[_0x39bc0d(0xec)]['destroy'](),
                    this['colorCommand']) {
                    let _0x39b174 = this['colorCommand'][_0x39bc0d(0x99e)]
                        , _0x2eca4c = this[_0x39bc0d(0x38e)][_0x39bc0d(0x67b)];
                    _0x39b174 = _0x39b174 && !_0x39b174[_0x39bc0d(0x575)]() && _0x39b174[_0x39bc0d(0x4dd)](),
                        _0x2eca4c = _0x2eca4c && !_0x2eca4c[_0x39bc0d(0x575)]() && _0x2eca4c['destroy'](),
                        this['colorCommand'] = void 0x0;
                }
                if (this[_0x39bc0d(0x1f0)]) {
                    let _0xaa3baf = this[_0x39bc0d(0x1f0)]['vertexArray']
                        , _0x4cbd27 = this[_0x39bc0d(0x1f0)]['shaderProgram'];
                    _0xaa3baf = _0xaa3baf && !_0xaa3baf['isDestroyed']() && _0xaa3baf[_0x39bc0d(0x4dd)](),
                        _0x4cbd27 = _0x4cbd27 && !_0x4cbd27[_0x39bc0d(0x575)]() && _0x4cbd27[_0x39bc0d(0x4dd)](),
                        this[_0x39bc0d(0x1f0)] = void 0x0;
                }
                if (this[_0x39bc0d(0x2d6)]) {
                    let _0x1784a6 = this['lineCommand'][_0x39bc0d(0x99e)]
                        , _0x37c9c8 = this[_0x39bc0d(0x2d6)][_0x39bc0d(0x67b)];
                    _0x1784a6 = _0x1784a6 && !_0x1784a6[_0x39bc0d(0x575)]() && _0x1784a6['destroy'](),
                        _0x37c9c8 = _0x37c9c8 && !_0x37c9c8[_0x39bc0d(0x575)]() && _0x37c9c8[_0x39bc0d(0x4dd)](),
                        this[_0x39bc0d(0x2d6)] = void 0x0;
                }
            }
            ;
        var _0x486697 = Object[_0x324b8e(0x3e6)]({
            'ISERVER_TOKEN': _0x324b8e(0x6e4),
            'IPORTAL_KEY': _0x324b8e(0x589)
        });
        /**
     * @license
     *
     * Grauw URI utilities
     *
     * See: http://hg.grauw.nl/grauw-lib/file/tip/src/uri.js
     *
     * @author Laurens Holst (http://www.grauw.nl/)
     *
     *   Copyright 2012 Laurens Holst
     *
     *   Licensed under the Apache License, Version 2.0 (the "License");
     *   you may not use this file except in compliance with the License.
     *   You may obtain a copy of the License at
     *
     *       http://www.apache.org/licenses/LICENSE-2.0
     *
     *   Unless required by applicable law or agreed to in writing, software
     *   distributed under the License is distributed on an "AS IS" BASIS,
     *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     *   See the License for the specific language governing permissions and
     *   limitations under the License.
     *
     */
        function _0x5b7673(_0x58ffcc) {
            const _0x2073ae = _0x324b8e;
            if (_0x58ffcc instanceof _0x5b7673)
                this[_0x2073ae(0x1a0)] = _0x58ffcc[_0x2073ae(0x1a0)],
                    this[_0x2073ae(0x982)] = _0x58ffcc[_0x2073ae(0x982)],
                    this['path'] = _0x58ffcc['path'],
                    this[_0x2073ae(0x2cc)] = _0x58ffcc[_0x2073ae(0x2cc)],
                    this[_0x2073ae(0x63d)] = _0x58ffcc['fragment'];
            else {
                if (_0x58ffcc) {
                    var _0x5e6a55 = _0x101003[_0x2073ae(0x3ff)](_0x58ffcc);
                    this[_0x2073ae(0x1a0)] = _0x5e6a55[0x1],
                        this[_0x2073ae(0x982)] = _0x5e6a55[0x2],
                        this[_0x2073ae(0x873)] = _0x5e6a55[0x3],
                        this[_0x2073ae(0x2cc)] = _0x5e6a55[0x4],
                        this[_0x2073ae(0x63d)] = _0x5e6a55[0x5];
                }
            }
        }
        _0x5b7673[_0x324b8e(0x74f)][_0x324b8e(0x1a0)] = null,
            _0x5b7673['prototype']['authority'] = null,
            _0x5b7673['prototype']['path'] = '',
            _0x5b7673[_0x324b8e(0x74f)]['query'] = null,
            _0x5b7673[_0x324b8e(0x74f)]['fragment'] = null;
        var _0x101003 = new RegExp(_0x324b8e(0x24d));
        _0x5b7673[_0x324b8e(0x74f)][_0x324b8e(0xa24)] = function () {
            const _0x2b90bf = _0x324b8e;
            return this[_0x2b90bf(0x1a0)];
        }
            ,
            _0x5b7673[_0x324b8e(0x74f)][_0x324b8e(0xa1c)] = function () {
                return this['authority'];
            }
            ,
            _0x5b7673[_0x324b8e(0x74f)][_0x324b8e(0x41f)] = function () {
                return this['path'];
            }
            ,
            _0x5b7673['prototype'][_0x324b8e(0x86f)] = function () {
                const _0x55e48d = _0x324b8e;
                return this[_0x55e48d(0x2cc)];
            }
            ,
            _0x5b7673['prototype']['getFragment'] = function () {
                const _0x105907 = _0x324b8e;
                return this[_0x105907(0x63d)];
            }
            ,
            _0x5b7673[_0x324b8e(0x74f)][_0x324b8e(0x8d9)] = function () {
                const _0x1ee66e = _0x324b8e;
                return !!this[_0x1ee66e(0x1a0)] && !this[_0x1ee66e(0x63d)];
            }
            ,
            _0x5b7673[_0x324b8e(0x74f)]['isSameDocumentAs'] = function (_0x54efaf) {
                const _0x1d47a8 = _0x324b8e;
                return _0x54efaf['scheme'] == this['scheme'] && _0x54efaf[_0x1d47a8(0x982)] == this['authority'] && _0x54efaf['path'] == this[_0x1d47a8(0x873)] && _0x54efaf[_0x1d47a8(0x2cc)] == this[_0x1d47a8(0x2cc)];
            }
            ,
            _0x5b7673[_0x324b8e(0x74f)]['equals'] = function (_0x1beda2) {
                const _0x1ad420 = _0x324b8e;
                return this[_0x1ad420(0x3f7)](_0x1beda2) && _0x1beda2[_0x1ad420(0x63d)] == this[_0x1ad420(0x63d)];
            }
            ,
            _0x5b7673[_0x324b8e(0x74f)][_0x324b8e(0x7bc)] = function () {
                const _0x5afaba = _0x324b8e;
                this[_0x5afaba(0x927)](),
                    this[_0x5afaba(0x1a0)] && (this[_0x5afaba(0x1a0)] = this[_0x5afaba(0x1a0)][_0x5afaba(0xa2b)]()),
                    this['authority'] && (this[_0x5afaba(0x982)] = this[_0x5afaba(0x982)]['replace'](_0x23da5c, _0x22e844)[_0x5afaba(0x3ed)](_0x2cc308, _0x4b634f)),
                    this[_0x5afaba(0x873)] && (this[_0x5afaba(0x873)] = this[_0x5afaba(0x873)]['replace'](_0x2cc308, _0x4b634f)),
                    this[_0x5afaba(0x2cc)] && (this[_0x5afaba(0x2cc)] = this[_0x5afaba(0x2cc)][_0x5afaba(0x3ed)](_0x2cc308, _0x4b634f)),
                    this[_0x5afaba(0x63d)] && (this[_0x5afaba(0x63d)] = this['fragment']['replace'](_0x2cc308, _0x4b634f));
            }
            ;
        var _0x2cc308 = /%[0-9a-z]{2}/gi
            , _0x219b27 = /[a-zA-Z0-9\-\._~]/
            , _0x23da5c = /(.*@)?([^@:]*)(:.*)?/;
        function _0x4b634f(_0x47614c) {
            const _0x10e568 = _0x324b8e;
            var _0x1cb516 = unescape(_0x47614c);
            return _0x219b27[_0x10e568(0x6ae)](_0x1cb516) ? _0x1cb516 : _0x47614c[_0x10e568(0x744)]();
        }
        function _0x22e844(_0x129fbc, _0x322624, _0x2d0146, _0x21455b) {
            return (_0x322624 || '') + _0x2d0146['toLowerCase']() + (_0x21455b || '');
        }
        _0x5b7673['prototype'][_0x324b8e(0x1d5)] = function (_0x2acfca) {
            const _0x4f0647 = _0x324b8e;
            var _0x359555 = new _0x5b7673();
            return this['scheme'] ? (_0x359555[_0x4f0647(0x1a0)] = this[_0x4f0647(0x1a0)],
                _0x359555[_0x4f0647(0x982)] = this['authority'],
                _0x359555[_0x4f0647(0x873)] = this[_0x4f0647(0x873)],
                _0x359555['query'] = this[_0x4f0647(0x2cc)]) : (_0x359555[_0x4f0647(0x1a0)] = _0x2acfca[_0x4f0647(0x1a0)],
                    this['authority'] ? (_0x359555[_0x4f0647(0x982)] = this[_0x4f0647(0x982)],
                        _0x359555[_0x4f0647(0x873)] = this[_0x4f0647(0x873)],
                        _0x359555[_0x4f0647(0x2cc)] = this[_0x4f0647(0x2cc)]) : (_0x359555[_0x4f0647(0x982)] = _0x2acfca[_0x4f0647(0x982)],
                            '' == this[_0x4f0647(0x873)] ? (_0x359555[_0x4f0647(0x873)] = _0x2acfca[_0x4f0647(0x873)],
                                _0x359555[_0x4f0647(0x2cc)] = this[_0x4f0647(0x2cc)] || _0x2acfca[_0x4f0647(0x2cc)]) : ('/' == this[_0x4f0647(0x873)][_0x4f0647(0x8c3)](0x0) ? (_0x359555[_0x4f0647(0x873)] = this[_0x4f0647(0x873)],
                                    _0x359555[_0x4f0647(0x927)]()) : (_0x2acfca[_0x4f0647(0x982)] && '' == _0x2acfca[_0x4f0647(0x873)] ? _0x359555[_0x4f0647(0x873)] = '/' + this[_0x4f0647(0x873)] : _0x359555[_0x4f0647(0x873)] = _0x2acfca['path']['substring'](0x0, _0x2acfca[_0x4f0647(0x873)][_0x4f0647(0x832)]('/') + 0x1) + this[_0x4f0647(0x873)],
                                        _0x359555[_0x4f0647(0x927)]()),
                                    _0x359555[_0x4f0647(0x2cc)] = this[_0x4f0647(0x2cc)]))),
                _0x359555['fragment'] = this[_0x4f0647(0x63d)],
                _0x359555;
        }
            ,
            _0x5b7673['prototype'][_0x324b8e(0x927)] = function () {
                const _0x5627fe = _0x324b8e;
                var _0x3c4d34, _0x5d126b = this[_0x5627fe(0x873)][_0x5627fe(0x89c)]('/'), _0x433514 = [], _0x22b5cc = '' == _0x5d126b[0x0];
                for (_0x22b5cc && _0x5d126b['shift'](),
                    '' == _0x5d126b[0x0] && _0x5d126b[_0x5627fe(0x356)](); _0x5d126b[_0x5627fe(0x376)];)
                    '..' == (_0x3c4d34 = _0x5d126b[_0x5627fe(0x356)]()) ? _0x433514[_0x5627fe(0x6c4)]() : '.' != _0x3c4d34 && _0x433514[_0x5627fe(0x745)](_0x3c4d34);
                '.' != _0x3c4d34 && '..' != _0x3c4d34 || _0x433514[_0x5627fe(0x745)](''),
                    _0x22b5cc && _0x433514[_0x5627fe(0x21b)](''),
                    this[_0x5627fe(0x873)] = _0x433514[_0x5627fe(0x13f)]('/');
            }
            ,
            _0x5b7673['prototype'][_0x324b8e(0x362)] = function () {
                const _0x1e100f = _0x324b8e;
                var _0x1f59f3 = '';
                return this[_0x1e100f(0x1a0)] && (_0x1f59f3 += this['scheme'] + ':'),
                    this[_0x1e100f(0x982)] && (_0x1f59f3 += '//' + this[_0x1e100f(0x982)]),
                    _0x1f59f3 += this[_0x1e100f(0x873)],
                    this[_0x1e100f(0x2cc)] && (_0x1f59f3 += '?' + this[_0x1e100f(0x2cc)]),
                    this[_0x1e100f(0x63d)] && (_0x1f59f3 += '#' + this[_0x1e100f(0x63d)]),
                    _0x1f59f3;
            }
            ;
        const _0x4c425b = Cesium[_0x324b8e(0x225)]
            , _0x5a6fc7 = Cesium[_0x324b8e(0x14b)]
            , _0x5ad8ff = Cesium['DeveloperError'];
        function _0x280274(_0x9d1346, _0x167ea6, _0x10e99b) {
            const _0x10bd5a = _0x324b8e;
            if (!_0x5a6fc7(_0x9d1346))
                throw new _0x5ad8ff(_0x10bd5a(0x71f));
            if (!_0x5a6fc7(_0x167ea6))
                throw new _0x5ad8ff('second\x20is\x20required');
            if (_0x10e99b = _0x4c425b(_0x10e99b, !0x0),
                _0x9d1346 instanceof _0x5b7673 || (_0x9d1346 = new _0x5b7673(_0x9d1346)),
                _0x167ea6 instanceof _0x5b7673 || (_0x167ea6 = new _0x5b7673(_0x167ea6)),
                _0x10bd5a(0xa3c) === _0x9d1346['scheme'])
                return _0x9d1346['toString']();
            if ('data' === _0x167ea6[_0x10bd5a(0x1a0)])
                return _0x167ea6[_0x10bd5a(0x362)]();
            _0x5a6fc7(_0x167ea6[_0x10bd5a(0x982)]) && !_0x5a6fc7(_0x167ea6['scheme']) && (_0x10bd5a(0x8a8) != typeof document && _0x5a6fc7(document[_0x10bd5a(0x888)]) && _0x5a6fc7(document[_0x10bd5a(0x888)]['href']) ? _0x167ea6[_0x10bd5a(0x1a0)] = new _0x5b7673(document[_0x10bd5a(0x888)][_0x10bd5a(0x84d)])[_0x10bd5a(0x1a0)] : _0x167ea6[_0x10bd5a(0x1a0)] = _0x9d1346[_0x10bd5a(0x1a0)]);
            var _0x3a4a7f = _0x9d1346;
            _0x167ea6[_0x10bd5a(0x8d9)]() && (_0x3a4a7f = _0x167ea6);
            var _0xf49c7 = '';
            _0x5a6fc7(_0x3a4a7f['scheme']) && (_0xf49c7 += _0x3a4a7f[_0x10bd5a(0x1a0)] + ':'),
                _0x5a6fc7(_0x3a4a7f[_0x10bd5a(0x982)]) && (_0xf49c7 += '//' + _0x3a4a7f[_0x10bd5a(0x982)],
                    '' !== _0x3a4a7f['path'] && '/' !== _0x3a4a7f['path'] && (_0xf49c7 = _0xf49c7[_0x10bd5a(0x3ed)](/\/?$/, '/'),
                        _0x3a4a7f['path'] = _0x3a4a7f['path']['replace'](/^\/?/g, ''),
                        '' === _0x3a4a7f[_0x10bd5a(0x982)] && (_0xf49c7 += '/'))),
                _0xf49c7 += _0x3a4a7f === _0x9d1346 ? _0x10e99b ? _0x9d1346[_0x10bd5a(0x873)]['replace'](/\/?$/, '/') + _0x167ea6[_0x10bd5a(0x873)][_0x10bd5a(0x3ed)](/^\/?/g, '') : _0x9d1346[_0x10bd5a(0x873)] + _0x167ea6[_0x10bd5a(0x873)] : _0x167ea6['path'];
            var _0x5b5b56 = _0x5a6fc7(_0x9d1346[_0x10bd5a(0x2cc)])
                , _0x2549e4 = _0x5a6fc7(_0x167ea6[_0x10bd5a(0x2cc)]);
            _0x5b5b56 && _0x2549e4 ? _0xf49c7 += '?' + _0x9d1346[_0x10bd5a(0x2cc)] + '&' + _0x167ea6['query'] : _0x5b5b56 && !_0x2549e4 ? _0xf49c7 += '?' + _0x9d1346[_0x10bd5a(0x2cc)] : !_0x5b5b56 && _0x2549e4 && (_0xf49c7 += '?' + _0x167ea6['query']);
            var _0x1f9b52 = _0x5a6fc7(_0x167ea6[_0x10bd5a(0x63d)]);
            return _0x5a6fc7(_0x9d1346['fragment']) && !_0x1f9b52 ? _0xf49c7 += '#' + _0x9d1346[_0x10bd5a(0x63d)] : _0x1f9b52 && (_0xf49c7 += '#' + _0x167ea6[_0x10bd5a(0x63d)]),
                _0xf49c7;
        }
        const _0x4b0598 = Cesium[_0x324b8e(0x14b)]
            , _0x501940 = Cesium[_0x324b8e(0x225)]
            , _0x748083 = Cesium[_0x324b8e(0x335)]
            , _0x23c2dc = Cesium[_0x324b8e(0x588)];
        function _0x5cb66c(_0x5422ba, _0x113684) {
            const _0x31e1f3 = _0x324b8e;
            this[_0x31e1f3(0x697)] = {},
                this[_0x31e1f3(0x329)](_0x5422ba, _0x113684);
        }
        Object[_0x324b8e(0xa38)](_0x5cb66c[_0x324b8e(0x74f)], {
            'value': {
                'get': function () {
                    return this['_value'];
                },
                'set': function (_0x4c7854) {
                    const _0x31fa47 = _0x324b8e;
                    this[_0x31fa47(0x810)] = _0x4c7854;
                }
            },
            'name': {
                'get': function () {
                    const _0x4d22dd = _0x324b8e;
                    return this[_0x4d22dd(0xa83)];
                },
                'set': function (_0x4637e5) {
                    const _0x1bfdf4 = _0x324b8e;
                    this[_0x1bfdf4(0xa83)] = _0x4637e5;
                }
            }
        }),
            _0x5cb66c[_0x324b8e(0x474)] = function (_0x148edd) {
                const _0x3cb2a2 = _0x324b8e;
                var _0x1a63d7, _0x24f861 = _0x148edd[_0x3cb2a2(0x475)](0x0, _0x148edd[_0x3cb2a2(0xa59)](_0x3cb2a2(0x1eb)) + 0xa);
                if (_0x4b0598(_0x5cb66c[_0x3cb2a2(0x25e)][_0x3cb2a2(0x697)][_0x24f861]))
                    switch (_0x5cb66c['CREDENTIAL'][_0x3cb2a2(0x697)][_0x24f861][_0x3cb2a2(0x928)]) {
                        case _0x486697[_0x3cb2a2(0x116)]:
                            _0x1a63d7 = '?' + _0x23c2dc({
                                'token': _0x5cb66c[_0x3cb2a2(0x25e)][_0x3cb2a2(0x697)][_0x24f861][_0x3cb2a2(0x3da)]
                            });
                            break;
                        case _0x486697[_0x3cb2a2(0x849)]:
                            _0x1a63d7 = '?' + _0x23c2dc({
                                'key': _0x5cb66c['CREDENTIAL']['_keymap'][_0x24f861][_0x3cb2a2(0x3da)]
                            });
                            break;
                        default:
                            _0x1a63d7 = '';
                    }
                else
                    switch (_0x5cb66c[_0x3cb2a2(0x25e)][_0x3cb2a2(0x770)]) {
                        case _0x486697[_0x3cb2a2(0x116)]:
                            _0x1a63d7 = '?' + _0x23c2dc({
                                'token': _0x5cb66c[_0x3cb2a2(0x25e)][_0x3cb2a2(0x3da)]
                            });
                            break;
                        case _0x486697[_0x3cb2a2(0x849)]:
                            _0x1a63d7 = '?' + _0x23c2dc({
                                'key': _0x5cb66c[_0x3cb2a2(0x25e)][_0x3cb2a2(0x3da)]
                            });
                            break;
                        default:
                            _0x1a63d7 = '?' + _0x5cb66c[_0x3cb2a2(0x25e)][_0x3cb2a2(0x770)] + '=' + _0x5cb66c[_0x3cb2a2(0x25e)][_0x3cb2a2(0x3da)];
                    }
                return _0x280274(_0x148edd, _0x1a63d7, !0x1);
            }
            ,
            _0x5cb66c[_0x324b8e(0x779)] = function (_0x1104c2, _0x47f725) {
                const _0x30e1f3 = _0x324b8e;
                var _0x395b0c;
                if (_0x4b0598(_0x5cb66c[_0x30e1f3(0x25e)][_0x30e1f3(0x697)][_0x1104c2])) {
                    if (_0x5cb66c[_0x30e1f3(0x25e)][_0x30e1f3(0x697)][_0x1104c2][_0x30e1f3(0x928)] instanceof Array) {
                        var _0x4c9c1b, _0x4c9f5d = _0x5cb66c[_0x30e1f3(0x25e)]['_keymap'][_0x1104c2]['type'], _0x357b9f = _0x5cb66c[_0x30e1f3(0x25e)]['_keymap'][_0x1104c2][_0x30e1f3(0x3da)];
                        (_0x4dca3e = {})[_0x4c9f5d[0x0]] = _0x357b9f[0x0],
                            _0x4c9c1b = _0x280274(_0x47f725, '?' + _0x23c2dc(_0x4dca3e), !0x1);
                        for (var _0x3aa0c3 = 0x1; _0x3aa0c3 < _0x4c9f5d[_0x30e1f3(0x376)]; _0x3aa0c3++) {
                            (_0x4dca3e = {})[_0x4c9f5d[_0x3aa0c3]] = _0x357b9f[_0x3aa0c3],
                                _0x4c9c1b = _0x4c9c1b + '&' + _0x23c2dc(_0x4dca3e);
                        }
                        return _0x4c9c1b;
                    }
                    switch (_0x5cb66c[_0x30e1f3(0x25e)]['_keymap'][_0x1104c2][_0x30e1f3(0x928)]) {
                        case _0x486697[_0x30e1f3(0x116)]:
                            _0x395b0c = '?' + _0x23c2dc({
                                'token': _0x5cb66c['CREDENTIAL'][_0x30e1f3(0x697)][_0x1104c2][_0x30e1f3(0x3da)]
                            });
                            break;
                        case _0x486697['IPORTAL_KEY']:
                            _0x395b0c = '?' + _0x23c2dc({
                                'key': _0x5cb66c[_0x30e1f3(0x25e)][_0x30e1f3(0x697)][_0x1104c2][_0x30e1f3(0x3da)]
                            });
                            break;
                        default:
                            var _0x4dca3e;
                            (_0x4dca3e = {})[_0x5cb66c[_0x30e1f3(0x25e)]['_keymap'][_0x1104c2][_0x30e1f3(0x928)]] = _0x5cb66c[_0x30e1f3(0x25e)][_0x30e1f3(0x697)][_0x1104c2]['value'],
                                _0x395b0c = '?' + _0x23c2dc(_0x4dca3e);
                    }
                } else
                    switch (_0x5cb66c['CREDENTIAL'][_0x30e1f3(0x770)]) {
                        case _0x486697[_0x30e1f3(0x116)]:
                            _0x395b0c = '?' + _0x23c2dc({
                                'token': _0x5cb66c['CREDENTIAL'][_0x30e1f3(0x3da)]
                            });
                            break;
                        case _0x486697[_0x30e1f3(0x849)]:
                            _0x395b0c = '?' + _0x23c2dc({
                                'key': _0x5cb66c[_0x30e1f3(0x25e)][_0x30e1f3(0x3da)]
                            });
                            break;
                        default:
                            _0x395b0c = '?' + _0x5cb66c[_0x30e1f3(0x25e)]['name'] + '=' + _0x5cb66c[_0x30e1f3(0x25e)][_0x30e1f3(0x3da)];
                    }
                return _0x280274(_0x47f725, _0x395b0c, !0x1);
            }
            ,
            _0x5cb66c[_0x324b8e(0x74f)][_0x324b8e(0x329)] = function (_0x4f1b0e, _0x18e372) {
                const _0x1cff95 = _0x324b8e;
                if (_0x4f1b0e instanceof Array) {
                    for (var _0xde9fcb = 0x0, _0x339734 = _0x4f1b0e['length']; _0xde9fcb < _0x339734; _0xde9fcb++)
                        if (this[_0x1cff95(0x697)][_0x4f1b0e[_0xde9fcb][_0x1cff95(0x28d)]] = {
                            'type': _0x4f1b0e[_0xde9fcb][_0x1cff95(0x928)] || _0x486697['ISERVER_TOKEN'],
                            'value': _0x4f1b0e[_0xde9fcb][_0x1cff95(0x3da)]
                        },
                            -0x1 !== _0x4f1b0e[_0xde9fcb][_0x1cff95(0x28d)][_0x1cff95(0xa59)](_0x1cff95(0x1eb))) {
                            var _0x56eea6 = _0x4f1b0e[_0xde9fcb][_0x1cff95(0x28d)][_0x1cff95(0x475)](0x0, _0x4f1b0e[_0xde9fcb][_0x1cff95(0x28d)][_0x1cff95(0x832)]('/realspace') + 0xa);
                            this[_0x1cff95(0x697)][_0x56eea6] = {
                                'type': _0x4f1b0e[_0xde9fcb][_0x1cff95(0x928)] || _0x486697[_0x1cff95(0x116)],
                                'value': _0x4f1b0e[_0xde9fcb][_0x1cff95(0x3da)]
                            };
                        }
                } else {
                    if (this['_value'] = _0x501940(_0x4f1b0e, ''),
                        null == _0x4f1b0e)
                        throw new _0x748083(_0x1cff95(0x895));
                    this[_0x1cff95(0xa83)] = _0x501940(_0x18e372, _0x486697[_0x1cff95(0x116)]),
                        this[_0x1cff95(0x697)][_0x1cff95(0x782)] = {
                            'type': this[_0x1cff95(0xa83)],
                            'value': this[_0x1cff95(0x810)]
                        };
                }
            }
            ,
            _0x5cb66c[_0x324b8e(0x25e)] = null;
        var _0x5e3772, _0x593fb3, _0x20a409, _0x311b50 = /((?:.*\/)|^)SuperMap3D\.js$/;
        function _0x500a59(_0x3ece83) {
            const _0x332d86 = _0x324b8e;
            return _0x332d86(0x8a8) == typeof document ? _0x3ece83 : (Adapter[_0x332d86(0x14b)](_0x5e3772) || (_0x5e3772 = document[_0x332d86(0x1ac)]('a')),
                _0x5e3772[_0x332d86(0x84d)] = _0x3ece83,
                _0x5e3772['href'] = _0x5e3772[_0x332d86(0x84d)],
                _0x5e3772[_0x332d86(0x84d)]);
        }
        function _0x2a56ee() {
            const _0xa3dc74 = _0x324b8e;
            if (Adapter[_0xa3dc74(0x14b)](_0x593fb3))
                return _0x593fb3;
            var _0x215a0f;
            if (_0x215a0f = _0xa3dc74(0x8a8) != typeof SUPERMAP_BASE_URL ? SUPERMAP_BASE_URL : function () {
                const _0x2e4901 = _0xa3dc74;
                for (var _0x876f9d = document['getElementsByTagName'](_0x2e4901(0x2c9)), _0x2da0c9 = 0x0, _0x2dd527 = _0x876f9d['length']; _0x2da0c9 < _0x2dd527; ++_0x2da0c9) {
                    var _0x30143b = _0x876f9d[_0x2da0c9][_0x2e4901(0x7b9)](_0x2e4901(0x1e8))
                        , _0x35b2c7 = _0x311b50[_0x2e4901(0x3ff)](_0x30143b);
                    if (null !== _0x35b2c7)
                        return _0x35b2c7[0x1];
                }
            }(),
                !Adapter[_0xa3dc74(0x14b)](_0x215a0f))
                throw new Adapter[(_0xa3dc74(0x335))](_0xa3dc74(0x73f));
            return (_0x593fb3 = new Adapter[(_0xa3dc74(0x9c9))]({
                'url': _0x500a59(_0x215a0f)
            }))[_0xa3dc74(0x1c2)](),
                _0x593fb3;
        }
        function _0x1c967f(_0x1b714b) {
            const _0x3a1c9c = _0x324b8e;
            return _0x500a59(require['toUrl'](_0x3a1c9c(0x90f) + _0x1b714b));
        }
        function _0x58fa85(_0x18a085) {
            const _0x501fb9 = _0x324b8e;
            return _0x2a56ee()[_0x501fb9(0x139)]({
                'url': _0x18a085
            })[_0x501fb9(0xa62)];
        }
        function _0x4add1a(_0x143145) {
            const _0x55ce91 = _0x324b8e;
            return Adapter[_0x55ce91(0x14b)](_0x20a409) || (_0x20a409 = _0x55ce91(0x3f0) == typeof define && Adapter['defined'](define['amd']) && !define[_0x55ce91(0x71a)][_0x55ce91(0x35e)] && Adapter['defined'](require[_0x55ce91(0x4ec)]) ? _0x1c967f : _0x58fa85),
                _0x20a409(_0x143145);
        }
        function _0x5aff14() { }
        _0x4add1a[_0x324b8e(0x92f)] = _0x58fa85,
            _0x4add1a[_0x324b8e(0x519)] = function () {
                _0x593fb3 = void 0x0;
            }
            ,
            _0x4add1a['setBaseUrl'] = function (_0x4d8858) {
                const _0xf30f5e = _0x324b8e;
                _0x593fb3 = Adapter[_0xf30f5e(0x9c9)][_0xf30f5e(0x61e)][_0xf30f5e(0x139)]({
                    'url': _0x4d8858
                });
            }
            ,
            _0x4add1a[_0x324b8e(0x71e)] = _0x2a56ee,
            _0x5aff14[_0x324b8e(0x6a1)] = function (_0x15554d) {
                const _0x1c42c6 = _0x324b8e;
                let _0x2830ed = _0x15554d[_0x1c42c6(0xa59)]('<');
                return _0x2830ed > 0x0 && (_0x15554d = _0x15554d[_0x1c42c6(0x475)](_0x2830ed)),
                    DOMParser ? (_0x5aff14[_0x1c42c6(0x785)] || (_0x5aff14['xmldom'] = new DOMParser()),
                        _0x5aff14[_0x1c42c6(0x785)][_0x1c42c6(0x968)](_0x15554d, _0x1c42c6(0x5d6))) : (_0x5aff14[_0x1c42c6(0x785)] || (_0x5aff14['xmldom'] = new ActiveXObject(_0x1c42c6(0x7b6))),
                            _0x5aff14[_0x1c42c6(0x785)][_0x1c42c6(0x56e)](_0x15554d));
            }
            ,
            _0x5aff14[_0x324b8e(0x32f)] = function (_0x278159, _0x235240, _0x5bec4c) {
                const _0x5cd065 = _0x324b8e;
                let _0x5c5260 = [];
                if (_0x278159['getElementsByTagNameNS'])
                    _0x5c5260 = _0x278159[_0x5cd065(0x32f)](_0x235240, _0x5bec4c);
                else {
                    let _0x42ca0b, _0x40273f, _0x294243 = _0x278159['getElementsByTagName']('*');
                    for (let _0x1fd38a = 0x0, _0x3c23fa = _0x294243[_0x5cd065(0x376)]; _0x1fd38a < _0x3c23fa; ++_0x1fd38a)
                        _0x42ca0b = _0x294243[_0x1fd38a],
                            _0x40273f = _0x42ca0b[_0x5cd065(0x2f2)] ? _0x42ca0b['prefix'] + ':' + _0x5bec4c : _0x5bec4c,
                            '*' !== _0x5bec4c && _0x40273f !== _0x42ca0b['nodeName'] || '*' !== _0x235240 && _0x235240 !== _0x42ca0b[_0x5cd065(0x1f1)] || _0x5c5260[_0x5cd065(0x745)](_0x42ca0b);
                }
                return _0x5c5260;
            }
            ,
            _0x5aff14['getAttributeNodeNS'] = function (_0x270bb3, _0x50c7e9, _0x27cb14) {
                const _0x2c09cf = _0x324b8e;
                let _0x4eba63 = null;
                if (_0x270bb3['getAttributeNodeNS'])
                    _0x4eba63 = _0x270bb3['getAttributeNodeNS'](_0x50c7e9, _0x27cb14);
                else {
                    let _0x129360, _0x229288, _0x178415 = _0x270bb3[_0x2c09cf(0x2da)];
                    for (let _0x4b6897 = 0x0, _0x3be9a6 = _0x178415[_0x2c09cf(0x376)]; _0x4b6897 < _0x3be9a6; ++_0x4b6897)
                        if (_0x129360 = _0x178415[_0x4b6897],
                            _0x129360[_0x2c09cf(0x1f1)] === _0x50c7e9 && (_0x229288 = _0x129360[_0x2c09cf(0x2f2)] ? _0x129360[_0x2c09cf(0x2f2)] + ':' + _0x27cb14 : _0x27cb14,
                                _0x229288 === _0x129360[_0x2c09cf(0x606)])) {
                            _0x4eba63 = _0x129360;
                            break;
                        }
                }
                return _0x4eba63;
            }
            ,
            _0x5aff14[_0x324b8e(0x673)] = function (_0x2fe788, _0x1cfa65) {
                const _0xe88d27 = _0x324b8e;
                let _0xbb13e3 = _0x1cfa65 || '';
                if (_0x2fe788) {
                    for (let _0x429663 = _0x2fe788[_0xe88d27(0x906)]; _0x429663; _0x429663 = _0x429663[_0xe88d27(0x1f9)])
                        switch (_0x429663[_0xe88d27(0x7c2)]) {
                            case 0x3:
                            case 0x4:
                                _0xbb13e3 += _0x429663[_0xe88d27(0x55b)];
                        }
                }
                return _0xbb13e3;
            }
            ,
            _0x5aff14['queryNumericAttribute'] = function (_0x29f8d3, _0x18364c) {
                const _0x39a5e1 = _0x324b8e;
                if (!_0x29f8d3)
                    return;
                let _0x2a3052 = _0x29f8d3[_0x39a5e1(0x7b9)](_0x18364c);
                if (null !== _0x2a3052) {
                    let _0x15e7aa = parseFloat(_0x2a3052);
                    return isNaN(_0x15e7aa) ? void 0x0 : _0x15e7aa;
                }
            }
            ,
            _0x5aff14[_0x324b8e(0x658)] = function (_0x37a4e7, _0x49766c) {
                if (!_0x37a4e7)
                    return;
                let _0xd4233b = _0x37a4e7['getAttribute'](_0x49766c);
                return null !== _0xd4233b ? _0xd4233b : void 0x0;
            }
            ,
            _0x5aff14[_0x324b8e(0x89e)] = function (_0x1fee26, _0x274fb3) {
                const _0x29f5c4 = _0x324b8e;
                if (!_0x1fee26)
                    return;
                let _0x4bfa97 = _0x1fee26[_0x29f5c4(0x7b9)](_0x274fb3);
                return _0x4bfa97 = _0x4bfa97[_0x29f5c4(0xa2b)](),
                    _0x29f5c4(0x7cf) !== _0x4bfa97 && ('true' === _0x4bfa97 || void 0x0);
            }
            ,
            _0x5aff14[_0x324b8e(0x2fd)] = function (_0x4f54d6, _0x16559a, _0x2e8779) {
                const _0x2f873f = _0x324b8e;
                if (!_0x4f54d6)
                    return;
                let _0x128d24 = _0x4f54d6[_0x2f873f(0x2a1)]
                    , _0x801b28 = _0x128d24[_0x2f873f(0x376)];
                for (let _0x27e849 = 0x0; _0x27e849 < _0x801b28; _0x27e849++) {
                    let _0x5c8d17 = _0x128d24[_0x27e849];
                    if (_0x2e8779) {
                        if (_0x5c8d17['localName'] === _0x16559a && -0x1 !== _0x2e8779[_0x2f873f(0xa59)](_0x5c8d17[_0x2f873f(0x1f1)]))
                            return _0x5c8d17;
                    } else {
                        if (_0x5c8d17['localName'] === _0x16559a)
                            return _0x5c8d17;
                    }
                }
            }
            ,
            _0x5aff14[_0x324b8e(0x8a7)] = function (_0x2ef91f, _0x2878e8, _0x837182) {
                const _0x5e44c7 = _0x324b8e;
                if (!_0x2ef91f)
                    return;
                let _0x2cf5de = []
                    , _0x33d76d = _0x2ef91f[_0x5e44c7(0x32f)]('*', _0x2878e8)
                    , _0x266e2e = _0x33d76d['length'];
                for (let _0x86870d = 0x0; _0x86870d < _0x266e2e; _0x86870d++) {
                    let _0x512568 = _0x33d76d[_0x86870d];
                    _0x837182 ? _0x512568[_0x5e44c7(0x5e7)] === _0x2878e8 && -0x1 !== _0x837182[_0x5e44c7(0xa59)](_0x512568[_0x5e44c7(0x1f1)]) && _0x2cf5de[_0x5e44c7(0x745)](_0x512568) : _0x512568[_0x5e44c7(0x5e7)] === _0x2878e8 && _0x2cf5de[_0x5e44c7(0x745)](_0x512568);
                }
                return _0x2cf5de;
            }
            ,
            _0x5aff14['queryChildNodes'] = function (_0x27e4fb, _0x2b1f94, _0x24eebd) {
                const _0x16b50c = _0x324b8e;
                if (!_0x27e4fb)
                    return [];
                let _0x20b726 = []
                    , _0x24c04b = _0x27e4fb[_0x16b50c(0x2a1)]
                    , _0x9c964e = _0x24c04b[_0x16b50c(0x376)];
                for (let _0x49b6ae = 0x0; _0x49b6ae < _0x9c964e; _0x49b6ae++) {
                    let _0x1c99b4 = _0x24c04b[_0x49b6ae];
                    _0x24eebd ? _0x1c99b4[_0x16b50c(0x5e7)] === _0x2b1f94 && -0x1 !== _0x24eebd[_0x16b50c(0xa59)](_0x1c99b4[_0x16b50c(0x1f1)]) && _0x20b726[_0x16b50c(0x745)](_0x1c99b4) : _0x1c99b4[_0x16b50c(0x5e7)] === _0x2b1f94 && _0x20b726[_0x16b50c(0x745)](_0x1c99b4);
                }
                return _0x20b726;
            }
            ,
            _0x5aff14['queryNumericValue'] = function (_0x133685, _0x3c39bf, _0x5afc22) {
                let _0x16f6ed = _0x5aff14['queryFirstNode'](_0x133685, _0x3c39bf, _0x5afc22);
                if (_0x16f6ed) {
                    let _0x59b7f0 = parseFloat(_0x16f6ed['textContent']);
                    return isNaN(_0x59b7f0) ? void 0x0 : _0x59b7f0;
                }
            }
            ,
            _0x5aff14['queryStringValue'] = function (_0xfaf8bf, _0x59f539, _0x53c110) {
                const _0x1a2a66 = _0x324b8e;
                let _0x53c7ea = _0x5aff14[_0x1a2a66(0x2fd)](_0xfaf8bf, _0x59f539, _0x53c110);
                if (_0x53c7ea)
                    return _0x53c7ea['textContent'][_0x1a2a66(0xac7)]();
            }
            ,
            _0x5aff14[_0x324b8e(0xaad)] = function (_0x5bdc88, _0x126940, _0x18ea22) {
                const _0x1c00e3 = _0x324b8e;
                let _0x5f2446 = _0x5aff14[_0x1c00e3(0x2fd)](_0x5bdc88, _0x126940, _0x18ea22);
                if (_0x5f2446) {
                    let _0x14963a = _0x5f2446[_0x1c00e3(0x133)][_0x1c00e3(0xac7)]();
                    return '1' === _0x14963a || /^true$/i['test'](_0x14963a);
                }
            }
            ;
        var _0x276dd5 = Object[_0x324b8e(0x3e6)]({
            'Fill': 0x0,
            'WireFrame': 0x1,
            'Fill_And_WireFrame': 0x2
        })
            , _0x4cb402 = Object[_0x324b8e(0x3e6)]({
                'None': 0x0,
                'FixedZ': 0x1,
                'FixedXYZ': 0x2
            });
        function _0x49debc() {
            const _0x2bb8f3 = _0x324b8e;
            this['_fillForeColor'] = new Cesium[(_0x2bb8f3(0x75c))](),
                this['_fillStyle'] = _0x276dd5['Fill'],
                this[_0x2bb8f3(0x2f9)] = new Cesium[(_0x2bb8f3(0x75c))](),
                this[_0x2bb8f3(0x8ac)] = 0x1,
                this[_0x2bb8f3(0x4b7)] = 0x0,
                this[_0x2bb8f3(0x1b7)] = 0x1,
                this[_0x2bb8f3(0xa25)] = new Cesium['Color'](),
                this[_0x2bb8f3(0x837)] = Cesium[_0x2bb8f3(0x89f)][_0x2bb8f3(0x302)],
                this[_0x2bb8f3(0xe5)] = new Cesium[(_0x2bb8f3(0x75c))](0x1, 0x1, 0x1, 0x1),
                this[_0x2bb8f3(0x6be)] = void 0x0,
                this['_dirty'] = !0x1,
                this[_0x2bb8f3(0x6ac)] = void 0x0,
                this[_0x2bb8f3(0x2dd)] = !0x0,
                this[_0x2bb8f3(0x143)] = Cesium[_0x2bb8f3(0x75c)][_0x2bb8f3(0x7bb)],
                this[_0x2bb8f3(0x5cf)] = 0x1,
                this[_0x2bb8f3(0x878)] = _0x4cb402[_0x2bb8f3(0x4a6)];
        }
        Object['defineProperties'](_0x49debc['prototype'], {
            'fillForeColor': {
                'get': function () {
                    return this['_fillForeColor'];
                },
                'set': function (_0x5d6ca6) {
                    const _0x28bdd5 = _0x324b8e;
                    Cesium[_0x28bdd5(0x636)][_0x28bdd5(0x8d8)][_0x28bdd5(0x3f0)]('fillForeColor\x20value', _0x5d6ca6),
                        Cesium[_0x28bdd5(0x75c)][_0x28bdd5(0x157)](_0x5d6ca6, this[_0x28bdd5(0xf1)]);
                }
            },
            'bottomAltitude': {
                'get': function () {
                    return this['_bottomAltitude'];
                },
                'set': function (_0x4cff03) {
                    const _0x2c5fc9 = _0x324b8e;
                    Cesium['Check'][_0x2c5fc9(0x8d8)][_0x2c5fc9(0x305)](_0x2c5fc9(0x96b), _0x4cff03),
                        this['_bottomAltitude'] !== _0x4cff03 && (this['_bottomAltitude'] = _0x4cff03,
                            this['_dirty'] = !0x0);
                }
            },
            'altitudeMode': {
                'get': function () {
                    const _0xd2fcb8 = _0x324b8e;
                    return this[_0xd2fcb8(0x837)];
                },
                'set': function (_0x54a830) {
                    const _0x549f82 = _0x324b8e;
                    Cesium[_0x549f82(0x636)]['typeOf'][_0x549f82(0x305)](_0x549f82(0x21a), _0x54a830),
                        this[_0x549f82(0x837)] = _0x54a830;
                }
            },
            'fillStyle': {
                'get': function () {
                    const _0x417c68 = _0x324b8e;
                    return this[_0x417c68(0x205)];
                },
                'set': function (_0x27fdaa) {
                    const _0xa322e6 = _0x324b8e;
                    Cesium[_0xa322e6(0x636)][_0xa322e6(0x8d8)][_0xa322e6(0x305)](_0xa322e6(0x5b2), _0x27fdaa);
                    let _0x345c0e = this[_0xa322e6(0x205)];
                    this['_fillStyle'] = _0x27fdaa,
                        _0x27fdaa !== _0x345c0e && this[_0xa322e6(0x6be)] && this[_0xa322e6(0x6be)][_0xa322e6(0x9ba)]();
                }
            },
            'lineColor': {
                'get': function () {
                    return this['_lineColor'];
                },
                'set': function (_0x5785f2) {
                    const _0x22d449 = _0x324b8e;
                    Cesium[_0x22d449(0x636)][_0x22d449(0x8d8)][_0x22d449(0x3f0)](_0x22d449(0x677), _0x5785f2),
                        Cesium[_0x22d449(0x75c)][_0x22d449(0x157)](_0x5785f2, this[_0x22d449(0x2f9)]);
                }
            },
            'lineWidth': {
                'get': function () {
                    const _0x22527a = _0x324b8e;
                    return this[_0x22527a(0x8ac)];
                },
                'set': function (_0x43653b) {
                    const _0xad89fa = _0x324b8e;
                    Cesium[_0xad89fa(0x636)][_0xad89fa(0x8d8)][_0xad89fa(0x305)](_0xad89fa(0x562), _0x43653b),
                        this[_0xad89fa(0x8ac)] = _0x43653b;
                }
            },
            'pointSize': {
                'get': function () {
                    const _0x18d488 = _0x324b8e;
                    return this[_0x18d488(0x1b7)];
                },
                'set': function (_0x4fd6c9) {
                    const _0x4de9d2 = _0x324b8e;
                    Cesium['Check'][_0x4de9d2(0x8d8)][_0x4de9d2(0x305)](_0x4de9d2(0xad4), _0x4fd6c9),
                        this[_0x4de9d2(0x1b7)] = _0x4fd6c9;
                }
            },
            'pointColor': {
                'get': function () {
                    return this['_pointColor'];
                },
                'set': function (_0x1b1dca) {
                    const _0x2cba2c = _0x324b8e;
                    Cesium[_0x2cba2c(0x636)][_0x2cba2c(0x8d8)][_0x2cba2c(0x3f0)]('point\x20color', _0x1b1dca),
                        Cesium[_0x2cba2c(0x75c)][_0x2cba2c(0x157)](_0x1b1dca, this[_0x2cba2c(0xa25)]);
                }
            },
            'emissionColor': {
                'get': function () {
                    const _0x3634d1 = _0x324b8e;
                    return this[_0x3634d1(0xe5)];
                },
                'set': function (_0x2d2e7d) {
                    const _0x53c785 = _0x324b8e;
                    Cesium['Check'][_0x53c785(0x8d8)][_0x53c785(0x3f0)](_0x53c785(0x497), _0x2d2e7d),
                        Cesium[_0x53c785(0x75c)]['clone'](_0x2d2e7d, this[_0x53c785(0xe5)]);
                }
            },
            'image': {
                'get': function () {
                    return this['_image'];
                },
                'set': function (_0x314667) {
                    const _0x7e3af8 = _0x324b8e;
                    this[_0x7e3af8(0x2dd)] = !0x1,
                        this[_0x7e3af8(0x6ac)] = _0x314667,
                        _0x7e3af8(0x937) == typeof _0x314667 ? this[_0x7e3af8(0x9e4)]() : this[_0x7e3af8(0x2dd)] = !0x0;
                }
            },
            'imageReady': {
                'get': function () {
                    const _0x3ca088 = _0x324b8e;
                    return this[_0x3ca088(0x2dd)];
                }
            },
            'calloutColor': {
                'get': function () {
                    const _0x1885c4 = _0x324b8e;
                    return this[_0x1885c4(0x143)];
                },
                'set': function (_0x21e2ce) {
                    const _0x16007a = _0x324b8e;
                    this[_0x16007a(0x143)] !== _0x21e2ce && (this[_0x16007a(0x143)] = _0x21e2ce);
                }
            },
            'calloutWidth': {
                'get': function () {
                    const _0x20407b = _0x324b8e;
                    return this[_0x20407b(0x5cf)];
                },
                'set': function (_0xf9f4e9) {
                    const _0x13d4a9 = _0x324b8e;
                    this['_calloutWidth'] !== _0xf9f4e9 && (this[_0x13d4a9(0x5cf)] = _0xf9f4e9);
                }
            },
            'billboardMode': {
                'get': function () {
                    const _0x895d7 = _0x324b8e;
                    return this[_0x895d7(0x878)];
                },
                'set': function (_0x2e9e31) {
                    const _0x259ecd = _0x324b8e;
                    this[_0x259ecd(0x878)] !== _0x2e9e31 && (this[_0x259ecd(0x878)] = _0x2e9e31);
                }
            }
        });
        var _0x343dab = Object['freeze']({
            'UNLOADED': 0x0,
            'LOADING': 0x1,
            'PARSING': 0x2,
            'READY': 0x3,
            'FAILED': 0x4
        })
            , _0xbd1c5c = Object[_0x324b8e(0x3e6)]({
                'LUMINANCE_8': 0x1,
                'LUMINANCE_16': 0x2,
                'ALPHA': 0x3,
                'ALPHA_4_LUMINANCE_4': 0x4,
                'LUMINANCE_ALPHA': 0x5,
                'RGB_565': 0x6,
                'BGR565': 0x7,
                'RGB': 0xa,
                'BGR': 0xb,
                'ARGB': 0xc,
                'ABGR': 0xd,
                'BGRA': 0xe,
                'WEBP': 0x19,
                'RGBA': 0x1c,
                'DXT1': 0x11,
                'DXT2': 0x12,
                'DXT3': 0x13,
                'DXT4': 0x14,
                'DXT5': 0x15,
                'CRN_DXT5': 0x1a,
                'STANDARD_CRN': 0x1b
            })
            , _0x2f6477 = Object[_0x324b8e(0x3e6)]({
                'encNONE': 0x0,
                'enrS3TCDXTN': 0xe,
                'enrPVRTPF_PVRTC2': 0x13,
                'enrPVRTPF_PVRTC': 0x14,
                'enrPVRTPF_PVRTC_4bpp': 0x15,
                'enrPVRTPF_ETC1': 0x16
            })
            , _0x5983eb = Object[_0x324b8e(0x3e6)]({
                'SVC_Vertex': 0x1,
                'SVC_Normal': 0x2,
                'SVC_VertexColor': 0x4,
                'SVC_SecondColor': 0x8,
                'SVC_TexutreCoord': 0x10,
                'SVC_TexutreCoordIsW': 0x20
            })
            , _0x11c7a2 = {};
        _0x11c7a2 = function _0x23a91c(_0x10850d, _0xbb0f7d, _0x4e2550) {
            const _0x42aa20 = _0x324b8e;
            function _0x4c748e(_0x223f17, _0x358d3a) {
                const _0x54c0e9 = _0x557c;
                if (!_0xbb0f7d[_0x223f17]) {
                    if (!_0x10850d[_0x223f17]) {
                        var _0x2eb119 = _0x54c0e9(0x3eb) == typeof require && require;
                        if (!_0x358d3a && _0x2eb119)
                            return _0x2eb119(_0x223f17, !0x0);
                        if (_0x47c44a)
                            return _0x47c44a(_0x223f17, !0x0);
                        var _0x3e1059 = new Error(_0x54c0e9(0xabb) + _0x223f17 + '\x27');
                        throw _0x3e1059[_0x54c0e9(0x413)] = _0x54c0e9(0x288),
                        _0x3e1059;
                    }
                    var _0x3eb20e = _0xbb0f7d[_0x223f17] = {
                        'exports': {}
                    };
                    _0x10850d[_0x223f17][0x0]['call'](_0x3eb20e[_0x54c0e9(0x359)], function (_0x51cc91) {
                        var _0x451faa = _0x10850d[_0x223f17][0x1][_0x51cc91];
                        return _0x4c748e(_0x451faa || _0x51cc91);
                    }, _0x3eb20e, _0x3eb20e[_0x54c0e9(0x359)], _0x23a91c, _0x10850d, _0xbb0f7d, _0x4e2550);
                }
                return _0xbb0f7d[_0x223f17][_0x54c0e9(0x359)];
            }
            for (var _0x47c44a = _0x42aa20(0x3eb) == typeof require && require, _0x68a070 = 0x0; _0x68a070 < _0x4e2550[_0x42aa20(0x376)]; _0x68a070++)
                _0x4c748e(_0x4e2550[_0x68a070]);
            return _0x4c748e;
        }({
            0x1: [function (_0x3ae43e, _0x4d787e, _0x1cacc2) {
                const _0x31521e = _0x324b8e;
                var _0x4ec563 = _0x31521e(0x8a8) != typeof Uint8Array && 'undefined' != typeof Uint16Array && _0x31521e(0x8a8) != typeof Int32Array;
                _0x1cacc2[_0x31521e(0x72e)] = function (_0x2571f1) {
                    const _0x266766 = _0x31521e;
                    for (var _0x386807 = Array[_0x266766(0x74f)]['slice'][_0x266766(0x479)](arguments, 0x1); _0x386807[_0x266766(0x376)];) {
                        var _0x4b5228 = _0x386807[_0x266766(0x356)]();
                        if (_0x4b5228) {
                            if ('object' != typeof _0x4b5228)
                                throw new TypeError(_0x4b5228 + 'must\x20be\x20non-object');
                            for (var _0x37239e in _0x4b5228)
                                _0x4b5228[_0x266766(0x704)](_0x37239e) && (_0x2571f1[_0x37239e] = _0x4b5228[_0x37239e]);
                        }
                    }
                    return _0x2571f1;
                }
                    ,
                    _0x1cacc2[_0x31521e(0x319)] = function (_0x175e4c, _0x29208b) {
                        const _0x596ed7 = _0x31521e;
                        return _0x175e4c[_0x596ed7(0x376)] === _0x29208b ? _0x175e4c : _0x175e4c[_0x596ed7(0x75e)] ? _0x175e4c['subarray'](0x0, _0x29208b) : (_0x175e4c[_0x596ed7(0x376)] = _0x29208b,
                            _0x175e4c);
                    }
                    ;
                var _0x5a0573 = {
                    'arraySet': function (_0x3a59d0, _0x38c839, _0x545d91, _0x29315e, _0x34138d) {
                        const _0x58f321 = _0x31521e;
                        if (_0x38c839[_0x58f321(0x75e)] && _0x3a59d0[_0x58f321(0x75e)])
                            _0x3a59d0['set'](_0x38c839[_0x58f321(0x75e)](_0x545d91, _0x545d91 + _0x29315e), _0x34138d);
                        else {
                            for (var _0x1bb8e6 = 0x0; _0x1bb8e6 < _0x29315e; _0x1bb8e6++)
                                _0x3a59d0[_0x34138d + _0x1bb8e6] = _0x38c839[_0x545d91 + _0x1bb8e6];
                        }
                    },
                    'flattenChunks': function (_0x1547ab) {
                        const _0x2e024c = _0x31521e;
                        var _0x12192d, _0x38feb3, _0x4f5573, _0x43b59f, _0x9a95b9, _0x2401af;
                        for (_0x4f5573 = 0x0,
                            _0x12192d = 0x0,
                            _0x38feb3 = _0x1547ab[_0x2e024c(0x376)]; _0x12192d < _0x38feb3; _0x12192d++)
                            _0x4f5573 += _0x1547ab[_0x12192d][_0x2e024c(0x376)];
                        for (_0x2401af = new Uint8Array(_0x4f5573),
                            _0x43b59f = 0x0,
                            _0x12192d = 0x0,
                            _0x38feb3 = _0x1547ab[_0x2e024c(0x376)]; _0x12192d < _0x38feb3; _0x12192d++)
                            _0x9a95b9 = _0x1547ab[_0x12192d],
                                _0x2401af[_0x2e024c(0x414)](_0x9a95b9, _0x43b59f),
                                _0x43b59f += _0x9a95b9[_0x2e024c(0x376)];
                        return _0x2401af;
                    }
                }
                    , _0x1ef76e = {
                        'arraySet': function (_0x4b1e78, _0x1187aa, _0x2ec876, _0x57700d, _0x3bae2a) {
                            for (var _0x3ea165 = 0x0; _0x3ea165 < _0x57700d; _0x3ea165++)
                                _0x4b1e78[_0x3bae2a + _0x3ea165] = _0x1187aa[_0x2ec876 + _0x3ea165];
                        },
                        'flattenChunks': function (_0x35626d) {
                            const _0x41dae2 = _0x31521e;
                            return []['concat'][_0x41dae2(0x8a5)]([], _0x35626d);
                        }
                    };
                _0x1cacc2[_0x31521e(0x8b2)] = function (_0x5050f5) {
                    const _0x151f0a = _0x31521e;
                    _0x5050f5 ? (_0x1cacc2['Buf8'] = Uint8Array,
                        _0x1cacc2['Buf16'] = Uint16Array,
                        _0x1cacc2['Buf32'] = Int32Array,
                        _0x1cacc2[_0x151f0a(0x72e)](_0x1cacc2, _0x5a0573)) : (_0x1cacc2['Buf8'] = Array,
                            _0x1cacc2[_0x151f0a(0x5ec)] = Array,
                            _0x1cacc2[_0x151f0a(0x41b)] = Array,
                            _0x1cacc2[_0x151f0a(0x72e)](_0x1cacc2, _0x1ef76e));
                }
                    ,
                    _0x1cacc2[_0x31521e(0x8b2)](_0x4ec563);
            }
                , {}],
            0x2: [function (_0x2e4c21, _0x46b37f, _0x5a088d) {
                const _0xc30a77 = _0x324b8e;
                var _0x3df3de = _0x2e4c21(_0xc30a77(0x9d3))
                    , _0xdf93 = !0x0
                    , _0x5585dd = !0x0;
                try {
                    String[_0xc30a77(0x65c)]['apply'](null, [0x0]);
                } catch (_0x2f0675) {
                    _0xdf93 = !0x1;
                }
                try {
                    String[_0xc30a77(0x65c)][_0xc30a77(0x8a5)](null, new Uint8Array(0x1));
                } catch (_0x4fa349) {
                    _0x5585dd = !0x1;
                }
                for (var _0x9978d4 = new _0x3df3de[(_0xc30a77(0x865))](0x100), _0x40d448 = 0x0; _0x40d448 < 0x100; _0x40d448++)
                    _0x9978d4[_0x40d448] = _0x40d448 >= 0xfc ? 0x6 : _0x40d448 >= 0xf8 ? 0x5 : _0x40d448 >= 0xf0 ? 0x4 : _0x40d448 >= 0xe0 ? 0x3 : _0x40d448 >= 0xc0 ? 0x2 : 0x1;
                function _0x4e8495(_0xb9eb31, _0x1cf880) {
                    const _0xd8e2db = _0xc30a77;
                    if (_0x1cf880 < 0x10001 && (_0xb9eb31[_0xd8e2db(0x75e)] && _0x5585dd || !_0xb9eb31[_0xd8e2db(0x75e)] && _0xdf93))
                        return String[_0xd8e2db(0x65c)]['apply'](null, _0x3df3de[_0xd8e2db(0x319)](_0xb9eb31, _0x1cf880));
                    for (var _0x228d69 = '', _0x3ce1b5 = 0x0; _0x3ce1b5 < _0x1cf880; _0x3ce1b5++)
                        _0x228d69 += String['fromCharCode'](_0xb9eb31[_0x3ce1b5]);
                    return _0x228d69;
                }
                _0x9978d4[0xfe] = _0x9978d4[0xfe] = 0x1,
                    _0x5a088d[_0xc30a77(0x9b5)] = function (_0x4f050b) {
                        const _0x4b428e = _0xc30a77;
                        var _0xe2830, _0x2fc97f, _0x1e64c5, _0x256384, _0x372be6, _0x56f2c8 = _0x4f050b['length'], _0x1d1b5f = 0x0;
                        for (_0x256384 = 0x0; _0x256384 < _0x56f2c8; _0x256384++)
                            0xd800 == (0xfc00 & (_0x2fc97f = _0x4f050b[_0x4b428e(0x8cb)](_0x256384))) && _0x256384 + 0x1 < _0x56f2c8 && 0xdc00 == (0xfc00 & (_0x1e64c5 = _0x4f050b[_0x4b428e(0x8cb)](_0x256384 + 0x1))) && (_0x2fc97f = 0x10000 + (_0x2fc97f - 0xd800 << 0xa) + (_0x1e64c5 - 0xdc00),
                                _0x256384++),
                                _0x1d1b5f += _0x2fc97f < 0x80 ? 0x1 : _0x2fc97f < 0x800 ? 0x2 : _0x2fc97f < 0x10000 ? 0x3 : 0x4;
                        for (_0xe2830 = new _0x3df3de['Buf8'](_0x1d1b5f),
                            _0x372be6 = 0x0,
                            _0x256384 = 0x0; _0x372be6 < _0x1d1b5f; _0x256384++)
                            0xd800 == (0xfc00 & (_0x2fc97f = _0x4f050b[_0x4b428e(0x8cb)](_0x256384))) && _0x256384 + 0x1 < _0x56f2c8 && 0xdc00 == (0xfc00 & (_0x1e64c5 = _0x4f050b[_0x4b428e(0x8cb)](_0x256384 + 0x1))) && (_0x2fc97f = 0x10000 + (_0x2fc97f - 0xd800 << 0xa) + (_0x1e64c5 - 0xdc00),
                                _0x256384++),
                                _0x2fc97f < 0x80 ? _0xe2830[_0x372be6++] = _0x2fc97f : _0x2fc97f < 0x800 ? (_0xe2830[_0x372be6++] = 0xc0 | _0x2fc97f >>> 0x6,
                                    _0xe2830[_0x372be6++] = 0x80 | 0x3f & _0x2fc97f) : _0x2fc97f < 0x10000 ? (_0xe2830[_0x372be6++] = 0xe0 | _0x2fc97f >>> 0xc,
                                        _0xe2830[_0x372be6++] = 0x80 | _0x2fc97f >>> 0x6 & 0x3f,
                                        _0xe2830[_0x372be6++] = 0x80 | 0x3f & _0x2fc97f) : (_0xe2830[_0x372be6++] = 0xf0 | _0x2fc97f >>> 0x12,
                                            _0xe2830[_0x372be6++] = 0x80 | _0x2fc97f >>> 0xc & 0x3f,
                                            _0xe2830[_0x372be6++] = 0x80 | _0x2fc97f >>> 0x6 & 0x3f,
                                            _0xe2830[_0x372be6++] = 0x80 | 0x3f & _0x2fc97f);
                        return _0xe2830;
                    }
                    ,
                    _0x5a088d[_0xc30a77(0x7c3)] = function (_0x487b42) {
                        const _0x54f2fd = _0xc30a77;
                        return _0x4e8495(_0x487b42, _0x487b42[_0x54f2fd(0x376)]);
                    }
                    ,
                    _0x5a088d[_0xc30a77(0x4e8)] = function (_0x5f0de7) {
                        const _0x3551c0 = _0xc30a77;
                        for (var _0x1420eb = new _0x3df3de[(_0x3551c0(0x865))](_0x5f0de7[_0x3551c0(0x376)]), _0x2ed2e6 = 0x0, _0x9617ba = _0x1420eb[_0x3551c0(0x376)]; _0x2ed2e6 < _0x9617ba; _0x2ed2e6++)
                            _0x1420eb[_0x2ed2e6] = _0x5f0de7[_0x3551c0(0x8cb)](_0x2ed2e6);
                        return _0x1420eb;
                    }
                    ,
                    _0x5a088d['buf2string'] = function (_0x1b58c3, _0x2e8285) {
                        const _0x3209f0 = _0xc30a77;
                        var _0x25d280, _0xfb5ebd, _0x3a59fd, _0x134470, _0x516019 = _0x2e8285 || _0x1b58c3[_0x3209f0(0x376)], _0x278b30 = new Array(0x2 * _0x516019);
                        for (_0xfb5ebd = 0x0,
                            _0x25d280 = 0x0; _0x25d280 < _0x516019;)
                            if ((_0x3a59fd = _0x1b58c3[_0x25d280++]) < 0x80)
                                _0x278b30[_0xfb5ebd++] = _0x3a59fd;
                            else {
                                if ((_0x134470 = _0x9978d4[_0x3a59fd]) > 0x4)
                                    _0x278b30[_0xfb5ebd++] = 0xfffd,
                                        _0x25d280 += _0x134470 - 0x1;
                                else {
                                    for (_0x3a59fd &= 0x2 === _0x134470 ? 0x1f : 0x3 === _0x134470 ? 0xf : 0x7; _0x134470 > 0x1 && _0x25d280 < _0x516019;)
                                        _0x3a59fd = _0x3a59fd << 0x6 | 0x3f & _0x1b58c3[_0x25d280++],
                                            _0x134470--;
                                    _0x134470 > 0x1 ? _0x278b30[_0xfb5ebd++] = 0xfffd : _0x3a59fd < 0x10000 ? _0x278b30[_0xfb5ebd++] = _0x3a59fd : (_0x3a59fd -= 0x10000,
                                        _0x278b30[_0xfb5ebd++] = 0xd800 | _0x3a59fd >> 0xa & 0x3ff,
                                        _0x278b30[_0xfb5ebd++] = 0xdc00 | 0x3ff & _0x3a59fd);
                                }
                            }
                        return _0x4e8495(_0x278b30, _0xfb5ebd);
                    }
                    ,
                    _0x5a088d[_0xc30a77(0x6fe)] = function (_0xc12606, _0x17fa8a) {
                        const _0x363651 = _0xc30a77;
                        var _0x53caab;
                        for ((_0x17fa8a = _0x17fa8a || _0xc12606[_0x363651(0x376)]) > _0xc12606[_0x363651(0x376)] && (_0x17fa8a = _0xc12606[_0x363651(0x376)]),
                            _0x53caab = _0x17fa8a - 0x1; _0x53caab >= 0x0 && 0x80 == (0xc0 & _0xc12606[_0x53caab]);)
                            _0x53caab--;
                        return _0x53caab < 0x0 || 0x0 === _0x53caab ? _0x17fa8a : _0x53caab + _0x9978d4[_0xc12606[_0x53caab]] > _0x17fa8a ? _0x53caab : _0x17fa8a;
                    }
                    ;
            }
                , {
                './common': 0x1
            }],
            0x3: [function (_0x2e6cdb, _0x198a0d, _0x283a3c) {
                const _0x3a7913 = _0x324b8e;
                function _0x674b7c(_0x517f5f, _0x20f54e, _0x8b6abb, _0x3b38a1) {
                    for (var _0x3e1d3c = 0xffff & _0x517f5f | 0x0, _0x1fc5b3 = _0x517f5f >>> 0x10 & 0xffff | 0x0, _0xf34459 = 0x0; 0x0 !== _0x8b6abb;) {
                        _0x8b6abb -= _0xf34459 = _0x8b6abb > 0x7d0 ? 0x7d0 : _0x8b6abb;
                        do {
                            _0x1fc5b3 = _0x1fc5b3 + (_0x3e1d3c = _0x3e1d3c + _0x20f54e[_0x3b38a1++] | 0x0) | 0x0;
                        } while (--_0xf34459);
                        _0x3e1d3c %= 0xfff1,
                            _0x1fc5b3 %= 0xfff1;
                    }
                    return _0x3e1d3c | _0x1fc5b3 << 0x10 | 0x0;
                }
                _0x198a0d[_0x3a7913(0x359)] = _0x674b7c;
            }
                , {}],
            0x4: [function (_0x2a12ce, _0x27daf2, _0x1a7430) {
                const _0x3c39b0 = _0x324b8e;
                _0x27daf2[_0x3c39b0(0x359)] = {
                    'Z_NO_FLUSH': 0x0,
                    'Z_PARTIAL_FLUSH': 0x1,
                    'Z_SYNC_FLUSH': 0x2,
                    'Z_FULL_FLUSH': 0x3,
                    'Z_FINISH': 0x4,
                    'Z_BLOCK': 0x5,
                    'Z_TREES': 0x6,
                    'Z_OK': 0x0,
                    'Z_STREAM_END': 0x1,
                    'Z_NEED_DICT': 0x2,
                    'Z_ERRNO': -0x1,
                    'Z_STREAM_ERROR': -0x2,
                    'Z_DATA_ERROR': -0x3,
                    'Z_BUF_ERROR': -0x5,
                    'Z_NO_COMPRESSION': 0x0,
                    'Z_BEST_SPEED': 0x1,
                    'Z_BEST_COMPRESSION': 0x9,
                    'Z_DEFAULT_COMPRESSION': -0x1,
                    'Z_FILTERED': 0x1,
                    'Z_HUFFMAN_ONLY': 0x2,
                    'Z_RLE': 0x3,
                    'Z_FIXED': 0x4,
                    'Z_DEFAULT_STRATEGY': 0x0,
                    'Z_BINARY': 0x0,
                    'Z_TEXT': 0x1,
                    'Z_UNKNOWN': 0x2,
                    'Z_DEFLATED': 0x8
                };
            }
                , {}],
            0x5: [function (_0x46ca28, _0x5e4edc, _0x4a3521) {
                function _0x1f4b8b() {
                    for (var _0x29e2f2, _0x7edca5 = [], _0x7bd9e4 = 0x0; _0x7bd9e4 < 0x100; _0x7bd9e4++) {
                        _0x29e2f2 = _0x7bd9e4;
                        for (var _0x3ecd95 = 0x0; _0x3ecd95 < 0x8; _0x3ecd95++)
                            _0x29e2f2 = 0x1 & _0x29e2f2 ? 0xedb88320 ^ _0x29e2f2 >>> 0x1 : _0x29e2f2 >>> 0x1;
                        _0x7edca5[_0x7bd9e4] = _0x29e2f2;
                    }
                    return _0x7edca5;
                }
                var _0x5310f1 = _0x1f4b8b();
                function _0x489dd6(_0x5c470a, _0x4991d6, _0x3fa63e, _0x9fde98) {
                    var _0x597b57 = _0x5310f1
                        , _0x45462c = _0x9fde98 + _0x3fa63e;
                    _0x5c470a ^= -0x1;
                    for (var _0x317687 = _0x9fde98; _0x317687 < _0x45462c; _0x317687++)
                        _0x5c470a = _0x5c470a >>> 0x8 ^ _0x597b57[0xff & (_0x5c470a ^ _0x4991d6[_0x317687])];
                    return -0x1 ^ _0x5c470a;
                }
                _0x5e4edc['exports'] = _0x489dd6;
            }
                , {}],
            0x6: [function (_0x2e1622, _0x23c91d, _0x4268de) {
                function _0x3b4262() {
                    const _0x1fb1b1 = _0x557c;
                    this[_0x1fb1b1(0x2ab)] = 0x0,
                        this[_0x1fb1b1(0x8ab)] = 0x0,
                        this['xflags'] = 0x0,
                        this['os'] = 0x0,
                        this['extra'] = null,
                        this[_0x1fb1b1(0xa71)] = 0x0,
                        this[_0x1fb1b1(0x770)] = '',
                        this['comment'] = '',
                        this[_0x1fb1b1(0x712)] = 0x0,
                        this[_0x1fb1b1(0x382)] = !0x1;
                }
                _0x23c91d['exports'] = _0x3b4262;
            }
                , {}],
            0x7: [function (_0x57fd57, _0x577a2c, _0x131331) {
                const _0x49a99b = _0x324b8e;
                var _0x37b3b4 = 0x1e
                    , _0x5f08db = 0xc;
                _0x577a2c[_0x49a99b(0x359)] = function (_0x42ff17, _0x65c859) {
                    const _0x1eeaea = _0x49a99b;
                    var _0x44de38, _0x8747d6, _0x4fcb0c, _0x316d5f, _0x16d375, _0x302139, _0x2f92e4, _0x52439c, _0x2cde8a, _0x4bd9cc, _0x198aac, _0x8888f5, _0xc7f7f8, _0x550d34, _0x4da88f, _0x115c3d, _0x4aaff3, _0x52f013, _0x230433, _0x54e264, _0x349f6d, _0x44fc57, _0x2beae3, _0x1f4728, _0x1f6349;
                    _0x44de38 = _0x42ff17[_0x1eeaea(0x793)],
                        _0x8747d6 = _0x42ff17[_0x1eeaea(0x4bb)],
                        _0x1f4728 = _0x42ff17[_0x1eeaea(0xc7)],
                        _0x4fcb0c = _0x8747d6 + (_0x42ff17[_0x1eeaea(0x298)] - 0x5),
                        _0x316d5f = _0x42ff17['next_out'],
                        _0x1f6349 = _0x42ff17[_0x1eeaea(0x7c6)],
                        _0x16d375 = _0x316d5f - (_0x65c859 - _0x42ff17[_0x1eeaea(0x905)]),
                        _0x302139 = _0x316d5f + (_0x42ff17[_0x1eeaea(0x905)] - 0x101),
                        _0x2f92e4 = _0x44de38[_0x1eeaea(0x9bb)],
                        _0x52439c = _0x44de38['wsize'],
                        _0x2cde8a = _0x44de38[_0x1eeaea(0x373)],
                        _0x4bd9cc = _0x44de38[_0x1eeaea(0x8df)],
                        _0x198aac = _0x44de38[_0x1eeaea(0xa43)],
                        _0x8888f5 = _0x44de38[_0x1eeaea(0x328)],
                        _0xc7f7f8 = _0x44de38['bits'],
                        _0x550d34 = _0x44de38['lencode'],
                        _0x4da88f = _0x44de38['distcode'],
                        _0x115c3d = (0x1 << _0x44de38[_0x1eeaea(0x156)]) - 0x1,
                        _0x4aaff3 = (0x1 << _0x44de38[_0x1eeaea(0x1f8)]) - 0x1;
                    _0x5b7a40: do {
                        _0xc7f7f8 < 0xf && (_0x8888f5 += _0x1f4728[_0x8747d6++] << _0xc7f7f8,
                            _0xc7f7f8 += 0x8,
                            _0x8888f5 += _0x1f4728[_0x8747d6++] << _0xc7f7f8,
                            _0xc7f7f8 += 0x8),
                            _0x52f013 = _0x550d34[_0x8888f5 & _0x115c3d];
                        _0x44a629: for (; ;) {
                            if (_0x8888f5 >>>= _0x230433 = _0x52f013 >>> 0x18,
                                _0xc7f7f8 -= _0x230433,
                                0x0 == (_0x230433 = _0x52f013 >>> 0x10 & 0xff))
                                _0x1f6349[_0x316d5f++] = 0xffff & _0x52f013;
                            else {
                                if (!(0x10 & _0x230433)) {
                                    if (0x0 == (0x40 & _0x230433)) {
                                        _0x52f013 = _0x550d34[(0xffff & _0x52f013) + (_0x8888f5 & (0x1 << _0x230433) - 0x1)];
                                        continue _0x44a629;
                                    }
                                    if (0x20 & _0x230433) {
                                        _0x44de38[_0x1eeaea(0x265)] = _0x5f08db;
                                        break _0x5b7a40;
                                    }
                                    _0x42ff17[_0x1eeaea(0x625)] = _0x1eeaea(0x5c3),
                                        _0x44de38['mode'] = _0x37b3b4;
                                    break _0x5b7a40;
                                }
                                _0x54e264 = 0xffff & _0x52f013,
                                    (_0x230433 &= 0xf) && (_0xc7f7f8 < _0x230433 && (_0x8888f5 += _0x1f4728[_0x8747d6++] << _0xc7f7f8,
                                        _0xc7f7f8 += 0x8),
                                        _0x54e264 += _0x8888f5 & (0x1 << _0x230433) - 0x1,
                                        _0x8888f5 >>>= _0x230433,
                                        _0xc7f7f8 -= _0x230433),
                                    _0xc7f7f8 < 0xf && (_0x8888f5 += _0x1f4728[_0x8747d6++] << _0xc7f7f8,
                                        _0xc7f7f8 += 0x8,
                                        _0x8888f5 += _0x1f4728[_0x8747d6++] << _0xc7f7f8,
                                        _0xc7f7f8 += 0x8),
                                    _0x52f013 = _0x4da88f[_0x8888f5 & _0x4aaff3];
                                _0x145508: for (; ;) {
                                    if (_0x8888f5 >>>= _0x230433 = _0x52f013 >>> 0x18,
                                        _0xc7f7f8 -= _0x230433,
                                        !(0x10 & (_0x230433 = _0x52f013 >>> 0x10 & 0xff))) {
                                        if (0x0 == (0x40 & _0x230433)) {
                                            _0x52f013 = _0x4da88f[(0xffff & _0x52f013) + (_0x8888f5 & (0x1 << _0x230433) - 0x1)];
                                            continue _0x145508;
                                        }
                                        _0x42ff17[_0x1eeaea(0x625)] = _0x1eeaea(0x955),
                                            _0x44de38[_0x1eeaea(0x265)] = _0x37b3b4;
                                        break _0x5b7a40;
                                    }
                                    if (_0x349f6d = 0xffff & _0x52f013,
                                        _0xc7f7f8 < (_0x230433 &= 0xf) && (_0x8888f5 += _0x1f4728[_0x8747d6++] << _0xc7f7f8,
                                            (_0xc7f7f8 += 0x8) < _0x230433 && (_0x8888f5 += _0x1f4728[_0x8747d6++] << _0xc7f7f8,
                                                _0xc7f7f8 += 0x8)),
                                        (_0x349f6d += _0x8888f5 & (0x1 << _0x230433) - 0x1) > _0x2f92e4) {
                                        _0x42ff17[_0x1eeaea(0x625)] = _0x1eeaea(0xa30),
                                            _0x44de38[_0x1eeaea(0x265)] = _0x37b3b4;
                                        break _0x5b7a40;
                                    }
                                    if (_0x8888f5 >>>= _0x230433,
                                        _0xc7f7f8 -= _0x230433,
                                        _0x349f6d > (_0x230433 = _0x316d5f - _0x16d375)) {
                                        if ((_0x230433 = _0x349f6d - _0x230433) > _0x2cde8a && _0x44de38[_0x1eeaea(0x516)]) {
                                            _0x42ff17[_0x1eeaea(0x625)] = 'invalid\x20distance\x20too\x20far\x20back',
                                                _0x44de38['mode'] = _0x37b3b4;
                                            break _0x5b7a40;
                                        }
                                        if (_0x44fc57 = 0x0,
                                            _0x2beae3 = _0x198aac,
                                            0x0 === _0x4bd9cc) {
                                            if (_0x44fc57 += _0x52439c - _0x230433,
                                                _0x230433 < _0x54e264) {
                                                _0x54e264 -= _0x230433;
                                                do {
                                                    _0x1f6349[_0x316d5f++] = _0x198aac[_0x44fc57++];
                                                } while (--_0x230433);
                                                _0x44fc57 = _0x316d5f - _0x349f6d,
                                                    _0x2beae3 = _0x1f6349;
                                            }
                                        } else {
                                            if (_0x4bd9cc < _0x230433) {
                                                if (_0x44fc57 += _0x52439c + _0x4bd9cc - _0x230433,
                                                    (_0x230433 -= _0x4bd9cc) < _0x54e264) {
                                                    _0x54e264 -= _0x230433;
                                                    do {
                                                        _0x1f6349[_0x316d5f++] = _0x198aac[_0x44fc57++];
                                                    } while (--_0x230433);
                                                    if (_0x44fc57 = 0x0,
                                                        _0x4bd9cc < _0x54e264) {
                                                        _0x54e264 -= _0x230433 = _0x4bd9cc;
                                                        do {
                                                            _0x1f6349[_0x316d5f++] = _0x198aac[_0x44fc57++];
                                                        } while (--_0x230433);
                                                        _0x44fc57 = _0x316d5f - _0x349f6d,
                                                            _0x2beae3 = _0x1f6349;
                                                    }
                                                }
                                            } else {
                                                if (_0x44fc57 += _0x4bd9cc - _0x230433,
                                                    _0x230433 < _0x54e264) {
                                                    _0x54e264 -= _0x230433;
                                                    do {
                                                        _0x1f6349[_0x316d5f++] = _0x198aac[_0x44fc57++];
                                                    } while (--_0x230433);
                                                    _0x44fc57 = _0x316d5f - _0x349f6d,
                                                        _0x2beae3 = _0x1f6349;
                                                }
                                            }
                                        }
                                        for (; _0x54e264 > 0x2;)
                                            _0x1f6349[_0x316d5f++] = _0x2beae3[_0x44fc57++],
                                                _0x1f6349[_0x316d5f++] = _0x2beae3[_0x44fc57++],
                                                _0x1f6349[_0x316d5f++] = _0x2beae3[_0x44fc57++],
                                                _0x54e264 -= 0x3;
                                        _0x54e264 && (_0x1f6349[_0x316d5f++] = _0x2beae3[_0x44fc57++],
                                            _0x54e264 > 0x1 && (_0x1f6349[_0x316d5f++] = _0x2beae3[_0x44fc57++]));
                                    } else {
                                        _0x44fc57 = _0x316d5f - _0x349f6d;
                                        do {
                                            _0x1f6349[_0x316d5f++] = _0x1f6349[_0x44fc57++],
                                                _0x1f6349[_0x316d5f++] = _0x1f6349[_0x44fc57++],
                                                _0x1f6349[_0x316d5f++] = _0x1f6349[_0x44fc57++],
                                                _0x54e264 -= 0x3;
                                        } while (_0x54e264 > 0x2);
                                        _0x54e264 && (_0x1f6349[_0x316d5f++] = _0x1f6349[_0x44fc57++],
                                            _0x54e264 > 0x1 && (_0x1f6349[_0x316d5f++] = _0x1f6349[_0x44fc57++]));
                                    }
                                    break;
                                }
                            }
                            break;
                        }
                    } while (_0x8747d6 < _0x4fcb0c && _0x316d5f < _0x302139);
                    _0x8747d6 -= _0x54e264 = _0xc7f7f8 >> 0x3,
                        _0x8888f5 &= (0x1 << (_0xc7f7f8 -= _0x54e264 << 0x3)) - 0x1,
                        _0x42ff17[_0x1eeaea(0x4bb)] = _0x8747d6,
                        _0x42ff17[_0x1eeaea(0x8e0)] = _0x316d5f,
                        _0x42ff17[_0x1eeaea(0x298)] = _0x8747d6 < _0x4fcb0c ? _0x4fcb0c - _0x8747d6 + 0x5 : 0x5 - (_0x8747d6 - _0x4fcb0c),
                        _0x42ff17[_0x1eeaea(0x905)] = _0x316d5f < _0x302139 ? _0x302139 - _0x316d5f + 0x101 : 0x101 - (_0x316d5f - _0x302139),
                        _0x44de38['hold'] = _0x8888f5,
                        _0x44de38[_0x1eeaea(0x87f)] = _0xc7f7f8;
                }
                    ;
            }
                , {}],
            0x8: [function (_0x4483cb, _0x187fab, _0x2af8fd) {
                const _0x647ef6 = _0x324b8e;
                var _0x1dd542 = _0x4483cb(_0x647ef6(0x46b))
                    , _0x2766eb = _0x4483cb(_0x647ef6(0x9bd))
                    , _0xe075af = _0x4483cb(_0x647ef6(0x8c7))
                    , _0x1adb2e = _0x4483cb(_0x647ef6(0xa18))
                    , _0x3deace = _0x4483cb(_0x647ef6(0x904))
                    , _0x2b6701 = 0x0
                    , _0x266b05 = 0x1
                    , _0x281f4f = 0x2
                    , _0x3138fe = 0x4
                    , _0x463a57 = 0x5
                    , _0x345d8d = 0x6
                    , _0x2292de = 0x0
                    , _0x375953 = 0x1
                    , _0x35a0cd = 0x2
                    , _0x48262a = -0x2
                    , _0x50785e = -0x3
                    , _0x592cfa = -0x4
                    , _0x2b7553 = -0x5
                    , _0x3454eb = 0x8
                    , _0x1b4108 = 0x1
                    , _0x243a3d = 0x2
                    , _0x38893b = 0x3
                    , _0x45cc98 = 0x4
                    , _0x1714ae = 0x5
                    , _0x518fb2 = 0x6
                    , _0x449b28 = 0x7
                    , _0x99e7b7 = 0x8
                    , _0x40915f = 0x9
                    , _0x5f0b2a = 0xa
                    , _0x2f04dd = 0xb
                    , _0x16ff3c = 0xc
                    , _0x219bde = 0xd
                    , _0x36ff3b = 0xe
                    , _0x46bacf = 0xf
                    , _0x5eece0 = 0x10
                    , _0x2ccc94 = 0x11
                    , _0x2f612c = 0x12
                    , _0xefbc40 = 0x13
                    , _0x1f20d3 = 0x14
                    , _0x778290 = 0x15
                    , _0x31c118 = 0x16
                    , _0x59afcf = 0x17
                    , _0x5bbeba = 0x18
                    , _0x3d2e6d = 0x19
                    , _0x26dc1b = 0x1a
                    , _0xdfc2f9 = 0x1b
                    , _0x1fe6ea = 0x1c
                    , _0x59d10f = 0x1d
                    , _0x285548 = 0x1e
                    , _0x2c7968 = 0x1f
                    , _0x29cf3a = 0x354
                    , _0x1cb282 = 0x250
                    , _0x4c310a = 0xf;
                function _0x4721e1(_0x8c8e9d) {
                    return (_0x8c8e9d >>> 0x18 & 0xff) + (_0x8c8e9d >>> 0x8 & 0xff00) + ((0xff00 & _0x8c8e9d) << 0x8) + ((0xff & _0x8c8e9d) << 0x18);
                }
                function _0x1d18c9() {
                    const _0x49ed11 = _0x647ef6;
                    this['mode'] = 0x0,
                        this['last'] = !0x1,
                        this[_0x49ed11(0x75b)] = 0x0,
                        this['havedict'] = !0x1,
                        this[_0x49ed11(0x960)] = 0x0,
                        this[_0x49ed11(0x9bb)] = 0x0,
                        this['check'] = 0x0,
                        this[_0x49ed11(0x219)] = 0x0,
                        this[_0x49ed11(0x508)] = null,
                        this[_0x49ed11(0x5fa)] = 0x0,
                        this['wsize'] = 0x0,
                        this[_0x49ed11(0x373)] = 0x0,
                        this[_0x49ed11(0x8df)] = 0x0,
                        this['window'] = null,
                        this[_0x49ed11(0x328)] = 0x0,
                        this[_0x49ed11(0x87f)] = 0x0,
                        this[_0x49ed11(0x376)] = 0x0,
                        this[_0x49ed11(0x5a3)] = 0x0,
                        this[_0x49ed11(0x1e4)] = 0x0,
                        this[_0x49ed11(0x82a)] = null,
                        this[_0x49ed11(0x8f2)] = null,
                        this[_0x49ed11(0x156)] = 0x0,
                        this[_0x49ed11(0x1f8)] = 0x0,
                        this[_0x49ed11(0x3dd)] = 0x0,
                        this[_0x49ed11(0x7dc)] = 0x0,
                        this[_0x49ed11(0x40d)] = 0x0,
                        this[_0x49ed11(0x846)] = 0x0,
                        this['next'] = null,
                        this[_0x49ed11(0xa4e)] = new _0x1dd542['Buf16'](0x140),
                        this['work'] = new _0x1dd542['Buf16'](0x120),
                        this[_0x49ed11(0x16a)] = null,
                        this[_0x49ed11(0x8f9)] = null,
                        this[_0x49ed11(0x516)] = 0x0,
                        this[_0x49ed11(0x796)] = 0x0,
                        this[_0x49ed11(0xa0e)] = 0x0;
                }
                function _0x1924cd(_0x18adbd) {
                    const _0x386951 = _0x647ef6;
                    var _0x4ae941;
                    return _0x18adbd && _0x18adbd['state'] ? (_0x4ae941 = _0x18adbd['state'],
                        _0x18adbd[_0x386951(0x4d4)] = _0x18adbd['total_out'] = _0x4ae941[_0x386951(0x219)] = 0x0,
                        _0x18adbd[_0x386951(0x625)] = '',
                        _0x4ae941[_0x386951(0x75b)] && (_0x18adbd[_0x386951(0x2f8)] = 0x1 & _0x4ae941[_0x386951(0x75b)]),
                        _0x4ae941['mode'] = _0x1b4108,
                        _0x4ae941[_0x386951(0x135)] = 0x0,
                        _0x4ae941[_0x386951(0x845)] = 0x0,
                        _0x4ae941[_0x386951(0x9bb)] = 0x8000,
                        _0x4ae941['head'] = null,
                        _0x4ae941[_0x386951(0x328)] = 0x0,
                        _0x4ae941[_0x386951(0x87f)] = 0x0,
                        _0x4ae941[_0x386951(0x82a)] = _0x4ae941[_0x386951(0x16a)] = new _0x1dd542[(_0x386951(0x41b))](_0x29cf3a),
                        _0x4ae941['distcode'] = _0x4ae941[_0x386951(0x8f9)] = new _0x1dd542[(_0x386951(0x41b))](_0x1cb282),
                        _0x4ae941[_0x386951(0x516)] = 0x1,
                        _0x4ae941['back'] = -0x1,
                        _0x2292de) : _0x48262a;
                }
                function _0x190a5c(_0x3b01e6) {
                    const _0x3ddfe8 = _0x647ef6;
                    var _0x2d615b;
                    return _0x3b01e6 && _0x3b01e6[_0x3ddfe8(0x793)] ? ((_0x2d615b = _0x3b01e6[_0x3ddfe8(0x793)])[_0x3ddfe8(0x6c8)] = 0x0,
                        _0x2d615b[_0x3ddfe8(0x373)] = 0x0,
                        _0x2d615b[_0x3ddfe8(0x8df)] = 0x0,
                        _0x1924cd(_0x3b01e6)) : _0x48262a;
                }
                function _0x493f33(_0x286618, _0x43587d) {
                    const _0x4e8cc4 = _0x647ef6;
                    var _0x460697, _0x498583;
                    return _0x286618 && _0x286618[_0x4e8cc4(0x793)] ? (_0x498583 = _0x286618[_0x4e8cc4(0x793)],
                        _0x43587d < 0x0 ? (_0x460697 = 0x0,
                            _0x43587d = -_0x43587d) : (_0x460697 = 0x1 + (_0x43587d >> 0x4),
                                _0x43587d < 0x30 && (_0x43587d &= 0xf)),
                        _0x43587d && (_0x43587d < 0x8 || _0x43587d > 0xf) ? _0x48262a : (null !== _0x498583[_0x4e8cc4(0xa43)] && _0x498583['wbits'] !== _0x43587d && (_0x498583[_0x4e8cc4(0xa43)] = null),
                            _0x498583[_0x4e8cc4(0x75b)] = _0x460697,
                            _0x498583['wbits'] = _0x43587d,
                            _0x190a5c(_0x286618))) : _0x48262a;
                }
                function _0x3e1148(_0x41d08c, _0x5c9944) {
                    const _0x13e92f = _0x647ef6;
                    var _0xaa91f0, _0x5752c9;
                    return _0x41d08c ? (_0x5752c9 = new _0x1d18c9(),
                        _0x41d08c['state'] = _0x5752c9,
                        _0x5752c9[_0x13e92f(0xa43)] = null,
                        (_0xaa91f0 = _0x493f33(_0x41d08c, _0x5c9944)) !== _0x2292de && (_0x41d08c[_0x13e92f(0x793)] = null),
                        _0xaa91f0) : _0x48262a;
                }
                function _0x1f7513(_0x47f179) {
                    return _0x3e1148(_0x47f179, _0x4c310a);
                }
                var _0x44d594, _0x380212, _0x135374 = !0x0;
                function _0x52a894(_0x30d94b) {
                    const _0x1da662 = _0x647ef6;
                    if (_0x135374) {
                        var _0x4f9e46;
                        for (_0x44d594 = new _0x1dd542[(_0x1da662(0x41b))](0x200),
                            _0x380212 = new _0x1dd542[(_0x1da662(0x41b))](0x20),
                            _0x4f9e46 = 0x0; _0x4f9e46 < 0x90;)
                            _0x30d94b[_0x1da662(0xa4e)][_0x4f9e46++] = 0x8;
                        for (; _0x4f9e46 < 0x100;)
                            _0x30d94b[_0x1da662(0xa4e)][_0x4f9e46++] = 0x9;
                        for (; _0x4f9e46 < 0x118;)
                            _0x30d94b['lens'][_0x4f9e46++] = 0x7;
                        for (; _0x4f9e46 < 0x120;)
                            _0x30d94b[_0x1da662(0xa4e)][_0x4f9e46++] = 0x8;
                        for (_0x3deace(_0x266b05, _0x30d94b[_0x1da662(0xa4e)], 0x0, 0x120, _0x44d594, 0x0, _0x30d94b[_0x1da662(0xa70)], {
                            'bits': 0x9
                        }),
                            _0x4f9e46 = 0x0; _0x4f9e46 < 0x20;)
                            _0x30d94b[_0x1da662(0xa4e)][_0x4f9e46++] = 0x5;
                        _0x3deace(_0x281f4f, _0x30d94b[_0x1da662(0xa4e)], 0x0, 0x20, _0x380212, 0x0, _0x30d94b['work'], {
                            'bits': 0x5
                        }),
                            _0x135374 = !0x1;
                    }
                    _0x30d94b[_0x1da662(0x82a)] = _0x44d594,
                        _0x30d94b[_0x1da662(0x156)] = 0x9,
                        _0x30d94b[_0x1da662(0x8f2)] = _0x380212,
                        _0x30d94b[_0x1da662(0x1f8)] = 0x5;
                }
                function _0x3f74c3(_0x37ea00, _0x370d9f, _0x3b7c2e, _0x2806cc) {
                    const _0x59204a = _0x647ef6;
                    var _0x33b50a, _0xe5be1c = _0x37ea00[_0x59204a(0x793)];
                    return null === _0xe5be1c[_0x59204a(0xa43)] && (_0xe5be1c[_0x59204a(0x6c8)] = 0x1 << _0xe5be1c[_0x59204a(0x5fa)],
                        _0xe5be1c[_0x59204a(0x8df)] = 0x0,
                        _0xe5be1c[_0x59204a(0x373)] = 0x0,
                        _0xe5be1c[_0x59204a(0xa43)] = new _0x1dd542[(_0x59204a(0x865))](_0xe5be1c[_0x59204a(0x6c8)])),
                        _0x2806cc >= _0xe5be1c[_0x59204a(0x6c8)] ? (_0x1dd542[_0x59204a(0x763)](_0xe5be1c[_0x59204a(0xa43)], _0x370d9f, _0x3b7c2e - _0xe5be1c[_0x59204a(0x6c8)], _0xe5be1c[_0x59204a(0x6c8)], 0x0),
                            _0xe5be1c[_0x59204a(0x8df)] = 0x0,
                            _0xe5be1c[_0x59204a(0x373)] = _0xe5be1c[_0x59204a(0x6c8)]) : ((_0x33b50a = _0xe5be1c[_0x59204a(0x6c8)] - _0xe5be1c[_0x59204a(0x8df)]) > _0x2806cc && (_0x33b50a = _0x2806cc),
                                _0x1dd542[_0x59204a(0x763)](_0xe5be1c[_0x59204a(0xa43)], _0x370d9f, _0x3b7c2e - _0x2806cc, _0x33b50a, _0xe5be1c['wnext']),
                                (_0x2806cc -= _0x33b50a) ? (_0x1dd542[_0x59204a(0x763)](_0xe5be1c[_0x59204a(0xa43)], _0x370d9f, _0x3b7c2e - _0x2806cc, _0x2806cc, 0x0),
                                    _0xe5be1c[_0x59204a(0x8df)] = _0x2806cc,
                                    _0xe5be1c[_0x59204a(0x373)] = _0xe5be1c[_0x59204a(0x6c8)]) : (_0xe5be1c[_0x59204a(0x8df)] += _0x33b50a,
                                        _0xe5be1c[_0x59204a(0x8df)] === _0xe5be1c[_0x59204a(0x6c8)] && (_0xe5be1c[_0x59204a(0x8df)] = 0x0),
                                        _0xe5be1c[_0x59204a(0x373)] < _0xe5be1c['wsize'] && (_0xe5be1c[_0x59204a(0x373)] += _0x33b50a))),
                        0x0;
                }
                function _0x37860(_0x5d102e, _0x15e001) {
                    const _0x3527b = _0x647ef6;
                    var _0x9b1ae5, _0x59cdec, _0x4e02b8, _0x37fbcd, _0x613860, _0x1d41ab, _0x1ee358, _0x44e065, _0x13436d, _0x4a4007, _0x218a9c, _0x22d9a9, _0x302049, _0x23dca9, _0x354efe, _0x380a58, _0x444fb2, _0x20e04f, _0x43ec60, _0x705271, _0x34d250, _0x483880, _0x56d673, _0x48d3ec, _0x403d70 = 0x0, _0x4831f5 = new _0x1dd542[(_0x3527b(0x865))](0x4), _0x204a29 = [0x10, 0x11, 0x12, 0x0, 0x8, 0x7, 0x9, 0x6, 0xa, 0x5, 0xb, 0x4, 0xc, 0x3, 0xd, 0x2, 0xe, 0x1, 0xf];
                    if (!_0x5d102e || !_0x5d102e['state'] || !_0x5d102e[_0x3527b(0x7c6)] || !_0x5d102e[_0x3527b(0xc7)] && 0x0 !== _0x5d102e[_0x3527b(0x298)])
                        return _0x48262a;
                    (_0x9b1ae5 = _0x5d102e[_0x3527b(0x793)])[_0x3527b(0x265)] === _0x16ff3c && (_0x9b1ae5[_0x3527b(0x265)] = _0x219bde),
                        _0x613860 = _0x5d102e[_0x3527b(0x8e0)],
                        _0x4e02b8 = _0x5d102e[_0x3527b(0x7c6)],
                        _0x1ee358 = _0x5d102e[_0x3527b(0x905)],
                        _0x37fbcd = _0x5d102e[_0x3527b(0x4bb)],
                        _0x59cdec = _0x5d102e[_0x3527b(0xc7)],
                        _0x1d41ab = _0x5d102e['avail_in'],
                        _0x44e065 = _0x9b1ae5[_0x3527b(0x328)],
                        _0x13436d = _0x9b1ae5[_0x3527b(0x87f)],
                        _0x4a4007 = _0x1d41ab,
                        _0x218a9c = _0x1ee358,
                        _0x483880 = _0x2292de;
                    _0x4ae599: for (; ;)
                        switch (_0x9b1ae5['mode']) {
                            case _0x1b4108:
                                if (0x0 === _0x9b1ae5['wrap']) {
                                    _0x9b1ae5[_0x3527b(0x265)] = _0x219bde;
                                    break;
                                }
                                for (; _0x13436d < 0x10;) {
                                    if (0x0 === _0x1d41ab)
                                        break _0x4ae599;
                                    _0x1d41ab--,
                                        _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                        _0x13436d += 0x8;
                                }
                                if (0x2 & _0x9b1ae5[_0x3527b(0x75b)] && 0x8b1f === _0x44e065) {
                                    _0x9b1ae5[_0x3527b(0x1aa)] = 0x0,
                                        _0x4831f5[0x0] = 0xff & _0x44e065,
                                        _0x4831f5[0x1] = _0x44e065 >>> 0x8 & 0xff,
                                        _0x9b1ae5[_0x3527b(0x1aa)] = _0xe075af(_0x9b1ae5[_0x3527b(0x1aa)], _0x4831f5, 0x2, 0x0),
                                        _0x44e065 = 0x0,
                                        _0x13436d = 0x0,
                                        _0x9b1ae5[_0x3527b(0x265)] = _0x243a3d;
                                    break;
                                }
                                if (_0x9b1ae5[_0x3527b(0x960)] = 0x0,
                                    _0x9b1ae5[_0x3527b(0x508)] && (_0x9b1ae5[_0x3527b(0x508)]['done'] = !0x1),
                                    !(0x1 & _0x9b1ae5[_0x3527b(0x75b)]) || (((0xff & _0x44e065) << 0x8) + (_0x44e065 >> 0x8)) % 0x1f) {
                                    _0x5d102e[_0x3527b(0x625)] = _0x3527b(0x789),
                                        _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                    break;
                                }
                                if ((0xf & _0x44e065) !== _0x3454eb) {
                                    _0x5d102e[_0x3527b(0x625)] = _0x3527b(0x220),
                                        _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                    break;
                                }
                                if (_0x13436d -= 0x4,
                                    _0x34d250 = 0x8 + (0xf & (_0x44e065 >>>= 0x4)),
                                    0x0 === _0x9b1ae5['wbits'])
                                    _0x9b1ae5['wbits'] = _0x34d250;
                                else {
                                    if (_0x34d250 > _0x9b1ae5[_0x3527b(0x5fa)]) {
                                        _0x5d102e[_0x3527b(0x625)] = _0x3527b(0x3e1),
                                            _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                        break;
                                    }
                                }
                                _0x9b1ae5[_0x3527b(0x9bb)] = 0x1 << _0x34d250,
                                    _0x5d102e[_0x3527b(0x2f8)] = _0x9b1ae5[_0x3527b(0x1aa)] = 0x1,
                                    _0x9b1ae5['mode'] = 0x200 & _0x44e065 ? _0x5f0b2a : _0x16ff3c,
                                    _0x44e065 = 0x0,
                                    _0x13436d = 0x0;
                                break;
                            case _0x243a3d:
                                for (; _0x13436d < 0x10;) {
                                    if (0x0 === _0x1d41ab)
                                        break _0x4ae599;
                                    _0x1d41ab--,
                                        _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                        _0x13436d += 0x8;
                                }
                                if (_0x9b1ae5[_0x3527b(0x960)] = _0x44e065,
                                    (0xff & _0x9b1ae5[_0x3527b(0x960)]) !== _0x3454eb) {
                                    _0x5d102e[_0x3527b(0x625)] = _0x3527b(0x220),
                                        _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                    break;
                                }
                                if (0xe000 & _0x9b1ae5[_0x3527b(0x960)]) {
                                    _0x5d102e[_0x3527b(0x625)] = _0x3527b(0x12e),
                                        _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                    break;
                                }
                                _0x9b1ae5[_0x3527b(0x508)] && (_0x9b1ae5[_0x3527b(0x508)][_0x3527b(0x2ab)] = _0x44e065 >> 0x8 & 0x1),
                                    0x200 & _0x9b1ae5['flags'] && (_0x4831f5[0x0] = 0xff & _0x44e065,
                                        _0x4831f5[0x1] = _0x44e065 >>> 0x8 & 0xff,
                                        _0x9b1ae5['check'] = _0xe075af(_0x9b1ae5['check'], _0x4831f5, 0x2, 0x0)),
                                    _0x44e065 = 0x0,
                                    _0x13436d = 0x0,
                                    _0x9b1ae5[_0x3527b(0x265)] = _0x38893b;
                            case _0x38893b:
                                for (; _0x13436d < 0x20;) {
                                    if (0x0 === _0x1d41ab)
                                        break _0x4ae599;
                                    _0x1d41ab--,
                                        _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                        _0x13436d += 0x8;
                                }
                                _0x9b1ae5['head'] && (_0x9b1ae5[_0x3527b(0x508)][_0x3527b(0x8ab)] = _0x44e065),
                                    0x200 & _0x9b1ae5['flags'] && (_0x4831f5[0x0] = 0xff & _0x44e065,
                                        _0x4831f5[0x1] = _0x44e065 >>> 0x8 & 0xff,
                                        _0x4831f5[0x2] = _0x44e065 >>> 0x10 & 0xff,
                                        _0x4831f5[0x3] = _0x44e065 >>> 0x18 & 0xff,
                                        _0x9b1ae5['check'] = _0xe075af(_0x9b1ae5[_0x3527b(0x1aa)], _0x4831f5, 0x4, 0x0)),
                                    _0x44e065 = 0x0,
                                    _0x13436d = 0x0,
                                    _0x9b1ae5[_0x3527b(0x265)] = _0x45cc98;
                            case _0x45cc98:
                                for (; _0x13436d < 0x10;) {
                                    if (0x0 === _0x1d41ab)
                                        break _0x4ae599;
                                    _0x1d41ab--,
                                        _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                        _0x13436d += 0x8;
                                }
                                _0x9b1ae5[_0x3527b(0x508)] && (_0x9b1ae5[_0x3527b(0x508)][_0x3527b(0x1b3)] = 0xff & _0x44e065,
                                    _0x9b1ae5[_0x3527b(0x508)]['os'] = _0x44e065 >> 0x8),
                                    0x200 & _0x9b1ae5[_0x3527b(0x960)] && (_0x4831f5[0x0] = 0xff & _0x44e065,
                                        _0x4831f5[0x1] = _0x44e065 >>> 0x8 & 0xff,
                                        _0x9b1ae5[_0x3527b(0x1aa)] = _0xe075af(_0x9b1ae5[_0x3527b(0x1aa)], _0x4831f5, 0x2, 0x0)),
                                    _0x44e065 = 0x0,
                                    _0x13436d = 0x0,
                                    _0x9b1ae5[_0x3527b(0x265)] = _0x1714ae;
                            case _0x1714ae:
                                if (0x400 & _0x9b1ae5[_0x3527b(0x960)]) {
                                    for (; _0x13436d < 0x10;) {
                                        if (0x0 === _0x1d41ab)
                                            break _0x4ae599;
                                        _0x1d41ab--,
                                            _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                            _0x13436d += 0x8;
                                    }
                                    _0x9b1ae5[_0x3527b(0x376)] = _0x44e065,
                                        _0x9b1ae5['head'] && (_0x9b1ae5[_0x3527b(0x508)][_0x3527b(0xa71)] = _0x44e065),
                                        0x200 & _0x9b1ae5[_0x3527b(0x960)] && (_0x4831f5[0x0] = 0xff & _0x44e065,
                                            _0x4831f5[0x1] = _0x44e065 >>> 0x8 & 0xff,
                                            _0x9b1ae5[_0x3527b(0x1aa)] = _0xe075af(_0x9b1ae5['check'], _0x4831f5, 0x2, 0x0)),
                                        _0x44e065 = 0x0,
                                        _0x13436d = 0x0;
                                } else
                                    _0x9b1ae5[_0x3527b(0x508)] && (_0x9b1ae5[_0x3527b(0x508)]['extra'] = null);
                                _0x9b1ae5[_0x3527b(0x265)] = _0x518fb2;
                            case _0x518fb2:
                                if (0x400 & _0x9b1ae5['flags'] && ((_0x22d9a9 = _0x9b1ae5[_0x3527b(0x376)]) > _0x1d41ab && (_0x22d9a9 = _0x1d41ab),
                                    _0x22d9a9 && (_0x9b1ae5[_0x3527b(0x508)] && (_0x34d250 = _0x9b1ae5[_0x3527b(0x508)][_0x3527b(0xa71)] - _0x9b1ae5['length'],
                                        _0x9b1ae5[_0x3527b(0x508)][_0x3527b(0x1e4)] || (_0x9b1ae5[_0x3527b(0x508)][_0x3527b(0x1e4)] = new Array(_0x9b1ae5[_0x3527b(0x508)][_0x3527b(0xa71)])),
                                        _0x1dd542['arraySet'](_0x9b1ae5[_0x3527b(0x508)][_0x3527b(0x1e4)], _0x59cdec, _0x37fbcd, _0x22d9a9, _0x34d250)),
                                        0x200 & _0x9b1ae5['flags'] && (_0x9b1ae5[_0x3527b(0x1aa)] = _0xe075af(_0x9b1ae5['check'], _0x59cdec, _0x22d9a9, _0x37fbcd)),
                                        _0x1d41ab -= _0x22d9a9,
                                        _0x37fbcd += _0x22d9a9,
                                        _0x9b1ae5[_0x3527b(0x376)] -= _0x22d9a9),
                                    _0x9b1ae5[_0x3527b(0x376)]))
                                    break _0x4ae599;
                                _0x9b1ae5['length'] = 0x0,
                                    _0x9b1ae5[_0x3527b(0x265)] = _0x449b28;
                            case _0x449b28:
                                if (0x800 & _0x9b1ae5[_0x3527b(0x960)]) {
                                    if (0x0 === _0x1d41ab)
                                        break _0x4ae599;
                                    _0x22d9a9 = 0x0;
                                    do {
                                        _0x34d250 = _0x59cdec[_0x37fbcd + _0x22d9a9++],
                                            _0x9b1ae5[_0x3527b(0x508)] && _0x34d250 && _0x9b1ae5[_0x3527b(0x376)] < 0x10000 && (_0x9b1ae5[_0x3527b(0x508)]['name'] += String[_0x3527b(0x65c)](_0x34d250));
                                    } while (_0x34d250 && _0x22d9a9 < _0x1d41ab);
                                    if (0x200 & _0x9b1ae5[_0x3527b(0x960)] && (_0x9b1ae5[_0x3527b(0x1aa)] = _0xe075af(_0x9b1ae5[_0x3527b(0x1aa)], _0x59cdec, _0x22d9a9, _0x37fbcd)),
                                        _0x1d41ab -= _0x22d9a9,
                                        _0x37fbcd += _0x22d9a9,
                                        _0x34d250)
                                        break _0x4ae599;
                                } else
                                    _0x9b1ae5[_0x3527b(0x508)] && (_0x9b1ae5[_0x3527b(0x508)][_0x3527b(0x770)] = null);
                                _0x9b1ae5[_0x3527b(0x376)] = 0x0,
                                    _0x9b1ae5[_0x3527b(0x265)] = _0x99e7b7;
                            case _0x99e7b7:
                                if (0x1000 & _0x9b1ae5[_0x3527b(0x960)]) {
                                    if (0x0 === _0x1d41ab)
                                        break _0x4ae599;
                                    _0x22d9a9 = 0x0;
                                    do {
                                        _0x34d250 = _0x59cdec[_0x37fbcd + _0x22d9a9++],
                                            _0x9b1ae5[_0x3527b(0x508)] && _0x34d250 && _0x9b1ae5[_0x3527b(0x376)] < 0x10000 && (_0x9b1ae5[_0x3527b(0x508)][_0x3527b(0x5c8)] += String['fromCharCode'](_0x34d250));
                                    } while (_0x34d250 && _0x22d9a9 < _0x1d41ab);
                                    if (0x200 & _0x9b1ae5[_0x3527b(0x960)] && (_0x9b1ae5[_0x3527b(0x1aa)] = _0xe075af(_0x9b1ae5[_0x3527b(0x1aa)], _0x59cdec, _0x22d9a9, _0x37fbcd)),
                                        _0x1d41ab -= _0x22d9a9,
                                        _0x37fbcd += _0x22d9a9,
                                        _0x34d250)
                                        break _0x4ae599;
                                } else
                                    _0x9b1ae5[_0x3527b(0x508)] && (_0x9b1ae5['head'][_0x3527b(0x5c8)] = null);
                                _0x9b1ae5[_0x3527b(0x265)] = _0x40915f;
                            case _0x40915f:
                                if (0x200 & _0x9b1ae5[_0x3527b(0x960)]) {
                                    for (; _0x13436d < 0x10;) {
                                        if (0x0 === _0x1d41ab)
                                            break _0x4ae599;
                                        _0x1d41ab--,
                                            _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                            _0x13436d += 0x8;
                                    }
                                    if (_0x44e065 !== (0xffff & _0x9b1ae5[_0x3527b(0x1aa)])) {
                                        _0x5d102e[_0x3527b(0x625)] = _0x3527b(0x663),
                                            _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                        break;
                                    }
                                    _0x44e065 = 0x0,
                                        _0x13436d = 0x0;
                                }
                                _0x9b1ae5['head'] && (_0x9b1ae5[_0x3527b(0x508)][_0x3527b(0x712)] = _0x9b1ae5['flags'] >> 0x9 & 0x1,
                                    _0x9b1ae5['head'][_0x3527b(0x382)] = !0x0),
                                    _0x5d102e[_0x3527b(0x2f8)] = _0x9b1ae5['check'] = 0x0,
                                    _0x9b1ae5[_0x3527b(0x265)] = _0x16ff3c;
                                break;
                            case _0x5f0b2a:
                                for (; _0x13436d < 0x20;) {
                                    if (0x0 === _0x1d41ab)
                                        break _0x4ae599;
                                    _0x1d41ab--,
                                        _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                        _0x13436d += 0x8;
                                }
                                _0x5d102e['adler'] = _0x9b1ae5[_0x3527b(0x1aa)] = _0x4721e1(_0x44e065),
                                    _0x44e065 = 0x0,
                                    _0x13436d = 0x0,
                                    _0x9b1ae5[_0x3527b(0x265)] = _0x2f04dd;
                            case _0x2f04dd:
                                if (0x0 === _0x9b1ae5[_0x3527b(0x845)])
                                    return _0x5d102e[_0x3527b(0x8e0)] = _0x613860,
                                        _0x5d102e[_0x3527b(0x905)] = _0x1ee358,
                                        _0x5d102e[_0x3527b(0x4bb)] = _0x37fbcd,
                                        _0x5d102e[_0x3527b(0x298)] = _0x1d41ab,
                                        _0x9b1ae5[_0x3527b(0x328)] = _0x44e065,
                                        _0x9b1ae5['bits'] = _0x13436d,
                                        _0x35a0cd;
                                _0x5d102e[_0x3527b(0x2f8)] = _0x9b1ae5['check'] = 0x1,
                                    _0x9b1ae5['mode'] = _0x16ff3c;
                            case _0x16ff3c:
                                if (_0x15e001 === _0x463a57 || _0x15e001 === _0x345d8d)
                                    break _0x4ae599;
                            case _0x219bde:
                                if (_0x9b1ae5[_0x3527b(0x135)]) {
                                    _0x44e065 >>>= 0x7 & _0x13436d,
                                        _0x13436d -= 0x7 & _0x13436d,
                                        _0x9b1ae5['mode'] = _0xdfc2f9;
                                    break;
                                }
                                for (; _0x13436d < 0x3;) {
                                    if (0x0 === _0x1d41ab)
                                        break _0x4ae599;
                                    _0x1d41ab--,
                                        _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                        _0x13436d += 0x8;
                                }
                                switch (_0x9b1ae5['last'] = 0x1 & _0x44e065,
                                _0x13436d -= 0x1,
                                0x3 & (_0x44e065 >>>= 0x1)) {
                                    case 0x0:
                                        _0x9b1ae5[_0x3527b(0x265)] = _0x36ff3b;
                                        break;
                                    case 0x1:
                                        if (_0x52a894(_0x9b1ae5),
                                            _0x9b1ae5[_0x3527b(0x265)] = _0x1f20d3,
                                            _0x15e001 === _0x345d8d) {
                                            _0x44e065 >>>= 0x2,
                                                _0x13436d -= 0x2;
                                            break _0x4ae599;
                                        }
                                        break;
                                    case 0x2:
                                        _0x9b1ae5[_0x3527b(0x265)] = _0x2ccc94;
                                        break;
                                    case 0x3:
                                        _0x5d102e[_0x3527b(0x625)] = _0x3527b(0x915),
                                            _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                }
                                _0x44e065 >>>= 0x2,
                                    _0x13436d -= 0x2;
                                break;
                            case _0x36ff3b:
                                for (_0x44e065 >>>= 0x7 & _0x13436d,
                                    _0x13436d -= 0x7 & _0x13436d; _0x13436d < 0x20;) {
                                    if (0x0 === _0x1d41ab)
                                        break _0x4ae599;
                                    _0x1d41ab--,
                                        _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                        _0x13436d += 0x8;
                                }
                                if ((0xffff & _0x44e065) != (_0x44e065 >>> 0x10 ^ 0xffff)) {
                                    _0x5d102e[_0x3527b(0x625)] = _0x3527b(0x70e),
                                        _0x9b1ae5['mode'] = _0x285548;
                                    break;
                                }
                                if (_0x9b1ae5['length'] = 0xffff & _0x44e065,
                                    _0x44e065 = 0x0,
                                    _0x13436d = 0x0,
                                    _0x9b1ae5['mode'] = _0x46bacf,
                                    _0x15e001 === _0x345d8d)
                                    break _0x4ae599;
                            case _0x46bacf:
                                _0x9b1ae5[_0x3527b(0x265)] = _0x5eece0;
                            case _0x5eece0:
                                if (_0x22d9a9 = _0x9b1ae5[_0x3527b(0x376)]) {
                                    if (_0x22d9a9 > _0x1d41ab && (_0x22d9a9 = _0x1d41ab),
                                        _0x22d9a9 > _0x1ee358 && (_0x22d9a9 = _0x1ee358),
                                        0x0 === _0x22d9a9)
                                        break _0x4ae599;
                                    _0x1dd542[_0x3527b(0x763)](_0x4e02b8, _0x59cdec, _0x37fbcd, _0x22d9a9, _0x613860),
                                        _0x1d41ab -= _0x22d9a9,
                                        _0x37fbcd += _0x22d9a9,
                                        _0x1ee358 -= _0x22d9a9,
                                        _0x613860 += _0x22d9a9,
                                        _0x9b1ae5['length'] -= _0x22d9a9;
                                    break;
                                }
                                _0x9b1ae5['mode'] = _0x16ff3c;
                                break;
                            case _0x2ccc94:
                                for (; _0x13436d < 0xe;) {
                                    if (0x0 === _0x1d41ab)
                                        break _0x4ae599;
                                    _0x1d41ab--,
                                        _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                        _0x13436d += 0x8;
                                }
                                if (_0x9b1ae5[_0x3527b(0x7dc)] = 0x101 + (0x1f & _0x44e065),
                                    _0x44e065 >>>= 0x5,
                                    _0x13436d -= 0x5,
                                    _0x9b1ae5[_0x3527b(0x40d)] = 0x1 + (0x1f & _0x44e065),
                                    _0x44e065 >>>= 0x5,
                                    _0x13436d -= 0x5,
                                    _0x9b1ae5['ncode'] = 0x4 + (0xf & _0x44e065),
                                    _0x44e065 >>>= 0x4,
                                    _0x13436d -= 0x4,
                                    _0x9b1ae5[_0x3527b(0x7dc)] > 0x11e || _0x9b1ae5['ndist'] > 0x1e) {
                                    _0x5d102e[_0x3527b(0x625)] = 'too\x20many\x20length\x20or\x20distance\x20symbols',
                                        _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                    break;
                                }
                                _0x9b1ae5[_0x3527b(0x846)] = 0x0,
                                    _0x9b1ae5[_0x3527b(0x265)] = _0x2f612c;
                            case _0x2f612c:
                                for (; _0x9b1ae5[_0x3527b(0x846)] < _0x9b1ae5[_0x3527b(0x3dd)];) {
                                    for (; _0x13436d < 0x3;) {
                                        if (0x0 === _0x1d41ab)
                                            break _0x4ae599;
                                        _0x1d41ab--,
                                            _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                            _0x13436d += 0x8;
                                    }
                                    _0x9b1ae5['lens'][_0x204a29[_0x9b1ae5[_0x3527b(0x846)]++]] = 0x7 & _0x44e065,
                                        _0x44e065 >>>= 0x3,
                                        _0x13436d -= 0x3;
                                }
                                for (; _0x9b1ae5['have'] < 0x13;)
                                    _0x9b1ae5[_0x3527b(0xa4e)][_0x204a29[_0x9b1ae5[_0x3527b(0x846)]++]] = 0x0;
                                if (_0x9b1ae5[_0x3527b(0x82a)] = _0x9b1ae5[_0x3527b(0x16a)],
                                    _0x9b1ae5['lenbits'] = 0x7,
                                    _0x56d673 = {
                                        'bits': _0x9b1ae5[_0x3527b(0x156)]
                                    },
                                    _0x483880 = _0x3deace(_0x2b6701, _0x9b1ae5[_0x3527b(0xa4e)], 0x0, 0x13, _0x9b1ae5['lencode'], 0x0, _0x9b1ae5['work'], _0x56d673),
                                    _0x9b1ae5[_0x3527b(0x156)] = _0x56d673['bits'],
                                    _0x483880) {
                                    _0x5d102e[_0x3527b(0x625)] = 'invalid\x20code\x20lengths\x20set',
                                        _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                    break;
                                }
                                _0x9b1ae5['have'] = 0x0,
                                    _0x9b1ae5[_0x3527b(0x265)] = _0xefbc40;
                            case _0xefbc40:
                                for (; _0x9b1ae5[_0x3527b(0x846)] < _0x9b1ae5['nlen'] + _0x9b1ae5[_0x3527b(0x40d)];) {
                                    for (; _0x380a58 = (_0x403d70 = _0x9b1ae5[_0x3527b(0x82a)][_0x44e065 & (0x1 << _0x9b1ae5['lenbits']) - 0x1]) >>> 0x10 & 0xff,
                                        _0x444fb2 = 0xffff & _0x403d70,
                                        !((_0x354efe = _0x403d70 >>> 0x18) <= _0x13436d);) {
                                        if (0x0 === _0x1d41ab)
                                            break _0x4ae599;
                                        _0x1d41ab--,
                                            _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                            _0x13436d += 0x8;
                                    }
                                    if (_0x444fb2 < 0x10)
                                        _0x44e065 >>>= _0x354efe,
                                            _0x13436d -= _0x354efe,
                                            _0x9b1ae5['lens'][_0x9b1ae5[_0x3527b(0x846)]++] = _0x444fb2;
                                    else {
                                        if (0x10 === _0x444fb2) {
                                            for (_0x48d3ec = _0x354efe + 0x2; _0x13436d < _0x48d3ec;) {
                                                if (0x0 === _0x1d41ab)
                                                    break _0x4ae599;
                                                _0x1d41ab--,
                                                    _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                                    _0x13436d += 0x8;
                                            }
                                            if (_0x44e065 >>>= _0x354efe,
                                                _0x13436d -= _0x354efe,
                                                0x0 === _0x9b1ae5['have']) {
                                                _0x5d102e[_0x3527b(0x625)] = _0x3527b(0x1d6),
                                                    _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                                break;
                                            }
                                            _0x34d250 = _0x9b1ae5[_0x3527b(0xa4e)][_0x9b1ae5[_0x3527b(0x846)] - 0x1],
                                                _0x22d9a9 = 0x3 + (0x3 & _0x44e065),
                                                _0x44e065 >>>= 0x2,
                                                _0x13436d -= 0x2;
                                        } else {
                                            if (0x11 === _0x444fb2) {
                                                for (_0x48d3ec = _0x354efe + 0x3; _0x13436d < _0x48d3ec;) {
                                                    if (0x0 === _0x1d41ab)
                                                        break _0x4ae599;
                                                    _0x1d41ab--,
                                                        _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                                        _0x13436d += 0x8;
                                                }
                                                _0x13436d -= _0x354efe,
                                                    _0x34d250 = 0x0,
                                                    _0x22d9a9 = 0x3 + (0x7 & (_0x44e065 >>>= _0x354efe)),
                                                    _0x44e065 >>>= 0x3,
                                                    _0x13436d -= 0x3;
                                            } else {
                                                for (_0x48d3ec = _0x354efe + 0x7; _0x13436d < _0x48d3ec;) {
                                                    if (0x0 === _0x1d41ab)
                                                        break _0x4ae599;
                                                    _0x1d41ab--,
                                                        _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                                        _0x13436d += 0x8;
                                                }
                                                _0x13436d -= _0x354efe,
                                                    _0x34d250 = 0x0,
                                                    _0x22d9a9 = 0xb + (0x7f & (_0x44e065 >>>= _0x354efe)),
                                                    _0x44e065 >>>= 0x7,
                                                    _0x13436d -= 0x7;
                                            }
                                        }
                                        if (_0x9b1ae5[_0x3527b(0x846)] + _0x22d9a9 > _0x9b1ae5[_0x3527b(0x7dc)] + _0x9b1ae5[_0x3527b(0x40d)]) {
                                            _0x5d102e[_0x3527b(0x625)] = _0x3527b(0x1d6),
                                                _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                            break;
                                        }
                                        for (; _0x22d9a9--;)
                                            _0x9b1ae5['lens'][_0x9b1ae5['have']++] = _0x34d250;
                                    }
                                }
                                if (_0x9b1ae5[_0x3527b(0x265)] === _0x285548)
                                    break;
                                if (0x0 === _0x9b1ae5[_0x3527b(0xa4e)][0x100]) {
                                    _0x5d102e['msg'] = _0x3527b(0x81b),
                                        _0x9b1ae5['mode'] = _0x285548;
                                    break;
                                }
                                if (_0x9b1ae5[_0x3527b(0x156)] = 0x9,
                                    _0x56d673 = {
                                        'bits': _0x9b1ae5[_0x3527b(0x156)]
                                    },
                                    _0x483880 = _0x3deace(_0x266b05, _0x9b1ae5['lens'], 0x0, _0x9b1ae5[_0x3527b(0x7dc)], _0x9b1ae5[_0x3527b(0x82a)], 0x0, _0x9b1ae5[_0x3527b(0xa70)], _0x56d673),
                                    _0x9b1ae5['lenbits'] = _0x56d673['bits'],
                                    _0x483880) {
                                    _0x5d102e[_0x3527b(0x625)] = _0x3527b(0x807),
                                        _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                    break;
                                }
                                if (_0x9b1ae5[_0x3527b(0x1f8)] = 0x6,
                                    _0x9b1ae5[_0x3527b(0x8f2)] = _0x9b1ae5[_0x3527b(0x8f9)],
                                    _0x56d673 = {
                                        'bits': _0x9b1ae5['distbits']
                                    },
                                    _0x483880 = _0x3deace(_0x281f4f, _0x9b1ae5[_0x3527b(0xa4e)], _0x9b1ae5[_0x3527b(0x7dc)], _0x9b1ae5[_0x3527b(0x40d)], _0x9b1ae5['distcode'], 0x0, _0x9b1ae5[_0x3527b(0xa70)], _0x56d673),
                                    _0x9b1ae5[_0x3527b(0x1f8)] = _0x56d673['bits'],
                                    _0x483880) {
                                    _0x5d102e[_0x3527b(0x625)] = 'invalid\x20distances\x20set',
                                        _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                    break;
                                }
                                if (_0x9b1ae5[_0x3527b(0x265)] = _0x1f20d3,
                                    _0x15e001 === _0x345d8d)
                                    break _0x4ae599;
                            case _0x1f20d3:
                                _0x9b1ae5[_0x3527b(0x265)] = _0x778290;
                            case _0x778290:
                                if (_0x1d41ab >= 0x6 && _0x1ee358 >= 0x102) {
                                    _0x5d102e[_0x3527b(0x8e0)] = _0x613860,
                                        _0x5d102e['avail_out'] = _0x1ee358,
                                        _0x5d102e[_0x3527b(0x4bb)] = _0x37fbcd,
                                        _0x5d102e['avail_in'] = _0x1d41ab,
                                        _0x9b1ae5[_0x3527b(0x328)] = _0x44e065,
                                        _0x9b1ae5[_0x3527b(0x87f)] = _0x13436d,
                                        _0x1adb2e(_0x5d102e, _0x218a9c),
                                        _0x613860 = _0x5d102e[_0x3527b(0x8e0)],
                                        _0x4e02b8 = _0x5d102e[_0x3527b(0x7c6)],
                                        _0x1ee358 = _0x5d102e[_0x3527b(0x905)],
                                        _0x37fbcd = _0x5d102e[_0x3527b(0x4bb)],
                                        _0x59cdec = _0x5d102e[_0x3527b(0xc7)],
                                        _0x1d41ab = _0x5d102e[_0x3527b(0x298)],
                                        _0x44e065 = _0x9b1ae5[_0x3527b(0x328)],
                                        _0x13436d = _0x9b1ae5[_0x3527b(0x87f)],
                                        _0x9b1ae5[_0x3527b(0x265)] === _0x16ff3c && (_0x9b1ae5[_0x3527b(0x796)] = -0x1);
                                    break;
                                }
                                for (_0x9b1ae5['back'] = 0x0; _0x380a58 = (_0x403d70 = _0x9b1ae5[_0x3527b(0x82a)][_0x44e065 & (0x1 << _0x9b1ae5[_0x3527b(0x156)]) - 0x1]) >>> 0x10 & 0xff,
                                    _0x444fb2 = 0xffff & _0x403d70,
                                    !((_0x354efe = _0x403d70 >>> 0x18) <= _0x13436d);) {
                                    if (0x0 === _0x1d41ab)
                                        break _0x4ae599;
                                    _0x1d41ab--,
                                        _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                        _0x13436d += 0x8;
                                }
                                if (_0x380a58 && 0x0 == (0xf0 & _0x380a58)) {
                                    for (_0x20e04f = _0x354efe,
                                        _0x43ec60 = _0x380a58,
                                        _0x705271 = _0x444fb2; _0x380a58 = (_0x403d70 = _0x9b1ae5[_0x3527b(0x82a)][_0x705271 + ((_0x44e065 & (0x1 << _0x20e04f + _0x43ec60) - 0x1) >> _0x20e04f)]) >>> 0x10 & 0xff,
                                        _0x444fb2 = 0xffff & _0x403d70,
                                        !(_0x20e04f + (_0x354efe = _0x403d70 >>> 0x18) <= _0x13436d);) {
                                        if (0x0 === _0x1d41ab)
                                            break _0x4ae599;
                                        _0x1d41ab--,
                                            _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                            _0x13436d += 0x8;
                                    }
                                    _0x44e065 >>>= _0x20e04f,
                                        _0x13436d -= _0x20e04f,
                                        _0x9b1ae5[_0x3527b(0x796)] += _0x20e04f;
                                }
                                if (_0x44e065 >>>= _0x354efe,
                                    _0x13436d -= _0x354efe,
                                    _0x9b1ae5[_0x3527b(0x796)] += _0x354efe,
                                    _0x9b1ae5[_0x3527b(0x376)] = _0x444fb2,
                                    0x0 === _0x380a58) {
                                    _0x9b1ae5[_0x3527b(0x265)] = _0x26dc1b;
                                    break;
                                }
                                if (0x20 & _0x380a58) {
                                    _0x9b1ae5[_0x3527b(0x796)] = -0x1,
                                        _0x9b1ae5[_0x3527b(0x265)] = _0x16ff3c;
                                    break;
                                }
                                if (0x40 & _0x380a58) {
                                    _0x5d102e[_0x3527b(0x625)] = _0x3527b(0x5c3),
                                        _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                    break;
                                }
                                _0x9b1ae5[_0x3527b(0x1e4)] = 0xf & _0x380a58,
                                    _0x9b1ae5[_0x3527b(0x265)] = _0x31c118;
                            case _0x31c118:
                                if (_0x9b1ae5[_0x3527b(0x1e4)]) {
                                    for (_0x48d3ec = _0x9b1ae5[_0x3527b(0x1e4)]; _0x13436d < _0x48d3ec;) {
                                        if (0x0 === _0x1d41ab)
                                            break _0x4ae599;
                                        _0x1d41ab--,
                                            _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                            _0x13436d += 0x8;
                                    }
                                    _0x9b1ae5[_0x3527b(0x376)] += _0x44e065 & (0x1 << _0x9b1ae5['extra']) - 0x1,
                                        _0x44e065 >>>= _0x9b1ae5['extra'],
                                        _0x13436d -= _0x9b1ae5[_0x3527b(0x1e4)],
                                        _0x9b1ae5[_0x3527b(0x796)] += _0x9b1ae5[_0x3527b(0x1e4)];
                                }
                                _0x9b1ae5[_0x3527b(0xa0e)] = _0x9b1ae5[_0x3527b(0x376)],
                                    _0x9b1ae5[_0x3527b(0x265)] = _0x59afcf;
                            case _0x59afcf:
                                for (; _0x380a58 = (_0x403d70 = _0x9b1ae5[_0x3527b(0x8f2)][_0x44e065 & (0x1 << _0x9b1ae5[_0x3527b(0x1f8)]) - 0x1]) >>> 0x10 & 0xff,
                                    _0x444fb2 = 0xffff & _0x403d70,
                                    !((_0x354efe = _0x403d70 >>> 0x18) <= _0x13436d);) {
                                    if (0x0 === _0x1d41ab)
                                        break _0x4ae599;
                                    _0x1d41ab--,
                                        _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                        _0x13436d += 0x8;
                                }
                                if (0x0 == (0xf0 & _0x380a58)) {
                                    for (_0x20e04f = _0x354efe,
                                        _0x43ec60 = _0x380a58,
                                        _0x705271 = _0x444fb2; _0x380a58 = (_0x403d70 = _0x9b1ae5[_0x3527b(0x8f2)][_0x705271 + ((_0x44e065 & (0x1 << _0x20e04f + _0x43ec60) - 0x1) >> _0x20e04f)]) >>> 0x10 & 0xff,
                                        _0x444fb2 = 0xffff & _0x403d70,
                                        !(_0x20e04f + (_0x354efe = _0x403d70 >>> 0x18) <= _0x13436d);) {
                                        if (0x0 === _0x1d41ab)
                                            break _0x4ae599;
                                        _0x1d41ab--,
                                            _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                            _0x13436d += 0x8;
                                    }
                                    _0x44e065 >>>= _0x20e04f,
                                        _0x13436d -= _0x20e04f,
                                        _0x9b1ae5['back'] += _0x20e04f;
                                }
                                if (_0x44e065 >>>= _0x354efe,
                                    _0x13436d -= _0x354efe,
                                    _0x9b1ae5['back'] += _0x354efe,
                                    0x40 & _0x380a58) {
                                    _0x5d102e['msg'] = _0x3527b(0x955),
                                        _0x9b1ae5['mode'] = _0x285548;
                                    break;
                                }
                                _0x9b1ae5[_0x3527b(0x5a3)] = _0x444fb2,
                                    _0x9b1ae5[_0x3527b(0x1e4)] = 0xf & _0x380a58,
                                    _0x9b1ae5[_0x3527b(0x265)] = _0x5bbeba;
                            case _0x5bbeba:
                                if (_0x9b1ae5[_0x3527b(0x1e4)]) {
                                    for (_0x48d3ec = _0x9b1ae5['extra']; _0x13436d < _0x48d3ec;) {
                                        if (0x0 === _0x1d41ab)
                                            break _0x4ae599;
                                        _0x1d41ab--,
                                            _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                            _0x13436d += 0x8;
                                    }
                                    _0x9b1ae5[_0x3527b(0x5a3)] += _0x44e065 & (0x1 << _0x9b1ae5[_0x3527b(0x1e4)]) - 0x1,
                                        _0x44e065 >>>= _0x9b1ae5['extra'],
                                        _0x13436d -= _0x9b1ae5['extra'],
                                        _0x9b1ae5['back'] += _0x9b1ae5[_0x3527b(0x1e4)];
                                }
                                if (_0x9b1ae5[_0x3527b(0x5a3)] > _0x9b1ae5[_0x3527b(0x9bb)]) {
                                    _0x5d102e['msg'] = 'invalid\x20distance\x20too\x20far\x20back',
                                        _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                    break;
                                }
                                _0x9b1ae5[_0x3527b(0x265)] = _0x3d2e6d;
                            case _0x3d2e6d:
                                if (0x0 === _0x1ee358)
                                    break _0x4ae599;
                                if (_0x22d9a9 = _0x218a9c - _0x1ee358,
                                    _0x9b1ae5[_0x3527b(0x5a3)] > _0x22d9a9) {
                                    if ((_0x22d9a9 = _0x9b1ae5[_0x3527b(0x5a3)] - _0x22d9a9) > _0x9b1ae5[_0x3527b(0x373)] && _0x9b1ae5[_0x3527b(0x516)]) {
                                        _0x5d102e[_0x3527b(0x625)] = _0x3527b(0xa30),
                                            _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                        break;
                                    }
                                    _0x22d9a9 > _0x9b1ae5[_0x3527b(0x8df)] ? (_0x22d9a9 -= _0x9b1ae5[_0x3527b(0x8df)],
                                        _0x302049 = _0x9b1ae5['wsize'] - _0x22d9a9) : _0x302049 = _0x9b1ae5[_0x3527b(0x8df)] - _0x22d9a9,
                                        _0x22d9a9 > _0x9b1ae5[_0x3527b(0x376)] && (_0x22d9a9 = _0x9b1ae5[_0x3527b(0x376)]),
                                        _0x23dca9 = _0x9b1ae5[_0x3527b(0xa43)];
                                } else
                                    _0x23dca9 = _0x4e02b8,
                                        _0x302049 = _0x613860 - _0x9b1ae5[_0x3527b(0x5a3)],
                                        _0x22d9a9 = _0x9b1ae5[_0x3527b(0x376)];
                                _0x22d9a9 > _0x1ee358 && (_0x22d9a9 = _0x1ee358),
                                    _0x1ee358 -= _0x22d9a9,
                                    _0x9b1ae5[_0x3527b(0x376)] -= _0x22d9a9;
                                do {
                                    _0x4e02b8[_0x613860++] = _0x23dca9[_0x302049++];
                                } while (--_0x22d9a9);
                                0x0 === _0x9b1ae5[_0x3527b(0x376)] && (_0x9b1ae5[_0x3527b(0x265)] = _0x778290);
                                break;
                            case _0x26dc1b:
                                if (0x0 === _0x1ee358)
                                    break _0x4ae599;
                                _0x4e02b8[_0x613860++] = _0x9b1ae5['length'],
                                    _0x1ee358--,
                                    _0x9b1ae5[_0x3527b(0x265)] = _0x778290;
                                break;
                            case _0xdfc2f9:
                                if (_0x9b1ae5[_0x3527b(0x75b)]) {
                                    for (; _0x13436d < 0x20;) {
                                        if (0x0 === _0x1d41ab)
                                            break _0x4ae599;
                                        _0x1d41ab--,
                                            _0x44e065 |= _0x59cdec[_0x37fbcd++] << _0x13436d,
                                            _0x13436d += 0x8;
                                    }
                                    if (_0x218a9c -= _0x1ee358,
                                        _0x5d102e[_0x3527b(0x9cd)] += _0x218a9c,
                                        _0x9b1ae5[_0x3527b(0x219)] += _0x218a9c,
                                        _0x218a9c && (_0x5d102e['adler'] = _0x9b1ae5[_0x3527b(0x1aa)] = _0x9b1ae5['flags'] ? _0xe075af(_0x9b1ae5[_0x3527b(0x1aa)], _0x4e02b8, _0x218a9c, _0x613860 - _0x218a9c) : _0x2766eb(_0x9b1ae5[_0x3527b(0x1aa)], _0x4e02b8, _0x218a9c, _0x613860 - _0x218a9c)),
                                        _0x218a9c = _0x1ee358,
                                        (_0x9b1ae5[_0x3527b(0x960)] ? _0x44e065 : _0x4721e1(_0x44e065)) !== _0x9b1ae5[_0x3527b(0x1aa)]) {
                                        _0x5d102e[_0x3527b(0x625)] = _0x3527b(0x57e),
                                            _0x9b1ae5[_0x3527b(0x265)] = _0x285548;
                                        break;
                                    }
                                    _0x44e065 = 0x0,
                                        _0x13436d = 0x0;
                                }
                                _0x9b1ae5['mode'] = _0x1fe6ea;
                            case _0x1fe6ea:
                                if (_0x9b1ae5[_0x3527b(0x75b)] && _0x9b1ae5[_0x3527b(0x960)]) {
                                    for (; _0x13436d < 0x20;) {
                                        if (0x0 === _0x1d41ab)
                                            break _0x4ae599;
                                        _0x1d41ab--,
                                            _0x44e065 += _0x59cdec[_0x37fbcd++] << _0x13436d,
                                            _0x13436d += 0x8;
                                    }
                                    if (_0x44e065 !== (0xffffffff & _0x9b1ae5[_0x3527b(0x219)])) {
                                        _0x5d102e[_0x3527b(0x625)] = _0x3527b(0x98d),
                                            _0x9b1ae5['mode'] = _0x285548;
                                        break;
                                    }
                                    _0x44e065 = 0x0,
                                        _0x13436d = 0x0;
                                }
                                _0x9b1ae5['mode'] = _0x59d10f;
                            case _0x59d10f:
                                _0x483880 = _0x375953;
                                break _0x4ae599;
                            case _0x285548:
                                _0x483880 = _0x50785e;
                                break _0x4ae599;
                            case _0x2c7968:
                                return _0x592cfa;
                            default:
                                return _0x48262a;
                        }
                    return _0x5d102e[_0x3527b(0x8e0)] = _0x613860,
                        _0x5d102e[_0x3527b(0x905)] = _0x1ee358,
                        _0x5d102e[_0x3527b(0x4bb)] = _0x37fbcd,
                        _0x5d102e[_0x3527b(0x298)] = _0x1d41ab,
                        _0x9b1ae5['hold'] = _0x44e065,
                        _0x9b1ae5['bits'] = _0x13436d,
                        (_0x9b1ae5['wsize'] || _0x218a9c !== _0x5d102e[_0x3527b(0x905)] && _0x9b1ae5[_0x3527b(0x265)] < _0x285548 && (_0x9b1ae5[_0x3527b(0x265)] < _0xdfc2f9 || _0x15e001 !== _0x3138fe)) && _0x3f74c3(_0x5d102e, _0x5d102e[_0x3527b(0x7c6)], _0x5d102e[_0x3527b(0x8e0)], _0x218a9c - _0x5d102e[_0x3527b(0x905)]),
                        _0x4a4007 -= _0x5d102e[_0x3527b(0x298)],
                        _0x218a9c -= _0x5d102e['avail_out'],
                        _0x5d102e[_0x3527b(0x4d4)] += _0x4a4007,
                        _0x5d102e[_0x3527b(0x9cd)] += _0x218a9c,
                        _0x9b1ae5[_0x3527b(0x219)] += _0x218a9c,
                        _0x9b1ae5[_0x3527b(0x75b)] && _0x218a9c && (_0x5d102e['adler'] = _0x9b1ae5[_0x3527b(0x1aa)] = _0x9b1ae5[_0x3527b(0x960)] ? _0xe075af(_0x9b1ae5[_0x3527b(0x1aa)], _0x4e02b8, _0x218a9c, _0x5d102e['next_out'] - _0x218a9c) : _0x2766eb(_0x9b1ae5[_0x3527b(0x1aa)], _0x4e02b8, _0x218a9c, _0x5d102e[_0x3527b(0x8e0)] - _0x218a9c)),
                        _0x5d102e['data_type'] = _0x9b1ae5[_0x3527b(0x87f)] + (_0x9b1ae5[_0x3527b(0x135)] ? 0x40 : 0x0) + (_0x9b1ae5[_0x3527b(0x265)] === _0x16ff3c ? 0x80 : 0x0) + (_0x9b1ae5[_0x3527b(0x265)] === _0x1f20d3 || _0x9b1ae5[_0x3527b(0x265)] === _0x46bacf ? 0x100 : 0x0),
                        (0x0 === _0x4a4007 && 0x0 === _0x218a9c || _0x15e001 === _0x3138fe) && _0x483880 === _0x2292de && (_0x483880 = _0x2b7553),
                        _0x483880;
                }
                function _0x2a5af4(_0x15d5ab) {
                    const _0x571240 = _0x647ef6;
                    if (!_0x15d5ab || !_0x15d5ab[_0x571240(0x793)])
                        return _0x48262a;
                    var _0x2474e4 = _0x15d5ab['state'];
                    return _0x2474e4[_0x571240(0xa43)] && (_0x2474e4[_0x571240(0xa43)] = null),
                        _0x15d5ab[_0x571240(0x793)] = null,
                        _0x2292de;
                }
                function _0x5d390c(_0x2759f1, _0x407124) {
                    const _0x16993d = _0x647ef6;
                    var _0x36a030;
                    return _0x2759f1 && _0x2759f1[_0x16993d(0x793)] ? 0x0 == (0x2 & (_0x36a030 = _0x2759f1[_0x16993d(0x793)])[_0x16993d(0x75b)]) ? _0x48262a : (_0x36a030['head'] = _0x407124,
                        _0x407124['done'] = !0x1,
                        _0x2292de) : _0x48262a;
                }
                function _0x29c8eb(_0x508d8f, _0x27d520) {
                    const _0x3d5d9e = _0x647ef6;
                    var _0x2b69ca, _0x179b76 = _0x27d520['length'];
                    return _0x508d8f && _0x508d8f[_0x3d5d9e(0x793)] ? 0x0 !== (_0x2b69ca = _0x508d8f['state'])['wrap'] && _0x2b69ca['mode'] !== _0x2f04dd ? _0x48262a : _0x2b69ca[_0x3d5d9e(0x265)] === _0x2f04dd && _0x2766eb(0x1, _0x27d520, _0x179b76, 0x0) !== _0x2b69ca[_0x3d5d9e(0x1aa)] ? _0x50785e : _0x3f74c3(_0x508d8f, _0x27d520, _0x179b76, _0x179b76) ? (_0x2b69ca[_0x3d5d9e(0x265)] = _0x2c7968,
                        _0x592cfa) : (_0x2b69ca[_0x3d5d9e(0x845)] = 0x1,
                            _0x2292de) : _0x48262a;
                }
                _0x2af8fd['inflateReset'] = _0x190a5c,
                    _0x2af8fd[_0x647ef6(0x4f3)] = _0x493f33,
                    _0x2af8fd[_0x647ef6(0xaa1)] = _0x1924cd,
                    _0x2af8fd[_0x647ef6(0x6fb)] = _0x1f7513,
                    _0x2af8fd[_0x647ef6(0xda)] = _0x3e1148,
                    _0x2af8fd[_0x647ef6(0x613)] = _0x37860,
                    _0x2af8fd[_0x647ef6(0xa95)] = _0x2a5af4,
                    _0x2af8fd['inflateGetHeader'] = _0x5d390c,
                    _0x2af8fd['inflateSetDictionary'] = _0x29c8eb,
                    _0x2af8fd[_0x647ef6(0xa85)] = _0x647ef6(0x6eb);
            }
                , {
                '../utils/common': 0x1,
                './adler32': 0x3,
                './crc32': 0x5,
                './inffast': 0x7,
                './inftrees': 0x9
            }],
            0x9: [function (_0x40d885, _0x3c98d7, _0x57326c) {
                const _0x563468 = _0x324b8e;
                var _0x5dc7b2 = _0x40d885(_0x563468(0x46b))
                    , _0x3d6341 = 0xf
                    , _0x3471d4 = 0x354
                    , _0x20037d = 0x250
                    , _0x3b9f90 = 0x0
                    , _0x32a652 = 0x1
                    , _0x10532f = 0x2
                    , _0x3e52b8 = [0x3, 0x4, 0x5, 0x6, 0x7, 0x8, 0x9, 0xa, 0xb, 0xd, 0xf, 0x11, 0x13, 0x17, 0x1b, 0x1f, 0x23, 0x2b, 0x33, 0x3b, 0x43, 0x53, 0x63, 0x73, 0x83, 0xa3, 0xc3, 0xe3, 0x102, 0x0, 0x0]
                    , _0x5c06d4 = [0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x10, 0x11, 0x11, 0x11, 0x11, 0x12, 0x12, 0x12, 0x12, 0x13, 0x13, 0x13, 0x13, 0x14, 0x14, 0x14, 0x14, 0x15, 0x15, 0x15, 0x15, 0x10, 0x48, 0x4e]
                    , _0x5bae46 = [0x1, 0x2, 0x3, 0x4, 0x5, 0x7, 0x9, 0xd, 0x11, 0x19, 0x21, 0x31, 0x41, 0x61, 0x81, 0xc1, 0x101, 0x181, 0x201, 0x301, 0x401, 0x601, 0x801, 0xc01, 0x1001, 0x1801, 0x2001, 0x3001, 0x4001, 0x6001, 0x0, 0x0]
                    , _0x4921dc = [0x10, 0x10, 0x10, 0x10, 0x11, 0x11, 0x12, 0x12, 0x13, 0x13, 0x14, 0x14, 0x15, 0x15, 0x16, 0x16, 0x17, 0x17, 0x18, 0x18, 0x19, 0x19, 0x1a, 0x1a, 0x1b, 0x1b, 0x1c, 0x1c, 0x1d, 0x1d, 0x40, 0x40];
                _0x3c98d7[_0x563468(0x359)] = function (_0x3676ee, _0x119928, _0x897c00, _0x26c42c, _0x229ab0, _0x2df25f, _0x3df201, _0x7a314) {
                    const _0x57f53f = _0x563468;
                    var _0x199414, _0x436e91, _0x423acf, _0x30751c, _0x124f81, _0x5485c0, _0x314872, _0x32eaf7, _0x589b11, _0xee19bf = _0x7a314[_0x57f53f(0x87f)], _0x5a80f9 = 0x0, _0x2d4595 = 0x0, _0xb631dc = 0x0, _0x43ba0c = 0x0, _0x10205c = 0x0, _0x2cd1ae = 0x0, _0x1699f0 = 0x0, _0x582e8c = 0x0, _0x5e11fb = 0x0, _0x1a9dad = 0x0, _0x1d3074 = null, _0x2b63f4 = 0x0, _0xc02d25 = new _0x5dc7b2[(_0x57f53f(0x5ec))](_0x3d6341 + 0x1), _0x1a3553 = new _0x5dc7b2[(_0x57f53f(0x5ec))](_0x3d6341 + 0x1), _0x3f978e = null, _0x1021a6 = 0x0;
                    for (_0x5a80f9 = 0x0; _0x5a80f9 <= _0x3d6341; _0x5a80f9++)
                        _0xc02d25[_0x5a80f9] = 0x0;
                    for (_0x2d4595 = 0x0; _0x2d4595 < _0x26c42c; _0x2d4595++)
                        _0xc02d25[_0x119928[_0x897c00 + _0x2d4595]]++;
                    for (_0x10205c = _0xee19bf,
                        _0x43ba0c = _0x3d6341; _0x43ba0c >= 0x1 && 0x0 === _0xc02d25[_0x43ba0c]; _0x43ba0c--)
                        ;
                    if (_0x10205c > _0x43ba0c && (_0x10205c = _0x43ba0c),
                        0x0 === _0x43ba0c)
                        return _0x229ab0[_0x2df25f++] = 0x1400000,
                            _0x229ab0[_0x2df25f++] = 0x1400000,
                            _0x7a314[_0x57f53f(0x87f)] = 0x1,
                            0x0;
                    for (_0xb631dc = 0x1; _0xb631dc < _0x43ba0c && 0x0 === _0xc02d25[_0xb631dc]; _0xb631dc++)
                        ;
                    for (_0x10205c < _0xb631dc && (_0x10205c = _0xb631dc),
                        _0x582e8c = 0x1,
                        _0x5a80f9 = 0x1; _0x5a80f9 <= _0x3d6341; _0x5a80f9++)
                        if (_0x582e8c <<= 0x1,
                            (_0x582e8c -= _0xc02d25[_0x5a80f9]) < 0x0)
                            return -0x1;
                    if (_0x582e8c > 0x0 && (_0x3676ee === _0x3b9f90 || 0x1 !== _0x43ba0c))
                        return -0x1;
                    for (_0x1a3553[0x1] = 0x0,
                        _0x5a80f9 = 0x1; _0x5a80f9 < _0x3d6341; _0x5a80f9++)
                        _0x1a3553[_0x5a80f9 + 0x1] = _0x1a3553[_0x5a80f9] + _0xc02d25[_0x5a80f9];
                    for (_0x2d4595 = 0x0; _0x2d4595 < _0x26c42c; _0x2d4595++)
                        0x0 !== _0x119928[_0x897c00 + _0x2d4595] && (_0x3df201[_0x1a3553[_0x119928[_0x897c00 + _0x2d4595]]++] = _0x2d4595);
                    if (_0x3676ee === _0x3b9f90 ? (_0x1d3074 = _0x3f978e = _0x3df201,
                        _0x5485c0 = 0x13) : _0x3676ee === _0x32a652 ? (_0x1d3074 = _0x3e52b8,
                            _0x2b63f4 -= 0x101,
                            _0x3f978e = _0x5c06d4,
                            _0x1021a6 -= 0x101,
                            _0x5485c0 = 0x100) : (_0x1d3074 = _0x5bae46,
                                _0x3f978e = _0x4921dc,
                                _0x5485c0 = -0x1),
                        _0x1a9dad = 0x0,
                        _0x2d4595 = 0x0,
                        _0x5a80f9 = _0xb631dc,
                        _0x124f81 = _0x2df25f,
                        _0x2cd1ae = _0x10205c,
                        _0x1699f0 = 0x0,
                        _0x423acf = -0x1,
                        _0x30751c = (_0x5e11fb = 0x1 << _0x10205c) - 0x1,
                        _0x3676ee === _0x32a652 && _0x5e11fb > _0x3471d4 || _0x3676ee === _0x10532f && _0x5e11fb > _0x20037d)
                        return 0x1;
                    for (; ;) {
                        _0x314872 = _0x5a80f9 - _0x1699f0,
                            _0x3df201[_0x2d4595] < _0x5485c0 ? (_0x32eaf7 = 0x0,
                                _0x589b11 = _0x3df201[_0x2d4595]) : _0x3df201[_0x2d4595] > _0x5485c0 ? (_0x32eaf7 = _0x3f978e[_0x1021a6 + _0x3df201[_0x2d4595]],
                                    _0x589b11 = _0x1d3074[_0x2b63f4 + _0x3df201[_0x2d4595]]) : (_0x32eaf7 = 0x60,
                                        _0x589b11 = 0x0),
                            _0x199414 = 0x1 << _0x5a80f9 - _0x1699f0,
                            _0xb631dc = _0x436e91 = 0x1 << _0x2cd1ae;
                        do {
                            _0x229ab0[_0x124f81 + (_0x1a9dad >> _0x1699f0) + (_0x436e91 -= _0x199414)] = _0x314872 << 0x18 | _0x32eaf7 << 0x10 | _0x589b11 | 0x0;
                        } while (0x0 !== _0x436e91);
                        for (_0x199414 = 0x1 << _0x5a80f9 - 0x1; _0x1a9dad & _0x199414;)
                            _0x199414 >>= 0x1;
                        if (0x0 !== _0x199414 ? (_0x1a9dad &= _0x199414 - 0x1,
                            _0x1a9dad += _0x199414) : _0x1a9dad = 0x0,
                            _0x2d4595++,
                            0x0 == --_0xc02d25[_0x5a80f9]) {
                            if (_0x5a80f9 === _0x43ba0c)
                                break;
                            _0x5a80f9 = _0x119928[_0x897c00 + _0x3df201[_0x2d4595]];
                        }
                        if (_0x5a80f9 > _0x10205c && (_0x1a9dad & _0x30751c) !== _0x423acf) {
                            for (0x0 === _0x1699f0 && (_0x1699f0 = _0x10205c),
                                _0x124f81 += _0xb631dc,
                                _0x582e8c = 0x1 << (_0x2cd1ae = _0x5a80f9 - _0x1699f0); _0x2cd1ae + _0x1699f0 < _0x43ba0c && !((_0x582e8c -= _0xc02d25[_0x2cd1ae + _0x1699f0]) <= 0x0);)
                                _0x2cd1ae++,
                                    _0x582e8c <<= 0x1;
                            if (_0x5e11fb += 0x1 << _0x2cd1ae,
                                _0x3676ee === _0x32a652 && _0x5e11fb > _0x3471d4 || _0x3676ee === _0x10532f && _0x5e11fb > _0x20037d)
                                return 0x1;
                            _0x229ab0[_0x423acf = _0x1a9dad & _0x30751c] = _0x10205c << 0x18 | _0x2cd1ae << 0x10 | _0x124f81 - _0x2df25f | 0x0;
                        }
                    }
                    return 0x0 !== _0x1a9dad && (_0x229ab0[_0x124f81 + _0x1a9dad] = _0x5a80f9 - _0x1699f0 << 0x18 | 0x40 << 0x10 | 0x0),
                        _0x7a314[_0x57f53f(0x87f)] = _0x10205c,
                        0x0;
                }
                    ;
            }
                , {
                '../utils/common': 0x1
            }],
            0xa: [function (_0x34a438, _0xe699e8, _0x15d2a0) {
                const _0x57331f = _0x324b8e;
                _0xe699e8[_0x57331f(0x359)] = {
                    0x2: _0x57331f(0x483),
                    0x1: _0x57331f(0x9a3),
                    0x0: '',
                    '-1': 'file\x20error',
                    '-2': _0x57331f(0x7f3),
                    '-3': 'data\x20error',
                    '-4': _0x57331f(0x609),
                    '-5': _0x57331f(0x619),
                    '-6': 'incompatible\x20version'
                };
            }
                , {}],
            0xb: [function (_0x1d948f, _0x2d539c, _0x28ad1f) {
                const _0x13008c = _0x324b8e;
                function _0x11d02f() {
                    const _0x4877dc = _0x557c;
                    this[_0x4877dc(0xc7)] = null,
                        this[_0x4877dc(0x4bb)] = 0x0,
                        this['avail_in'] = 0x0,
                        this['total_in'] = 0x0,
                        this[_0x4877dc(0x7c6)] = null,
                        this[_0x4877dc(0x8e0)] = 0x0,
                        this[_0x4877dc(0x905)] = 0x0,
                        this[_0x4877dc(0x9cd)] = 0x0,
                        this[_0x4877dc(0x625)] = '',
                        this[_0x4877dc(0x793)] = null,
                        this[_0x4877dc(0x92d)] = 0x2,
                        this['adler'] = 0x0;
                }
                _0x2d539c[_0x13008c(0x359)] = _0x11d02f;
            }
                , {}],
            '/lib/inflate.js': [function (_0x877afe, _0xbcf2c4, _0x3ee8c6) {
                const _0x431db0 = _0x324b8e;
                var _0xb8cb05 = _0x877afe(_0x431db0(0x47a))
                    , _0x30d7c9 = _0x877afe(_0x431db0(0xa02))
                    , _0x275096 = _0x877afe(_0x431db0(0x1c7))
                    , _0x12aeec = _0x877afe(_0x431db0(0x3ad))
                    , _0x3ea397 = _0x877afe('./zlib/messages')
                    , _0x3fc820 = _0x877afe(_0x431db0(0x1fd))
                    , _0x1c3b35 = _0x877afe(_0x431db0(0x781))
                    , _0x394751 = Object[_0x431db0(0x74f)]['toString'];
                function _0x5a8300(_0x90660) {
                    const _0x459abc = _0x431db0;
                    if (!(this instanceof _0x5a8300))
                        return new _0x5a8300(_0x90660);
                    this[_0x459abc(0xad3)] = _0x30d7c9['assign']({
                        'chunkSize': 0x4000,
                        'windowBits': 0x0,
                        'to': ''
                    }, _0x90660 || {});
                    var _0x14a73d = this[_0x459abc(0xad3)];
                    _0x14a73d[_0x459abc(0xdb)] && _0x14a73d[_0x459abc(0x324)] >= 0x0 && _0x14a73d[_0x459abc(0x324)] < 0x10 && (_0x14a73d[_0x459abc(0x324)] = -_0x14a73d[_0x459abc(0x324)],
                        0x0 === _0x14a73d[_0x459abc(0x324)] && (_0x14a73d[_0x459abc(0x324)] = -0xf)),
                        !(_0x14a73d[_0x459abc(0x324)] >= 0x0 && _0x14a73d[_0x459abc(0x324)] < 0x10) || _0x90660 && _0x90660[_0x459abc(0x324)] || (_0x14a73d[_0x459abc(0x324)] += 0x20),
                        _0x14a73d['windowBits'] > 0xf && _0x14a73d[_0x459abc(0x324)] < 0x30 && 0x0 == (0xf & _0x14a73d['windowBits']) && (_0x14a73d['windowBits'] |= 0xf),
                        this[_0x459abc(0x901)] = 0x0,
                        this[_0x459abc(0x625)] = '',
                        this['ended'] = !0x1,
                        this[_0x459abc(0x59c)] = [],
                        this['strm'] = new _0x3fc820(),
                        this[_0x459abc(0xa23)]['avail_out'] = 0x0;
                    var _0x1cc28f = _0xb8cb05[_0x459abc(0xda)](this[_0x459abc(0xa23)], _0x14a73d['windowBits']);
                    if (_0x1cc28f !== _0x12aeec[_0x459abc(0x84e)])
                        throw new Error(_0x3ea397[_0x1cc28f]);
                    this[_0x459abc(0x5d9)] = new _0x1c3b35(),
                        _0xb8cb05[_0x459abc(0x81a)](this['strm'], this[_0x459abc(0x5d9)]);
                }
                function _0x31e299(_0x5df481, _0x320733) {
                    const _0x4df3bf = _0x431db0;
                    var _0x28c837 = new _0x5a8300(_0x320733);
                    if (_0x28c837['push'](_0x5df481, !0x0),
                        _0x28c837['err'])
                        throw _0x28c837['msg'] || _0x3ea397[_0x28c837[_0x4df3bf(0x901)]];
                    return _0x28c837[_0x4df3bf(0x346)];
                }
                function _0xb4ba94(_0x46600a, _0x5509cb) {
                    return (_0x5509cb = _0x5509cb || {})['raw'] = !0x0,
                        _0x31e299(_0x46600a, _0x5509cb);
                }
                _0x5a8300[_0x431db0(0x74f)][_0x431db0(0x745)] = function (_0x55878b, _0x4f8a2f) {
                    const _0xdf1005 = _0x431db0;
                    var _0x324b76, _0x40d153, _0x285805, _0x484440, _0x4428ec, _0x2bc3b4, _0x54f440 = this['strm'], _0x499189 = this[_0xdf1005(0xad3)][_0xdf1005(0x9d1)], _0x321e35 = this[_0xdf1005(0xad3)]['dictionary'], _0x496233 = !0x1;
                    if (this[_0xdf1005(0x2bf)])
                        return !0x1;
                    _0x40d153 = _0x4f8a2f === ~~_0x4f8a2f ? _0x4f8a2f : !0x0 === _0x4f8a2f ? _0x12aeec[_0xdf1005(0x30e)] : _0x12aeec[_0xdf1005(0x1f4)],
                        'string' == typeof _0x55878b ? _0x54f440['input'] = _0x275096[_0xdf1005(0x4e8)](_0x55878b) : _0xdf1005(0xa96) === _0x394751[_0xdf1005(0x479)](_0x55878b) ? _0x54f440['input'] = new Uint8Array(_0x55878b) : _0x54f440[_0xdf1005(0xc7)] = _0x55878b,
                        _0x54f440[_0xdf1005(0x4bb)] = 0x0,
                        _0x54f440[_0xdf1005(0x298)] = _0x54f440[_0xdf1005(0xc7)][_0xdf1005(0x376)];
                    do {
                        if (0x0 === _0x54f440['avail_out'] && (_0x54f440['output'] = new _0x30d7c9[(_0xdf1005(0x865))](_0x499189),
                            _0x54f440[_0xdf1005(0x8e0)] = 0x0,
                            _0x54f440[_0xdf1005(0x905)] = _0x499189),
                            (_0x324b76 = _0xb8cb05[_0xdf1005(0x613)](_0x54f440, _0x12aeec['Z_NO_FLUSH'])) === _0x12aeec[_0xdf1005(0x6a3)] && _0x321e35 && (_0x2bc3b4 = _0xdf1005(0x937) == typeof _0x321e35 ? _0x275096['string2buf'](_0x321e35) : _0xdf1005(0xa96) === _0x394751[_0xdf1005(0x479)](_0x321e35) ? new Uint8Array(_0x321e35) : _0x321e35,
                                _0x324b76 = _0xb8cb05[_0xdf1005(0x74a)](this[_0xdf1005(0xa23)], _0x2bc3b4)),
                            _0x324b76 === _0x12aeec[_0xdf1005(0x440)] && !0x0 === _0x496233 && (_0x324b76 = _0x12aeec[_0xdf1005(0x84e)],
                                _0x496233 = !0x1),
                            _0x324b76 !== _0x12aeec['Z_STREAM_END'] && _0x324b76 !== _0x12aeec[_0xdf1005(0x84e)])
                            return this[_0xdf1005(0x4a8)](_0x324b76),
                                this[_0xdf1005(0x2bf)] = !0x0,
                                !0x1;
                        _0x54f440['next_out'] && (0x0 !== _0x54f440[_0xdf1005(0x905)] && _0x324b76 !== _0x12aeec[_0xdf1005(0x43c)] && (0x0 !== _0x54f440['avail_in'] || _0x40d153 !== _0x12aeec['Z_FINISH'] && _0x40d153 !== _0x12aeec[_0xdf1005(0x551)]) || (_0xdf1005(0x937) === this[_0xdf1005(0xad3)]['to'] ? (_0x285805 = _0x275096[_0xdf1005(0x6fe)](_0x54f440[_0xdf1005(0x7c6)], _0x54f440[_0xdf1005(0x8e0)]),
                            _0x484440 = _0x54f440[_0xdf1005(0x8e0)] - _0x285805,
                            _0x4428ec = _0x275096[_0xdf1005(0x929)](_0x54f440['output'], _0x285805),
                            _0x54f440[_0xdf1005(0x8e0)] = _0x484440,
                            _0x54f440[_0xdf1005(0x905)] = _0x499189 - _0x484440,
                            _0x484440 && _0x30d7c9[_0xdf1005(0x763)](_0x54f440[_0xdf1005(0x7c6)], _0x54f440[_0xdf1005(0x7c6)], _0x285805, _0x484440, 0x0),
                            this[_0xdf1005(0x395)](_0x4428ec)) : this['onData'](_0x30d7c9[_0xdf1005(0x319)](_0x54f440[_0xdf1005(0x7c6)], _0x54f440[_0xdf1005(0x8e0)])))),
                            0x0 === _0x54f440[_0xdf1005(0x298)] && 0x0 === _0x54f440['avail_out'] && (_0x496233 = !0x0);
                    } while ((_0x54f440[_0xdf1005(0x298)] > 0x0 || 0x0 === _0x54f440[_0xdf1005(0x905)]) && _0x324b76 !== _0x12aeec[_0xdf1005(0x43c)]);
                    return _0x324b76 === _0x12aeec[_0xdf1005(0x43c)] && (_0x40d153 = _0x12aeec['Z_FINISH']),
                        _0x40d153 === _0x12aeec[_0xdf1005(0x30e)] ? (_0x324b76 = _0xb8cb05['inflateEnd'](this[_0xdf1005(0xa23)]),
                            this['onEnd'](_0x324b76),
                            this['ended'] = !0x0,
                            _0x324b76 === _0x12aeec['Z_OK']) : _0x40d153 !== _0x12aeec[_0xdf1005(0x551)] || (this[_0xdf1005(0x4a8)](_0x12aeec['Z_OK']),
                                _0x54f440[_0xdf1005(0x905)] = 0x0,
                                !0x0);
                }
                    ,
                    _0x5a8300[_0x431db0(0x74f)][_0x431db0(0x395)] = function (_0x9ac1d6) {
                        const _0x5b7414 = _0x431db0;
                        this[_0x5b7414(0x59c)]['push'](_0x9ac1d6);
                    }
                    ,
                    _0x5a8300[_0x431db0(0x74f)][_0x431db0(0x4a8)] = function (_0x106951) {
                        const _0x4f13c5 = _0x431db0;
                        _0x106951 === _0x12aeec['Z_OK'] && ('string' === this[_0x4f13c5(0xad3)]['to'] ? this[_0x4f13c5(0x346)] = this[_0x4f13c5(0x59c)][_0x4f13c5(0x13f)]('') : this[_0x4f13c5(0x346)] = _0x30d7c9[_0x4f13c5(0x82f)](this[_0x4f13c5(0x59c)])),
                            this[_0x4f13c5(0x59c)] = [],
                            this[_0x4f13c5(0x901)] = _0x106951,
                            this[_0x4f13c5(0x625)] = this['strm'][_0x4f13c5(0x625)];
                    }
                    ,
                    _0x3ee8c6[_0x431db0(0xe9)] = _0x5a8300,
                    _0x3ee8c6[_0x431db0(0x613)] = _0x31e299,
                    _0x3ee8c6[_0x431db0(0x87b)] = _0xb4ba94,
                    _0x3ee8c6['ungzip'] = _0x31e299;
            }
                , {
                './utils/common': 0x1,
                './utils/strings': 0x2,
                './zlib/constants': 0x4,
                './zlib/gzheader': 0x6,
                './zlib/inflate': 0x8,
                './zlib/messages': 0xa,
                './zlib/zstream': 0xb
            }]
        }, {}, [])(_0x324b8e(0x923));
        var _0x35205d = _0x11c7a2;
        function _0x76a51a() { }
        _0x76a51a['RegularInstanceStride'] = 0x9,
            _0x76a51a[_0x324b8e(0x1a5)] = function (_0x344615, _0x1e5e66, _0x97df71) {
                const _0x370261 = _0x324b8e;
                if (0x0 == _0x1e5e66[_0x370261(0x376)])
                    return null;
                let _0x17ad97, _0x345d69 = _0x1e5e66[0x0];
                _0x17ad97 = 0x0 === _0x345d69[_0x370261(0x6df)] ? new Uint16Array(_0x345d69[_0x370261(0x725)][_0x370261(0x38d)], _0x345d69['indicesTypedArray']['byteOffset'], _0x345d69[_0x370261(0x725)][_0x370261(0x1ef)] / 0x2) : new Uint32Array(_0x345d69[_0x370261(0x725)][_0x370261(0x38d)], _0x345d69['indicesTypedArray'][_0x370261(0x52b)], _0x345d69[_0x370261(0x725)]['byteLength'] / 0x4);
                let _0x2034ad = _0x76a51a['extractEdgeInformation'](_0x344615, !0x1, _0x17ad97)
                    , _0x40eb3a = EdgePreprocessing[_0x370261(0x5c9)](_0x2034ad);
                return _0x97df71 && (_0x40eb3a[_0x370261(0x5f1)][_0x370261(0x6f5)] && _0x97df71[_0x370261(0x745)](_0x40eb3a['regular'][_0x370261(0x6f5)]['buffer']),
                    _0x40eb3a[_0x370261(0x59f)][_0x370261(0x6f5)] && _0x97df71[_0x370261(0x745)](_0x40eb3a['silhouette'][_0x370261(0x6f5)][_0x370261(0x38d)])),
                    _0x40eb3a;
            }
            ;
        let _0x4735af = null;
        function _0x397b42(_0x1af633) {
            const _0x17cbb9 = _0x324b8e;
            if (_0x4735af)
                return _0x4735af;
            let _0x3b23e9 = new Float32Array(0x8)
                , _0x437728 = 0x0;
            return _0x3b23e9[_0x437728++] = 0x0,
                _0x3b23e9[_0x437728++] = 0x0,
                _0x3b23e9[_0x437728++] = 0x0,
                _0x3b23e9[_0x437728++] = 0x1,
                _0x3b23e9[_0x437728++] = 0x1,
                _0x3b23e9[_0x437728++] = 0x1,
                _0x3b23e9[_0x437728++] = 0x1,
                _0x3b23e9[_0x437728++] = 0x0,
                _0x4735af = Cesium['Buffer'][_0x17cbb9(0x57a)]({
                    'context': _0x1af633,
                    'typedArray': _0x3b23e9,
                    'usage': Cesium[_0x17cbb9(0x3c3)][_0x17cbb9(0x64e)]
                }),
                _0x4735af[_0x17cbb9(0xa9a)] = !0x1,
                _0x4735af;
        }
        function _0x2eff1c() {
            let _0x2f3b67 = new Uint16Array(0x6)
                , _0x386e81 = 0x0;
            return _0x2f3b67[_0x386e81++] = 0x2,
                _0x2f3b67[_0x386e81++] = 0x1,
                _0x2f3b67[_0x386e81++] = 0x0,
                _0x2f3b67[_0x386e81++] = 0x3,
                _0x2f3b67[_0x386e81++] = 0x2,
                _0x2f3b67[_0x386e81++] = 0x0,
                _0x2f3b67;
        }
        let _0x5724de = null;
        _0x76a51a[_0x324b8e(0x45b)] = function (_0x4f6fb0) {
            const _0x1cbfd8 = _0x324b8e;
            return _0x5724de || (_0x5724de = Cesium[_0x1cbfd8(0x59d)][_0x1cbfd8(0x45b)]({
                'context': _0x4f6fb0,
                'typedArray': _0x2eff1c(),
                'usage': Cesium[_0x1cbfd8(0x3c3)][_0x1cbfd8(0x64e)],
                'indexDatatype': Cesium['IndexDatatype'][_0x1cbfd8(0x138)]
            }),
                _0x5724de[_0x1cbfd8(0xa9a)] = !0x1,
                _0x5724de);
        }
            ,
            _0x76a51a['createRegularEdgeAttributes'] = function (_0x128b4d, _0x107480) {
                const _0x4f25e3 = _0x324b8e;
                if (!_0x107480[_0x4f25e3(0x6f5)] || 0x0 === _0x107480[_0x4f25e3(0x6f5)]['length'])
                    return;
                let _0x3dd75b = {}
                    , _0x1fdbba = [];
                _0x107480['attributeLocations'] = _0x3dd75b,
                    _0x107480[_0x4f25e3(0x2da)] = _0x1fdbba;
                let _0x3df8af = Cesium[_0x4f25e3(0x59d)][_0x4f25e3(0x57a)]({
                    'context': _0x128b4d,
                    'typedArray': _0x107480['instancesData'],
                    'usage': Cesium[_0x4f25e3(0x3c3)][_0x4f25e3(0x64e)]
                });
                _0x107480[_0x4f25e3(0x6f5)] = null;
                let _0x379f88 = Cesium[_0x4f25e3(0xa57)][_0x4f25e3(0x85f)](Cesium[_0x4f25e3(0xa57)][_0x4f25e3(0x2d5)])
                    , _0xef662b = _0x397b42(_0x128b4d)
                    , _0x390f85 = 0x0;
                _0x3dd75b[_0x4f25e3(0x190)] = _0x390f85++,
                    _0x1fdbba['push']({
                        'index': _0x3dd75b[_0x4f25e3(0x190)],
                        'vertexBuffer': _0xef662b,
                        'componentsPerAttribute': 0x2,
                        'componentDatatype': Cesium[_0x4f25e3(0xa57)][_0x4f25e3(0x2d5)],
                        'offsetInBytes': 0x0,
                        'strideInBytes': 0x2 * Cesium[_0x4f25e3(0xa57)]['getSizeInBytes'](Cesium[_0x4f25e3(0xa57)][_0x4f25e3(0x2d5)]),
                        'normalize': !0x1
                    });
                let _0x146c71 = _0x76a51a['RegularInstanceStride']
                    , _0x23e017 = 0x0;
                _0x3dd75b[_0x4f25e3(0x89a)] = _0x390f85++,
                    _0x1fdbba[_0x4f25e3(0x745)]({
                        'index': _0x3dd75b[_0x4f25e3(0x89a)],
                        'vertexBuffer': _0x3df8af,
                        'componentsPerAttribute': 0x3,
                        'componentDatatype': Cesium[_0x4f25e3(0xa57)][_0x4f25e3(0x2d5)],
                        'normalize': !0x1,
                        'offsetInBytes': _0x379f88 * _0x23e017,
                        'strideInBytes': _0x379f88 * _0x146c71,
                        'instanceDivisor': 0x1
                    }),
                    _0x23e017 += 0x3,
                    _0x3dd75b['aPosition1'] = _0x390f85++,
                    _0x1fdbba[_0x4f25e3(0x745)]({
                        'index': _0x3dd75b[_0x4f25e3(0x686)],
                        'vertexBuffer': _0x3df8af,
                        'componentsPerAttribute': 0x3,
                        'componentDatatype': Cesium[_0x4f25e3(0xa57)][_0x4f25e3(0x2d5)],
                        'normalize': !0x1,
                        'offsetInBytes': _0x379f88 * _0x23e017,
                        'strideInBytes': _0x379f88 * _0x146c71,
                        'instanceDivisor': 0x1
                    }),
                    _0x23e017 += 0x3,
                    _0x3dd75b[_0x4f25e3(0xa77)] = _0x390f85++,
                    _0x1fdbba[_0x4f25e3(0x745)]({
                        'index': _0x3dd75b[_0x4f25e3(0xa77)],
                        'vertexBuffer': _0x3df8af,
                        'componentsPerAttribute': 0x3,
                        'componentDatatype': Cesium[_0x4f25e3(0xa57)][_0x4f25e3(0x2d5)],
                        'normalize': !0x0,
                        'offsetInBytes': _0x379f88 * _0x23e017,
                        'strideInBytes': _0x379f88 * _0x146c71,
                        'instanceDivisor': 0x1
                    }),
                    _0x23e017 += 0x3;
            }
            ,
            _0x76a51a[_0x324b8e(0x419)] = function (_0x510e00, _0x11a6fd) {
                const _0x39aaa4 = _0x324b8e;
                if (!_0x11a6fd[_0x39aaa4(0x6f5)] || 0x0 == _0x11a6fd[_0x39aaa4(0x6f5)]['length'])
                    return;
                let _0x5bdcd9 = {}
                    , _0xb4e205 = [];
                _0x11a6fd[_0x39aaa4(0xa0f)] = _0x5bdcd9,
                    _0x11a6fd[_0x39aaa4(0x2da)] = _0xb4e205;
                let _0x151600 = Cesium[_0x39aaa4(0x59d)][_0x39aaa4(0x57a)]({
                    'context': _0x510e00,
                    'typedArray': _0x11a6fd[_0x39aaa4(0x6f5)],
                    'usage': Cesium[_0x39aaa4(0x3c3)]['STATIC_DRAW']
                });
                _0x11a6fd[_0x39aaa4(0x6f5)] = null;
                let _0x1c9b44 = Cesium[_0x39aaa4(0xa57)]['getSizeInBytes'](Cesium[_0x39aaa4(0xa57)]['FLOAT'])
                    , _0x1dc652 = 0x0;
                _0x5bdcd9['aSideness'] = _0x1dc652++,
                    _0xb4e205[_0x39aaa4(0x745)]({
                        'index': _0x5bdcd9['aSideness'],
                        'vertexBuffer': _0x397b42(_0x510e00),
                        'componentsPerAttribute': 0x2,
                        'componentDatatype': Cesium[_0x39aaa4(0xa57)][_0x39aaa4(0x2d5)],
                        'offsetInBytes': 0x0,
                        'strideInBytes': 0x2 * _0x1c9b44,
                        'normalize': !0x1
                    });
                let _0x500ef1 = 0x0;
                _0x5bdcd9[_0x39aaa4(0x89a)] = _0x1dc652++,
                    _0xb4e205[_0x39aaa4(0x745)]({
                        'index': _0x5bdcd9['aPosition0'],
                        'vertexBuffer': _0x151600,
                        'componentsPerAttribute': 0x3,
                        'componentDatatype': Cesium['ComponentDatatype'][_0x39aaa4(0x2d5)],
                        'normalize': !0x1,
                        'offsetInBytes': _0x1c9b44 * _0x500ef1,
                        'strideInBytes': 0xc * _0x1c9b44,
                        'instanceDivisor': 0x1
                    }),
                    _0x500ef1 += 0x3,
                    _0x5bdcd9[_0x39aaa4(0x686)] = _0x1dc652++,
                    _0xb4e205['push']({
                        'index': _0x5bdcd9['aPosition1'],
                        'vertexBuffer': _0x151600,
                        'componentsPerAttribute': 0x3,
                        'componentDatatype': Cesium[_0x39aaa4(0xa57)][_0x39aaa4(0x2d5)],
                        'normalize': !0x1,
                        'offsetInBytes': _0x1c9b44 * _0x500ef1,
                        'strideInBytes': 0xc * _0x1c9b44,
                        'instanceDivisor': 0x1
                    }),
                    _0x500ef1 += 0x3,
                    _0x5bdcd9[_0x39aaa4(0x862)] = _0x1dc652++,
                    _0xb4e205[_0x39aaa4(0x745)]({
                        'index': _0x5bdcd9[_0x39aaa4(0x862)],
                        'vertexBuffer': _0x151600,
                        'componentsPerAttribute': 0x3,
                        'componentDatatype': Cesium['ComponentDatatype']['FLOAT'],
                        'normalize': !0x0,
                        'offsetInBytes': _0x1c9b44 * _0x500ef1,
                        'strideInBytes': 0xc * _0x1c9b44,
                        'instanceDivisor': 0x1
                    }),
                    _0x500ef1 += 0x3,
                    _0x5bdcd9[_0x39aaa4(0xa9e)] = _0x1dc652++,
                    _0xb4e205[_0x39aaa4(0x745)]({
                        'index': _0x5bdcd9[_0x39aaa4(0xa9e)],
                        'vertexBuffer': _0x151600,
                        'componentsPerAttribute': 0x3,
                        'componentDatatype': Cesium[_0x39aaa4(0xa57)][_0x39aaa4(0x2d5)],
                        'normalize': !0x0,
                        'offsetInBytes': _0x1c9b44 * _0x500ef1,
                        'strideInBytes': 0xc * _0x1c9b44,
                        'instanceDivisor': 0x1
                    }),
                    _0x500ef1 += 0x3;
            }
            ,
            _0x76a51a[_0x324b8e(0x3ce)] = function (_0x5d468c, _0x125351, _0x537c58) {
                const _0x4de580 = _0x324b8e;
                let _0x1f67de = _0x5d468c['attrLocation'][_0x4de580(0x833)]
                    , _0x4dbc07 = _0x5d468c[_0x4de580(0xaa9)][_0x1f67de]
                    , _0x353d24 = _0x4dbc07[_0x4de580(0x70f)]
                    , _0x1b6af1 = new Float32Array(_0x4dbc07['typedArray']['buffer'], _0x4dbc07[_0x4de580(0xa82)]['byteOffset'], _0x4dbc07[_0x4de580(0xa82)][_0x4de580(0x1ef)] / 0x4)
                    , _0x169ed8 = _0x1b6af1[_0x4de580(0x376)] / _0x353d24;
                if (_0x125351 && _0x537c58)
                    return {
                        'faces': _0x537c58,
                        'neighbors': MeshProcessing['computeNeighbors'](_0x537c58, _0x169ed8),
                        'vertices': _0x1b6af1,
                        'dim': _0x353d24
                    };
                let _0x2785bf, _0x396e5c = _0x4dbc07['typedArray'][_0x4de580(0x38d)];
                _0x2785bf = isCompress ? _0x1b6af1[_0x4de580(0x38d)] : _0x396e5c['slice'](_0x4dbc07[_0x4de580(0xa82)][_0x4de580(0x52b)], _0x4dbc07['typedArray'][_0x4de580(0x52b)] + _0x4dbc07[_0x4de580(0xa82)]['byteLength']);
                let _0x1c2e82 = MeshProcessing[_0x4de580(0x3bf)](_0x2785bf, _0x353d24)
                    , _0x57db32 = _0x76a51a['selectIndexData'](_0x1c2e82['indices'], _0x537c58);
                return {
                    'faces': _0x57db32,
                    'neighbors': MeshProcessing[_0x4de580(0x91e)](_0x57db32, _0x1c2e82['uniqueCount']),
                    'vertices': new Float32Array(_0x1c2e82[_0x4de580(0x38d)]),
                    'dim': _0x353d24
                };
            }
            ,
            _0x76a51a[_0x324b8e(0x95b)] = function (_0x33a8fb, _0x4c4f81) {
                const _0x1d20d6 = _0x324b8e;
                if (_0x4c4f81) {
                    _0x4c4f81 = _0x4c4f81[_0x1d20d6(0x3be)]();
                    for (let _0x5e2cb6 = 0x0; _0x5e2cb6 < _0x4c4f81[_0x1d20d6(0x376)]; _0x5e2cb6++)
                        _0x4c4f81[_0x5e2cb6] = _0x33a8fb[_0x4c4f81[_0x5e2cb6]];
                    return _0x4c4f81;
                }
                return _0x33a8fb;
            }
            ;
        let _0x843c16 = new Cesium[(_0x324b8e(0x85d))]()
            , _0x39a026 = new Cesium[(_0x324b8e(0x85d))]()
            , _0x434b33 = new Cesium[(_0x324b8e(0x85d))]()
            , _0x3b1378 = new Cesium[(_0x324b8e(0x85d))]()
            , _0x146983 = new Cesium[(_0x324b8e(0x85d))]()
            , _0x59f34a = new Cesium[(_0x324b8e(0x85d))]()
            , _0x4c1308 = new Cesium['Cartesian3']()
            , _0xa85cd2 = new Cesium[(_0x324b8e(0x85d))]();
        function _0x235026() { }
        _0x76a51a['createEdgeDataByIndices'] = function (_0x3c2a79, _0x46a496) {
            const _0x479fd9 = _0x324b8e;
            let _0x22f705, _0x89a165 = _0x3c2a79[_0x479fd9(0xe2)]['aPosition'], _0x5eb357 = _0x3c2a79[_0x479fd9(0xaa9)][_0x89a165], _0x38f89f = _0x5eb357[_0x479fd9(0x70f)], _0x3f3663 = new Float32Array(_0x5eb357[_0x479fd9(0xa82)][_0x479fd9(0x38d)], _0x5eb357['typedArray'][_0x479fd9(0x52b)], _0x5eb357[_0x479fd9(0xa82)]['byteLength'] / 0x4);
            _0x22f705 = 0x0 === _0x46a496[_0x479fd9(0x6df)] ? new Uint16Array(_0x46a496['indicesTypedArray'][_0x479fd9(0x38d)], _0x46a496[_0x479fd9(0x725)][_0x479fd9(0x52b)], _0x46a496[_0x479fd9(0x725)][_0x479fd9(0x1ef)] / 0x2) : new Uint32Array(_0x46a496['indicesTypedArray'][_0x479fd9(0x38d)], _0x46a496['indicesTypedArray'][_0x479fd9(0x52b)], _0x46a496[_0x479fd9(0x725)][_0x479fd9(0x1ef)] / 0x4);
            let _0x36ed6d = []
                , _0x2e2d05 = []
                , _0x27b839 = _0x22f705['length']
                , _0x1b1984 = 0x0;
            for (let _0x3e0040 = 0x0, _0x11e581 = 0x4 * Math[_0x479fd9(0x432)](_0x27b839 / 0x4); _0x3e0040 < _0x11e581; _0x3e0040 += 0x4) {
                let _0x113be5 = _0x22f705[_0x3e0040]
                    , _0x9f31ce = _0x22f705[_0x3e0040 + 0x1]
                    , _0x547c74 = _0x22f705[_0x3e0040 + 0x2]
                    , _0x6fb3d0 = _0x22f705[_0x3e0040 + 0x3];
                if (_0x843c16['x'] = _0x3f3663[_0x38f89f * _0x113be5],
                    _0x843c16['y'] = _0x3f3663[_0x38f89f * _0x113be5 + 0x1],
                    _0x843c16['z'] = _0x3f3663[_0x38f89f * _0x113be5 + 0x2],
                    _0x39a026['x'] = _0x3f3663[_0x38f89f * _0x9f31ce],
                    _0x39a026['y'] = _0x3f3663[_0x38f89f * _0x9f31ce + 0x1],
                    _0x39a026['z'] = _0x3f3663[_0x38f89f * _0x9f31ce + 0x2],
                    _0x434b33['x'] = _0x3f3663[_0x38f89f * _0x547c74],
                    _0x434b33['y'] = _0x3f3663[_0x38f89f * _0x547c74 + 0x1],
                    _0x434b33['z'] = _0x3f3663[_0x38f89f * _0x547c74 + 0x2],
                    _0x3b1378['x'] = _0x3f3663[_0x38f89f * _0x6fb3d0],
                    _0x3b1378['y'] = _0x3f3663[_0x38f89f * _0x6fb3d0 + 0x1],
                    _0x3b1378['z'] = _0x3f3663[_0x38f89f * _0x6fb3d0 + 0x2],
                    !(Cesium[_0x479fd9(0x85d)]['equals'](_0x39a026, _0x434b33) || Cesium[_0x479fd9(0x85d)][_0x479fd9(0x898)](_0x39a026, _0x3b1378) || Cesium[_0x479fd9(0x85d)][_0x479fd9(0x898)](_0x39a026, _0x843c16) || Cesium['Cartesian3']['equals'](_0x434b33, _0x843c16) || Cesium[_0x479fd9(0x85d)][_0x479fd9(0x898)](_0x3b1378, _0x843c16))) {
                    if (_0x547c74 === _0x6fb3d0) {
                        if (Cesium[_0x479fd9(0x85d)][_0x479fd9(0x7bd)](_0x39a026, _0x843c16, _0x146983),
                            Cesium[_0x479fd9(0x85d)][_0x479fd9(0x7bd)](_0x434b33, _0x843c16, _0x59f34a),
                            Cesium[_0x479fd9(0x85d)][_0x479fd9(0x695)](_0x146983, _0x59f34a, _0x146983),
                            Cesium[_0x479fd9(0x85d)][_0x479fd9(0x898)](_0x146983, Cesium[_0x479fd9(0x85d)][_0x479fd9(0x889)]))
                            continue;
                        Cesium[_0x479fd9(0x85d)][_0x479fd9(0x7bc)](_0x146983, _0x146983),
                            _0x36ed6d[_0x479fd9(0x745)](_0x843c16['x']),
                            _0x36ed6d['push'](_0x843c16['y']),
                            _0x36ed6d[_0x479fd9(0x745)](_0x843c16['z']),
                            _0x36ed6d[_0x479fd9(0x745)](_0x39a026['x']),
                            _0x36ed6d[_0x479fd9(0x745)](_0x39a026['y']),
                            _0x36ed6d[_0x479fd9(0x745)](_0x39a026['z']),
                            _0x36ed6d[_0x479fd9(0x745)](_0x146983['x']),
                            _0x36ed6d[_0x479fd9(0x745)](_0x146983['y']),
                            _0x36ed6d[_0x479fd9(0x745)](_0x146983['z']);
                    } else {
                        if (Cesium['Cartesian3'][_0x479fd9(0x7bd)](_0x39a026, _0x843c16, _0x146983),
                            Cesium[_0x479fd9(0x85d)]['subtract'](_0x434b33, _0x843c16, _0x59f34a),
                            Cesium[_0x479fd9(0x85d)][_0x479fd9(0x695)](_0x146983, _0x59f34a, _0x146983),
                            Cesium[_0x479fd9(0x85d)][_0x479fd9(0x898)](_0x146983, Cesium['Cartesian3'][_0x479fd9(0x889)]))
                            continue;
                        if (Cesium[_0x479fd9(0x85d)][_0x479fd9(0x7bc)](_0x146983, _0x146983),
                            Cesium[_0x479fd9(0x85d)][_0x479fd9(0x7bd)](_0x39a026, _0x843c16, _0x4c1308),
                            Cesium[_0x479fd9(0x85d)]['subtract'](_0x3b1378, _0x843c16, _0xa85cd2),
                            Cesium['Cartesian3']['cross'](_0x4c1308, _0xa85cd2, _0x4c1308),
                            Cesium[_0x479fd9(0x85d)][_0x479fd9(0x898)](_0x4c1308, Cesium[_0x479fd9(0x85d)][_0x479fd9(0x889)]))
                            continue;
                        Cesium['Cartesian3'][_0x479fd9(0x7bc)](_0x4c1308, _0x4c1308),
                            _0x2e2d05[_0x479fd9(0x745)](_0x843c16['x']),
                            _0x2e2d05[_0x479fd9(0x745)](_0x843c16['y']),
                            _0x2e2d05[_0x479fd9(0x745)](_0x843c16['z']),
                            _0x2e2d05[_0x479fd9(0x745)](_0x39a026['x']),
                            _0x2e2d05['push'](_0x39a026['y']),
                            _0x2e2d05[_0x479fd9(0x745)](_0x39a026['z']),
                            _0x2e2d05['push'](_0x146983['x']),
                            _0x2e2d05[_0x479fd9(0x745)](_0x146983['y']),
                            _0x2e2d05[_0x479fd9(0x745)](_0x146983['z']),
                            _0x2e2d05['push'](_0x4c1308['x']),
                            _0x2e2d05[_0x479fd9(0x745)](_0x4c1308['y']),
                            _0x2e2d05[_0x479fd9(0x745)](_0x4c1308['z']);
                    }
                    _0x1b1984 += Cesium[_0x479fd9(0x85d)][_0x479fd9(0xaa5)](_0x843c16, _0x39a026);
                }
            }
            let _0x5bf739 = _0x1b1984 / (_0x27b839 / 0x4)
                , _0x57bcd3 = _0x36ed6d['length'] / _0x76a51a[_0x479fd9(0x720)]
                , _0x44429d = _0x2e2d05[_0x479fd9(0x376)] / 0xc;
            return {
                'regular': {
                    'instancesData': new Float32Array(_0x36ed6d),
                    'instanceCount': _0x57bcd3,
                    'edgeLength': _0x57bcd3 * _0x5bf739
                },
                'silhouette': {
                    'instancesData': new Float32Array(_0x2e2d05),
                    'instanceCount': _0x44429d,
                    'edgeLength': _0x44429d
                },
                'averageEdgeLength': _0x5bf739
            };
        }
            ;
        let _0x2f3463 = 0x1
            , _0x41bbd9 = 0x2;
        function _0x337c0(_0x14ea69, _0x5b75b9, _0xb8d065) {
            const _0x2e8eeb = _0x324b8e;
            let _0x46de57 = _0x5b75b9[_0x2e8eeb(0x69d)](_0xb8d065, !0x0);
            _0xb8d065 += Uint32Array[_0x2e8eeb(0x739)];
            let _0xb35814 = new Uint8Array(_0x14ea69, _0xb8d065, _0x46de57);
            return {
                'string': Cesium[_0x2e8eeb(0x178)](_0xb35814),
                'bytesOffset': _0xb8d065 += _0x46de57,
                'length': _0x46de57
            };
        }
        function _0x1f988b(_0x3e24eb, _0x54c150, _0x46943f, _0x16b153) {
            const _0x57716e = _0x324b8e;
            let _0x4ad933 = {}
                , _0x34a75f = []
                , _0x4d3a85 = new Array(0x10);
            for (let _0x54fe92 = 0x0; _0x54fe92 < 0x10; _0x54fe92++)
                _0x4d3a85[_0x54fe92] = _0x54c150[_0x57716e(0xa42)](_0x46943f, !0x0),
                    _0x46943f += Float64Array[_0x57716e(0x739)];
            _0x4ad933[_0x57716e(0x322)] = _0x4d3a85,
                _0x4ad933[_0x57716e(0x1ca)] = _0x34a75f;
            let _0x48082b = _0x54c150['getUint32'](_0x46943f, !0x0);
            _0x46943f += Uint32Array[_0x57716e(0x739)];
            for (let _0x1fcfa5 = 0x0; _0x1fcfa5 < _0x48082b; _0x1fcfa5++) {
                let _0x41bd77 = _0x337c0(_0x3e24eb, _0x54c150, _0x46943f);
                _0x34a75f[_0x57716e(0x745)](_0x41bd77[_0x57716e(0x937)]),
                    _0x46943f = _0x41bd77['bytesOffset'];
            }
            return _0x16b153[_0x57716e(0x745)](_0x4ad933),
                _0x46943f;
        }
        function _0xeb0d6(_0x441d7a, _0x5aadc1, _0x524292, _0x5f08ac) {
            const _0x454e3f = _0x324b8e;
            let _0x116b58 = {};
            _0x116b58['rangeList'] = _0x5aadc1[_0x454e3f(0x486)](_0x524292, !0x0),
                _0x524292 += Float32Array['BYTES_PER_ELEMENT'],
                _0x116b58[_0x454e3f(0xaae)] = _0x5aadc1[_0x454e3f(0x206)](_0x524292, !0x0),
                _0x524292 += Uint16Array['BYTES_PER_ELEMENT'];
            let _0x3cbde8 = {};
            _0x3cbde8['x'] = _0x5aadc1[_0x454e3f(0xa42)](_0x524292, !0x0),
                _0x524292 += Float64Array[_0x454e3f(0x739)],
                _0x3cbde8['y'] = _0x5aadc1['getFloat64'](_0x524292, !0x0),
                _0x524292 += Float64Array['BYTES_PER_ELEMENT'],
                _0x3cbde8['z'] = _0x5aadc1[_0x454e3f(0xa42)](_0x524292, !0x0),
                _0x524292 += Float64Array[_0x454e3f(0x739)];
            let _0x4ac76a = _0x5aadc1[_0x454e3f(0xa42)](_0x524292, !0x0);
            _0x524292 += Float64Array[_0x454e3f(0x739)],
                _0x116b58[_0x454e3f(0x891)] = {
                    'center': _0x3cbde8,
                    'radius': _0x4ac76a
                };
            let _0x4c606a = _0x337c0(_0x441d7a, _0x5aadc1, _0x524292)
                , _0x2ef231 = _0x4c606a['string'];
            _0x524292 = _0x4c606a['bytesOffset'];
            let _0xcc7dff = _0x2ef231['indexOf']('Geometry');
            if (-0x1 !== _0xcc7dff) {
                let _0x46a992 = _0x2ef231['substring'](_0xcc7dff);
                _0x2ef231 = _0x2ef231['replace'](_0x46a992, '');
            }
            _0x116b58['childTile'] = _0x2ef231,
                _0x116b58[_0x454e3f(0x442)] = [];
            let _0x3703ee = _0x5aadc1[_0x454e3f(0x69d)](_0x524292, !0x0);
            _0x524292 += Uint32Array[_0x454e3f(0x739)];
            for (let _0x1eca10 = 0x0; _0x1eca10 < _0x3703ee; _0x1eca10++)
                _0x524292 = _0x1f988b(_0x441d7a, _0x5aadc1, _0x524292, _0x116b58[_0x454e3f(0x442)]);
            return _0x5f08ac[_0x454e3f(0x745)](_0x116b58),
                _0x524292;
        }
        function _0x224be0(_0x2c4964, _0x1a9245, _0x5cea2f, _0x39a2ac) {
            const _0x21a5e0 = _0x324b8e;
            let _0x11a0cc = _0x1a9245['getUint32'](_0x5cea2f, !0x0);
            if (_0x39a2ac['verticesCount'] = _0x11a0cc,
                (_0x5cea2f += Uint32Array[_0x21a5e0(0x739)]) <= 0x0)
                return _0x5cea2f;
            let _0x3e2e40 = _0x1a9245[_0x21a5e0(0x206)](_0x5cea2f, !0x0);
            _0x5cea2f += Uint16Array[_0x21a5e0(0x739)];
            let _0x3c2925 = _0x1a9245[_0x21a5e0(0x206)](_0x5cea2f, !0x0);
            _0x3c2925 = _0x3e2e40 * Float32Array[_0x21a5e0(0x739)],
                _0x5cea2f += Uint16Array['BYTES_PER_ELEMENT'];
            let _0x46e5cc = _0x11a0cc * _0x3e2e40 * Float32Array[_0x21a5e0(0x739)]
                , _0x4a0ade = new Uint8Array(_0x2c4964, _0x5cea2f, _0x46e5cc);
            _0x5cea2f += _0x46e5cc;
            let _0x12ef9f = _0x39a2ac['vertexAttributes']
                , _0x22d226 = _0x39a2ac[_0x21a5e0(0xe2)];
            return _0x22d226[_0x21a5e0(0x833)] = _0x12ef9f[_0x21a5e0(0x376)],
                _0x12ef9f['push']({
                    'index': _0x22d226['aPosition'],
                    'typedArray': _0x4a0ade,
                    'componentsPerAttribute': _0x3e2e40,
                    'componentDatatype': Cesium[_0x21a5e0(0xa57)][_0x21a5e0(0x2d5)],
                    'offsetInBytes': 0x0,
                    'strideInBytes': _0x3c2925,
                    'normalize': !0x1
                }),
                _0x5cea2f;
        }
        function _0x2b9f2e(_0x4dcce2, _0x51bb82, _0x1b9dea, _0x4afdfc) {
            const _0x3a708a = _0x324b8e;
            let _0x5dc732 = _0x51bb82[_0x3a708a(0x69d)](_0x1b9dea, !0x0);
            if (_0x1b9dea += Uint32Array[_0x3a708a(0x739)],
                _0x5dc732 <= 0x0)
                return _0x1b9dea;
            let _0x57c890 = _0x51bb82['getUint16'](_0x1b9dea, !0x0);
            _0x1b9dea += Uint16Array[_0x3a708a(0x739)];
            let _0x8b227e = _0x51bb82[_0x3a708a(0x206)](_0x1b9dea, !0x0);
            _0x1b9dea += Uint16Array[_0x3a708a(0x739)];
            let _0x13b4b1 = _0x5dc732 * _0x57c890 * Float32Array[_0x3a708a(0x739)]
                , _0x171aa6 = new Uint8Array(_0x4dcce2, _0x1b9dea, _0x13b4b1);
            _0x1b9dea += _0x13b4b1;
            let _0x31541e = _0x4afdfc[_0x3a708a(0xaa9)]
                , _0x5700da = _0x4afdfc[_0x3a708a(0xe2)];
            return _0x5700da[_0x3a708a(0xa77)] = _0x31541e[_0x3a708a(0x376)],
                _0x31541e[_0x3a708a(0x745)]({
                    'index': _0x5700da[_0x3a708a(0xa77)],
                    'typedArray': _0x171aa6,
                    'componentsPerAttribute': _0x57c890,
                    'componentDatatype': Cesium[_0x3a708a(0xa57)][_0x3a708a(0x2d5)],
                    'offsetInBytes': 0x0,
                    'strideInBytes': _0x8b227e,
                    'normalize': !0x1
                }),
                _0x1b9dea;
        }
        function _0x29e75f(_0x5017a6, _0x4e07d9, _0x2a3f5a, _0x56d028) {
            const _0xa14bef = _0x324b8e;
            let _0x1d4989 = _0x4e07d9[_0xa14bef(0x69d)](_0x2a3f5a, !0x0);
            _0x2a3f5a += Uint32Array[_0xa14bef(0x739)];
            let _0x69168f, _0xf47326 = _0x56d028['verticesCount'];
            if (_0x1d4989 > 0x0) {
                _0x4e07d9[_0xa14bef(0x206)](_0x2a3f5a, !0x0),
                    _0x2a3f5a += Uint16Array[_0xa14bef(0x739)],
                    _0x2a3f5a += 0x2 * Uint8Array[_0xa14bef(0x739)];
                let _0x44a30a = _0x1d4989 * Uint8Array[_0xa14bef(0x739)] * 0x4;
                _0x69168f = new Uint8Array(_0x5017a6, _0x2a3f5a, _0x44a30a)[_0xa14bef(0x3be)](0x0, _0x44a30a),
                    _0x2a3f5a += _0x44a30a;
            } else {
                _0x69168f = new Uint8Array(0x4 * _0xf47326);
                for (let _0xf5df32 = 0x0; _0xf5df32 < _0xf47326; _0xf5df32++)
                    _0x69168f[0x4 * _0xf5df32] = 0xff,
                        _0x69168f[0x4 * _0xf5df32 + 0x1] = 0xff,
                        _0x69168f[0x4 * _0xf5df32 + 0x2] = 0xff,
                        _0x69168f[0x4 * _0xf5df32 + 0x3] = 0xff;
            }
            let _0x4da741 = _0x56d028[_0xa14bef(0xaa9)]
                , _0x18653 = _0x56d028[_0xa14bef(0xe2)];
            return _0x18653[_0xa14bef(0x262)] = _0x4da741['length'],
                _0x4da741[_0xa14bef(0x745)]({
                    'index': _0x18653[_0xa14bef(0x262)],
                    'typedArray': _0x69168f,
                    'componentsPerAttribute': 0x4,
                    'componentDatatype': Cesium[_0xa14bef(0xa57)][_0xa14bef(0x1e0)],
                    'offsetInBytes': 0x0,
                    'strideInBytes': 0x4,
                    'normalize': !0x0
                }),
                _0x56d028[_0xa14bef(0x24c)] = _0x69168f,
                _0x2a3f5a;
        }
        function _0x36c3a7(_0x44cea5, _0x5e7e47, _0x3e7cec, _0x2f602a) {
            const _0x17b003 = _0x324b8e;
            let _0x1c3fc8 = _0x5e7e47['getUint32'](_0x3e7cec, !0x0);
            if (_0x3e7cec += Uint32Array[_0x17b003(0x739)],
                _0x1c3fc8 <= 0x0)
                return _0x3e7cec;
            _0x5e7e47['getUint16'](_0x3e7cec, !0x0),
                _0x3e7cec += Uint16Array['BYTES_PER_ELEMENT'],
                _0x3e7cec += 0x2 * Uint8Array[_0x17b003(0x739)];
            let _0x14b7e7 = _0x1c3fc8 * Uint8Array[_0x17b003(0x739)] * 0x4
                , _0x4c01cc = new Uint8Array(_0x44cea5, _0x3e7cec, _0x14b7e7);
            _0x3e7cec += _0x14b7e7;
            let _0xbac269 = _0x2f602a['vertexAttributes']
                , _0x20af32 = _0x2f602a[_0x17b003(0xe2)];
            return _0x20af32['aSecondColor'] = _0xbac269['length'],
                _0xbac269['push']({
                    'index': _0x20af32[_0x17b003(0x9aa)],
                    'typedArray': _0x4c01cc,
                    'componentsPerAttribute': 0x4,
                    'componentDatatype': Cesium[_0x17b003(0xa57)][_0x17b003(0x1e0)],
                    'offsetInBytes': 0x0,
                    'strideInBytes': 0x4,
                    'normalize': !0x0
                }),
                _0x3e7cec;
        }
        function _0x361253(_0xd975d9, _0x4aba4e, _0x38210e, _0x25f330) {
            const _0x4e09d8 = _0x324b8e;
            let _0x4c34c4 = _0x4aba4e[_0x4e09d8(0x206)](_0x38210e, !0x0);
            _0x38210e += Uint16Array[_0x4e09d8(0x739)],
                _0x38210e += Uint16Array[_0x4e09d8(0x739)];
            for (let _0x4198dc = 0x0; _0x4198dc < _0x4c34c4; _0x4198dc++) {
                let _0x460dec = _0x4aba4e[_0x4e09d8(0x69d)](_0x38210e, !0x0);
                _0x38210e += Uint32Array[_0x4e09d8(0x739)];
                let _0x2b1aa0 = _0x4aba4e[_0x4e09d8(0x206)](_0x38210e, !0x0);
                _0x38210e += Uint16Array[_0x4e09d8(0x739)],
                    _0x4aba4e[_0x4e09d8(0x206)](_0x38210e, !0x0),
                    _0x38210e += Uint16Array[_0x4e09d8(0x739)];
                let _0xfb6856 = _0x460dec * _0x2b1aa0 * Float32Array[_0x4e09d8(0x739)]
                    , _0x3177d4 = new Uint8Array(_0xd975d9, _0x38210e, _0xfb6856);
                _0x38210e += _0xfb6856;
                let _0x5bc59b = 'aTexCoord' + _0x4198dc
                    , _0x218b85 = _0x25f330[_0x4e09d8(0xaa9)]
                    , _0x185582 = _0x25f330['attrLocation'];
                _0x185582[_0x5bc59b] = _0x218b85[_0x4e09d8(0x376)],
                    _0x218b85[_0x4e09d8(0x745)]({
                        'index': _0x185582[_0x5bc59b],
                        'typedArray': _0x3177d4,
                        'componentsPerAttribute': _0x2b1aa0,
                        'componentDatatype': Cesium[_0x4e09d8(0xa57)][_0x4e09d8(0x2d5)],
                        'offsetInBytes': 0x0,
                        'strideInBytes': _0x2b1aa0 * Float32Array['BYTES_PER_ELEMENT'],
                        'normalize': !0x1
                    });
            }
            return _0x38210e;
        }
        function _0xf9b14(_0x5e4ab1, _0x2ffcb6, _0x3c2e83, _0x2d68b6) {
            const _0x429344 = _0x324b8e;
            let _0x3d1857 = _0x2ffcb6[_0x429344(0x206)](_0x3c2e83, !0x0);
            _0x3c2e83 += Uint16Array['BYTES_PER_ELEMENT'],
                _0x3c2e83 += Uint16Array[_0x429344(0x739)];
            let _0x492512 = _0x2d68b6[_0x429344(0xaa9)]
                , _0x46d491 = _0x2d68b6[_0x429344(0xe2)];
            for (let _0x138b56 = 0x0; _0x138b56 < _0x3d1857; _0x138b56++) {
                let _0x53b3c5 = _0x2ffcb6[_0x429344(0x69d)](_0x3c2e83, !0x0);
                _0x3c2e83 += Uint32Array['BYTES_PER_ELEMENT'];
                let _0x34ad32 = _0x2ffcb6[_0x429344(0x206)](_0x3c2e83, !0x0);
                _0x3c2e83 += Uint16Array[_0x429344(0x739)],
                    _0x2ffcb6[_0x429344(0x206)](_0x3c2e83, !0x0),
                    _0x3c2e83 += Uint16Array[_0x429344(0x739)];
                let _0x51a549 = _0x53b3c5 * _0x34ad32 * Float32Array['BYTES_PER_ELEMENT'];
                if (0x11 === _0x34ad32 || 0x1d === _0x34ad32) {
                    let _0xfcbd0a = new Uint8Array(_0x5e4ab1, _0x3c2e83, _0x51a549);
                    _0x2d68b6[_0x429344(0x332)] = _0x53b3c5,
                        _0x2d68b6[_0x429344(0x313)] = _0x34ad32,
                        _0x2d68b6[_0x429344(0x931)] = _0xfcbd0a,
                        _0x2d68b6[_0x429344(0x7eb)] = 0x1;
                    let _0x2e4f11, _0x18b96b = _0x34ad32 * _0x53b3c5 * 0x4, _0x5360e8 = _0xfcbd0a[_0x429344(0x3be)](0x0, _0x18b96b);
                    _0x2d68b6[_0x429344(0xc4)] = _0x5360e8,
                        0x11 === _0x34ad32 ? (_0x2e4f11 = 0x11 * Float32Array[_0x429344(0x739)],
                            _0x46d491['uv2'] = _0x492512[_0x429344(0x376)],
                            _0x492512[_0x429344(0x745)]({
                                'index': _0x46d491['uv2'],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium['ComponentDatatype'][_0x429344(0x2d5)],
                                'normalize': !0x1,
                                'offsetInBytes': 0x0,
                                'strideInBytes': _0x2e4f11,
                                'instanceDivisor': 0x1
                            }),
                            _0x46d491[_0x429344(0x7a0)] = _0x492512[_0x429344(0x376)],
                            _0x492512[_0x429344(0x745)]({
                                'index': _0x46d491['uv3'],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium[_0x429344(0xa57)]['FLOAT'],
                                'normalize': !0x1,
                                'offsetInBytes': 0x4 * Float32Array[_0x429344(0x739)],
                                'strideInBytes': _0x2e4f11,
                                'instanceDivisor': 0x1
                            }),
                            _0x46d491[_0x429344(0x8c6)] = _0x492512[_0x429344(0x376)],
                            _0x492512[_0x429344(0x745)]({
                                'index': _0x46d491[_0x429344(0x8c6)],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium[_0x429344(0xa57)][_0x429344(0x2d5)],
                                'normalize': !0x1,
                                'offsetInBytes': 0x8 * Float32Array[_0x429344(0x739)],
                                'strideInBytes': _0x2e4f11,
                                'instanceDivisor': 0x1
                            }),
                            _0x46d491[_0x429344(0x4e3)] = _0x492512[_0x429344(0x376)],
                            _0x492512[_0x429344(0x745)]({
                                'index': _0x46d491[_0x429344(0x4e3)],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium[_0x429344(0xa57)][_0x429344(0x2d5)],
                                'normalize': !0x1,
                                'offsetInBytes': 0xc * Float32Array[_0x429344(0x739)],
                                'strideInBytes': _0x2e4f11,
                                'instanceDivisor': 0x1
                            }),
                            _0x46d491['uv6'] = _0x492512[_0x429344(0x376)],
                            _0x492512[_0x429344(0x745)]({
                                'index': _0x46d491[_0x429344(0x436)],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium[_0x429344(0xa57)][_0x429344(0x1e0)],
                                'normalize': !0x0,
                                'offsetInBytes': 0x10 * Float32Array[_0x429344(0x739)],
                                'strideInBytes': _0x2e4f11,
                                'instanceDivisor': 0x1
                            })) : 0x1d === _0x34ad32 && (_0x2e4f11 = 0x1d * Float32Array[_0x429344(0x739)],
                                _0x46d491[_0x429344(0x378)] = _0x492512[_0x429344(0x376)],
                                _0x492512['push']({
                                    'index': _0x46d491['uv1'],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x429344(0xa57)]['FLOAT'],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x0,
                                    'strideInBytes': _0x2e4f11,
                                    'instanceDivisor': 0x1,
                                    'byteLength': _0x51a549
                                }),
                                _0x46d491['uv2'] = _0x492512[_0x429344(0x376)],
                                _0x492512[_0x429344(0x745)]({
                                    'index': _0x46d491['uv2'],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x429344(0xa57)][_0x429344(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x4 * Float32Array[_0x429344(0x739)],
                                    'strideInBytes': _0x2e4f11,
                                    'instanceDivisor': 0x1
                                }),
                                _0x46d491[_0x429344(0x7a0)] = _0x492512[_0x429344(0x376)],
                                _0x492512['push']({
                                    'index': _0x46d491['uv3'],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium['ComponentDatatype']['FLOAT'],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x8 * Float32Array[_0x429344(0x739)],
                                    'strideInBytes': _0x2e4f11,
                                    'instanceDivisor': 0x1
                                }),
                                _0x46d491['uv4'] = _0x492512[_0x429344(0x376)],
                                _0x492512['push']({
                                    'index': _0x46d491[_0x429344(0x8c6)],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x429344(0xa57)][_0x429344(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0xc * Float32Array[_0x429344(0x739)],
                                    'strideInBytes': _0x2e4f11,
                                    'instanceDivisor': 0x1
                                }),
                                _0x46d491[_0x429344(0x3c9)] = _0x492512[_0x429344(0x376)],
                                _0x492512[_0x429344(0x745)]({
                                    'index': _0x46d491['uv5'],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x429344(0xa57)][_0x429344(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x10 * Float32Array[_0x429344(0x739)],
                                    'strideInBytes': _0x2e4f11,
                                    'instanceDivisor': 0x1
                                }),
                                _0x46d491[_0x429344(0x436)] = _0x492512[_0x429344(0x376)],
                                _0x492512[_0x429344(0x745)]({
                                    'index': _0x46d491[_0x429344(0x436)],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x429344(0xa57)][_0x429344(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x14 * Float32Array['BYTES_PER_ELEMENT'],
                                    'strideInBytes': _0x2e4f11,
                                    'instanceDivisor': 0x1
                                }),
                                _0x46d491['uv7'] = _0x492512['length'],
                                _0x492512['push']({
                                    'index': _0x46d491[_0x429344(0x7df)],
                                    'componentsPerAttribute': 0x3,
                                    'componentDatatype': Cesium[_0x429344(0xa57)][_0x429344(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x18 * Float32Array[_0x429344(0x739)],
                                    'strideInBytes': _0x2e4f11,
                                    'instanceDivisor': 0x1
                                }),
                                _0x46d491[_0x429344(0x4e3)] = _0x492512[_0x429344(0x376)],
                                _0x492512[_0x429344(0x745)]({
                                    'index': _0x46d491['secondary_colour'],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x429344(0xa57)]['UNSIGNED_BYTE'],
                                    'normalize': !0x0,
                                    'offsetInBytes': 0x1b * Float32Array[_0x429344(0x739)],
                                    'strideInBytes': _0x2e4f11,
                                    'instanceDivisor': 0x1
                                }),
                                _0x46d491[_0x429344(0xaa4)] = _0x492512[_0x429344(0x376)],
                                _0x492512[_0x429344(0x745)]({
                                    'index': _0x46d491[_0x429344(0xaa4)],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x429344(0xa57)]['UNSIGNED_BYTE'],
                                    'normalize': !0x0,
                                    'offsetInBytes': 0x1c * Float32Array[_0x429344(0x739)],
                                    'strideInBytes': _0x2e4f11,
                                    'instanceDivisor': 0x1
                                }));
                } else {
                    let _0x179b73 = _0x53b3c5 * _0x34ad32;
                    _0x2d68b6[_0x429344(0x197)] = new Float32Array(_0x179b73);
                    for (let _0x5bf3d0 = 0x0; _0x5bf3d0 < _0x179b73; _0x5bf3d0++)
                        _0x2d68b6[_0x429344(0x197)][_0x5bf3d0] = _0x2ffcb6['getFloat32'](_0x3c2e83 + _0x5bf3d0 * Float32Array[_0x429344(0x739)], !0x0);
                }
                _0x3c2e83 += _0x51a549;
            }
            return _0x3c2e83;
        }
        function _0x6a6079(_0xa7057c, _0xb875ad, _0x461121, _0x17ce78) {
            return _0x461121 = _0xf9b14(_0xa7057c, _0xb875ad, _0x461121 = _0x361253(_0xa7057c, _0xb875ad, _0x461121 = _0x36c3a7(_0xa7057c, _0xb875ad, _0x461121 = _0x29e75f(_0xa7057c, _0xb875ad, _0x461121 = _0x2b9f2e(_0xa7057c, _0xb875ad, _0x461121 = _0x224be0(_0xa7057c, _0xb875ad, _0x461121, _0x17ce78), _0x17ce78), _0x17ce78), _0x17ce78), _0x17ce78), _0x17ce78);
        }
        function _0x514bb8(_0x4d9833, _0xbf2509, _0x572ea3, _0x2b64d7) {
            const _0x465b1f = _0x324b8e;
            let _0x2207fc = _0xbf2509[_0x465b1f(0x69d)](_0x572ea3, !0x0);
            return _0x2b64d7[_0x465b1f(0xa19)] = _0x2207fc,
                _0x572ea3 += Uint32Array['BYTES_PER_ELEMENT'],
                _0x572ea3 = (_0x2207fc & _0x5983eb[_0x465b1f(0x649)]) === _0x5983eb[_0x465b1f(0x649)] ? function (_0x28d8aa, _0x53b1c1, _0x59212b, _0x1058d8) {
                    const _0x35c175 = _0x465b1f;
                    let _0x132ba5 = _0x53b1c1['getUint32'](_0x59212b, !0x0);
                    if (_0x1058d8[_0x35c175(0x7e4)] = _0x132ba5,
                        (_0x59212b += Uint32Array['BYTES_PER_ELEMENT']) <= 0x0)
                        return _0x59212b;
                    let _0x168104 = _0x53b1c1[_0x35c175(0x206)](_0x59212b, !0x0);
                    _0x59212b += Uint16Array[_0x35c175(0x739)];
                    let _0x1d0904 = _0x53b1c1[_0x35c175(0x206)](_0x59212b, !0x0);
                    _0x1d0904 = _0x168104 * Int16Array[_0x35c175(0x739)],
                        _0x59212b += Uint16Array[_0x35c175(0x739)];
                    let _0x223cb5 = _0x53b1c1[_0x35c175(0x486)](_0x59212b, !0x0);
                    _0x59212b += Float32Array[_0x35c175(0x739)];
                    let _0x18f85b = {};
                    _0x18f85b['x'] = _0x53b1c1['getFloat32'](_0x59212b, !0x0),
                        _0x59212b += Float32Array[_0x35c175(0x739)],
                        _0x18f85b['y'] = _0x53b1c1['getFloat32'](_0x59212b, !0x0),
                        _0x59212b += Float32Array[_0x35c175(0x739)],
                        _0x18f85b['z'] = _0x53b1c1['getFloat32'](_0x59212b, !0x0),
                        _0x59212b += Float32Array['BYTES_PER_ELEMENT'],
                        _0x18f85b['w'] = _0x53b1c1[_0x35c175(0x486)](_0x59212b, !0x0),
                        _0x59212b += Float32Array['BYTES_PER_ELEMENT'],
                        _0x1058d8[_0x35c175(0x5c4)] = _0x223cb5,
                        _0x1058d8[_0x35c175(0x83c)] = _0x18f85b;
                    let _0x1cc8ee = _0x132ba5 * _0x168104 * Int16Array[_0x35c175(0x739)]
                        , _0x4d33dd = new Uint8Array(_0x28d8aa, _0x59212b, _0x1cc8ee);
                    _0x59212b += _0x1cc8ee;
                    let _0x2a2bda = _0x1058d8[_0x35c175(0xaa9)]
                        , _0x334097 = _0x1058d8[_0x35c175(0xe2)];
                    return _0x334097[_0x35c175(0x833)] = _0x2a2bda[_0x35c175(0x376)],
                        _0x2a2bda[_0x35c175(0x745)]({
                            'index': _0x334097['aPosition'],
                            'typedArray': _0x4d33dd,
                            'componentsPerAttribute': _0x168104,
                            'componentDatatype': Cesium[_0x35c175(0xa57)]['SHORT'],
                            'offsetInBytes': 0x0,
                            'strideInBytes': _0x1d0904,
                            'normalize': !0x1
                        }),
                        _0x59212b;
                }(_0x4d9833, _0xbf2509, _0x572ea3, _0x2b64d7) : _0x224be0(_0x4d9833, _0xbf2509, _0x572ea3, _0x2b64d7),
                _0x572ea3 = (_0x2207fc & _0x5983eb['SVC_Normal']) === _0x5983eb[_0x465b1f(0x5e2)] ? function (_0x8a63d, _0x7a11f2, _0x262b76, _0x1d469b) {
                    const _0x430ad6 = _0x465b1f;
                    let _0x1472ae = _0x7a11f2[_0x430ad6(0x69d)](_0x262b76, !0x0);
                    if (_0x262b76 += Uint32Array[_0x430ad6(0x739)],
                        _0x1472ae <= 0x0)
                        return _0x262b76;
                    _0x7a11f2[_0x430ad6(0x206)](_0x262b76, !0x0),
                        _0x262b76 += Uint16Array[_0x430ad6(0x739)];
                    let _0x2730d7 = _0x7a11f2['getUint16'](_0x262b76, !0x0);
                    _0x262b76 += Uint16Array[_0x430ad6(0x739)];
                    let _0x267d03 = 0x2 * _0x1472ae * Int16Array[_0x430ad6(0x739)]
                        , _0x8b98cc = new Uint8Array(_0x8a63d, _0x262b76, _0x267d03);
                    _0x262b76 += _0x267d03;
                    let _0x50f48e = _0x1d469b[_0x430ad6(0xaa9)]
                        , _0x14cdf7 = _0x1d469b[_0x430ad6(0xe2)];
                    return _0x14cdf7[_0x430ad6(0xa77)] = _0x50f48e[_0x430ad6(0x376)],
                        _0x50f48e[_0x430ad6(0x745)]({
                            'index': _0x14cdf7[_0x430ad6(0xa77)],
                            'typedArray': _0x8b98cc,
                            'componentsPerAttribute': 0x2,
                            'componentDatatype': Cesium[_0x430ad6(0xa57)][_0x430ad6(0x37a)],
                            'offsetInBytes': 0x0,
                            'strideInBytes': _0x2730d7,
                            'normalize': !0x1
                        }),
                        _0x262b76;
                }(_0x4d9833, _0xbf2509, _0x572ea3, _0x2b64d7) : _0x2b9f2e(_0x4d9833, _0xbf2509, _0x572ea3, _0x2b64d7),
                _0x572ea3 = _0x36c3a7(_0x4d9833, _0xbf2509, _0x572ea3 = _0x29e75f(_0x4d9833, _0xbf2509, _0x572ea3, _0x2b64d7), _0x2b64d7),
                _0x572ea3 = (_0x2207fc & _0x5983eb['SVC_TexutreCoord']) === _0x5983eb[_0x465b1f(0x7e0)] ? function (_0x4126a4, _0x5eb5f9, _0x5a797d, _0x5aec7c) {
                    const _0x2b1294 = _0x465b1f;
                    _0x5aec7c[_0x2b1294(0xa44)] = [],
                        _0x5aec7c[_0x2b1294(0x80d)] = [];
                    let _0x32a92e = _0x5eb5f9[_0x2b1294(0x206)](_0x5a797d, !0x0);
                    _0x5a797d += Uint16Array[_0x2b1294(0x739)],
                        _0x5a797d += Uint16Array[_0x2b1294(0x739)];
                    for (let _0x518f0a = 0x0; _0x518f0a < _0x32a92e; _0x518f0a++) {
                        let _0x269413 = _0x5eb5f9[_0x2b1294(0x3b8)](_0x5a797d, !0x0);
                        _0x5a797d += Uint8Array['BYTES_PER_ELEMENT'],
                            _0x5a797d += 0x3 * Uint8Array[_0x2b1294(0x739)];
                        let _0x1d6043 = _0x5eb5f9['getUint32'](_0x5a797d, !0x0);
                        _0x5a797d += Uint32Array[_0x2b1294(0x739)];
                        let _0x2fe4f6 = _0x5eb5f9[_0x2b1294(0x206)](_0x5a797d, !0x0);
                        _0x5a797d += Uint16Array[_0x2b1294(0x739)],
                            _0x5eb5f9['getUint16'](_0x5a797d, !0x0),
                            _0x5a797d += Uint16Array[_0x2b1294(0x739)];
                        let _0x3d047e = _0x5eb5f9[_0x2b1294(0x486)](_0x5a797d, !0x0);
                        _0x5a797d += Float32Array[_0x2b1294(0x739)],
                            _0x5aec7c['texCoordCompressConstant'][_0x2b1294(0x745)](_0x3d047e);
                        let _0xe1a8dc = {};
                        _0xe1a8dc['x'] = _0x5eb5f9[_0x2b1294(0x486)](_0x5a797d, !0x0),
                            _0x5a797d += Float32Array[_0x2b1294(0x739)],
                            _0xe1a8dc['y'] = _0x5eb5f9[_0x2b1294(0x486)](_0x5a797d, !0x0),
                            _0x5a797d += Float32Array[_0x2b1294(0x739)],
                            _0xe1a8dc['z'] = _0x5eb5f9[_0x2b1294(0x486)](_0x5a797d, !0x0),
                            _0x5a797d += Float32Array[_0x2b1294(0x739)],
                            _0xe1a8dc['w'] = _0x5eb5f9[_0x2b1294(0x486)](_0x5a797d, !0x0),
                            _0x5a797d += Float32Array['BYTES_PER_ELEMENT'],
                            _0x5aec7c[_0x2b1294(0x80d)][_0x2b1294(0x745)](_0xe1a8dc);
                        let _0x4f053a = _0x1d6043 * _0x2fe4f6 * Int16Array[_0x2b1294(0x739)]
                            , _0x51f97a = new Uint8Array(_0x4126a4, _0x5a797d, _0x4f053a)
                            , _0xbf8095 = (_0x5a797d += _0x4f053a) % 0x4;
                        0x0 !== _0xbf8095 && (_0x5a797d += 0x4 - _0xbf8095);
                        let _0x4068e0 = _0x2b1294(0x5ae) + _0x518f0a
                            , _0x52142c = _0x5aec7c[_0x2b1294(0xaa9)]
                            , _0x3a6644 = _0x5aec7c[_0x2b1294(0xe2)];
                        if (_0x3a6644[_0x4068e0] = _0x52142c[_0x2b1294(0x376)],
                            _0x52142c[_0x2b1294(0x745)]({
                                'index': _0x3a6644[_0x4068e0],
                                'typedArray': _0x51f97a,
                                'componentsPerAttribute': _0x2fe4f6,
                                'componentDatatype': Cesium['ComponentDatatype']['SHORT'],
                                'offsetInBytes': 0x0,
                                'strideInBytes': _0x2fe4f6 * Int16Array[_0x2b1294(0x739)],
                                'normalize': !0x1
                            }),
                            _0x269413) {
                            _0x4f053a = _0x1d6043 * Float32Array[_0x2b1294(0x739)];
                            let _0x6289a3 = new Uint8Array(_0x4126a4, _0x5a797d, _0x4f053a);
                            _0x5a797d += _0x4f053a,
                                _0x5aec7c[_0x2b1294(0x12d)] = !0x0,
                                _0x4068e0 = _0x2b1294(0x879) + _0x518f0a,
                                _0x3a6644[_0x4068e0] = _0x52142c[_0x2b1294(0x376)],
                                _0x52142c[_0x2b1294(0x745)]({
                                    'index': _0x3a6644[_0x4068e0],
                                    'typedArray': _0x6289a3,
                                    'componentsPerAttribute': 0x1,
                                    'componentDatatype': Cesium[_0x2b1294(0xa57)][_0x2b1294(0x2d5)],
                                    'offsetInBytes': 0x0,
                                    'strideInBytes': Float32Array['BYTES_PER_ELEMENT'],
                                    'normalize': !0x1
                                });
                        }
                    }
                    return _0x5a797d;
                }(_0x4d9833, _0xbf2509, _0x572ea3, _0x2b64d7) : _0x361253(_0x4d9833, _0xbf2509, _0x572ea3, _0x2b64d7),
                (_0x2207fc & _0x5983eb[_0x465b1f(0x670)]) === _0x5983eb[_0x465b1f(0x670)] && (_0x2b64d7[_0x465b1f(0x599)] = !0x0),
                _0x572ea3 = _0xf9b14(_0x4d9833, _0xbf2509, _0x572ea3, _0x2b64d7);
        }
        function _0x20feac(_0x20b393, _0x514136, _0x5a23d1, _0x1a2814) {
            const _0x5757d2 = _0x324b8e;
            let _0xb8b20c = _0x514136['getUint32'](_0x5a23d1, !0x0);
            _0x5a23d1 += Uint32Array[_0x5757d2(0x739)];
            for (let _0x4f84ed = 0x0; _0x4f84ed < _0xb8b20c; _0x4f84ed++) {
                let _0x4ed99d = {}
                    , _0x215147 = _0x514136[_0x5757d2(0x69d)](_0x5a23d1, !0x0);
                _0x5a23d1 += Uint32Array['BYTES_PER_ELEMENT'];
                let _0x1eb9d0 = _0x514136[_0x5757d2(0x3b8)](_0x5a23d1, !0x0);
                _0x5a23d1 += Uint8Array[_0x5757d2(0x739)],
                    _0x514136[_0x5757d2(0x3b8)](_0x5a23d1, !0x0),
                    _0x5a23d1 += Uint8Array[_0x5757d2(0x739)];
                let _0x43e7a1 = _0x514136['getUint8'](_0x5a23d1, !0x0);
                if (_0x5a23d1 += Uint8Array[_0x5757d2(0x739)],
                    _0x5a23d1 += Uint8Array[_0x5757d2(0x739)],
                    _0x215147 > 0x0) {
                    let _0x94ac4a, _0x287702 = null;
                    0x1 === _0x1eb9d0 || 0x3 === _0x1eb9d0 ? (_0x94ac4a = _0x215147 * Uint32Array[_0x5757d2(0x739)],
                        _0x287702 = new Uint8Array(_0x20b393, _0x5a23d1, _0x94ac4a)) : (_0x94ac4a = _0x215147 * Uint16Array[_0x5757d2(0x739)],
                            _0x287702 = new Uint8Array(_0x20b393, _0x5a23d1, _0x94ac4a),
                            _0x215147 % 0x2 != 0x0 && (_0x94ac4a += 0x2)),
                        _0x4ed99d[_0x5757d2(0x725)] = _0x287702,
                        _0x5a23d1 += _0x94ac4a;
                }
                _0x4ed99d[_0x5757d2(0x944)] = _0x215147,
                    _0x4ed99d[_0x5757d2(0x6df)] = _0x1eb9d0,
                    _0x4ed99d[_0x5757d2(0x97f)] = _0x43e7a1;
                let _0x5ba207 = _0x514136[_0x5757d2(0x69d)](_0x5a23d1, !0x0);
                _0x5a23d1 += Uint32Array[_0x5757d2(0x739)];
                for (let _0x3fde18 = 0x0; _0x3fde18 < _0x5ba207; _0x3fde18++) {
                    let _0x1785c1 = _0x337c0(_0x20b393, _0x514136, _0x5a23d1)
                        , _0x1a0273 = _0x1785c1[_0x5757d2(0x937)];
                    _0x5a23d1 = _0x1785c1['bytesOffset'],
                        _0x4ed99d[_0x5757d2(0xabf)] = _0x1a0273;
                }
                0x0 !== _0x5a23d1 % 0x4 && (_0x5a23d1 += 0x4 - _0x5a23d1 % 0x4),
                    _0x1a2814['push'](_0x4ed99d);
            }
            return _0x5a23d1;
        }
        function _0x3fc7c2(_0x4e6bb8, _0x5dd7d9, _0x9af882) {
            const _0x4bb96c = _0x324b8e;
            let _0x4514f9 = _0x4e6bb8['vertexAttributes']
                , _0x5c4e43 = _0x4e6bb8['attrLocation']
                , _0x101a05 = _0x4514f9[_0x4bb96c(0x376)];
            _0x5c4e43[0x1 === _0x9af882 ? _0x4bb96c(0x6a7) : _0x4bb96c(0x762)] = _0x101a05,
                _0x4514f9['push']({
                    'index': _0x101a05,
                    'typedArray': _0x5dd7d9,
                    'componentsPerAttribute': 0x1,
                    'componentDatatype': Cesium['ComponentDatatype'][_0x4bb96c(0x2d5)],
                    'offsetInBytes': 0x0,
                    'strideInBytes': 0x0,
                    'instanceDivisor': _0x9af882
                });
        }
        new Cesium[(_0x324b8e(0x75c))](),
            _0x235026[_0x324b8e(0x470)] = function (_0x43a2f5) {
                const _0x49d52d = _0x324b8e;
                let _0x3b3d01 = 0x0
                    , _0xcb0b28 = {
                        'version': void 0x0,
                        'groupNode': void 0x0,
                        'geoPackage': {},
                        'matrials': void 0x0,
                        'texturePackage': {}
                    }
                    , _0x477363 = new DataView(_0x43a2f5);
                _0xcb0b28[_0x49d52d(0x5a6)] = _0x477363['getFloat32'](_0x3b3d01, !0x0),
                    _0x3b3d01 += Float32Array[_0x49d52d(0x739)],
                    _0xcb0b28['version'] >= 0x2 && (_0x477363[_0x49d52d(0x69d)](_0x3b3d01, !0x0),
                        _0x3b3d01 += Uint32Array[_0x49d52d(0x739)]),
                    _0x477363['getUint32'](_0x3b3d01, !0x0),
                    _0x3b3d01 += Uint32Array['BYTES_PER_ELEMENT'];
                let _0x4980be = function (_0x3c03cd, _0x59637d) {
                    const _0x1b233d = _0x49d52d;
                    let _0x31e22a = new Uint8Array(_0x3c03cd, _0x59637d);
                    return _0x35205d[_0x1b233d(0x613)](_0x31e22a)[_0x1b233d(0x38d)];
                }(_0x43a2f5, _0x3b3d01);
                _0x477363 = new DataView(_0x4980be),
                    _0x3b3d01 = 0x0;
                let _0x51b502 = _0x477363[_0x49d52d(0x69d)](_0x3b3d01, !0x0);
                return _0x3b3d01 += Uint32Array[_0x49d52d(0x739)],
                    _0x3b3d01 = function (_0x4f2ad9, _0xbb9398, _0x14e6dc, _0x5e5f6e) {
                        const _0xf53dd7 = _0x49d52d;
                        let _0x807c63 = {}
                            , _0x20f5d2 = [];
                        _0xbb9398[_0xf53dd7(0x69d)](_0x14e6dc, !0x0),
                            _0x14e6dc += Uint32Array[_0xf53dd7(0x739)];
                        let _0x121963 = _0xbb9398['getUint32'](_0x14e6dc, !0x0);
                        _0x14e6dc += Uint32Array['BYTES_PER_ELEMENT'];
                        for (let _0x24b452 = 0x0; _0x24b452 < _0x121963; _0x24b452++)
                            _0x14e6dc = _0xeb0d6(_0x4f2ad9, _0xbb9398, _0x14e6dc, _0x20f5d2);
                        _0x807c63[_0xf53dd7(0x9b7)] = _0x20f5d2;
                        let _0x2a59d6 = _0x14e6dc % 0x4;
                        return 0x0 !== _0x2a59d6 && (_0x14e6dc += 0x4 - _0x2a59d6),
                            _0x5e5f6e['groupNode'] = _0x807c63,
                            _0x14e6dc;
                    }(_0x4980be, _0x477363, _0x3b3d01, _0xcb0b28),
                    _0x3b3d01 = function (_0x1719dc, _0x18256f, _0x5b772a, _0x4750b5) {
                        const _0x2fd070 = _0x49d52d;
                        _0x18256f[_0x2fd070(0x69d)](_0x5b772a, !0x0),
                            _0x5b772a += Uint32Array[_0x2fd070(0x739)];
                        let _0x10f814 = _0x18256f[_0x2fd070(0x69d)](_0x5b772a, !0x0);
                        _0x5b772a += Uint32Array[_0x2fd070(0x739)];
                        for (let _0x2e5a85 = 0x0; _0x2e5a85 < _0x10f814; _0x2e5a85++) {
                            let _0x595c5c = _0x337c0(_0x1719dc, _0x18256f, _0x5b772a)
                                , _0x2bdede = _0x595c5c[_0x2fd070(0x937)];
                            _0x5b772a = _0x595c5c[_0x2fd070(0x827)];
                            let _0x50bf2f = _0x595c5c[_0x2fd070(0x376)] % 0x4;
                            0x0 !== _0x50bf2f && (_0x5b772a += 0x4 - _0x50bf2f);
                            let _0x4e415b = _0x18256f[_0x2fd070(0x69d)](_0x5b772a, !0x0);
                            _0x5b772a += Int32Array['BYTES_PER_ELEMENT'];
                            let _0x397dae = {
                                'vertexAttributes': [],
                                'attrLocation': {},
                                'instanceCount': 0x0,
                                'instanceMode': 0x0,
                                'instanceIndex': -0x1
                            };
                            _0x4e415b === _0x2f3463 ? _0x5b772a = _0x6a6079(_0x1719dc, _0x18256f, _0x5b772a, _0x397dae) : _0x4e415b === _0x41bbd9 && (_0x5b772a = _0x514bb8(_0x1719dc, _0x18256f, _0x5b772a, _0x397dae));
                            let _0x10d906, _0x34f014 = [];
                            _0x5b772a = _0x20feac(_0x1719dc, _0x18256f, _0x5b772a, _0x34f014),
                                0x2 === _0x34f014[_0x2fd070(0x376)] && 0xd === _0x34f014[0x1][_0x2fd070(0x97f)] && _0x34f014[0x1][_0x2fd070(0x944)] >= 0x3 && (_0x10d906 = _0x76a51a['createEdgeDataByIndices'](_0x397dae, _0x34f014[0x1])),
                                _0x4750b5[_0x2bdede] = {
                                    'vertexPackage': _0x397dae,
                                    'arrIndexPackage': _0x34f014,
                                    'edgeGeometry': _0x10d906
                                };
                        }
                        return _0x5b772a += _0x18256f[_0x2fd070(0x69d)](_0x5b772a, !0x0),
                            _0x5b772a + Uint32Array['BYTES_PER_ELEMENT'];
                    }(_0x4980be, _0x477363, _0x3b3d01, _0xcb0b28[_0x49d52d(0x306)]),
                    _0x3b3d01 = function (_0x2eb007, _0x50db0d, _0xcd735, _0x1b3093) {
                        const _0x709516 = _0x49d52d;
                        _0x50db0d[_0x709516(0x69d)](_0xcd735, !0x0),
                            _0xcd735 += Uint32Array[_0x709516(0x739)];
                        let _0x5ec883 = _0x50db0d[_0x709516(0x69d)](_0xcd735, !0x0);
                        _0xcd735 += Uint32Array['BYTES_PER_ELEMENT'];
                        for (let _0x2c6ada = 0x0; _0x2c6ada < _0x5ec883; _0x2c6ada++) {
                            let _0x58f41a = _0x337c0(_0x2eb007, _0x50db0d, _0xcd735)
                                , _0x22242e = _0x58f41a[_0x709516(0x937)];
                            _0xcd735 = _0x58f41a['bytesOffset'];
                            let _0x1c87b2 = _0x58f41a['length'] % 0x4;
                            0x0 !== _0x1c87b2 && (_0xcd735 += 0x4 - _0x1c87b2),
                                _0x50db0d[_0x709516(0x69d)](_0xcd735, !0x0),
                                _0xcd735 += Uint32Array[_0x709516(0x739)];
                            let _0x36f90d = _0x50db0d['getUint32'](_0xcd735, !0x0);
                            _0xcd735 += Uint32Array[_0x709516(0x739)];
                            let _0x3bba43 = _0x50db0d[_0x709516(0x69d)](_0xcd735, !0x0);
                            _0xcd735 += Uint32Array[_0x709516(0x739)];
                            let _0x58c86e = _0x50db0d[_0x709516(0x69d)](_0xcd735, !0x0);
                            _0xcd735 += Uint32Array[_0x709516(0x739)];
                            let _0x3250d0 = _0x50db0d[_0x709516(0x69d)](_0xcd735, !0x0);
                            _0xcd735 += Uint32Array[_0x709516(0x739)];
                            let _0x4b9cab = _0x50db0d[_0x709516(0x69d)](_0xcd735, !0x0);
                            _0xcd735 += Uint32Array[_0x709516(0x739)];
                            let _0x26c8d6 = new Uint8Array(_0x2eb007, _0xcd735, _0x3250d0);
                            _0xcd735 += _0x3250d0;
                            let _0x30da29 = _0x4b9cab === _0xbd1c5c['RGB'] || _0x4b9cab === _0xbd1c5c[_0x709516(0xa26)] ? Cesium[_0x709516(0x480)]['RGB_DXT1'] : Cesium['PixelFormat'][_0x709516(0x7f8)];
                            _0x1b3093[_0x22242e] = {
                                'id': _0x22242e,
                                'width': _0x36f90d,
                                'height': _0x3bba43,
                                'compressType': _0x58c86e,
                                'nFormat': _0x4b9cab,
                                'internalFormat': _0x30da29,
                                'arrayBufferView': _0x26c8d6
                            };
                        }
                        return _0xcd735;
                    }(_0x4980be, _0x477363, _0x3b3d01, _0xcb0b28[_0x49d52d(0x217)]),
                    _0x3b3d01 = function (_0x550176, _0xacf52f, _0x219ad2, _0x2fef8) {
                        const _0x181272 = _0x49d52d;
                        let _0x523282 = _0xacf52f[_0x181272(0x69d)](_0x219ad2, !0x0);
                        _0x219ad2 += Uint32Array[_0x181272(0x739)];
                        let _0x37b26a = new Uint8Array(_0x550176, _0x219ad2, _0x523282)
                            , _0x5d59a7 = Cesium[_0x181272(0x178)](_0x37b26a);
                        return _0x219ad2 += _0x523282,
                            _0x2fef8['materials'] = JSON[_0x181272(0x396)](_0x5d59a7),
                            _0x219ad2;
                    }(_0x4980be, _0x477363, _0x3b3d01, _0xcb0b28),
                    function (_0x50a844, _0x575e12, _0x19ae51, _0x43094a, _0x1d025b, _0x4c81bb) {
                        const _0x4df0ed = _0x49d52d;
                        if (0x1 == (0x1 & _0x43094a)) {
                            _0x575e12[_0x4df0ed(0x69d)](_0x19ae51, !0x0),
                                _0x19ae51 += Uint32Array[_0x4df0ed(0x739)];
                            let _0x26016c = _0x575e12[_0x4df0ed(0x69d)](_0x19ae51, !0x0);
                            _0x19ae51 += Uint32Array['BYTES_PER_ELEMENT'];
                            for (let _0x3c1bb7 = 0x0; _0x3c1bb7 < _0x26016c; _0x3c1bb7++) {
                                let _0x2845f7 = _0x337c0(_0x50a844, _0x575e12, _0x19ae51)
                                    , _0x5123e5 = _0x2845f7[_0x4df0ed(0x937)];
                                _0x19ae51 = _0x2845f7[_0x4df0ed(0x827)];
                                let _0x3092cd = _0x575e12[_0x4df0ed(0x69d)](_0x19ae51, !0x0);
                                _0x19ae51 += Uint32Array[_0x4df0ed(0x739)];
                                let _0x4584ab = {};
                                if (_0x1d025b[_0x5123e5]['pickInfo'] = _0x4584ab,
                                    -0x1 == _0x1d025b[_0x5123e5][_0x4df0ed(0x76b)][_0x4df0ed(0x7eb)]) {
                                    let _0x499e88 = new Float32Array(_0x1d025b[_0x5123e5][_0x4df0ed(0x76b)][_0x4df0ed(0x7e4)]);
                                    for (let _0xdb8861 = 0x0; _0xdb8861 < _0x3092cd; _0xdb8861++) {
                                        let _0x4eab76 = _0x575e12[_0x4df0ed(0x69d)](_0x19ae51, !0x0);
                                        _0x19ae51 += Uint32Array[_0x4df0ed(0x739)];
                                        let _0x1a21b6 = _0x575e12[_0x4df0ed(0x69d)](_0x19ae51, !0x0);
                                        _0x19ae51 += Uint32Array[_0x4df0ed(0x739)];
                                        let _0x5af92f = 0x0
                                            , _0xb31cb7 = 0x0;
                                        _0x4584ab[_0x4eab76] = {
                                            'batchId': _0xdb8861
                                        };
                                        for (let _0x11adc6 = 0x0; _0x11adc6 < _0x1a21b6; _0x11adc6++) {
                                            let _0xa98f16 = _0x575e12['getUint32'](_0x19ae51, !0x0);
                                            _0x19ae51 += Uint32Array[_0x4df0ed(0x739)];
                                            let _0x5c316b = _0x575e12['getUint32'](_0x19ae51, !0x0);
                                            _0x19ae51 += Uint32Array['BYTES_PER_ELEMENT'],
                                                _0x499e88[_0x4df0ed(0x4ac)](_0xdb8861, _0xa98f16, _0xa98f16 + _0x5c316b);
                                        }
                                        _0x4584ab[_0x4eab76][_0x4df0ed(0x9d5)] = _0xb31cb7,
                                            _0x4584ab[_0x4eab76][_0x4df0ed(0x188)] = _0x5af92f;
                                    }
                                    _0x3fc7c2(_0x1d025b[_0x5123e5][_0x4df0ed(0x76b)], _0x499e88, void 0x0);
                                } else {
                                    let _0x185d0e = _0x1d025b[_0x5123e5][_0x4df0ed(0x76b)][_0x4df0ed(0x332)];
                                    _0x1d025b[_0x5123e5][_0x4df0ed(0x76b)][_0x4df0ed(0x931)],
                                        _0x1d025b[_0x5123e5][_0x4df0ed(0x76b)]['instanceMode'];
                                    let _0x4658ba = new Float32Array(_0x185d0e)
                                        , _0x366a94 = 0x0;
                                    for (let _0x30bdab = 0x0; _0x30bdab < _0x3092cd; _0x30bdab++) {
                                        let _0x1e5e3e = _0x575e12[_0x4df0ed(0x69d)](_0x19ae51, !0x0);
                                        _0x19ae51 += Uint32Array[_0x4df0ed(0x739)];
                                        let _0x383955 = _0x575e12[_0x4df0ed(0x69d)](_0x19ae51, !0x0);
                                        _0x19ae51 += Uint32Array[_0x4df0ed(0x739)];
                                        for (let _0xbec343 = 0x0; _0xbec343 < _0x383955; _0xbec343++) {
                                            let _0x891e2d = _0x575e12['getUint32'](_0x19ae51, !0x0);
                                            _0x19ae51 += Uint32Array[_0x4df0ed(0x739)],
                                                _0x4658ba[_0x366a94] = _0x366a94,
                                                void 0x0 === _0x4584ab[_0x1e5e3e] && (_0x4584ab[_0x1e5e3e] = {
                                                    'vertexColorCount': 0x1,
                                                    'instanceIds': [],
                                                    'vertexColorOffset': _0x366a94
                                                }),
                                                _0x4584ab[_0x1e5e3e]['instanceIds'][_0x4df0ed(0x745)](_0x891e2d),
                                                _0x366a94++,
                                                0x3 === _0x4c81bb && (_0x575e12[_0x4df0ed(0x69d)](_0x19ae51, !0x0),
                                                    _0x19ae51 += Uint32Array['BYTES_PER_ELEMENT']);
                                        }
                                    }
                                    _0x3fc7c2(_0x1d025b[_0x5123e5][_0x4df0ed(0x76b)], _0x4658ba, 0x1);
                                }
                            }
                        }
                    }(_0x4980be, _0x477363, _0x3b3d01, _0x51b502, _0xcb0b28[_0x49d52d(0x306)], _0xcb0b28[_0x49d52d(0x5a6)]),
                    _0xcb0b28;
            }
            ;
        var _0x12f753 = Object[_0x324b8e(0x3e6)]({
            'Distance': 0x0,
            'Pixel': 0x1
        });
        function _0x11d182(_0x2d5352, _0x273b06, _0xbee777, _0x5f08cc) {
            const _0x5209c0 = _0x324b8e;
            let _0x444501 = _0xbee777[_0x5209c0(0x69d)](_0x5f08cc, !0x0);
            _0x5f08cc += Uint32Array[_0x5209c0(0x739)];
            let _0xd526d = 0x0
                , _0x40dacc = {}
                , _0x2aee9c = _0x40dacc['vertexAttributes'] = []
                , _0x3205d5 = _0x40dacc[_0x5209c0(0xe2)] = {};
            _0x40dacc[_0x5209c0(0x332)] = 0x0,
                _0x40dacc[_0x5209c0(0x313)] = 0x0;
            let _0x2111d0 = 0x0;
            _0xbee777[_0x5209c0(0x69d)](_0x5f08cc, !0x0),
                _0x5f08cc += Uint32Array[_0x5209c0(0x739)];
            let _0x12d394 = _0xbee777[_0x5209c0(0x206)](_0x5f08cc, !0x0);
            _0x5f08cc += Uint32Array['BYTES_PER_ELEMENT'];
            let _0x4884c5 = _0x12d394;
            _0x12d394 > 0x4 && (_0x4884c5 = _0x12d394 >> 0x8,
                _0x12d394 &= 0xf);
            let _0x5011b5 = _0xbee777['getUint32'](_0x5f08cc, !0x0);
            if (_0x5f08cc += Uint32Array[_0x5209c0(0x739)],
                _0x5011b5 > 0x0) {
                let _0x3e5021 = _0xbee777[_0x5209c0(0x206)](_0x5f08cc, !0x0);
                _0x3e5021 = _0x12d394 * Float32Array[_0x5209c0(0x739)],
                    _0x5f08cc += Uint32Array[_0x5209c0(0x739)],
                    _0xd526d = _0x5011b5 * _0x3e5021,
                    _0x3205d5[_0x5209c0(0x833)] = _0x2111d0,
                    _0x2aee9c[_0x5209c0(0x745)]({
                        'index': _0x3205d5[_0x5209c0(0x833)],
                        'typedArray': _0x273b06[_0x5209c0(0x75e)](_0x5f08cc, _0x5f08cc + _0xd526d),
                        'componentsPerAttribute': _0x12d394,
                        'componentDatatype': Cesium[_0x5209c0(0xa57)][_0x5209c0(0x2d5)],
                        'offsetInBytes': 0x0,
                        'strideInBytes': _0x3e5021,
                        'normalize': !0x1
                    }),
                    _0x2111d0++,
                    _0x5f08cc += _0xd526d;
            }
            let _0x26b07e = _0xbee777['getUint32'](_0x5f08cc, !0x0);
            if (_0x5f08cc += Uint32Array[_0x5209c0(0x739)],
                _0x26b07e > 0x0) {
                let _0x5ccf53 = _0xbee777[_0x5209c0(0x206)](_0x5f08cc, !0x0);
                _0x5ccf53 = _0x4884c5 * Float32Array['BYTES_PER_ELEMENT'],
                    _0x5f08cc += Uint32Array['BYTES_PER_ELEMENT'],
                    _0xd526d = _0x26b07e * _0x5ccf53,
                    _0x3205d5['aNormal'] = _0x2111d0,
                    _0x2aee9c[_0x5209c0(0x745)]({
                        'index': _0x3205d5[_0x5209c0(0xa77)],
                        'typedArray': _0x273b06[_0x5209c0(0x75e)](_0x5f08cc, _0x5f08cc + _0xd526d),
                        'componentsPerAttribute': _0x4884c5,
                        'componentDatatype': Cesium['ComponentDatatype'][_0x5209c0(0x2d5)],
                        'offsetInBytes': 0x0,
                        'strideInBytes': _0x5ccf53,
                        'normalize': !0x1
                    }),
                    _0x2111d0++,
                    _0x5f08cc += _0xd526d;
            }
            let _0x10b7d3 = _0xbee777[_0x5209c0(0x69d)](_0x5f08cc, !0x0);
            if (_0x5f08cc += Uint32Array[_0x5209c0(0x739)],
                _0x10b7d3 > 0x0) {
                let _0x262ef2 = new Uint8Array(0x4 * _0x10b7d3)
                    , _0x3a6762 = _0xbee777[_0x5209c0(0x69d)](_0x5f08cc, !0x0);
                _0x3a6762 = 0x4 * Float32Array['BYTES_PER_ELEMENT'],
                    _0x5f08cc += Uint32Array['BYTES_PER_ELEMENT'],
                    _0xd526d = _0x10b7d3 * _0x3a6762;
                let _0x22d109 = new Float32Array(_0x273b06[_0x5209c0(0x38d)], _0x5f08cc, 0x4 * _0x5011b5);
                for (let _0x414ae1 = 0x0; _0x414ae1 < _0x5011b5; _0x414ae1++)
                    _0x262ef2[0x4 * _0x414ae1] = 0xff * _0x22d109[0x4 * _0x414ae1],
                        _0x262ef2[0x4 * _0x414ae1 + 0x1] = 0xff * _0x22d109[0x4 * _0x414ae1 + 0x1],
                        _0x262ef2[0x4 * _0x414ae1 + 0x2] = 0xff * _0x22d109[0x4 * _0x414ae1 + 0x2],
                        _0x262ef2[0x4 * _0x414ae1 + 0x3] = 0xff * _0x22d109[0x4 * _0x414ae1 + 0x3];
                _0x5f08cc += _0xd526d,
                    _0x3205d5['aColor'] = _0x2111d0,
                    _0x2aee9c[_0x5209c0(0x745)]({
                        'index': _0x3205d5[_0x5209c0(0x262)],
                        'typedArray': _0x262ef2,
                        'componentsPerAttribute': 0x4,
                        'componentDatatype': Cesium[_0x5209c0(0xa57)]['UNSIGNED_BYTE'],
                        'offsetInBytes': 0x0,
                        'strideInBytes': 0x4,
                        'normalize': !0x0
                    }),
                    _0x2111d0++;
            }
            let _0x4dbfe1 = _0xbee777[_0x5209c0(0x69d)](_0x5f08cc, !0x0);
            _0x5f08cc += Uint32Array[_0x5209c0(0x739)],
                _0x4dbfe1 > 0x0 && (_0xd526d = 0x10 * _0x4dbfe1,
                    _0x5f08cc += _0xd526d);
            let _0x28c341 = _0xbee777[_0x5209c0(0x69d)](_0x5f08cc, !0x0);
            _0x5f08cc += Uint32Array[_0x5209c0(0x739)];
            let _0x2ee37d, _0x1fd58b, _0x5a3c7a = -0x1;
            for (let _0x5f804f = 0x0; _0x5f804f < _0x28c341; _0x5f804f++) {
                _0x2ee37d = _0xbee777[_0x5209c0(0x69d)](_0x5f08cc, !0x0),
                    _0x5f08cc += Uint32Array[_0x5209c0(0x739)],
                    _0x1fd58b = _0xbee777[_0x5209c0(0x206)](_0x5f08cc, !0x0),
                    _0x5f08cc += Uint16Array[_0x5209c0(0x739)],
                    _0xbee777[_0x5209c0(0x206)](_0x5f08cc, !0x0),
                    _0x5f08cc += Uint16Array[_0x5209c0(0x739)],
                    _0xd526d = _0x2ee37d * _0x1fd58b * Float32Array[_0x5209c0(0x739)];
                let _0x1b2e53 = _0x273b06['subarray'](_0x5f08cc, _0x5f08cc + _0xd526d);
                if (-0x1 !== _0x5a3c7a || 0x14 !== _0x1fd58b && 0x23 !== _0x1fd58b) {
                    if (-0x1 !== _0x5a3c7a)
                        _0x40dacc[_0x5209c0(0x197)] = new Float32Array(_0x273b06[_0x5209c0(0x38d)], _0x5f08cc, _0x2ee37d * _0x1fd58b);
                    else {
                        let _0x51f4d6 = _0x5209c0(0x5ae) + _0x5f804f;
                        _0x3205d5[_0x51f4d6] = _0x2111d0++,
                            _0x2aee9c['push']({
                                'index': _0x3205d5[_0x51f4d6],
                                'typedArray': _0x1b2e53,
                                'componentsPerAttribute': _0x1fd58b,
                                'componentDatatype': Cesium[_0x5209c0(0xa57)][_0x5209c0(0x2d5)],
                                'offsetInBytes': 0x0,
                                'strideInBytes': _0x1fd58b * Float32Array[_0x5209c0(0x739)],
                                'normalize': !0x1
                            });
                    }
                } else {
                    let _0x3c681e;
                    _0x5a3c7a = _0x5f804f,
                        _0x40dacc[_0x5209c0(0x332)] = _0x2ee37d,
                        _0x40dacc[_0x5209c0(0x313)] = _0x1fd58b,
                        _0x40dacc[_0x5209c0(0x931)] = _0x1b2e53,
                        0x14 === _0x1fd58b ? (_0x3c681e = 0x14 * Float32Array[_0x5209c0(0x739)],
                            _0x3205d5[_0x5209c0(0x181)] = _0x2111d0++,
                            _0x2aee9c[_0x5209c0(0x745)]({
                                'index': _0x3205d5['uv2'],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium[_0x5209c0(0xa57)][_0x5209c0(0x2d5)],
                                'normalize': !0x1,
                                'offsetInBytes': 0x0,
                                'strideInBytes': _0x3c681e,
                                'instanceDivisor': 0x1
                            }),
                            _0x3205d5[_0x5209c0(0x7a0)] = _0x2111d0++,
                            _0x2aee9c[_0x5209c0(0x745)]({
                                'index': _0x3205d5[_0x5209c0(0x7a0)],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium[_0x5209c0(0xa57)][_0x5209c0(0x2d5)],
                                'normalize': !0x1,
                                'offsetInBytes': 0x4 * Float32Array[_0x5209c0(0x739)],
                                'strideInBytes': _0x3c681e,
                                'instanceDivisor': 0x1
                            }),
                            _0x3205d5[_0x5209c0(0x8c6)] = _0x2111d0++,
                            _0x2aee9c[_0x5209c0(0x745)]({
                                'index': _0x3205d5[_0x5209c0(0x8c6)],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium[_0x5209c0(0xa57)][_0x5209c0(0x2d5)],
                                'normalize': !0x1,
                                'offsetInBytes': 0x8 * Float32Array['BYTES_PER_ELEMENT'],
                                'strideInBytes': _0x3c681e,
                                'instanceDivisor': 0x1
                            }),
                            _0x3205d5['secondary_colour'] = _0x2111d0++,
                            _0x2aee9c['push']({
                                'index': _0x3205d5[_0x5209c0(0x4e3)],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium[_0x5209c0(0xa57)]['FLOAT'],
                                'normalize': !0x1,
                                'offsetInBytes': 0xc * Float32Array[_0x5209c0(0x739)],
                                'strideInBytes': _0x3c681e,
                                'instanceDivisor': 0x1
                            }),
                            _0x3205d5[_0x5209c0(0x436)] = _0x2111d0++,
                            _0x2aee9c['push']({
                                'index': _0x3205d5[_0x5209c0(0x436)],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium['ComponentDatatype'][_0x5209c0(0x2d5)],
                                'normalize': !0x1,
                                'offsetInBytes': 0x10 * Float32Array[_0x5209c0(0x739)],
                                'strideInBytes': _0x3c681e,
                                'instanceDivisor': 0x1
                            })) : 0x23 === _0x1fd58b && (_0x3c681e = 0x23 * Float32Array[_0x5209c0(0x739)],
                                _0x3205d5[_0x5209c0(0x378)] = _0x2111d0++,
                                _0x2aee9c[_0x5209c0(0x745)]({
                                    'index': _0x3205d5[_0x5209c0(0x378)],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium['ComponentDatatype'][_0x5209c0(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x0,
                                    'strideInBytes': _0x3c681e,
                                    'instanceDivisor': 0x1,
                                    'byteLength': _0xd526d
                                }),
                                _0x3205d5[_0x5209c0(0x181)] = _0x2111d0++,
                                _0x2aee9c[_0x5209c0(0x745)]({
                                    'index': _0x3205d5['uv2'],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x5209c0(0xa57)][_0x5209c0(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x4 * Float32Array['BYTES_PER_ELEMENT'],
                                    'strideInBytes': _0x3c681e,
                                    'instanceDivisor': 0x1
                                }),
                                _0x3205d5[_0x5209c0(0x7a0)] = _0x2111d0++,
                                _0x2aee9c[_0x5209c0(0x745)]({
                                    'index': _0x3205d5['uv3'],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x5209c0(0xa57)][_0x5209c0(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x8 * Float32Array['BYTES_PER_ELEMENT'],
                                    'strideInBytes': _0x3c681e,
                                    'instanceDivisor': 0x1
                                }),
                                _0x3205d5['uv4'] = _0x2111d0++,
                                _0x2aee9c[_0x5209c0(0x745)]({
                                    'index': _0x3205d5[_0x5209c0(0x8c6)],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x5209c0(0xa57)][_0x5209c0(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0xc * Float32Array[_0x5209c0(0x739)],
                                    'strideInBytes': _0x3c681e,
                                    'instanceDivisor': 0x1
                                }),
                                _0x3205d5[_0x5209c0(0x3c9)] = _0x2111d0++,
                                _0x2aee9c[_0x5209c0(0x745)]({
                                    'index': _0x3205d5['uv5'],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium['ComponentDatatype']['FLOAT'],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x10 * Float32Array[_0x5209c0(0x739)],
                                    'strideInBytes': _0x3c681e,
                                    'instanceDivisor': 0x1
                                }),
                                _0x3205d5[_0x5209c0(0x436)] = _0x2111d0++,
                                _0x2aee9c[_0x5209c0(0x745)]({
                                    'index': _0x3205d5[_0x5209c0(0x436)],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x5209c0(0xa57)][_0x5209c0(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x14 * Float32Array['BYTES_PER_ELEMENT'],
                                    'strideInBytes': _0x3c681e,
                                    'instanceDivisor': 0x1
                                }),
                                _0x3205d5[_0x5209c0(0x7df)] = _0x2111d0++,
                                _0x2aee9c['push']({
                                    'index': _0x3205d5[_0x5209c0(0x7df)],
                                    'componentsPerAttribute': 0x3,
                                    'componentDatatype': Cesium[_0x5209c0(0xa57)][_0x5209c0(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x18 * Float32Array[_0x5209c0(0x739)],
                                    'strideInBytes': _0x3c681e,
                                    'instanceDivisor': 0x1
                                }),
                                _0x3205d5[_0x5209c0(0x4e3)] = _0x2111d0++,
                                _0x2aee9c[_0x5209c0(0x745)]({
                                    'index': _0x3205d5[_0x5209c0(0x4e3)],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium['ComponentDatatype'][_0x5209c0(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x1b * Float32Array[_0x5209c0(0x739)],
                                    'strideInBytes': _0x3c681e,
                                    'instanceDivisor': 0x1
                                }),
                                _0x3205d5[_0x5209c0(0xaa4)] = _0x2111d0++,
                                _0x2aee9c[_0x5209c0(0x745)]({
                                    'index': _0x3205d5['uv9'],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x5209c0(0xa57)]['FLOAT'],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x1f * Float32Array['BYTES_PER_ELEMENT'],
                                    'strideInBytes': _0x3c681e,
                                    'instanceDivisor': 0x1
                                }));
                }
                _0x5f08cc += _0xd526d;
            }
            _0x40dacc[_0x5209c0(0x7e4)] = _0x5011b5,
                _0x40dacc[_0x5209c0(0x7eb)] = _0x5a3c7a;
            let _0x509617 = _0xbee777[_0x5209c0(0x69d)](_0x5f08cc, !0x0);
            _0x5f08cc += Uint32Array['BYTES_PER_ELEMENT'];
            let _0x20a33a = [];
            for (let _0x3588ed = 0x0; _0x3588ed < _0x509617; _0x3588ed++) {
                let _0x1ebc86 = {}
                    , _0x282327 = _0xbee777[_0x5209c0(0x69d)](_0x5f08cc, !0x0);
                _0x5f08cc += Uint32Array[_0x5209c0(0x739)];
                let _0xe586a8 = _0xbee777[_0x5209c0(0x3b8)](_0x5f08cc, !0x0);
                _0x5f08cc += Uint8Array[_0x5209c0(0x739)],
                    _0xbee777[_0x5209c0(0x3b8)](_0x5f08cc, !0x0),
                    _0x5f08cc += Uint8Array['BYTES_PER_ELEMENT'];
                let _0x4b0601 = _0xbee777['getUint8'](_0x5f08cc, !0x0);
                _0x5f08cc += Uint8Array[_0x5209c0(0x739)],
                    _0x5f08cc += 0x1,
                    _0x1ebc86[_0x5209c0(0x944)] = _0x282327,
                    _0x1ebc86[_0x5209c0(0x6df)] = _0xe586a8,
                    _0x1ebc86[_0x5209c0(0x97f)] = _0x4b0601;
                let _0x124a37 = _0x5f08cc;
                _0x282327 > 0x0 && (0x0 === _0xe586a8 ? (_0xd526d = _0x282327 * Uint16Array['BYTES_PER_ELEMENT'],
                    _0x5f08cc += _0xd526d,
                    _0x282327 % 0x2 == 0x1 && (_0x5f08cc += 0x2)) : (_0xd526d = 0x4 * _0x282327,
                        _0x5f08cc += _0xd526d)),
                    _0x1ebc86[_0x5209c0(0x725)] = _0x273b06[_0x5209c0(0x75e)](_0x124a37, _0x124a37 + _0xd526d);
                let _0x51ecaf = _0xbee777[_0x5209c0(0x69d)](_0x5f08cc, !0x0);
                _0x5f08cc += Uint32Array[_0x5209c0(0x739)];
                let _0x1df87d = _0xbee777['getUint32'](_0x5f08cc, !0x0);
                _0x5f08cc += Uint32Array[_0x5209c0(0x739)] * _0x51ecaf,
                    _0x1ebc86[_0x5209c0(0xabf)] = _0x1df87d,
                    _0x20a33a[_0x5209c0(0x745)](_0x1ebc86);
            }
            return _0x2d5352[_0x444501] = {
                'vertexPackage': _0x40dacc,
                'arrIndexPackage': _0x20a33a
            },
                _0x5f08cc;
        }
        function _0x567f5(_0x3f1742, _0x1b025d, _0x36f325) {
            const _0x9c4dbd = _0x324b8e;
            let _0x45f43b = _0x3f1742['vertexAttributes']
                , _0x3c9a22 = _0x3f1742[_0x9c4dbd(0xe2)]
                , _0x7688a8 = _0x45f43b['length'];
            _0x3c9a22[0x1 === _0x36f325 ? _0x9c4dbd(0x6a7) : _0x9c4dbd(0x762)] = _0x7688a8,
                _0x45f43b[_0x9c4dbd(0x745)]({
                    'index': _0x7688a8,
                    'typedArray': _0x1b025d,
                    'componentsPerAttribute': 0x1,
                    'componentDatatype': Cesium[_0x9c4dbd(0xa57)][_0x9c4dbd(0x2d5)],
                    'offsetInBytes': 0x0,
                    'strideInBytes': 0x0,
                    'instanceDivisor': _0x36f325
                });
        }
        function _0x2ec6cd() { }
        function _0x4d28e() { }
        _0x2ec6cd[_0x324b8e(0x470)] = function (_0x130211) {
            const _0x14ddaa = _0x324b8e;
            let _0x50768e = 0x0
                , _0xdc8e5a = {
                    'groupNode': {},
                    'geoPackage': {},
                    'materials': {},
                    'texturePackage': {}
                }
                , _0xf24b66 = new Uint8Array(_0x130211, 0x0, 0x4);
            if (0x73 !== _0xf24b66[0x0] || 0x33 !== _0xf24b66[0x1] || 0x6d !== _0xf24b66[0x2])
                return {
                    'result': !0x1
                };
            _0xf24b66[0x3],
                _0x50768e += 0x4;
            let _0x36bba1 = function (_0x36ca6f, _0x11f670) {
                const _0x22ba8e = _0x557c;
                let _0x4f1186 = new Uint8Array(_0x36ca6f, _0x11f670);
                return _0x35205d[_0x22ba8e(0x613)](_0x4f1186)['buffer'];
            }(_0x130211, _0x50768e)
                , _0x1f7afc = new Uint8Array(_0x36bba1)
                , _0x25122a = new DataView(_0x36bba1);
            _0x50768e = 0x0;
            let _0x360cb1 = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0);
            _0x50768e += Uint32Array[_0x14ddaa(0x739)];
            let _0x5b4b27 = new Uint8Array(_0x36bba1, _0x50768e, _0x360cb1)
                , _0x11854f = _0x360cb1 % 0x4;
            _0x11854f && (_0x11854f = 0x4 - _0x11854f),
                _0x50768e += _0x360cb1 + _0x11854f,
                function (_0x3a8fc1, _0x110fb6, _0x58acb6) {
                    const _0x53a5ef = _0x14ddaa;
                    let _0x392bf1 = _0x5aff14[_0x53a5ef(0x6a1)](_0x3a8fc1)['firstChild']
                        , _0x4ff340 = _0x392bf1[_0x53a5ef(0x1f1)];
                    _0x58acb6[_0x53a5ef(0x932)] = [];
                    let _0x2e32f2 = _0x5aff14[_0x53a5ef(0x2fd)](_0x392bf1, 'Material3Ds', _0x4ff340)
                        , _0x58a9cc = _0x5aff14['queryChildNodes'](_0x2e32f2, _0x53a5ef(0x932), _0x4ff340);
                    for (let _0x4fa07d = 0x0, _0x1f2efd = _0x58a9cc[_0x53a5ef(0x376)]; _0x4fa07d < _0x1f2efd; _0x4fa07d++) {
                        let _0x1ee62a = {}
                            , _0x956a30 = _0x58a9cc[_0x4fa07d];
                        _0x1ee62a['id'] = _0x5aff14[_0x53a5ef(0x1cf)](_0x956a30, _0x53a5ef(0x770), _0x4ff340);
                        let _0x12af0f = _0x5aff14[_0x53a5ef(0x2fd)](_0x956a30, _0x53a5ef(0xf5), _0x4ff340)
                            , _0xdbf878 = Cesium[_0x53a5ef(0x225)](_0x5aff14['queryNumericValue'](_0x12af0f, _0x53a5ef(0x9d2), _0x4ff340), 0x1)
                            , _0x1759e3 = Cesium[_0x53a5ef(0x225)](_0x5aff14['queryNumericValue'](_0x12af0f, _0x53a5ef(0x544), _0x4ff340), 0x1)
                            , _0x3672c7 = Cesium[_0x53a5ef(0x225)](_0x5aff14['queryNumericValue'](_0x12af0f, 'AmbientB', _0x4ff340), 0x1)
                            , _0x3604f1 = Cesium[_0x53a5ef(0x225)](_0x5aff14[_0x53a5ef(0x9c7)](_0x12af0f, _0x53a5ef(0x4dc), _0x4ff340), 0x1);
                        _0x1ee62a[_0x53a5ef(0x191)] = {
                            'r': _0xdbf878,
                            'g': _0x1759e3,
                            'b': _0x3672c7,
                            'a': _0x3604f1
                        };
                        let _0xa822b9 = _0x5aff14[_0x53a5ef(0x2fd)](_0x956a30, _0x53a5ef(0x95a), _0x4ff340);
                        _0xdbf878 = Cesium['defaultValue'](_0x5aff14['queryNumericValue'](_0xa822b9, _0x53a5ef(0x4ba), _0x4ff340), 0x1),
                            _0x1759e3 = Cesium[_0x53a5ef(0x225)](_0x5aff14['queryNumericValue'](_0xa822b9, _0x53a5ef(0x964), _0x4ff340), 0x1),
                            _0x3672c7 = Cesium[_0x53a5ef(0x225)](_0x5aff14[_0x53a5ef(0x9c7)](_0xa822b9, _0x53a5ef(0x2ec), _0x4ff340), 0x1),
                            _0x3604f1 = Cesium[_0x53a5ef(0x225)](_0x5aff14[_0x53a5ef(0x9c7)](_0xa822b9, _0x53a5ef(0x679), _0x4ff340), 0x1),
                            _0x1ee62a[_0x53a5ef(0x111)] = {
                                'r': _0xdbf878,
                                'g': _0x1759e3,
                                'b': _0x3672c7,
                                'a': _0x3604f1
                            };
                        let _0x1aadfd = _0x5aff14[_0x53a5ef(0x2fd)](_0x956a30, _0x53a5ef(0x585), _0x4ff340);
                        _0xdbf878 = Cesium[_0x53a5ef(0x225)](_0x5aff14['queryNumericValue'](_0x1aadfd, _0x53a5ef(0x3f8), _0x4ff340), 0x0),
                            _0x1759e3 = Cesium[_0x53a5ef(0x225)](_0x5aff14[_0x53a5ef(0x9c7)](_0x1aadfd, _0x53a5ef(0x7ec), _0x4ff340), 0x0),
                            _0x3672c7 = Cesium[_0x53a5ef(0x225)](_0x5aff14[_0x53a5ef(0x9c7)](_0x1aadfd, 'SpecularB', _0x4ff340), 0x0),
                            _0x3604f1 = Cesium[_0x53a5ef(0x225)](_0x5aff14[_0x53a5ef(0x9c7)](_0x1aadfd, 'SpecularA', _0x4ff340), 0x0),
                            _0x1ee62a[_0x53a5ef(0x5aa)] = {
                                'r': _0xdbf878,
                                'g': _0x1759e3,
                                'b': _0x3672c7,
                                'a': _0x3604f1
                            },
                            _0x1ee62a[_0x53a5ef(0x8ae)] = _0x5aff14[_0x53a5ef(0x9c7)](_0x956a30, _0x53a5ef(0x2b9), _0x4ff340),
                            _0x1ee62a[_0x53a5ef(0x40c)] = _0x5aff14[_0x53a5ef(0xaad)](_0x956a30, _0x53a5ef(0x34d), _0x4ff340),
                            _0x1ee62a[_0x53a5ef(0x3fb)] = [];
                        let _0x27f309 = _0x5aff14[_0x53a5ef(0x5c6)](_0x956a30, _0x53a5ef(0x6ba), _0x4ff340);
                        for (let _0x59f9ec = 0x0; _0x59f9ec < _0x27f309[_0x53a5ef(0x376)]; _0x59f9ec++) {
                            let _0x2a3bed = {}
                                , _0x5b435e = _0x27f309[_0x59f9ec]
                                , _0x107a7b = _0x5aff14['queryStringValue'](_0x5b435e, _0x53a5ef(0x770), _0x4ff340);
                            _0x5aff14[_0x53a5ef(0x1cf)](_0x5b435e, _0x53a5ef(0x317), _0x4ff340);
                            let _0x4231c1 = _0x5aff14['queryFirstNode'](_0x5b435e, _0x53a5ef(0x37d), _0x4ff340)
                                , _0x209471 = 'TAM_WRAP' === _0x5aff14[_0x53a5ef(0x1cf)](_0x4231c1, 'u', _0x4ff340) ? 0x0 : 0x1
                                , _0xd64c38 = _0x53a5ef(0x82c) === _0x5aff14['queryStringValue'](_0x4231c1, 'v', _0x4ff340) ? 0x0 : 0x1
                                , _0x4b3678 = _0x5aff14[_0x53a5ef(0x1cf)](_0x5b435e, 'TexModMatrix', _0x4ff340)[_0x53a5ef(0x89c)](',')
                                , _0x3d331e = 0x10;
                            for (; _0x3d331e--;)
                                _0x4b3678[_0x3d331e] = parseFloat(_0x4b3678[_0x3d331e]);
                            _0x2a3bed[_0x53a5ef(0x7b1)] = {
                                'u': _0x209471,
                                'v': _0xd64c38,
                                'w': 0x0
                            },
                                _0x2a3bed[_0x53a5ef(0x207)] = 0x20202020,
                                _0x2a3bed[_0x53a5ef(0x6de)] = 0x2,
                                _0x2a3bed['filtermin'] = 0x2,
                                _0x2a3bed['id'] = _0x107a7b,
                                _0x2a3bed[_0x53a5ef(0x587)] = _0x4b3678,
                                _0x2a3bed[_0x53a5ef(0xa62)] = '',
                                _0x1ee62a['textureunitstates'][_0x53a5ef(0x745)]({
                                    'textureunitstate': _0x2a3bed
                                });
                        }
                        _0x58acb6[_0x53a5ef(0x932)][_0x53a5ef(0x745)]({
                            'material': _0x1ee62a
                        });
                    }
                    let _0x47d04d = _0x5aff14[_0x53a5ef(0x2fd)](_0x392bf1, _0x53a5ef(0x9f6), _0x4ff340)
                        , _0x6d8581 = _0x5aff14[_0x53a5ef(0x5c6)](_0x47d04d, _0x53a5ef(0xa47), _0x4ff340);
                    if (_0x110fb6['pageLods'] = [],
                        _0x6d8581[_0x53a5ef(0x376)] > 0x0)
                        for (let _0x3d8fd0 = 0x0, _0x3c6571 = _0x6d8581[_0x53a5ef(0x376)]; _0x3d8fd0 < _0x3c6571; _0x3d8fd0++) {
                            let _0x2f5a3c = _0x6d8581[_0x3d8fd0]
                                , _0x1fa6c2 = _0x5aff14[_0x53a5ef(0x1cf)](_0x2f5a3c, _0x53a5ef(0x542), _0x4ff340);
                            _0x1fa6c2 = _0x1fa6c2 ? _0x1fa6c2[_0x53a5ef(0x3ed)](/.osgb$/, _0x53a5ef(0x8eb)) : '';
                            let _0x34d380 = _0x5aff14['queryStringValue'](_0x2f5a3c, _0x53a5ef(0x965), _0x4ff340)
                                , _0x19716b = _0x5aff14[_0x53a5ef(0x9c7)](_0x2f5a3c, 'RangeList', _0x4ff340)
                                , _0x13e184 = _0x5aff14[_0x53a5ef(0x2fd)](_0x2f5a3c, _0x53a5ef(0xa4a), _0x4ff340)
                                , _0x3f10d0 = {
                                    'boundingSphere': {
                                        'center': {
                                            'x': _0x5aff14[_0x53a5ef(0x9c7)](_0x13e184, 'x', _0x4ff340),
                                            'y': _0x5aff14[_0x53a5ef(0x9c7)](_0x13e184, 'y', _0x4ff340),
                                            'z': _0x5aff14[_0x53a5ef(0x9c7)](_0x13e184, 'z', _0x4ff340)
                                        },
                                        'radius': _0x5aff14[_0x53a5ef(0x9c7)](_0x13e184, _0x53a5ef(0x1cc), _0x4ff340)
                                    },
                                    'childTile': _0x1fa6c2,
                                    'geodes': [],
                                    'rangeList': _0x19716b,
                                    'rangeMode': 'DISTANCE_FROM_EYE_POINT' === _0x34d380 ? _0x12f753[_0x53a5ef(0x5c7)] : _0x12f753[_0x53a5ef(0x2af)]
                                };
                            _0x3f10d0[_0x53a5ef(0x442)] = [];
                            let _0x434ef1 = _0x5aff14['queryChildNodes'](_0x2f5a3c, _0x53a5ef(0xaa3), _0x4ff340);
                            for (let _0x3843ed = 0x0; _0x3843ed < _0x434ef1[_0x53a5ef(0x376)]; _0x3843ed++) {
                                let _0x2c8222 = {}
                                    , _0x2e1a37 = _0x434ef1[_0x3843ed]
                                    , _0x4946ee = _0x5aff14[_0x53a5ef(0x1cf)](_0x2e1a37, _0x53a5ef(0x65d), _0x4ff340)[_0x53a5ef(0x89c)](',');
                                for (let _0x94eb08 = 0x0; _0x94eb08 < 0x10; _0x94eb08++)
                                    _0x4946ee[_0x94eb08] = parseFloat(_0x4946ee[_0x94eb08]);
                                _0x2c8222['matrix'] = _0x4946ee;
                                let _0x18a45a = _0x5aff14[_0x53a5ef(0x5c6)](_0x2e1a37, _0x53a5ef(0x24a));
                                _0x2c8222[_0x53a5ef(0x1ca)] = [];
                                for (let _0x4db79e = 0x0; _0x4db79e < _0x18a45a[_0x53a5ef(0x376)]; _0x4db79e++) {
                                    let _0x446a45 = _0x18a45a[_0x4db79e][_0x53a5ef(0x133)]['trim']();
                                    _0x2c8222[_0x53a5ef(0x1ca)]['push'](_0x446a45);
                                }
                                _0x3f10d0[_0x53a5ef(0x442)][_0x53a5ef(0x745)](_0x2c8222);
                            }
                            _0x110fb6[_0x53a5ef(0x9b7)][_0x53a5ef(0x745)](_0x3f10d0);
                        }
                    else {
                        let _0x2909c2 = _0x5aff14['queryChildNodes'](_0x47d04d, 'Geode', _0x4ff340);
                        if (_0x2909c2['length'] > 0x0) {
                            let _0x444a87 = {
                                'boundingSphere': {
                                    'center': {
                                        'x': 0x0,
                                        'y': 0x0,
                                        'z': 0x0
                                    },
                                    'radius': 0x615299
                                },
                                'childTile': '',
                                'geodes': [],
                                'rangeList': 0x0,
                                'rangeMode': _0x12f753[_0x53a5ef(0x2af)]
                            };
                            for (let _0x5d9be1 = 0x0, _0x4d2f0e = _0x2909c2['length']; _0x5d9be1 < _0x4d2f0e; _0x5d9be1++) {
                                let _0x34a67c = {}
                                    , _0x35de2a = _0x2909c2[_0x5d9be1]
                                    , _0x326a42 = _0x5aff14[_0x53a5ef(0x1cf)](_0x35de2a, _0x53a5ef(0x65d), _0x4ff340)[_0x53a5ef(0x89c)](',');
                                for (let _0x131a90 = 0x0; _0x131a90 < 0x10; _0x131a90++)
                                    _0x326a42[_0x131a90] = parseFloat(_0x326a42[_0x131a90]);
                                _0x34a67c['matrix'] = _0x326a42;
                                let _0x13d347 = _0x5aff14[_0x53a5ef(0x5c6)](_0x35de2a, 'GeoName', _0x4ff340);
                                _0x34a67c[_0x53a5ef(0x1ca)] = [];
                                for (let _0x371f24 = 0x0; _0x371f24 < _0x13d347['length']; _0x371f24++) {
                                    let _0x3921e8 = _0x13d347[_0x371f24][_0x53a5ef(0x133)]['trim']();
                                    _0x34a67c['skeletonNames'][_0x53a5ef(0x745)](_0x3921e8);
                                }
                                _0x444a87[_0x53a5ef(0x442)][_0x53a5ef(0x745)](_0x34a67c);
                            }
                            _0x110fb6[_0x53a5ef(0x9b7)][_0x53a5ef(0x745)](_0x444a87);
                        }
                    }
                }(Cesium[_0x14ddaa(0x178)](_0x5b4b27, void 0x0, void 0x0, 'gbk'), _0xdc8e5a[_0x14ddaa(0x5ea)], _0xdc8e5a[_0x14ddaa(0x19a)]),
                _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0),
                _0x50768e += Uint32Array[_0x14ddaa(0x739)];
            let _0xe30e5a = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0);
            _0x50768e += Uint32Array[_0x14ddaa(0x739)];
            let _0x33f911 = _0xdc8e5a[_0x14ddaa(0x306)];
            for (let _0x5255a7 = 0x0; _0x5255a7 < _0xe30e5a; _0x5255a7++)
                _0x50768e = _0x11d182(_0x33f911, _0x1f7afc, _0x25122a, _0x50768e);
            _0x25122a['getUint32'](_0x50768e, !0x0),
                _0x50768e += Uint32Array[_0x14ddaa(0x739)];
            let _0x2ced39 = _0x25122a['getUint32'](_0x50768e, !0x0);
            _0x50768e += Uint32Array['BYTES_PER_ELEMENT'];
            for (let _0x1d67ba = 0x0; _0x1d67ba < _0x2ced39; _0x1d67ba++) {
                let _0x5c95c9 = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0);
                _0x50768e += Uint32Array[_0x14ddaa(0x739)];
                let _0x11be79 = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0);
                _0x50768e += Uint32Array['BYTES_PER_ELEMENT'];
                let _0x220721 = {};
                if (-0x1 === _0x33f911[_0x5c95c9][_0x14ddaa(0x76b)]['instanceIndex']) {
                    let _0x47d303 = new Float32Array(_0x33f911[_0x5c95c9][_0x14ddaa(0x76b)]['verticesCount']);
                    for (let _0x53c1a5 = 0x0; _0x53c1a5 < _0x11be79; _0x53c1a5++) {
                        let _0x5095ab = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0);
                        _0x50768e += Uint32Array[_0x14ddaa(0x739)];
                        let _0x11736d = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0);
                        _0x50768e += Uint32Array[_0x14ddaa(0x739)];
                        let _0x4261fc = 0x0
                            , _0x566f02 = 0x0;
                        _0x220721[_0x5095ab] = [];
                        for (let _0xf9665f = 0x0; _0xf9665f < _0x11736d; _0xf9665f++) {
                            if (_0x566f02 = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0),
                                _0x50768e += Uint32Array[_0x14ddaa(0x739)],
                                _0x4261fc = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0),
                                _0x50768e += Uint32Array['BYTES_PER_ELEMENT'],
                                _0x47d303['fill'])
                                _0x47d303[_0x14ddaa(0x4ac)](_0x53c1a5, _0x566f02, _0x566f02 + _0x4261fc);
                            else {
                                let _0x3230a1 = _0x566f02 + _0x566f02;
                                for (let _0x22012d = _0x566f02; _0x22012d < _0x3230a1; _0x22012d++)
                                    _0x47d303[_0x22012d] = _0x53c1a5;
                            }
                            _0x220721[_0x5095ab][_0x14ddaa(0x745)]({
                                'vertexColorOffset': _0x566f02,
                                'vertexColorCount': _0x4261fc,
                                'batchId': _0x53c1a5
                            });
                        }
                    }
                    _0x567f5(_0x33f911[_0x5c95c9][_0x14ddaa(0x76b)], _0x47d303, void 0x0);
                } else {
                    let _0x17c5a5 = _0x33f911[_0x5c95c9]['vertexPackage'][_0x14ddaa(0x332)];
                    _0x33f911[_0x5c95c9][_0x14ddaa(0x76b)][_0x14ddaa(0x931)],
                        _0x33f911[_0x5c95c9][_0x14ddaa(0x76b)]['instanceMode'];
                    let _0x12ad34 = new Float32Array(_0x17c5a5)
                        , _0x5f12a7 = 0x0;
                    for (let _0x201017 = 0x0; _0x201017 < _0x11be79; _0x201017++) {
                        let _0x7349e7 = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0);
                        _0x50768e += Uint32Array['BYTES_PER_ELEMENT'];
                        let _0x225b72 = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0);
                        _0x50768e += Uint32Array[_0x14ddaa(0x739)],
                            _0x220721[_0x7349e7] = [];
                        for (let _0x382e97 = 0x0; _0x382e97 < _0x225b72; _0x382e97++) {
                            let _0xf77145 = _0x25122a['getUint32'](_0x50768e, !0x0);
                            _0x50768e += Uint32Array[_0x14ddaa(0x739)],
                                _0x12ad34[_0x5f12a7] = _0x5f12a7,
                                void 0x0 === _0x220721[_0x7349e7] && (_0x220721[_0x7349e7] = [{
                                    'vertexColorCount': 0x1,
                                    'instanceIds': [],
                                    'vertexColorOffset': _0x5f12a7
                                }]),
                                _0x220721[_0x7349e7]['instanceIds'][_0x14ddaa(0x745)](_0xf77145),
                                _0x5f12a7++;
                        }
                    }
                    _0x567f5(_0x33f911[_0x5c95c9]['vertexPackage'], _0x12ad34, 0x1);
                }
                _0x33f911[_0x5c95c9][_0x14ddaa(0x49c)] = _0x220721;
            }
            _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0),
                _0x50768e += Uint32Array[_0x14ddaa(0x739)];
            let _0x1a2dde = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0);
            _0x50768e += Uint32Array[_0x14ddaa(0x739)];
            let _0x29c897 = {};
            for (let _0x44bfe8 = 0x0; _0x44bfe8 < _0x1a2dde; _0x44bfe8++) {
                let _0x36c300 = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0);
                _0x50768e += Uint32Array['BYTES_PER_ELEMENT'];
                let _0x1d6427 = _0x25122a['getUint32'](_0x50768e, !0x0);
                _0x50768e += Uint32Array[_0x14ddaa(0x739)];
                let _0x2f25e4 = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0);
                _0x50768e += Uint32Array[_0x14ddaa(0x739)];
                let _0xee78fc = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0);
                _0x50768e += Uint32Array[_0x14ddaa(0x739)];
                let _0x42c365 = _0x25122a['getUint32'](_0x50768e, !0x0);
                _0x50768e += Uint32Array['BYTES_PER_ELEMENT'];
                let _0x4bc345 = _0x25122a[_0x14ddaa(0x69d)](_0x50768e, !0x0);
                _0x50768e += Uint32Array[_0x14ddaa(0x739)];
                let _0x46ce43 = _0x4bc345 === _0xbd1c5c[_0x14ddaa(0x902)] || _0x4bc345 === _0xbd1c5c[_0x14ddaa(0xa26)] ? Cesium[_0x14ddaa(0x480)][_0x14ddaa(0x783)] : Cesium[_0x14ddaa(0x480)][_0x14ddaa(0x7f8)]
                    , _0x1a23d5 = new Uint8Array(_0x36bba1, _0x50768e, _0x42c365);
                _0x29c897[_0x36c300] = {
                    'id': _0x36c300,
                    'width': _0x1d6427,
                    'height': _0x2f25e4,
                    'compressType': _0xee78fc,
                    'nFormat': _0x4bc345,
                    'arrayBufferView': _0x1a23d5,
                    'internalFormat': _0x46ce43
                },
                    _0x50768e += _0x42c365;
            }
            return _0xdc8e5a[_0x14ddaa(0x217)] = _0x29c897,
                _0xdc8e5a;
        }
            ;
        let _0x4930b6 = 0x1
            , _0xcb6a9e = 0x2;
        function _0x243496(_0x515438, _0x389670, _0x2b39aa) {
            const _0x18fd7a = _0x324b8e;
            let _0x32bb69 = _0x389670['getUint32'](_0x2b39aa, !0x0);
            _0x2b39aa += Uint32Array[_0x18fd7a(0x739)];
            let _0x4e4e45 = new Uint8Array(_0x515438, _0x2b39aa, _0x32bb69);
            return {
                'string': Cesium[_0x18fd7a(0x178)](_0x4e4e45),
                'bytesOffset': _0x2b39aa += _0x32bb69
            };
        }
        function _0x5de209(_0x31d37c, _0x59d3be, _0x3433ea, _0x552a8e) {
            const _0x52cdd9 = _0x324b8e;
            let _0x4c163d = {}
                , _0x4f739c = []
                , _0x561949 = new Array(0x10);
            for (let _0x3d266c = 0x0; _0x3d266c < 0x10; _0x3d266c++)
                _0x561949[_0x3d266c] = _0x59d3be[_0x52cdd9(0xa42)](_0x3433ea, !0x0),
                    _0x3433ea += Float64Array[_0x52cdd9(0x739)];
            _0x4c163d['matrix'] = _0x561949,
                _0x4c163d[_0x52cdd9(0x1ca)] = _0x4f739c;
            let _0x4d514a = _0x59d3be[_0x52cdd9(0x69d)](_0x3433ea, !0x0);
            _0x3433ea += Uint32Array[_0x52cdd9(0x739)];
            for (let _0x4fa58e = 0x0; _0x4fa58e < _0x4d514a; _0x4fa58e++) {
                let _0x34a0c4 = _0x243496(_0x31d37c, _0x59d3be, _0x3433ea);
                _0x4f739c['push'](_0x34a0c4[_0x52cdd9(0x937)]),
                    _0x3433ea = _0x34a0c4[_0x52cdd9(0x827)];
            }
            return _0x552a8e[_0x52cdd9(0x745)](_0x4c163d),
                _0x3433ea;
        }
        function _0x396e10(_0x190689, _0x1b073e, _0x417666, _0x26c151) {
            const _0x4f74c6 = _0x324b8e;
            let _0x33cae8 = {};
            _0x33cae8[_0x4f74c6(0x69a)] = _0x1b073e[_0x4f74c6(0x486)](_0x417666, !0x0),
                _0x417666 += Float32Array[_0x4f74c6(0x739)],
                _0x33cae8[_0x4f74c6(0xaae)] = _0x1b073e['getUint16'](_0x417666, !0x0),
                _0x417666 += Uint16Array[_0x4f74c6(0x739)];
            let _0x58e7a5 = {};
            _0x58e7a5['x'] = _0x1b073e[_0x4f74c6(0xa42)](_0x417666, !0x0),
                _0x417666 += Float64Array[_0x4f74c6(0x739)],
                _0x58e7a5['y'] = _0x1b073e[_0x4f74c6(0xa42)](_0x417666, !0x0),
                _0x417666 += Float64Array[_0x4f74c6(0x739)],
                _0x58e7a5['z'] = _0x1b073e[_0x4f74c6(0xa42)](_0x417666, !0x0),
                _0x417666 += Float64Array[_0x4f74c6(0x739)];
            let _0x5593f3 = _0x1b073e[_0x4f74c6(0xa42)](_0x417666, !0x0);
            _0x417666 += Float64Array[_0x4f74c6(0x739)],
                _0x33cae8[_0x4f74c6(0x891)] = {
                    'center': _0x58e7a5,
                    'radius': _0x5593f3
                };
            let _0xfc0771 = _0x243496(_0x190689, _0x1b073e, _0x417666)
                , _0x12c32f = _0xfc0771['string'];
            _0x417666 = _0xfc0771[_0x4f74c6(0x827)];
            let _0x529bca = _0x12c32f[_0x4f74c6(0xa59)](_0x4f74c6(0x86e));
            if (-0x1 !== _0x529bca) {
                let _0x4f3a35 = _0x12c32f[_0x4f74c6(0x475)](_0x529bca);
                _0x12c32f = _0x12c32f['replace'](_0x4f3a35, '');
            }
            _0x33cae8[_0x4f74c6(0x1a8)] = _0x12c32f,
                _0x33cae8[_0x4f74c6(0x442)] = [];
            let _0x7f5ed5 = _0x1b073e['getUint32'](_0x417666, !0x0);
            _0x417666 += Uint32Array[_0x4f74c6(0x739)];
            for (let _0x5df432 = 0x0; _0x5df432 < _0x7f5ed5; _0x5df432++)
                _0x417666 = _0x5de209(_0x190689, _0x1b073e, _0x417666, _0x33cae8[_0x4f74c6(0x442)]);
            return _0x26c151[_0x4f74c6(0x745)](_0x33cae8),
                _0x417666;
        }
        function _0x3f2393(_0x3aed92, _0x5e9ec4, _0x481f61, _0x2724e1) {
            const _0x57cb57 = _0x324b8e;
            let _0x437871 = {}
                , _0x3c249e = [];
            _0x5e9ec4['getUint32'](_0x481f61, !0x0),
                _0x481f61 += Uint32Array['BYTES_PER_ELEMENT'];
            let _0x191da6 = _0x5e9ec4[_0x57cb57(0x69d)](_0x481f61, !0x0);
            _0x481f61 += Uint32Array[_0x57cb57(0x739)];
            for (let _0x1b0640 = 0x0; _0x1b0640 < _0x191da6; _0x1b0640++)
                _0x481f61 = _0x396e10(_0x3aed92, _0x5e9ec4, _0x481f61, _0x3c249e);
            _0x437871[_0x57cb57(0x9b7)] = _0x3c249e;
            let _0x101a8c = _0x481f61 % 0x4;
            return 0x0 !== _0x101a8c && (_0x481f61 += 0x4 - _0x101a8c),
                _0x2724e1[_0x57cb57(0x5ea)] = _0x437871,
                _0x481f61;
        }
        function _0x324e5b(_0x4ffbe2, _0x4e4d18, _0x26b216, _0x109c98) {
            const _0xa703aa = _0x324b8e;
            let _0xec7a73 = _0x4e4d18[_0xa703aa(0x69d)](_0x26b216, !0x0);
            if (_0x109c98['verticesCount'] = _0xec7a73,
                (_0x26b216 += Uint32Array[_0xa703aa(0x739)]) <= 0x0)
                return _0x26b216;
            let _0x31e154 = _0x4e4d18['getUint16'](_0x26b216, !0x0);
            _0x26b216 += Uint16Array[_0xa703aa(0x739)];
            let _0xbc7024 = _0x4e4d18[_0xa703aa(0x206)](_0x26b216, !0x0);
            _0xbc7024 = _0x31e154 * Float32Array[_0xa703aa(0x739)],
                _0x26b216 += Uint16Array[_0xa703aa(0x739)];
            let _0x53d41b = _0xec7a73 * _0x31e154 * Float32Array['BYTES_PER_ELEMENT']
                , _0x7d5e66 = new Uint8Array(_0x4ffbe2, _0x26b216, _0x53d41b);
            _0x26b216 += _0x53d41b;
            let _0x2a83cf = _0x109c98[_0xa703aa(0xaa9)]
                , _0x37b0ce = _0x109c98[_0xa703aa(0xe2)];
            return _0x37b0ce[_0xa703aa(0x833)] = _0x2a83cf[_0xa703aa(0x376)],
                _0x2a83cf[_0xa703aa(0x745)]({
                    'index': _0x37b0ce['aPosition'],
                    'typedArray': _0x7d5e66,
                    'componentsPerAttribute': _0x31e154,
                    'componentDatatype': Cesium['ComponentDatatype'][_0xa703aa(0x2d5)],
                    'offsetInBytes': 0x0,
                    'strideInBytes': _0xbc7024,
                    'normalize': !0x1
                }),
                _0x26b216;
        }
        function _0xa5c816(_0x3014f8, _0x1a477e, _0x3c7833, _0x3637a7) {
            const _0x2de631 = _0x324b8e;
            let _0x8c0023 = _0x1a477e[_0x2de631(0x69d)](_0x3c7833, !0x0);
            if (_0x3c7833 += Uint32Array[_0x2de631(0x739)],
                _0x8c0023 <= 0x0)
                return _0x3c7833;
            let _0x3a2126 = _0x1a477e[_0x2de631(0x206)](_0x3c7833, !0x0);
            _0x3c7833 += Uint16Array[_0x2de631(0x739)];
            let _0x133a69 = _0x1a477e['getUint16'](_0x3c7833, !0x0);
            _0x3c7833 += Uint16Array[_0x2de631(0x739)];
            let _0x24c549 = _0x8c0023 * _0x3a2126 * Float32Array[_0x2de631(0x739)]
                , _0x9c6abd = new Uint8Array(_0x3014f8, _0x3c7833, _0x24c549);
            _0x3c7833 += _0x24c549;
            let _0x39a896 = _0x3637a7[_0x2de631(0xaa9)]
                , _0x503dc0 = _0x3637a7[_0x2de631(0xe2)];
            return _0x503dc0[_0x2de631(0xa77)] = _0x39a896[_0x2de631(0x376)],
                _0x39a896[_0x2de631(0x745)]({
                    'index': _0x503dc0[_0x2de631(0xa77)],
                    'typedArray': _0x9c6abd,
                    'componentsPerAttribute': _0x3a2126,
                    'componentDatatype': Cesium[_0x2de631(0xa57)][_0x2de631(0x2d5)],
                    'offsetInBytes': 0x0,
                    'strideInBytes': _0x133a69,
                    'normalize': !0x1
                }),
                _0x3c7833;
        }
        function _0x290d51(_0x56ab1f, _0x1e09ee, _0x393205, _0x204272) {
            const _0x10205f = _0x324b8e;
            let _0x37818c = _0x1e09ee[_0x10205f(0x69d)](_0x393205, !0x0);
            _0x393205 += Uint32Array[_0x10205f(0x739)];
            let _0x3d169f, _0xc7110e = _0x204272[_0x10205f(0x7e4)];
            if (_0x37818c > 0x0) {
                _0x1e09ee['getUint16'](_0x393205, !0x0),
                    _0x393205 += Uint16Array[_0x10205f(0x739)],
                    _0x393205 += 0x2 * Uint8Array[_0x10205f(0x739)];
                let _0x12777f = _0x37818c * Uint8Array['BYTES_PER_ELEMENT'] * 0x4;
                _0x3d169f = new Uint8Array(_0x56ab1f, _0x393205, _0x12777f)[_0x10205f(0x3be)](0x0, _0x12777f),
                    _0x393205 += _0x12777f;
            } else {
                _0x3d169f = new Uint8Array(0x4 * _0xc7110e);
                for (let _0x19bee3 = 0x0; _0x19bee3 < _0xc7110e; _0x19bee3++)
                    _0x3d169f[0x4 * _0x19bee3] = 0xff,
                        _0x3d169f[0x4 * _0x19bee3 + 0x1] = 0xff,
                        _0x3d169f[0x4 * _0x19bee3 + 0x2] = 0xff,
                        _0x3d169f[0x4 * _0x19bee3 + 0x3] = 0xff;
            }
            let _0x28f9b0 = _0x204272[_0x10205f(0xaa9)]
                , _0xd43e5 = _0x204272[_0x10205f(0xe2)];
            return _0xd43e5[_0x10205f(0x262)] = _0x28f9b0[_0x10205f(0x376)],
                _0x28f9b0['push']({
                    'index': _0xd43e5['aColor'],
                    'typedArray': _0x3d169f,
                    'componentsPerAttribute': 0x4,
                    'componentDatatype': Cesium[_0x10205f(0xa57)][_0x10205f(0x1e0)],
                    'offsetInBytes': 0x0,
                    'strideInBytes': 0x4,
                    'normalize': !0x0
                }),
                _0x204272['vertexColor'] = _0x3d169f,
                _0x393205;
        }
        function _0x5bf53b(_0x5edd9d, _0x4c1111, _0x19df1a, _0x1cb23f) {
            const _0x185a44 = _0x324b8e;
            let _0x38afe5 = _0x4c1111[_0x185a44(0x69d)](_0x19df1a, !0x0);
            if (_0x19df1a += Uint32Array['BYTES_PER_ELEMENT'],
                _0x38afe5 <= 0x0)
                return _0x19df1a;
            _0x4c1111[_0x185a44(0x206)](_0x19df1a, !0x0),
                _0x19df1a += Uint16Array['BYTES_PER_ELEMENT'],
                _0x19df1a += 0x2 * Uint8Array['BYTES_PER_ELEMENT'];
            let _0x357726 = _0x38afe5 * Uint8Array[_0x185a44(0x739)] * 0x4
                , _0xda1cb8 = new Uint8Array(_0x5edd9d, _0x19df1a, _0x357726);
            _0x19df1a += _0x357726;
            let _0x54c8fb = _0x1cb23f[_0x185a44(0xaa9)]
                , _0x47a2ee = _0x1cb23f[_0x185a44(0xe2)];
            return _0x47a2ee[_0x185a44(0x9aa)] = _0x54c8fb[_0x185a44(0x376)],
                _0x54c8fb[_0x185a44(0x745)]({
                    'index': _0x47a2ee[_0x185a44(0x9aa)],
                    'typedArray': _0xda1cb8,
                    'componentsPerAttribute': 0x4,
                    'componentDatatype': Cesium[_0x185a44(0xa57)]['UNSIGNED_BYTE'],
                    'offsetInBytes': 0x0,
                    'strideInBytes': 0x4,
                    'normalize': !0x0
                }),
                _0x19df1a;
        }
        function _0x40cd73(_0x5bb32b, _0x423e93, _0x4e9bd5, _0x534f0d) {
            const _0x3636c6 = _0x324b8e;
            let _0x3e1299 = _0x423e93[_0x3636c6(0x206)](_0x4e9bd5, !0x0);
            _0x4e9bd5 += Uint16Array[_0x3636c6(0x739)],
                _0x4e9bd5 += Uint16Array[_0x3636c6(0x739)];
            for (let _0xdf4e12 = 0x0; _0xdf4e12 < _0x3e1299; _0xdf4e12++) {
                let _0x43d551 = _0x423e93[_0x3636c6(0x69d)](_0x4e9bd5, !0x0);
                _0x4e9bd5 += Uint32Array['BYTES_PER_ELEMENT'];
                let _0x473fbd = _0x423e93[_0x3636c6(0x206)](_0x4e9bd5, !0x0);
                _0x4e9bd5 += Uint16Array[_0x3636c6(0x739)],
                    _0x423e93[_0x3636c6(0x206)](_0x4e9bd5, !0x0),
                    _0x4e9bd5 += Uint16Array['BYTES_PER_ELEMENT'];
                let _0x113456 = _0x43d551 * _0x473fbd * Float32Array[_0x3636c6(0x739)]
                    , _0x25ca1e = new Uint8Array(_0x5bb32b, _0x4e9bd5, _0x113456);
                _0x4e9bd5 += _0x113456;
                let _0x51dfa7 = _0x3636c6(0x5ae) + _0xdf4e12
                    , _0x11d3f3 = _0x534f0d[_0x3636c6(0xaa9)]
                    , _0x21f6f8 = _0x534f0d[_0x3636c6(0xe2)];
                _0x21f6f8[_0x51dfa7] = _0x11d3f3[_0x3636c6(0x376)],
                    _0x11d3f3[_0x3636c6(0x745)]({
                        'index': _0x21f6f8[_0x51dfa7],
                        'typedArray': _0x25ca1e,
                        'componentsPerAttribute': _0x473fbd,
                        'componentDatatype': Cesium[_0x3636c6(0xa57)]['FLOAT'],
                        'offsetInBytes': 0x0,
                        'strideInBytes': _0x473fbd * Float32Array[_0x3636c6(0x739)],
                        'normalize': !0x1
                    });
            }
            return _0x4e9bd5;
        }
        function _0x4287ce(_0x5bfbfb, _0x4b0723, _0x25f35f, _0x1790d5) {
            const _0x1de4b3 = _0x324b8e;
            let _0x23e772 = _0x4b0723[_0x1de4b3(0x206)](_0x25f35f, !0x0);
            _0x25f35f += Uint16Array[_0x1de4b3(0x739)],
                _0x25f35f += Uint16Array[_0x1de4b3(0x739)];
            let _0x50b4a6 = _0x1790d5[_0x1de4b3(0xaa9)]
                , _0x84e176 = _0x1790d5[_0x1de4b3(0xe2)];
            for (let _0xd154b1 = 0x0; _0xd154b1 < _0x23e772; _0xd154b1++) {
                let _0xf5f7ba = _0x4b0723[_0x1de4b3(0x69d)](_0x25f35f, !0x0);
                _0x25f35f += Uint32Array[_0x1de4b3(0x739)];
                let _0xc26e83 = _0x4b0723['getUint16'](_0x25f35f, !0x0);
                _0x25f35f += Uint16Array[_0x1de4b3(0x739)],
                    _0x4b0723[_0x1de4b3(0x206)](_0x25f35f, !0x0),
                    _0x25f35f += Uint16Array[_0x1de4b3(0x739)];
                let _0x26adeb = _0xf5f7ba * _0xc26e83 * Float32Array[_0x1de4b3(0x739)];
                if (0x11 === _0xc26e83 || 0x1d === _0xc26e83) {
                    let _0x1de34c = new Uint8Array(_0x5bfbfb, _0x25f35f, _0x26adeb);
                    _0x1790d5[_0x1de4b3(0x332)] = _0xf5f7ba,
                        _0x1790d5[_0x1de4b3(0x313)] = _0xc26e83,
                        _0x1790d5[_0x1de4b3(0x931)] = _0x1de34c,
                        _0x1790d5[_0x1de4b3(0x7eb)] = 0x1;
                    let _0x57f2d2, _0x2e9234 = _0xc26e83 * _0xf5f7ba * 0x4, _0x178293 = _0x1de34c[_0x1de4b3(0x3be)](0x0, _0x2e9234);
                    _0x1790d5[_0x1de4b3(0xc4)] = _0x178293,
                        0x11 === _0xc26e83 ? (_0x57f2d2 = 0x11 * Float32Array[_0x1de4b3(0x739)],
                            _0x84e176[_0x1de4b3(0x181)] = _0x50b4a6[_0x1de4b3(0x376)],
                            _0x50b4a6[_0x1de4b3(0x745)]({
                                'index': _0x84e176[_0x1de4b3(0x181)],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium[_0x1de4b3(0xa57)]['FLOAT'],
                                'normalize': !0x1,
                                'offsetInBytes': 0x0,
                                'strideInBytes': _0x57f2d2,
                                'instanceDivisor': 0x1
                            }),
                            _0x84e176[_0x1de4b3(0x7a0)] = _0x50b4a6['length'],
                            _0x50b4a6['push']({
                                'index': _0x84e176[_0x1de4b3(0x7a0)],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium['ComponentDatatype']['FLOAT'],
                                'normalize': !0x1,
                                'offsetInBytes': 0x4 * Float32Array[_0x1de4b3(0x739)],
                                'strideInBytes': _0x57f2d2,
                                'instanceDivisor': 0x1
                            }),
                            _0x84e176[_0x1de4b3(0x8c6)] = _0x50b4a6[_0x1de4b3(0x376)],
                            _0x50b4a6[_0x1de4b3(0x745)]({
                                'index': _0x84e176['uv4'],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium[_0x1de4b3(0xa57)][_0x1de4b3(0x2d5)],
                                'normalize': !0x1,
                                'offsetInBytes': 0x8 * Float32Array[_0x1de4b3(0x739)],
                                'strideInBytes': _0x57f2d2,
                                'instanceDivisor': 0x1
                            }),
                            _0x84e176['secondary_colour'] = _0x50b4a6['length'],
                            _0x50b4a6['push']({
                                'index': _0x84e176[_0x1de4b3(0x4e3)],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium[_0x1de4b3(0xa57)][_0x1de4b3(0x2d5)],
                                'normalize': !0x1,
                                'offsetInBytes': 0xc * Float32Array[_0x1de4b3(0x739)],
                                'strideInBytes': _0x57f2d2,
                                'instanceDivisor': 0x1
                            }),
                            _0x84e176['uv6'] = _0x50b4a6['length'],
                            _0x50b4a6['push']({
                                'index': _0x84e176[_0x1de4b3(0x436)],
                                'componentsPerAttribute': 0x4,
                                'componentDatatype': Cesium['ComponentDatatype'][_0x1de4b3(0x1e0)],
                                'normalize': !0x0,
                                'offsetInBytes': 0x10 * Float32Array[_0x1de4b3(0x739)],
                                'strideInBytes': _0x57f2d2,
                                'instanceDivisor': 0x1
                            })) : 0x1d === _0xc26e83 && (_0x57f2d2 = 0x1d * Float32Array[_0x1de4b3(0x739)],
                                _0x84e176[_0x1de4b3(0x378)] = _0x50b4a6['length'],
                                _0x50b4a6['push']({
                                    'index': _0x84e176[_0x1de4b3(0x378)],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x1de4b3(0xa57)]['FLOAT'],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x0,
                                    'strideInBytes': _0x57f2d2,
                                    'instanceDivisor': 0x1,
                                    'byteLength': _0x26adeb
                                }),
                                _0x84e176[_0x1de4b3(0x181)] = _0x50b4a6[_0x1de4b3(0x376)],
                                _0x50b4a6[_0x1de4b3(0x745)]({
                                    'index': _0x84e176[_0x1de4b3(0x181)],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x1de4b3(0xa57)][_0x1de4b3(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x4 * Float32Array['BYTES_PER_ELEMENT'],
                                    'strideInBytes': _0x57f2d2,
                                    'instanceDivisor': 0x1
                                }),
                                _0x84e176[_0x1de4b3(0x7a0)] = _0x50b4a6[_0x1de4b3(0x376)],
                                _0x50b4a6['push']({
                                    'index': _0x84e176['uv3'],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium['ComponentDatatype'][_0x1de4b3(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x8 * Float32Array[_0x1de4b3(0x739)],
                                    'strideInBytes': _0x57f2d2,
                                    'instanceDivisor': 0x1
                                }),
                                _0x84e176[_0x1de4b3(0x8c6)] = _0x50b4a6[_0x1de4b3(0x376)],
                                _0x50b4a6[_0x1de4b3(0x745)]({
                                    'index': _0x84e176[_0x1de4b3(0x8c6)],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x1de4b3(0xa57)]['FLOAT'],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0xc * Float32Array[_0x1de4b3(0x739)],
                                    'strideInBytes': _0x57f2d2,
                                    'instanceDivisor': 0x1
                                }),
                                _0x84e176['uv5'] = _0x50b4a6['length'],
                                _0x50b4a6[_0x1de4b3(0x745)]({
                                    'index': _0x84e176[_0x1de4b3(0x3c9)],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x1de4b3(0xa57)][_0x1de4b3(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x10 * Float32Array[_0x1de4b3(0x739)],
                                    'strideInBytes': _0x57f2d2,
                                    'instanceDivisor': 0x1
                                }),
                                _0x84e176[_0x1de4b3(0x436)] = _0x50b4a6[_0x1de4b3(0x376)],
                                _0x50b4a6['push']({
                                    'index': _0x84e176[_0x1de4b3(0x436)],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x1de4b3(0xa57)][_0x1de4b3(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x14 * Float32Array[_0x1de4b3(0x739)],
                                    'strideInBytes': _0x57f2d2,
                                    'instanceDivisor': 0x1
                                }),
                                _0x84e176[_0x1de4b3(0x7df)] = _0x50b4a6[_0x1de4b3(0x376)],
                                _0x50b4a6[_0x1de4b3(0x745)]({
                                    'index': _0x84e176[_0x1de4b3(0x7df)],
                                    'componentsPerAttribute': 0x3,
                                    'componentDatatype': Cesium[_0x1de4b3(0xa57)][_0x1de4b3(0x2d5)],
                                    'normalize': !0x1,
                                    'offsetInBytes': 0x18 * Float32Array['BYTES_PER_ELEMENT'],
                                    'strideInBytes': _0x57f2d2,
                                    'instanceDivisor': 0x1
                                }),
                                _0x84e176['secondary_colour'] = _0x50b4a6[_0x1de4b3(0x376)],
                                _0x50b4a6[_0x1de4b3(0x745)]({
                                    'index': _0x84e176[_0x1de4b3(0x4e3)],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium['ComponentDatatype'][_0x1de4b3(0x1e0)],
                                    'normalize': !0x0,
                                    'offsetInBytes': 0x1b * Float32Array[_0x1de4b3(0x739)],
                                    'strideInBytes': _0x57f2d2,
                                    'instanceDivisor': 0x1
                                }),
                                _0x84e176[_0x1de4b3(0xaa4)] = _0x50b4a6['length'],
                                _0x50b4a6['push']({
                                    'index': _0x84e176[_0x1de4b3(0xaa4)],
                                    'componentsPerAttribute': 0x4,
                                    'componentDatatype': Cesium[_0x1de4b3(0xa57)][_0x1de4b3(0x1e0)],
                                    'normalize': !0x0,
                                    'offsetInBytes': 0x1c * Float32Array[_0x1de4b3(0x739)],
                                    'strideInBytes': _0x57f2d2,
                                    'instanceDivisor': 0x1
                                }));
                } else {
                    let _0x34e2cf = _0xf5f7ba * _0xc26e83;
                    _0x1790d5['instanceBounds'] = new Float32Array(_0x34e2cf);
                    for (let _0x384335 = 0x0; _0x384335 < _0x34e2cf; _0x384335++)
                        _0x1790d5[_0x1de4b3(0x197)][_0x384335] = _0x4b0723[_0x1de4b3(0x486)](_0x25f35f + _0x384335 * Float32Array[_0x1de4b3(0x739)], !0x0);
                }
                _0x25f35f += _0x26adeb;
            }
            return _0x25f35f;
        }
        function _0x46f8d3(_0x52f7d2, _0x1526d3, _0x8cf8f, _0x1dfca7) {
            return _0x8cf8f = _0x4287ce(_0x52f7d2, _0x1526d3, _0x8cf8f = _0x40cd73(_0x52f7d2, _0x1526d3, _0x8cf8f = _0x5bf53b(_0x52f7d2, _0x1526d3, _0x8cf8f = _0x290d51(_0x52f7d2, _0x1526d3, _0x8cf8f = _0xa5c816(_0x52f7d2, _0x1526d3, _0x8cf8f = _0x324e5b(_0x52f7d2, _0x1526d3, _0x8cf8f, _0x1dfca7), _0x1dfca7), _0x1dfca7), _0x1dfca7), _0x1dfca7), _0x1dfca7);
        }
        function _0x306b31(_0x473e9d, _0x5960ee, _0x58a024, _0x33acfa) {
            const _0x5872f4 = _0x324b8e;
            let _0x2f4608 = _0x5960ee[_0x5872f4(0x69d)](_0x58a024, !0x0);
            return _0x33acfa[_0x5872f4(0xa19)] = _0x2f4608,
                _0x58a024 += Uint32Array[_0x5872f4(0x739)],
                _0x58a024 = (_0x2f4608 & _0x5983eb[_0x5872f4(0x649)]) === _0x5983eb[_0x5872f4(0x649)] ? function (_0xea6de7, _0x2934da, _0x3a7ac2, _0x190fd9) {
                    const _0x369377 = _0x5872f4;
                    let _0xf0c1d0 = _0x2934da['getUint32'](_0x3a7ac2, !0x0);
                    if (_0x190fd9[_0x369377(0x7e4)] = _0xf0c1d0,
                        (_0x3a7ac2 += Uint32Array[_0x369377(0x739)]) <= 0x0)
                        return _0x3a7ac2;
                    let _0x384744 = _0x2934da[_0x369377(0x206)](_0x3a7ac2, !0x0);
                    _0x3a7ac2 += Uint16Array[_0x369377(0x739)];
                    let _0x5bfdeb = _0x2934da[_0x369377(0x206)](_0x3a7ac2, !0x0);
                    _0x5bfdeb = _0x384744 * Int16Array[_0x369377(0x739)],
                        _0x3a7ac2 += Uint16Array[_0x369377(0x739)];
                    let _0x46d98e = _0x2934da[_0x369377(0x486)](_0x3a7ac2, !0x0);
                    _0x3a7ac2 += Float32Array[_0x369377(0x739)];
                    let _0x1b58e3 = {};
                    _0x1b58e3['x'] = _0x2934da[_0x369377(0x486)](_0x3a7ac2, !0x0),
                        _0x3a7ac2 += Float32Array[_0x369377(0x739)],
                        _0x1b58e3['y'] = _0x2934da[_0x369377(0x486)](_0x3a7ac2, !0x0),
                        _0x3a7ac2 += Float32Array['BYTES_PER_ELEMENT'],
                        _0x1b58e3['z'] = _0x2934da['getFloat32'](_0x3a7ac2, !0x0),
                        _0x3a7ac2 += Float32Array[_0x369377(0x739)],
                        _0x1b58e3['w'] = _0x2934da[_0x369377(0x486)](_0x3a7ac2, !0x0),
                        _0x3a7ac2 += Float32Array[_0x369377(0x739)],
                        _0x190fd9[_0x369377(0x5c4)] = _0x46d98e,
                        _0x190fd9['minVerticesValue'] = _0x1b58e3;
                    let _0x145b8a = _0xf0c1d0 * _0x384744 * Int16Array['BYTES_PER_ELEMENT']
                        , _0x44609d = new Uint8Array(_0xea6de7, _0x3a7ac2, _0x145b8a);
                    _0x3a7ac2 += _0x145b8a;
                    let _0x12e71f = _0x190fd9[_0x369377(0xaa9)]
                        , _0x940ce5 = _0x190fd9[_0x369377(0xe2)];
                    return _0x940ce5[_0x369377(0x833)] = _0x12e71f['length'],
                        _0x12e71f['push']({
                            'index': _0x940ce5[_0x369377(0x833)],
                            'typedArray': _0x44609d,
                            'componentsPerAttribute': _0x384744,
                            'componentDatatype': Cesium[_0x369377(0xa57)][_0x369377(0x37a)],
                            'offsetInBytes': 0x0,
                            'strideInBytes': _0x5bfdeb,
                            'normalize': !0x1
                        }),
                        _0x3a7ac2;
                }(_0x473e9d, _0x5960ee, _0x58a024, _0x33acfa) : _0x324e5b(_0x473e9d, _0x5960ee, _0x58a024, _0x33acfa),
                _0x58a024 = (_0x2f4608 & _0x5983eb[_0x5872f4(0x5e2)]) === _0x5983eb[_0x5872f4(0x5e2)] ? function (_0x2dba65, _0x3abc60, _0x16ee73, _0xd9343e) {
                    const _0xb77626 = _0x5872f4;
                    let _0x55064b = _0x3abc60[_0xb77626(0x69d)](_0x16ee73, !0x0);
                    if (_0x16ee73 += Uint32Array[_0xb77626(0x739)],
                        _0x55064b <= 0x0)
                        return _0x16ee73;
                    _0x3abc60[_0xb77626(0x206)](_0x16ee73, !0x0),
                        _0x16ee73 += Uint16Array[_0xb77626(0x739)];
                    let _0x1a9eef = _0x3abc60[_0xb77626(0x206)](_0x16ee73, !0x0);
                    _0x16ee73 += Uint16Array[_0xb77626(0x739)];
                    let _0x5069b5 = 0x2 * _0x55064b * Int16Array['BYTES_PER_ELEMENT']
                        , _0x2c7cd1 = new Uint8Array(_0x2dba65, _0x16ee73, _0x5069b5);
                    _0x16ee73 += _0x5069b5;
                    let _0x4a2f94 = _0xd9343e[_0xb77626(0xaa9)]
                        , _0x3fcc09 = _0xd9343e[_0xb77626(0xe2)];
                    return _0x3fcc09[_0xb77626(0xa77)] = _0x4a2f94['length'],
                        _0x4a2f94[_0xb77626(0x745)]({
                            'index': _0x3fcc09[_0xb77626(0xa77)],
                            'typedArray': _0x2c7cd1,
                            'componentsPerAttribute': 0x2,
                            'componentDatatype': Cesium[_0xb77626(0xa57)][_0xb77626(0x37a)],
                            'offsetInBytes': 0x0,
                            'strideInBytes': _0x1a9eef,
                            'normalize': !0x1
                        }),
                        _0x16ee73;
                }(_0x473e9d, _0x5960ee, _0x58a024, _0x33acfa) : _0xa5c816(_0x473e9d, _0x5960ee, _0x58a024, _0x33acfa),
                _0x58a024 = _0x5bf53b(_0x473e9d, _0x5960ee, _0x58a024 = _0x290d51(_0x473e9d, _0x5960ee, _0x58a024, _0x33acfa), _0x33acfa),
                _0x58a024 = (_0x2f4608 & _0x5983eb['SVC_TexutreCoord']) === _0x5983eb[_0x5872f4(0x7e0)] ? function (_0x565b55, _0x57f471, _0x2af99c, _0x197cbd) {
                    const _0x508aac = _0x5872f4;
                    _0x197cbd[_0x508aac(0xa44)] = [],
                        _0x197cbd['minTexCoordValue'] = [];
                    let _0x3ff570 = _0x57f471[_0x508aac(0x206)](_0x2af99c, !0x0);
                    _0x2af99c += Uint16Array[_0x508aac(0x739)],
                        _0x2af99c += Uint16Array[_0x508aac(0x739)];
                    for (let _0x20c40d = 0x0; _0x20c40d < _0x3ff570; _0x20c40d++) {
                        let _0x3add19 = _0x57f471[_0x508aac(0x3b8)](_0x2af99c, !0x0);
                        _0x2af99c += Uint8Array[_0x508aac(0x739)],
                            _0x2af99c += 0x3 * Uint8Array['BYTES_PER_ELEMENT'];
                        let _0x12dd4f = _0x57f471[_0x508aac(0x69d)](_0x2af99c, !0x0);
                        _0x2af99c += Uint32Array['BYTES_PER_ELEMENT'];
                        let _0x473406 = _0x57f471[_0x508aac(0x206)](_0x2af99c, !0x0);
                        _0x2af99c += Uint16Array[_0x508aac(0x739)],
                            _0x57f471[_0x508aac(0x206)](_0x2af99c, !0x0),
                            _0x2af99c += Uint16Array['BYTES_PER_ELEMENT'];
                        let _0x22e0b8 = _0x57f471['getFloat32'](_0x2af99c, !0x0);
                        _0x2af99c += Float32Array[_0x508aac(0x739)],
                            _0x197cbd[_0x508aac(0xa44)]['push'](_0x22e0b8);
                        let _0x1e5246 = {};
                        _0x1e5246['x'] = _0x57f471[_0x508aac(0x486)](_0x2af99c, !0x0),
                            _0x2af99c += Float32Array[_0x508aac(0x739)],
                            _0x1e5246['y'] = _0x57f471['getFloat32'](_0x2af99c, !0x0),
                            _0x2af99c += Float32Array[_0x508aac(0x739)],
                            _0x1e5246['z'] = _0x57f471['getFloat32'](_0x2af99c, !0x0),
                            _0x2af99c += Float32Array[_0x508aac(0x739)],
                            _0x1e5246['w'] = _0x57f471[_0x508aac(0x486)](_0x2af99c, !0x0),
                            _0x2af99c += Float32Array[_0x508aac(0x739)],
                            _0x197cbd[_0x508aac(0x80d)]['push'](_0x1e5246);
                        let _0x448f46 = _0x12dd4f * _0x473406 * Int16Array[_0x508aac(0x739)]
                            , _0x5ca041 = new Uint8Array(_0x565b55, _0x2af99c, _0x448f46)
                            , _0x2911ed = (_0x2af99c += _0x448f46) % 0x4;
                        0x0 !== _0x2911ed && (_0x2af99c += 0x4 - _0x2911ed);
                        let _0x184d8a = _0x508aac(0x5ae) + _0x20c40d
                            , _0x6457a8 = _0x197cbd[_0x508aac(0xaa9)]
                            , _0x226c7e = _0x197cbd['attrLocation'];
                        if (_0x226c7e[_0x184d8a] = _0x6457a8['length'],
                            _0x6457a8[_0x508aac(0x745)]({
                                'index': _0x226c7e[_0x184d8a],
                                'typedArray': _0x5ca041,
                                'componentsPerAttribute': _0x473406,
                                'componentDatatype': Cesium[_0x508aac(0xa57)][_0x508aac(0x37a)],
                                'offsetInBytes': 0x0,
                                'strideInBytes': _0x473406 * Int16Array[_0x508aac(0x739)],
                                'normalize': !0x1
                            }),
                            _0x3add19) {
                            _0x448f46 = _0x12dd4f * Float32Array['BYTES_PER_ELEMENT'];
                            let _0x7ccee6 = new Uint8Array(_0x565b55, _0x2af99c, _0x448f46);
                            _0x2af99c += _0x448f46,
                                _0x197cbd[_0x508aac(0x12d)] = !0x0,
                                _0x184d8a = _0x508aac(0x879) + _0x20c40d,
                                _0x226c7e[_0x184d8a] = _0x6457a8[_0x508aac(0x376)],
                                _0x6457a8[_0x508aac(0x745)]({
                                    'index': _0x226c7e[_0x184d8a],
                                    'typedArray': _0x7ccee6,
                                    'componentsPerAttribute': 0x1,
                                    'componentDatatype': Cesium[_0x508aac(0xa57)][_0x508aac(0x2d5)],
                                    'offsetInBytes': 0x0,
                                    'strideInBytes': Float32Array['BYTES_PER_ELEMENT'],
                                    'normalize': !0x1
                                });
                        }
                    }
                    return _0x2af99c;
                }(_0x473e9d, _0x5960ee, _0x58a024, _0x33acfa) : _0x40cd73(_0x473e9d, _0x5960ee, _0x58a024, _0x33acfa),
                (_0x2f4608 & _0x5983eb[_0x5872f4(0x670)]) === _0x5983eb[_0x5872f4(0x670)] && (_0x33acfa[_0x5872f4(0x599)] = !0x0),
                _0x58a024 = _0x4287ce(_0x473e9d, _0x5960ee, _0x58a024, _0x33acfa);
        }
        function _0x259130(_0x17021e, _0x261dfe, _0x176b35, _0xf2787) {
            const _0x3286f3 = _0x324b8e;
            let _0x156a1d = _0x261dfe[_0x3286f3(0x69d)](_0x176b35, !0x0);
            _0x176b35 += Uint32Array[_0x3286f3(0x739)];
            for (let _0x39558b = 0x0; _0x39558b < _0x156a1d; _0x39558b++) {
                let _0x541f18 = {}
                    , _0x2e424c = _0x261dfe[_0x3286f3(0x69d)](_0x176b35, !0x0);
                _0x176b35 += Uint32Array[_0x3286f3(0x739)];
                let _0x263d61 = _0x261dfe[_0x3286f3(0x3b8)](_0x176b35, !0x0);
                _0x176b35 += Uint8Array[_0x3286f3(0x739)],
                    _0x261dfe[_0x3286f3(0x3b8)](_0x176b35, !0x0),
                    _0x176b35 += Uint8Array['BYTES_PER_ELEMENT'];
                let _0x5ddce1 = _0x261dfe[_0x3286f3(0x3b8)](_0x176b35, !0x0);
                if (_0x176b35 += Uint8Array[_0x3286f3(0x739)],
                    _0x176b35 += Uint8Array[_0x3286f3(0x739)],
                    _0x2e424c > 0x0) {
                    let _0x1e7c22, _0x4bd8ae = null;
                    0x1 === _0x263d61 || 0x3 === _0x263d61 ? (_0x1e7c22 = _0x2e424c * Uint32Array['BYTES_PER_ELEMENT'],
                        _0x4bd8ae = new Uint8Array(_0x17021e, _0x176b35, _0x1e7c22)) : (_0x1e7c22 = _0x2e424c * Uint16Array[_0x3286f3(0x739)],
                            _0x4bd8ae = new Uint8Array(_0x17021e, _0x176b35, _0x1e7c22),
                            _0x2e424c % 0x2 != 0x0 && (_0x1e7c22 += 0x2)),
                        _0x541f18[_0x3286f3(0x725)] = _0x4bd8ae,
                        _0x176b35 += _0x1e7c22;
                }
                _0x541f18[_0x3286f3(0x944)] = _0x2e424c,
                    _0x541f18['indexType'] = _0x263d61,
                    _0x541f18[_0x3286f3(0x97f)] = _0x5ddce1;
                let _0x54d478 = _0x261dfe['getUint32'](_0x176b35, !0x0);
                _0x176b35 += Uint32Array[_0x3286f3(0x739)];
                for (let _0x110e39 = 0x0; _0x110e39 < _0x54d478; _0x110e39++) {
                    let _0x2ac434 = _0x243496(_0x17021e, _0x261dfe, _0x176b35)
                        , _0x5d11f6 = _0x2ac434[_0x3286f3(0x937)];
                    _0x176b35 = _0x2ac434[_0x3286f3(0x827)],
                        _0x541f18[_0x3286f3(0xabf)] = _0x5d11f6;
                }
                0x0 !== _0x176b35 % 0x4 && (_0x176b35 += 0x4 - _0x176b35 % 0x4),
                    _0xf2787[_0x3286f3(0x745)](_0x541f18);
            }
            return _0x176b35;
        }
        function _0x1ed002(_0x491ed5, _0x4bd423, _0xf6b7b5, _0x203c24) {
            const _0x6baa33 = _0x324b8e;
            _0x4bd423[_0x6baa33(0x69d)](_0xf6b7b5, !0x0),
                _0xf6b7b5 += Uint32Array[_0x6baa33(0x739)];
            let _0x43869c = _0x4bd423[_0x6baa33(0x69d)](_0xf6b7b5, !0x0);
            _0xf6b7b5 += Uint32Array[_0x6baa33(0x739)];
            for (let _0x51fd04 = 0x0; _0x51fd04 < _0x43869c; _0x51fd04++) {
                let _0x422f7f = _0x243496(_0x491ed5, _0x4bd423, _0xf6b7b5)
                    , _0x21dd94 = _0x422f7f[_0x6baa33(0x937)]
                    , _0x3ba901 = (_0xf6b7b5 = _0x422f7f[_0x6baa33(0x827)]) % 0x4;
                0x0 !== _0x3ba901 && (_0xf6b7b5 += 0x4 - _0x3ba901);
                let _0x2697e7 = _0x4bd423[_0x6baa33(0x69d)](_0xf6b7b5, !0x0);
                _0xf6b7b5 += Int32Array['BYTES_PER_ELEMENT'];
                let _0x3d23f1 = {
                    'vertexAttributes': [],
                    'attrLocation': {},
                    'instanceCount': 0x0,
                    'instanceMode': 0x0,
                    'instanceIndex': -0x1
                };
                _0x2697e7 === _0x4930b6 ? _0xf6b7b5 = _0x46f8d3(_0x491ed5, _0x4bd423, _0xf6b7b5, _0x3d23f1) : _0x2697e7 === _0xcb6a9e && (_0xf6b7b5 = _0x306b31(_0x491ed5, _0x4bd423, _0xf6b7b5, _0x3d23f1));
                let _0x316442, _0xba8671 = [];
                _0xf6b7b5 = _0x259130(_0x491ed5, _0x4bd423, _0xf6b7b5, _0xba8671),
                    0x2 === _0xba8671['length'] && 0xd === _0xba8671[0x1][_0x6baa33(0x97f)] && _0xba8671[0x1][_0x6baa33(0x944)] >= 0x3 && (_0x316442 = _0x76a51a[_0x6baa33(0x543)](_0x3d23f1, _0xba8671[0x1])),
                    _0x203c24[_0x21dd94] = {
                        'vertexPackage': _0x3d23f1,
                        'arrIndexPackage': _0xba8671,
                        'edgeGeometry': _0x316442
                    };
            }
            return _0xf6b7b5 += _0x4bd423[_0x6baa33(0x69d)](_0xf6b7b5, !0x0),
                _0xf6b7b5 += Uint32Array[_0x6baa33(0x739)];
        }
        function _0x107199(_0x4fd8d7, _0x41117f, _0x327ab6, _0x4e20d1) {
            const _0x210a03 = _0x324b8e;
            let _0x136865 = _0x327ab6[_0x210a03(0x376)];
            for (let _0x30b8bc = 0x0; _0x30b8bc < _0x136865; _0x30b8bc++) {
                let _0x1a0648 = _0x327ab6[_0x30b8bc]
                    , _0x2ea7b7 = _0x1a0648[_0x210a03(0x2d0)][_0x210a03(0x89c)]('_')[0x0]
                    , _0x43f116 = _0x1a0648[_0x210a03(0x177)];
                for (let _0x314dfc = 0x0; _0x314dfc < _0x43f116[_0x210a03(0x376)]; _0x314dfc++) {
                    let _0x5c1faf = _0x43f116[_0x314dfc]
                        , _0xf550b = _0x5c1faf[_0x210a03(0x235)]
                        , _0x262620 = _0x5c1faf[_0x210a03(0x5a3)]
                        , _0x3cf9c5 = _0x5c1faf[_0x210a03(0xaa6)]
                        , _0x265806 = _0x5c1faf['texUnitIndex']
                        , _0x4bbae9 = _0x41117f[_0xf550b][_0x210a03(0x76b)]['verticesCount']
                        , _0x31e4f0 = _0x4e20d1[_0xf550b];
                    _0x31e4f0 || (_0x31e4f0 = _0x4e20d1[_0xf550b] = {});
                    let _0x4e59f6 = _0x31e4f0[_0x265806];
                    _0x4e59f6 || (_0x4e59f6 = _0x31e4f0[_0x265806] = new Float32Array(_0x4bbae9),
                        _0x4e59f6[_0x210a03(0x4ac)](_0x4e59f6, -0x1));
                    let _0x59f260 = _0x4fd8d7 ? _0x4fd8d7[_0x2ea7b7] : _0x30b8bc;
                    _0x4e59f6[_0x210a03(0x4ac)](_0x59f260, _0x262620, _0x262620 + _0x3cf9c5);
                }
            }
        }
        function _0x3d4577(_0x5c540f, _0x118194, _0x42da70) {
            const _0x36fdbc = _0x324b8e;
            var _0x345881 = _0x5c540f[_0x36fdbc(0xaa9)]
                , _0x4eca03 = _0x5c540f[_0x36fdbc(0xe2)]
                , _0x42f212 = _0x345881['length'];
            _0x4eca03[_0x36fdbc(0x7a3) + _0x42da70] = _0x42f212,
                _0x345881[_0x36fdbc(0x745)]({
                    'index': _0x42f212,
                    'typedArray': _0x118194,
                    'componentsPerAttribute': 0x1,
                    'componentDatatype': Cesium[_0x36fdbc(0xa57)][_0x36fdbc(0x2d5)],
                    'offsetInBytes': 0x0,
                    'strideInBytes': 0x0
                });
        }
        function _0x2296be(_0x2b8a60, _0x18dcfc, _0x12ff94, _0x1cfa7f, _0x534388, _0x5c6b6d, _0x4a3ebf, _0x7b62cc) {
            const _0x417697 = _0x324b8e;
            let _0x1df66d = _0x12ff94;
            _0x18dcfc['getUint32'](_0x1df66d, !0x0),
                _0x1df66d += Uint32Array[_0x417697(0x739)];
            let _0x4b2cc3 = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
            _0x1df66d += Uint32Array[_0x417697(0x739)];
            let _0x64273d = {};
            for (let _0x4b1864 = 0x0; _0x4b1864 < _0x4b2cc3; _0x4b1864++) {
                let _0x41bd2a = _0x243496(_0x2b8a60, _0x18dcfc, _0x1df66d)
                    , _0x5a20da = _0x41bd2a[_0x417697(0x937)];
                _0x1df66d = _0x41bd2a['bytesOffset'];
                let _0x2b68a4 = _0x1df66d % 0x4;
                0x0 !== _0x2b68a4 && (_0x1df66d += 0x4 - _0x2b68a4),
                    _0x18dcfc['getUint32'](_0x1df66d, !0x0),
                    _0x1df66d += Uint32Array[_0x417697(0x739)],
                    _0x18dcfc[_0x417697(0x3b8)](_0x1df66d, !0x0),
                    _0x1df66d += Uint8Array[_0x417697(0x739)];
                let _0x1813c0 = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
                _0x1df66d += Uint32Array[_0x417697(0x739)];
                let _0x273875 = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
                _0x1df66d += Uint32Array[_0x417697(0x739)];
                let _0x25163a = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
                _0x1df66d += Uint32Array['BYTES_PER_ELEMENT'];
                let _0x34bf7b = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
                _0x1df66d += Uint32Array[_0x417697(0x739)];
                let _0x2a1e1f, _0x26957d = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
                _0x1df66d += Uint32Array[_0x417697(0x739)],
                    _0x7b62cc && (_0x2a1e1f = new Uint8Array(_0x2b8a60, _0x1df66d, _0x34bf7b),
                        _0x1df66d += _0x34bf7b);
                let _0xca49c5 = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
                _0x1df66d += Uint32Array[_0x417697(0x739)];
                for (let _0xb1fe54 = 0x0; _0xb1fe54 < _0xca49c5; _0xb1fe54++) {
                    let _0x587690 = _0x243496(_0x2b8a60, _0x18dcfc, _0x1df66d)
                        , _0x5f4db4 = _0x587690['string'];
                    _0x1df66d = _0x587690['bytesOffset'],
                        _0x4a3ebf[_0x5f4db4] = _0x5a20da;
                }
                let _0x4a84f3 = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
                _0x1df66d += Uint32Array[_0x417697(0x739)];
                let _0x5938eb = [];
                for (let _0x1f390a = 0x0; _0x1f390a < _0x4a84f3; _0x1f390a++) {
                    let _0x588559 = _0x243496(_0x2b8a60, _0x18dcfc, _0x1df66d);
                    _0x1df66d = _0x588559[_0x417697(0x827)],
                        _0x5938eb['push'](_0x588559[_0x417697(0x937)]);
                }
                let _0x273344 = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
                _0x1df66d += Uint32Array['BYTES_PER_ELEMENT'];
                let _0xbd7a38, _0x135e5a = [], _0x3c7d0f = _0x5a20da;
                if (_0x7b62cc)
                    _0xbd7a38 = _0x5c6b6d[_0x5a20da] = {};
                else {
                    let _0x54cf92 = _0x4a3ebf[_0x5a20da];
                    for (_0x3c7d0f = _0x54cf92; _0x54cf92;)
                        _0x3c7d0f = _0x54cf92,
                            _0x54cf92 = _0x4a3ebf[_0x54cf92];
                    _0x3c7d0f && (_0xbd7a38 = _0x5c6b6d[_0x3c7d0f]);
                }
                let _0x233658 = 0x0;
                for (let _0x40ee11 = 0x0; _0x40ee11 < _0x273344; _0x40ee11++) {
                    let _0x5b722b = _0x243496(_0x2b8a60, _0x18dcfc, _0x1df66d)
                        , _0x276fc8 = _0x5b722b[_0x417697(0x937)];
                    if (_0x1df66d = _0x5b722b[_0x417697(0x827)],
                        _0x7b62cc) {
                        let _0x44a52f = _0x276fc8['split']('_')[0x0];
                        _0xbd7a38[_0x44a52f] ? _0x233658++ : _0xbd7a38[_0x44a52f] = _0x40ee11 - _0x233658;
                    }
                    let _0x9eb378 = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
                    _0x1df66d += Uint32Array[_0x417697(0x739)];
                    let _0x1e971a = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
                    _0x1df66d += Uint32Array[_0x417697(0x739)];
                    let _0x3d7929 = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
                    _0x1df66d += Uint32Array['BYTES_PER_ELEMENT'];
                    let _0x434def = _0x18dcfc['getUint32'](_0x1df66d, !0x0);
                    _0x1df66d += Uint32Array[_0x417697(0x739)];
                    let _0x2b187b = _0x18dcfc['getUint32'](_0x1df66d, !0x0);
                    _0x1df66d += Uint32Array[_0x417697(0x739)];
                    let _0x35b30b = [];
                    for (let _0xcff846 = 0x0; _0xcff846 < _0x2b187b; _0xcff846++) {
                        let _0x5bf5f1 = _0x243496(_0x2b8a60, _0x18dcfc, _0x1df66d)
                            , _0xd3da6f = _0x5bf5f1[_0x417697(0x937)];
                        _0x1df66d = _0x5bf5f1[_0x417697(0x827)];
                        let _0x144b61 = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
                        _0x1df66d += Uint32Array['BYTES_PER_ELEMENT'];
                        let _0x2b7ffd = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
                        _0x1df66d += Uint32Array[_0x417697(0x739)];
                        let _0x5d0a79 = _0x18dcfc[_0x417697(0x69d)](_0x1df66d, !0x0);
                        _0x1df66d += Uint32Array['BYTES_PER_ELEMENT'],
                            _0x35b30b[_0x417697(0x745)]({
                                'geoName': _0xd3da6f,
                                'offset': _0x144b61,
                                'count': _0x2b7ffd,
                                'texUnitIndex': _0x5d0a79
                            });
                    }
                    _0x135e5a[_0x417697(0x745)]({
                        'subName': _0x276fc8,
                        'offsetX': _0x9eb378,
                        'offsetY': _0x1e971a,
                        'width': _0x3d7929,
                        'height': _0x434def,
                        'subVertexOffsetArr': _0x35b30b
                    });
                }
                _0x107199(_0xbd7a38, _0x534388, _0x135e5a, _0x64273d),
                    _0x1cfa7f[_0x5a20da] = {
                        'id': _0x5a20da,
                        'rootTextureName': _0x3c7d0f,
                        'width': _0x1813c0,
                        'height': _0x273875,
                        'compressType': _0x25163a,
                        'size': _0x34bf7b,
                        'format': _0x26957d,
                        'textureData': _0x2a1e1f,
                        'subTexInfos': _0x135e5a,
                        'requestNames': _0x5938eb
                    };
            }
            for (let _0x5dacf9 in _0x64273d)
                if (_0x64273d[_0x417697(0x704)](_0x5dacf9)) {
                    let _0x5692b3 = _0x534388[_0x5dacf9][_0x417697(0x76b)]
                        , _0x33e69d = _0x64273d[_0x5dacf9];
                    for (let _0x3160b0 in _0x33e69d)
                        _0x33e69d['hasOwnProperty'](_0x3160b0) && _0x3d4577(_0x5692b3, _0x33e69d[_0x3160b0], _0x3160b0);
                }
            return _0x1df66d;
        }
        function _0x58d968(_0x95283b, _0xfd0d5d, _0x46dfcd, _0x222399) {
            const _0x829068 = _0x324b8e;
            let _0x4396e1 = _0xfd0d5d[_0x829068(0x69d)](_0x46dfcd, !0x0);
            _0x46dfcd += Uint32Array[_0x829068(0x739)];
            let _0x1a5260 = new Uint8Array(_0x95283b, _0x46dfcd, _0x4396e1)
                , _0x1d72b0 = Cesium[_0x829068(0x178)](_0x1a5260);
            return _0x46dfcd += _0x4396e1,
                _0x222399[_0x829068(0x19a)] = JSON['parse'](_0x1d72b0),
                _0x46dfcd;
        }
        let _0xd99e6f = new Cesium['Color']();
        function _0x3b5c9d(_0x4db225, _0x84be7f, _0x1597f4, _0x1a0eb1, _0x35ec28, _0x48606) {
            const _0x4d1c6e = _0x324b8e;
            if (0x1 == (0x1 & _0x1a0eb1)) {
                _0x84be7f[_0x4d1c6e(0x69d)](_0x1597f4, !0x0),
                    _0x1597f4 += Uint32Array[_0x4d1c6e(0x739)];
                let _0x3c9cee = _0x84be7f[_0x4d1c6e(0x69d)](_0x1597f4, !0x0);
                _0x1597f4 += Uint32Array[_0x4d1c6e(0x739)];
                for (let _0x217f0b = 0x0; _0x217f0b < _0x3c9cee; _0x217f0b++) {
                    let _0x419c6e = _0x243496(_0x4db225, _0x84be7f, _0x1597f4)
                        , _0x273c91 = _0x419c6e[_0x4d1c6e(0x937)];
                    _0x1597f4 = _0x419c6e[_0x4d1c6e(0x827)];
                    let _0x316513 = _0x84be7f[_0x4d1c6e(0x69d)](_0x1597f4, !0x0);
                    _0x1597f4 += Uint32Array['BYTES_PER_ELEMENT'];
                    let _0x538453 = {};
                    if (_0x35ec28[_0x273c91][_0x4d1c6e(0x49c)] = _0x538453,
                        -0x1 == _0x35ec28[_0x273c91][_0x4d1c6e(0x76b)]['instanceIndex']) {
                        let _0xd1eaa7 = new Float32Array(_0x35ec28[_0x273c91]['vertexPackage'][_0x4d1c6e(0x7e4)]);
                        for (let _0x472d7f = 0x0; _0x472d7f < _0x316513; _0x472d7f++) {
                            let _0x559412 = _0x84be7f[_0x4d1c6e(0x69d)](_0x1597f4, !0x0);
                            _0x1597f4 += Uint32Array[_0x4d1c6e(0x739)];
                            let _0x13b357 = _0x84be7f[_0x4d1c6e(0x69d)](_0x1597f4, !0x0);
                            _0x1597f4 += Uint32Array['BYTES_PER_ELEMENT'];
                            let _0x44f16e = [];
                            for (let _0x45cacd = 0x0; _0x45cacd < _0x13b357; _0x45cacd++) {
                                let _0x4c2ba6 = _0x84be7f['getUint32'](_0x1597f4, !0x0);
                                _0x1597f4 += Uint32Array[_0x4d1c6e(0x739)];
                                let _0x45e0c0 = _0x84be7f['getUint32'](_0x1597f4, !0x0);
                                _0x1597f4 += Uint32Array['BYTES_PER_ELEMENT'],
                                    _0xd1eaa7['fill'](_0x472d7f, _0x4c2ba6, _0x4c2ba6 + _0x45e0c0),
                                    _0x44f16e[_0x4d1c6e(0x745)]({
                                        'vertexColorOffset': _0x4c2ba6,
                                        'vertexColorCount': _0x45e0c0,
                                        'batchId': _0x472d7f
                                    });
                            }
                            _0x538453[_0x559412] = _0x44f16e;
                        }
                        _0x4e55d4(_0x35ec28[_0x273c91][_0x4d1c6e(0x76b)], _0xd1eaa7, void 0x0);
                    } else {
                        let _0x1eb5b8 = _0x35ec28[_0x273c91][_0x4d1c6e(0x76b)][_0x4d1c6e(0x332)]
                            , _0x271967 = _0x35ec28[_0x273c91]['vertexPackage']['instanceBuffer']
                            , _0x396ef9 = _0x35ec28[_0x273c91][_0x4d1c6e(0x76b)][_0x4d1c6e(0x313)]
                            , _0x2f022d = new Float32Array(_0x1eb5b8)
                            , _0x18a3ea = [];
                        for (let _0x11df11 = 0x0; _0x11df11 < _0x316513; _0x11df11++) {
                            let _0x36fef2 = _0x84be7f[_0x4d1c6e(0x69d)](_0x1597f4, !0x0);
                            _0x18a3ea[_0x4d1c6e(0x745)](_0x36fef2),
                                _0x1597f4 += Uint32Array[_0x4d1c6e(0x739)];
                            let _0x3d03a2 = _0x84be7f[_0x4d1c6e(0x69d)](_0x1597f4, !0x0);
                            _0x1597f4 += Uint32Array[_0x4d1c6e(0x739)];
                            for (let _0x3d9d7a = 0x0; _0x3d9d7a < _0x3d03a2; _0x3d9d7a++)
                                _0x84be7f[_0x4d1c6e(0x69d)](_0x1597f4, !0x0),
                                    _0x1597f4 += Uint32Array[_0x4d1c6e(0x739)],
                                    0x2 == _0x48606 && (_0x84be7f[_0x4d1c6e(0x69d)](_0x1597f4, !0x0),
                                        _0x1597f4 += Uint32Array['BYTES_PER_ELEMENT']);
                        }
                        let _0xb039e = 0x11 === _0x396ef9 ? 0x10 : 0x1c;
                        _0xb039e *= Float32Array['BYTES_PER_ELEMENT'];
                        for (let _0x246a2d = 0x0; _0x246a2d < _0x1eb5b8; _0x246a2d++) {
                            _0x2f022d[_0x246a2d] = _0x246a2d;
                            let _0x958f8f = _0x246a2d * _0x396ef9 * Float32Array[_0x4d1c6e(0x739)] + _0xb039e;
                            Cesium[_0x4d1c6e(0x75c)][_0x4d1c6e(0x64f)](_0x271967, _0x958f8f, _0xd99e6f);
                            let _0x3bb6ff = 0x2 === _0x48606 ? _0x18a3ea[_0x246a2d] : _0xd99e6f['red'] + 0x100 * _0xd99e6f[_0x4d1c6e(0x69b)] + 0x10000 * _0xd99e6f[_0x4d1c6e(0x8f0)];
                            void 0x0 === _0x538453[_0x3bb6ff] && (_0x538453[_0x3bb6ff] = {
                                'vertexColorCount': 0x1,
                                'instanceIds': [],
                                'vertexColorOffset': _0x246a2d
                            }),
                                _0x538453[_0x3bb6ff]['instanceIds']['push'](_0x246a2d);
                        }
                        _0x4e55d4(_0x35ec28[_0x273c91][_0x4d1c6e(0x76b)], _0x2f022d, 0x1);
                    }
                }
            }
            return _0x1597f4;
        }
        function _0x4e55d4(_0x103ed7, _0x519e1a, _0x24e913) {
            const _0x3e7c2b = _0x324b8e;
            let _0x11aa17 = _0x103ed7['vertexAttributes']
                , _0x6d20f3 = _0x103ed7[_0x3e7c2b(0xe2)]
                , _0x13c802 = _0x11aa17[_0x3e7c2b(0x376)];
            _0x6d20f3[0x1 === _0x24e913 ? _0x3e7c2b(0x6a7) : _0x3e7c2b(0x762)] = _0x13c802,
                _0x11aa17[_0x3e7c2b(0x745)]({
                    'index': _0x13c802,
                    'typedArray': _0x519e1a,
                    'componentsPerAttribute': 0x1,
                    'componentDatatype': Cesium[_0x3e7c2b(0xa57)][_0x3e7c2b(0x2d5)],
                    'offsetInBytes': 0x0,
                    'strideInBytes': 0x0,
                    'instanceDivisor': _0x24e913
                });
        }
        function _0x40e2c6(_0x3c589d) {
            const _0x489c34 = _0x324b8e;
            let _0xf8a811 = _0x3c589d['indexOf']('Geometry');
            if (-0x1 === _0xf8a811)
                return _0x3c589d;
            let _0xcc4a67 = _0x3c589d[_0x489c34(0x475)](_0xf8a811, _0x3c589d['length']);
            return _0x3c589d[_0x489c34(0x3ed)](_0xcc4a67, '');
        }
        _0x4d28e['parseBuffer'] = function (_0x954345, _0x14bb7f) {
            const _0x286305 = _0x324b8e;
            let _0x4b5235 = _0x14bb7f[_0x286305(0x3c6)]
                , _0x485047 = _0x14bb7f[_0x286305(0x9ec)]
                , _0x169d6a = 0x0
                , _0x345719 = new DataView(_0x954345);
            _0x345719[_0x286305(0x486)](_0x169d6a, !0x0),
                _0x169d6a += Float32Array[_0x286305(0x739)];
            let _0x487fe6 = _0x345719['getUint32'](_0x169d6a, !0x0);
            _0x169d6a += Uint32Array['BYTES_PER_ELEMENT'];
            let _0x210c8b = {};
            for (; _0x487fe6--;) {
                _0x345719 = new DataView(_0x954345);
                let _0x4a744b = _0x243496(_0x954345, _0x345719, _0x169d6a)
                    , _0x4ae1b8 = _0x210c8b[_0x4a744b[_0x286305(0x937)]] = {
                        'groupNode': void 0x0,
                        'geoPackage': {},
                        'texturePackage': {},
                        'materials': {},
                        'rootBatchIdMap': _0x4b5235,
                        'ancestorMap': _0x485047
                    };
                _0x169d6a = _0x4a744b['bytesOffset'];
                let _0x1740b7 = _0x345719[_0x286305(0x69d)](_0x169d6a, !0x0);
                _0x169d6a += Uint32Array[_0x286305(0x739)];
                for (let _0x373269 = 0x0; _0x373269 < _0x1740b7; _0x373269++) {
                    let _0x25c616 = {}
                        , _0x356832 = _0x345719[_0x286305(0x486)](_0x169d6a, !0x0);
                    _0x169d6a += Float32Array[_0x286305(0x739)];
                    let _0x30794b = _0x345719[_0x286305(0x206)](_0x169d6a, !0x0);
                    _0x169d6a += Uint16Array[_0x286305(0x739)],
                        _0x25c616[_0x286305(0xaae)] = _0x30794b,
                        _0x25c616[_0x286305(0x69a)] = _0x356832;
                    let _0x298fa6 = {};
                    _0x298fa6['x'] = _0x345719[_0x286305(0xa42)](_0x169d6a, !0x0),
                        _0x169d6a += Float64Array['BYTES_PER_ELEMENT'],
                        _0x298fa6['y'] = _0x345719[_0x286305(0xa42)](_0x169d6a, !0x0),
                        _0x169d6a += Float64Array[_0x286305(0x739)],
                        _0x298fa6['z'] = _0x345719['getFloat64'](_0x169d6a, !0x0),
                        _0x169d6a += Float64Array[_0x286305(0x739)];
                    let _0x22fe45 = _0x345719[_0x286305(0xa42)](_0x169d6a, !0x0);
                    _0x169d6a += Float64Array['BYTES_PER_ELEMENT'],
                        _0x25c616[_0x286305(0x891)] = {
                            'center': _0x298fa6,
                            'radius': _0x22fe45
                        };
                    let _0xf00909 = _0x243496(_0x954345, _0x345719, _0x169d6a)
                        , _0x1fb42a = _0xf00909[_0x286305(0x937)];
                    _0x169d6a = _0xf00909[_0x286305(0x827)],
                        _0x1fb42a = _0x1fb42a[_0x286305(0x3ed)](/(\.s3mblock)|(\.s3mbz)|(\.s3mb)/gi, ''),
                        _0x1fb42a = _0x40e2c6(_0x1fb42a),
                        _0x25c616['childTile'] = _0x1fb42a;
                }
                let _0x70521c = _0x345719[_0x286305(0x486)](_0x169d6a, !0x0);
                _0x169d6a += Float32Array[_0x286305(0x739)],
                    _0x345719[_0x286305(0x69d)](_0x169d6a, !0x0),
                    _0x169d6a += Uint32Array[_0x286305(0x739)];
                let _0x5208d8 = _0x345719['getUint32'](_0x169d6a, !0x0);
                _0x169d6a += Uint32Array[_0x286305(0x739)];
                let _0x5a06c6 = new Uint8Array(_0x954345, _0x169d6a, _0x5208d8)
                    , _0x25e945 = _0x169d6a + _0x5208d8
                    , _0x172798 = _0x35205d['inflate'](_0x5a06c6)[_0x286305(0x38d)];
                _0x345719 = new DataView(_0x172798),
                    _0x169d6a = 0x0;
                let _0x17abad = _0x345719[_0x286305(0x69d)](_0x169d6a, !0x0);
                _0x169d6a += Uint32Array[_0x286305(0x739)],
                    _0x169d6a = _0x3f2393(_0x172798, _0x345719, _0x169d6a, _0x4ae1b8),
                    _0x169d6a = _0x1ed002(_0x172798, _0x345719, _0x169d6a, _0x4ae1b8['geoPackage']),
                    _0x169d6a = _0x2296be(_0x172798, _0x345719, _0x169d6a, _0x4ae1b8[_0x286305(0x217)], _0x4ae1b8[_0x286305(0x306)], _0x4b5235, _0x485047, _0x14bb7f[_0x286305(0x9b9)]),
                    _0x169d6a = _0x58d968(_0x172798, _0x345719, _0x169d6a, _0x4ae1b8),
                    _0x169d6a = _0x3b5c9d(_0x172798, _0x345719, _0x169d6a, _0x17abad, _0x4ae1b8[_0x286305(0x306)], _0x70521c),
                    _0x169d6a = _0x25e945;
            }
            return _0x210c8b;
        }
            ;
        const _0x2aec6d = 0x1111;
        function _0x4dc55e(_0x4cc247, _0x4cdb0c, _0x1cf5ca) {
            const _0x24f1a9 = _0x324b8e;
            let _0x4f8bfd = _0x4cc247[_0x24f1a9(0x6c7)];
            this[_0x24f1a9(0x23d)] = _0x4cc247['id'],
                this[_0x24f1a9(0x1fe)] = _0x4cdb0c,
                this[_0x24f1a9(0x4e2)] = _0x1cf5ca[_0x24f1a9(0x4e2)],
                this[_0x24f1a9(0xac4)] = _0x1cf5ca['rootName'],
                this['context'] = _0x4cc247,
                this[_0x24f1a9(0x8ce)] = _0x1cf5ca[_0x24f1a9(0x8ce)],
                this[_0x24f1a9(0x88d)] = _0x1cf5ca[_0x24f1a9(0x88d)],
                this[_0x24f1a9(0x401)] = _0x1cf5ca[_0x24f1a9(0x401)],
                this[_0x24f1a9(0x257)] = _0x1cf5ca[_0x24f1a9(0x257)],
                this[_0x24f1a9(0xa9d)] = _0x1cf5ca[_0x24f1a9(0xa9d)],
                this[_0x24f1a9(0x3d3)] = _0x1cf5ca[_0x24f1a9(0x3d3)],
                this[_0x24f1a9(0x9c5)] = Cesium[_0x24f1a9(0x225)](_0x1cf5ca[_0x24f1a9(0x9c5)], Cesium[_0x24f1a9(0x600)][_0x24f1a9(0xa76)]),
                this[_0x24f1a9(0xa7e)] = Cesium['defaultValue'](_0x1cf5ca['wrapT'], Cesium[_0x24f1a9(0x600)]['CLAMP_TO_EDGE']),
                this['_target'] = _0x4f8bfd['TEXTURE_2D'],
                this['_texture'] = void 0x0,
                this[_0x24f1a9(0x766)] = 0x1,
                this['ready'] = !_0x1cf5ca[_0x24f1a9(0x333)],
                this[_0x24f1a9(0x7d4)] = !_0x1cf5ca[_0x24f1a9(0x333)],
                this['isTexBlock'] = _0x1cf5ca[_0x24f1a9(0x333)],
                this[_0x24f1a9(0x3d3)] && this[_0x24f1a9(0x9b0)]();
        }
        function _0xec489() {
            const _0x4fe197 = _0x324b8e;
            this[_0x4fe197(0x38f)] = new Cesium['Color'](),
                this['diffuseColor'] = new Cesium[(_0x4fe197(0x75c))](),
                this[_0x4fe197(0x593)] = new Cesium[(_0x4fe197(0x75c))](0x0, 0x0, 0x0, 0x0),
                this[_0x4fe197(0x8ae)] = 0x32,
                this[_0x4fe197(0x29f)] = !0x1,
                this[_0x4fe197(0x61c)] = void 0x0,
                this[_0x4fe197(0xe3)] = Cesium['Matrix4']['clone'](Cesium[_0x4fe197(0x5ab)][_0x4fe197(0x57f)], new Cesium[(_0x4fe197(0x5ab))]()),
                this['textures'] = [];
        }
        _0x4dc55e[_0x324b8e(0x74f)]['init'] = function () {
            const _0x4b617e = _0x324b8e;
            let _0x5ecfa6 = this[_0x4b617e(0x56c)][_0x4b617e(0x6c7)];
            this[_0x4b617e(0xa12)] || (this[_0x4b617e(0xa12)] = _0x5ecfa6['createTexture']()),
                _0x5ecfa6[_0x4b617e(0x34e)](_0x5ecfa6['TEXTURE_2D'], this[_0x4b617e(0xa12)]);
            let _0x583805 = this[_0x4b617e(0x257)];
            0x190a !== _0x583805 && _0x583805 !== _0x2aec6d || _0x5ecfa6[_0x4b617e(0x2bb)](_0x5ecfa6[_0x4b617e(0x31c)], !0x0);
            let _0x25f9bf = 0x0;
            if (this[_0x4b617e(0x3d3)]) {
                let _0x2d4bbf = 0x0
                    , _0x9b20df = this[_0x4b617e(0x8ce)]
                    , _0x5abf3d = this[_0x4b617e(0x88d)]
                    , _0x73eb3 = function (_0x974e95, _0x33e30d, _0x1fac71, _0x2fda7d) {
                        const _0x1a0099 = _0x4b617e;
                        let _0x1826da = _0x974e95['length']
                            , _0x22fc5f = _0x1fac71
                            , _0x1de919 = _0x2fda7d
                            , _0x3fd480 = 0x0;
                        for (; ;) {
                            if (_0x3fd480 += Cesium[_0x1a0099(0x480)]['compressedTextureSizeInBytes'](_0x33e30d, _0x22fc5f, _0x1de919),
                                _0x22fc5f >>= 0x1,
                                _0x1de919 >>= 0x1,
                                0x0 === _0x22fc5f && 0x0 === _0x1de919)
                                break;
                            _0x22fc5f = Math[_0x1a0099(0x212)](_0x22fc5f, 0x1),
                                _0x1de919 = Math[_0x1a0099(0x212)](_0x1de919, 0x1);
                        }
                        return _0x3fd480 === _0x1826da;
                    }(this['arrayBufferView'], _0x583805, _0x9b20df, _0x5abf3d);
                do {
                    let _0x2e717a = Cesium['PixelFormat']['compressedTextureSizeInBytes'](_0x583805, _0x9b20df, _0x5abf3d)
                        , _0x413ab0 = new Uint8Array(this[_0x4b617e(0x3d3)][_0x4b617e(0x38d)], this[_0x4b617e(0x3d3)]['byteOffset'] + _0x2d4bbf, _0x2e717a);
                    _0x583805 === _0x2aec6d ? _0x5ecfa6[_0x4b617e(0xfd)](_0x5ecfa6[_0x4b617e(0xa9c)], _0x25f9bf++, _0x5ecfa6[_0x4b617e(0x71c)], _0x9b20df, _0x5abf3d, 0x0, _0x5ecfa6[_0x4b617e(0x71c)], _0x5ecfa6[_0x4b617e(0x1e0)], _0x413ab0) : _0x5ecfa6[_0x4b617e(0x86a)](_0x5ecfa6[_0x4b617e(0xa9c)], _0x25f9bf++, _0x583805, _0x9b20df, _0x5abf3d, 0x0, _0x413ab0),
                        _0x9b20df = Math[_0x4b617e(0x212)](_0x9b20df >> 0x1, 0x1),
                        _0x5abf3d = Math[_0x4b617e(0x212)](_0x5abf3d >> 0x1, 0x1),
                        _0x2d4bbf += _0x2e717a;
                } while (_0x2d4bbf < this[_0x4b617e(0x3d3)][_0x4b617e(0x1ef)] && _0x73eb3);
            } else {
                let _0x26473a = Cesium[_0x4b617e(0x480)][_0x4b617e(0x68b)](_0x583805, this[_0x4b617e(0x8ce)], this['height']);
                _0x583805 === _0x2aec6d ? _0x5ecfa6[_0x4b617e(0xfd)](_0x5ecfa6[_0x4b617e(0xa9c)], 0x0, _0x5ecfa6[_0x4b617e(0x71c)], this[_0x4b617e(0x394)], this[_0x4b617e(0x88d)], 0x0, _0x5ecfa6[_0x4b617e(0x71c)], _0x5ecfa6[_0x4b617e(0x1e0)], new Uint8Array(this[_0x4b617e(0x8ce)] * this[_0x4b617e(0x88d)] * 0x4)) : _0x5ecfa6[_0x4b617e(0x86a)](_0x5ecfa6['TEXTURE_2D'], 0x0, _0x583805, this['width'], this['height'], 0x0, new Uint8Array(_0x26473a));
            }
            _0x25f9bf > 0x1 ? (_0x5ecfa6[_0x4b617e(0x8b4)](_0x5ecfa6['TEXTURE_2D'], _0x5ecfa6[_0x4b617e(0x17c)], _0x5ecfa6[_0x4b617e(0x58a)]),
                _0x5ecfa6[_0x4b617e(0x8b4)](_0x5ecfa6[_0x4b617e(0xa9c)], _0x5ecfa6[_0x4b617e(0x6db)], _0x5ecfa6[_0x4b617e(0x300)])) : (_0x5ecfa6[_0x4b617e(0x8b4)](_0x5ecfa6[_0x4b617e(0xa9c)], _0x5ecfa6[_0x4b617e(0x17c)], _0x5ecfa6[_0x4b617e(0x58a)]),
                    _0x5ecfa6[_0x4b617e(0x8b4)](_0x5ecfa6[_0x4b617e(0xa9c)], _0x5ecfa6[_0x4b617e(0x6db)], _0x5ecfa6[_0x4b617e(0x58a)])),
                _0x5ecfa6[_0x4b617e(0x8b4)](_0x5ecfa6[_0x4b617e(0xa9c)], _0x5ecfa6[_0x4b617e(0x800)], this['wrapS']),
                _0x5ecfa6['texParameteri'](_0x5ecfa6[_0x4b617e(0xa9c)], _0x5ecfa6[_0x4b617e(0x127)], this[_0x4b617e(0xa7e)]),
                _0x5ecfa6[_0x4b617e(0x8b4)](this[_0x4b617e(0x847)], this[_0x4b617e(0x56c)][_0x4b617e(0x643)][_0x4b617e(0x289)], 0x1),
                _0x5ecfa6['bindTexture'](_0x5ecfa6[_0x4b617e(0xa9c)], null),
                this[_0x4b617e(0x3d3)] = void 0x0,
                this[_0x4b617e(0x84b)] = !0x0;
        }
            ,
            _0x4dc55e[_0x324b8e(0x74f)]['copyFrom'] = function (_0x5a3603) {
                const _0xe35a5b = _0x324b8e;
                let _0x5cd307 = this[_0xe35a5b(0x56c)]['_gl']
                    , _0x246d62 = this[_0xe35a5b(0x847)];
                _0x5cd307[_0xe35a5b(0xa51)](_0x5cd307['TEXTURE0']),
                    _0x5cd307['bindTexture'](_0x246d62, this[_0xe35a5b(0xa12)]);
                let _0x2438c2 = _0x5a3603[_0xe35a5b(0x481)]
                    , _0x4e276d = _0x5a3603[_0xe35a5b(0x8d4)]
                    , _0x1cdb69 = _0x5a3603[_0xe35a5b(0x8ce)]
                    , _0x1a0d2f = _0x5a3603[_0xe35a5b(0x88d)]
                    , _0x606584 = _0x5a3603[_0xe35a5b(0x3d3)]
                    , _0x2ab654 = this[_0xe35a5b(0x257)];
                _0x5cd307[_0xe35a5b(0x1e0)],
                    _0x5cd307['pixelStorei'](_0x5cd307[_0xe35a5b(0xa11)], !0x1),
                    _0x5cd307[_0xe35a5b(0x2bb)](_0x5cd307['UNPACK_FLIP_Y_WEBGL'], !0x1),
                    _0x5cd307[_0xe35a5b(0x9eb)](_0x246d62, 0x0, _0x2438c2, _0x4e276d, _0x1cdb69, _0x1a0d2f, _0x2ab654, _0x606584),
                    _0x5cd307['bindTexture'](_0x246d62, null);
            }
            ,
            _0x4dc55e[_0x324b8e(0x74f)][_0x324b8e(0x4bc)] = function (_0x489b82) {
                const _0x355ebb = _0x324b8e;
                this[_0x355ebb(0x56c)] = _0x489b82[_0x355ebb(0x56c)],
                    this['contextId'] = _0x489b82['context']['id'],
                    this['layerId'] = _0x489b82[_0x355ebb(0x4e2)],
                    this[_0x355ebb(0xac4)] = _0x489b82[_0x355ebb(0xac4)],
                    this[_0x355ebb(0x1fe)] = _0x489b82['textureId'],
                    this[_0x355ebb(0x8ce)] = _0x489b82[_0x355ebb(0x8ce)],
                    this[_0x355ebb(0x88d)] = _0x489b82['height'],
                    this[_0x355ebb(0x257)] = _0x489b82['internalFormat'],
                    this[_0x355ebb(0x3d3)] = _0x489b82[_0x355ebb(0x3d3)],
                    this[_0x355ebb(0x766)] = 0x1,
                    this[_0x355ebb(0x84b)] = !0x1,
                    this[_0x355ebb(0x7d4)] = !0x1,
                    defined(this[_0x355ebb(0x3d3)]) && this['init']();
            }
            ,
            _0x4dc55e[_0x324b8e(0x74f)][_0x324b8e(0x575)] = function () {
                return !0x1;
            }
            ,
            _0x4dc55e[_0x324b8e(0x74f)][_0x324b8e(0x4dd)] = function () {
                const _0x3eed65 = _0x324b8e;
                this['context'][_0x3eed65(0x6c7)]['deleteTexture'](this[_0x3eed65(0xa12)]),
                    this['_texture'] = null,
                    this['id'] = 0x0,
                    Cesium['destroyObject'](this);
            }
            ,
            _0xec489[_0x324b8e(0x74f)][_0x324b8e(0x575)] = function () {
                return !0x1;
            }
            ,
            _0xec489[_0x324b8e(0x74f)][_0x324b8e(0x4dd)] = function () {
                const _0x348d3e = _0x324b8e;
                let _0x5df547 = this[_0x348d3e(0x37b)][_0x348d3e(0x376)];
                for (let _0x5f22b8 = 0x0; _0x5f22b8 < _0x5df547; _0x5f22b8++) {
                    this[_0x348d3e(0x37b)][_0x5f22b8][_0x348d3e(0x4dd)]();
                }
                return this[_0x348d3e(0x37b)][_0x348d3e(0x376)] = 0x0,
                    this[_0x348d3e(0x38f)] = void 0x0,
                    this[_0x348d3e(0x77a)] = void 0x0,
                    this[_0x348d3e(0x593)] = void 0x0,
                    Cesium['destroyObject'](this);
            }
            ;
        var _0x293ce9 = _0x324b8e(0x245)
            , _0x27cbe0 = '\x0a#ifdef\x20GL_OES_standard_derivatives\x0a#extension\x20GL_OES_standard_derivatives\x20:\x20enable\x0a#endif\x0a#ifdef\x20GL_EXT_shader_texture_lod\x0a#extension\x20GL_EXT_shader_texture_lod\x20:\x20enable\x0a#endif\x0a\x20\x20\x20\x20uniform\x20vec4\x20uDiffuseColor;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uAmbientColor;\x0a#ifdef\x20TexCoord\x0a\x20\x20\x20\x20out\x20vec4\x20vTexCoord;\x0a#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uTexture;\x0a\x20\x20\x20\x20uniform\x20float\x20uTexture0Width;\x0a\x20\x20\x20\x20out\x20vec4\x20vTexCoordTransform;\x0a\x20\x20\x20\x20in\x20vec4\x20vTexMatrix;\x0a#endif\x0a#endif\x0a#ifdef\x20VertexColor\x0a\x20\x20\x20\x20out\x20vec4\x20vColor;\x0a#endif\x0a\x20\x20\x20\x20out\x20vec4\x20vSecondColor;\x0a\x20\x20\x20\x20out\x20vec4\x20vPositionMC;\x0a\x20\x20\x20\x20out\x20vec3\x20vPositionEC;\x0a\x20\x20\x20\x20void\x20calculateMipLevel(in\x20vec2\x20inTexCoord,\x20in\x20float\x20vecTile,\x20in\x20float\x20fMaxMip,\x20inout\x20float\x20mipLevel)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dx\x20=\x20dFdx(inTexCoord\x20*\x20vecTile);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dy\x20=\x20dFdy(inTexCoord\x20*\x20vecTile);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotX\x20=\x20dot(dx,\x20dx);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotY\x20=\x20dot(dy,\x20dy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMax\x20=\x20max(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMin\x20=\x20min(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20offset\x20=\x20(dMax\x20-\x20dMin)\x20/\x20(dMax\x20+\x20dMin);\x0a\x20\x20\x20\x20\x20\x20\x20\x20offset\x20=\x20clamp(offset,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20d\x20=\x20dMax\x20*\x20(1.0\x20-\x20offset)\x20+\x20dMin\x20*\x20offset;\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x200.5\x20*\x20log2(d);\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x20clamp(mipLevel,\x200.0,\x20fMaxMip\x20-\x201.62);\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20void\x20calculateMipLevel(in\x20vec2\x20inTexCoord,\x20in\x20vec2\x20vecTile,\x20in\x20float\x20fMaxMip,\x20inout\x20float\x20mipLevel)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dx\x20=\x20dFdx(inTexCoord\x20*\x20vecTile.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dy\x20=\x20dFdy(inTexCoord\x20*\x20vecTile.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotX\x20=\x20dot(dx,\x20dx);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotY\x20=\x20dot(dy,\x20dy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMax\x20=\x20max(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMin\x20=\x20min(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20offset\x20=\x20(dMax\x20-\x20dMin)\x20/\x20(dMax\x20+\x20dMin);\x0a\x20\x20\x20\x20\x20\x20\x20\x20offset\x20=\x20clamp(offset,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20d\x20=\x20dMax\x20*\x20(1.0\x20-\x20offset)\x20+\x20dMin\x20*\x20offset;\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x200.5\x20*\x20log2(d);\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x20clamp(mipLevel,\x200.0,\x20fMaxMip\x20-\x201.62);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20void\x20calculateTexCoord(in\x20vec3\x20inTexCoord,\x20in\x20float\x20scale,\x20in\x20float\x20XTran,\x20in\x20float\x20YTran,\x20in\x20float\x20fTile,\x20in\x20float\x20mipLevel,\x20inout\x20vec2\x20outTexCoord)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(inTexCoord.z\x20<\x20-9000.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outTexCoord\x20=\x20inTexCoord.xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20fTexCoord\x20=\x20fract(inTexCoord.xy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20offset\x20=\x201.0\x20*\x20pow(2.0,\x20mipLevel)\x20/\x20fTile;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fTexCoord\x20=\x20clamp(fTexCoord,\x20offset,\x201.0\x20-\x20offset);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outTexCoord.x\x20=\x20(fTexCoord.x\x20+\x20XTran)\x20*\x20scale;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outTexCoord.y\x20=\x20(fTexCoord.y\x20+\x20YTran)\x20*\x20scale;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20getTexColorForS3M(sampler2D\x20curTexture,\x20vec3\x20oriTexCoord,\x20float\x20texTileWidth,\x20float\x20fMaxMipLev,\x20float\x20fTexCoordScale,\x20vec2\x20vecTexCoordTranslate)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20color\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20mipLevel\x20=\x200.0;\x0a\x20\x20\x20\x20#ifdef\x20GL_OES_standard_derivatives\x0a\x20\x20\x20\x20\x20\x20\x20\x20calculateMipLevel(oriTexCoord.xy,\x20texTileWidth,\x20fMaxMipLev,\x20mipLevel);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20realTexCoord;\x0a\x20\x20\x20\x20\x20\x20\x20\x20calculateTexCoord(oriTexCoord,\x20fTexCoordScale,\x20vecTexCoordTranslate.x,\x20vecTexCoordTranslate.y,\x20texTileWidth,\x20mipLevel,\x20realTexCoord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(oriTexCoord.z\x20<\x20-9000.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20=\x20texture(curTexture,\x20realTexCoord.xy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#ifdef\x20GL_EXT_shader_texture_lod\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20=\x20textureLodEXT(curTexture,\x20realTexCoord.xy,\x20mipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20=\x20texture(curTexture,\x20realTexCoord.xy,\x20mipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20color;\x0a\x20\x20\x20\x20}\x0a#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20vec4\x20getTextureColor()\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vTexMatrix.z\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20texTileWidth0\x20=\x20vTexMatrix.z\x20*\x20uTexture0Width;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20realTexCoord\x20=\x20vec3(vTexCoord.xy,\x20vTexCoordTransform.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20FColor\x20=\x20getTexColorForS3M(uTexture,\x20realTexCoord,\x20texTileWidth0,\x20vTexMatrix.w,\x20vTexMatrix.z,\x20vTexMatrix.xy);\x0a\x20\x20\x20\x20#ifdef\x20TexCoord2\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20texTileWidth1\x20=\x20vTexMatrix2.z\x20*\x20uTexture1Width;\x0a\x20\x20\x20\x20\x20\x20\x20\x20realTexCoord\x20=\x20vec3(vTexCoord.zw,\x20vTexCoordTransform.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20SColor\x20=\x20getTexColorForS3M(uTexture2,\x20realTexCoord,\x20texTileWidth1,\x20vTexMatrix2.w,\x20vTexMatrix2.z,\x20vTexMatrix2.xy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20SColor.r\x20=\x20clamp(SColor.r,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20SColor.g\x20=\x20clamp(SColor.g,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20SColor.b\x20=\x20clamp(SColor.b,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20FColor\x20*\x20SColor;\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20FColor;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x20\x20\x0a#ifdef\x20CLIP\x0a\x20\x20\x20\x20uniform\x20float\x20uClipMode;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uClipPlanes[6];\x0a\x20\x20\x20\x20float\x20getClipDistance(vec3\x20pos,\x20vec3\x20planeNormal,\x20float\x20disToOrigin)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20dot(planeNormal,\x20pos)\x20+\x20disToOrigin;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20clipBehindAllPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20#ifdef\x20CLIPPLANE\x0a\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[0].xyz,\x20uClipPlanes[0].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20clipBehindAnyPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if((distance\x20+\x20fBorderWidth)\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20float\x20clipAnythingButLine(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec4\x20clip(vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#ifdef\x20GL_OES_standard_derivatives\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dxc\x20=\x20abs(dFdx(vertex.x));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dyc\x20=\x20abs(dFdy(vertex.y));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x20max(dxc,\x20dyc);\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x201.0;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20clipResult\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x201.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAnyPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x202.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAllPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x203.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipAnythingButLine(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(clipResult\x20<\x20-0.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(clipResult\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x0a#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uHypsometricTexture;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uMinMaxValue;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uOpacityIntervalFillMode;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uHypLineColor;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uNoValueColor;\x0a\x20\x20\x20\x20in\x20float\x20wValue;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20float\x20computeMixCon(float\x20fValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20distanceToContour;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20minVisibleValue\x20=\x20uMinMaxValue.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20maxVisibleValue\x20=\x20uMinMaxValue.w;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20interval\x20=\x20uOpacityIntervalFillMode.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(abs(maxVisibleValue\x20-\x20minVisibleValue)\x20>\x200.1)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(fValue\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distanceToContour\x20=\x20mod(fValue\x20-\x200.0002,\x20interval);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20t\x20=\x20floor(fValue\x20/\x20interval);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distanceToContour\x20=\x20abs(fValue\x20-\x20(t\x20*\x20interval)\x20-\x200.1);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distanceToContour\x20=\x20abs(fValue\x20-\x20maxVisibleValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dxc\x20=\x20abs(dFdx(fValue));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dyc\x20=\x20abs(dFdy(fValue));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dF\x20=\x20max(dxc,\x20dyc);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20distanceToContour\x20<\x20dF\x20?\x201.0\x20:\x200.0;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20computeContourMapColor(float\x20fValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20floorValue\x20=\x20uMinMaxValue.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20ceilValue\x20=\x20uMinMaxValue.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20threshold\x20=\x20abs(ceilValue\x20-\x20floorValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20contourRate\x20=\x20(fValue\x20-\x20floorValue)\x20/\x20threshold;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20finalCoord\x20=\x20clamp(contourRate,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20count\x20=\x20floor(finalCoord\x20*\x2016.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20y\x20=\x20(count*2.0\x20+\x201.0)/32.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20x\x20=\x20fract(finalCoord*16.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(y\x20>\x201.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20x\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20contourCoord\x20=\x20vec2(x,\x20y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20texture(uHypsometricTexture,\x20contourCoord);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20getContourMapColor(vec4\x20oriColor,\x20float\x20fValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20contourMapColor\x20=\x20vec4(0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20finalOpacity\x20=\x20uOpacityIntervalFillMode.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20minVisibleValue\x20=\x20uMinMaxValue.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20maxVisibleValue\x20=\x20uMinMaxValue.w;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fillMode\x20=\x20uOpacityIntervalFillMode.z;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(fValue\x20>\x20maxVisibleValue\x20+\x204.0\x20||\x20fValue\x20<\x20minVisibleValue\x20-\x204.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20uNoValueColor\x20*\x20oriColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(fillMode\x20>\x202.9)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20mix_con\x20=\x20computeMixCon(fValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20contourMapColor\x20=\x20mix(computeContourMapColor(fValue),\x20uHypLineColor,\x20mix_con);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(fillMode\x20>\x201.9)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20finalOpacity\x20=\x20computeMixCon(fValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20contourMapColor\x20=\x20uHypLineColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(fillMode\x20>\x200.9)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20contourMapColor\x20=\x20computeContourMapColor(fValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20finalOpacity\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20finalColor\x20=\x20mix(oriColor,\x20contourMapColor,\x20finalOpacity);\x0a\x20\x20\x20\x20#ifdef\x20PT_CLOUD\x0a\x20\x20\x20\x20\x20\x20\x20\x20finalColor\x20=\x20mix(vec4(1.0,1.0,1.0,1.0),\x20contourMapColor,\x20finalOpacity);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20finalColor;\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x0a#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSwipeRegion;\x0a\x20\x20\x20\x20void\x20rollerShutter(vec2\x20coord,\x20vec4\x20region)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20f\x20=\x20step(region.xw,\x20coord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20s\x20=\x20step(coord,\x20region.zy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(f.x\x20*\x20f.y\x20*\x20s.x\x20*\x20s.y\x20<\x201.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20void\x20main()\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20\x20\x20\x20\x20rollerShutter(gl_FragCoord.xy,\x20uSwipeRegion);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20vec4\x20baseColorWithAlpha\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20#ifdef\x20VertexColor\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20baseColorWithAlpha\x20=\x20vColor;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20\x20\x20\x20\x20baseColorWithAlpha\x20*=\x20getTextureColor();\x0a\x20\x20\x20\x20#endif\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20outColor\x20=\x20baseColorWithAlpha;\x0a\x20\x20\x20\x20#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20\x20\x20\x20\x20outColor\x20=\x20getContourMapColor(outColor,\x20wValue);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20CLIP\x0a\x20\x20\x20\x20\x20\x20\x20\x20outColor\x20*=\x20clip(vec4(vPositionEC,\x201.0));\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20out_FragColor\x20=\x20outColor;\x0a\x20\x20\x20\x20}\x0a';
        function _0x3c1766() {
            const _0x18a576 = _0x324b8e;
            this[_0x18a576(0x56c)] = void 0x0,
                this[_0x18a576(0x40e)] = void 0x0,
                this[_0x18a576(0x676)] = void 0x0;
        }
        function _0x37b90f() {
            const _0x5b8df8 = _0x324b8e;
            this[_0x5b8df8(0x40e)] = void 0x0,
                this[_0x5b8df8(0x56c)] = void 0x0,
                this['index'] = 0x0;
        }
        _0x3c1766[_0x324b8e(0x74f)][_0x324b8e(0x414)] = function (_0x39a2c8, _0x548836, _0x48e7a6) {
            const _0x56bf3f = _0x324b8e;
            this['context'] = _0x39a2c8,
                this[_0x56bf3f(0x40e)] = _0x548836,
                this['index'] = _0x48e7a6;
        }
            ,
            _0x3c1766[_0x324b8e(0x74f)][_0x324b8e(0x62c)] = function () {
                const _0x2607f1 = _0x324b8e;
                let _0x1b15e5 = this['context']
                    , _0x5cdcc4 = this[_0x2607f1(0x676)]
                    , _0x457ff9 = this[_0x2607f1(0x40e)]['vertexPackage']
                    , _0x4e7999 = _0x457ff9['vertexAttributes'][_0x5cdcc4];
                if (!Cesium[_0x2607f1(0x14b)](_0x4e7999))
                    throw new Cesium[(_0x2607f1(0x335))](_0x2607f1(0x6ea));
                if (-0x1 !== _0x457ff9[_0x2607f1(0x7eb)] && !Cesium[_0x2607f1(0x14b)](this[_0x2607f1(0x40e)][_0x2607f1(0x931)])) {
                    if (!Cesium['defined'](_0x457ff9[_0x2607f1(0x931)]))
                        throw new Cesium['DeveloperError'](_0x2607f1(0x8f4));
                    this[_0x2607f1(0x40e)][_0x2607f1(0x931)] = Cesium['Buffer']['createVertexBuffer']({
                        'context': _0x1b15e5,
                        'typedArray': _0x457ff9[_0x2607f1(0x931)],
                        'usage': Cesium[_0x2607f1(0x3c3)][_0x2607f1(0x64e)]
                    });
                }
                0x1 !== _0x4e7999[_0x2607f1(0x773)] || Cesium[_0x2607f1(0x14b)](_0x4e7999[_0x2607f1(0xa82)]) ? Cesium[_0x2607f1(0x14b)](_0x4e7999[_0x2607f1(0x839)]) || (_0x4e7999[_0x2607f1(0x839)] = Cesium[_0x2607f1(0x59d)][_0x2607f1(0x57a)]({
                    'context': _0x1b15e5,
                    'typedArray': _0x4e7999[_0x2607f1(0xa82)],
                    'usage': Cesium[_0x2607f1(0x3c3)][_0x2607f1(0x64e)]
                }),
                    _0x4e7999['typedArray'] = null,
                    delete _0x4e7999[_0x2607f1(0xa82)]) : _0x4e7999[_0x2607f1(0x839)] = this[_0x2607f1(0x40e)][_0x2607f1(0x931)];
            }
            ,
            _0x37b90f[_0x324b8e(0x74f)][_0x324b8e(0x414)] = function (_0x456268, _0x4444e5, _0x1651c8) {
                const _0x20076b = _0x324b8e;
                this[_0x20076b(0x40e)] = _0x4444e5,
                    this[_0x20076b(0x56c)] = _0x456268,
                    this[_0x20076b(0x676)] = _0x1651c8;
            }
            ,
            _0x37b90f['prototype'][_0x324b8e(0x62c)] = function () {
                const _0x5e7ad1 = _0x324b8e;
                let _0x14a3f4 = this[_0x5e7ad1(0x56c)]
                    , _0x49fc71 = this[_0x5e7ad1(0x40e)]['arrIndexPackage'][this[_0x5e7ad1(0x676)]]
                    , _0x2a4ae8 = this[_0x5e7ad1(0x40e)][_0x5e7ad1(0x76b)][_0x5e7ad1(0x7e4)];
                if (!Cesium[_0x5e7ad1(0x14b)](_0x49fc71))
                    throw new Cesium['DeveloperError'](_0x5e7ad1(0x633));
                if (Cesium[_0x5e7ad1(0x14b)](_0x49fc71[_0x5e7ad1(0x118)]))
                    return;
                if (!Cesium['defined'](_0x49fc71[_0x5e7ad1(0x725)]))
                    throw new Cesium[(_0x5e7ad1(0x335))]('index\x20buffer\x20is\x20null');
                let _0x5c8b0a = Cesium[_0x5e7ad1(0x98e)][_0x5e7ad1(0x138)];
                (0x1 === _0x49fc71[_0x5e7ad1(0x6df)] || _0x2a4ae8 >= Cesium[_0x5e7ad1(0x16d)]['SIXTY_FOUR_KILOBYTES']) && _0x14a3f4['elementIndexUint'] && (_0x5c8b0a = Cesium[_0x5e7ad1(0x98e)][_0x5e7ad1(0x3d9)]),
                    Cesium[_0x5e7ad1(0x14b)](_0x49fc71[_0x5e7ad1(0x118)]) || (_0x49fc71[_0x5e7ad1(0x118)] = Cesium[_0x5e7ad1(0x59d)]['createIndexBuffer']({
                        'context': _0x14a3f4,
                        'typedArray': _0x49fc71['indicesTypedArray'],
                        'usage': Cesium['BufferUsage'][_0x5e7ad1(0x64e)],
                        'indexDatatype': _0x5c8b0a
                    })),
                    _0x49fc71['indicesTypedArray'] = null,
                    delete _0x49fc71[_0x5e7ad1(0x725)];
            }
            ;
        var _0x48861b = Object[_0x324b8e(0x3e6)]({
            'EXCAVATION': _0x324b8e(0x323),
            'FALTTEN': _0x324b8e(0x39e),
            'OVERLAY': _0x324b8e(0x8ef),
            'HYPSOMETRIC': _0x324b8e(0x541),
            'ADJUST_COLOR': _0x324b8e(0x9ac),
            'TRANSPARENT_BACK_COLOR': _0x324b8e(0x51a),
            'HORIZONTAL_LINE': _0x324b8e(0x25f),
            'COMPUTE_W_VALUE': _0x324b8e(0x9e3),
            'COMPUTE_TEXCOORD': _0x324b8e(0x651),
            'HAS_LIGHT': _0x324b8e(0x13d),
            'HAS_NORMAL': _0x324b8e(0x1df),
            'REPLACE_SELECT_TYPE': 'REPLACE_SELECT_TYPE',
            'SILHOUETTE_SELECT_TYPE': _0x324b8e(0xc8),
            'MULTI_TEX': _0x324b8e(0x734),
            'APPLY_SPLIT': _0x324b8e(0xa9b),
            'APPLY_SWIPE': _0x324b8e(0x920),
            'TEXCOORD': 'TexCoord',
            'TEXCOORD2': _0x324b8e(0x717),
            'COMPRESS_VERTEX': _0x324b8e(0x272),
            'COMPRESS_NORMAL': _0x324b8e(0x10a),
            'COMPRESS_COLOR': 'COMPRESS_COLOR',
            'COMPRESS_TEXCOORD': _0x324b8e(0x17e),
            'SKETCH_MODE': 'SKETCH_MODE',
            'NORMAL_AND_DEPTH': _0x324b8e(0x7d8),
            'POST_EFFECT': _0x324b8e(0x683),
            'CLIP_FILT_BY_ID': _0x324b8e(0x435),
            'CLIP': _0x324b8e(0x6dd),
            'CLIPPLANE': _0x324b8e(0x803),
            'PBR': 'PBR',
            'PT_CLOUD': 'PT_CLOUD',
            'DIR_LIGHTS': 'DIR_LIGHTS\x20',
            'POINT_LIGHTS': 'POINT_LIGHTS\x20',
            'SPOT_LIGHTS': 'SPOT_LIGHTS\x20',
            'W_VISIBLE': _0x324b8e(0x22c),
            'EMISSION_TEXTURE': _0x324b8e(0x70b),
            'EMISSION_TEXTURE_COUNT': _0x324b8e(0x765),
            'TEXTURE_MOVE': _0x324b8e(0x255),
            'VOLUME': 'Volume',
            'VOLUME2': _0x324b8e(0x9db),
            'TEXTURE_COORD_ONE_IS_W': _0x324b8e(0x465),
            'TRIANGLE_FILTRATE': _0x324b8e(0x87e),
            'UseInstanceSkeletonMatrix': _0x324b8e(0x61b),
            'WEBP': _0x324b8e(0x8e6),
            'HAS_SKELETONSELECTED': _0x324b8e(0x967),
            'SKELETONSELECT_ENABLE': _0x324b8e(0x8a1),
            'REPLACE_COLOR_TYPE': _0x324b8e(0x22f),
            'INVALID_OBLIQUE': _0x324b8e(0x4fe),
            'IGNORE_NORMAL': _0x324b8e(0x286),
            'TextureAtlas': _0x324b8e(0x50a),
            'TextureAtlasSec': _0x324b8e(0x9bf),
            'Translation': 'Translation',
            'VOL_AND_HYP': _0x324b8e(0x1d1),
            'VERTEX_CAPTURE': 'VERTEX_CAPTURE',
            'SEC_TEX_EMISSION': 'SEC_TEX_EMISSION',
            'BRDF': _0x324b8e(0x87a),
            'PBR_THEME': _0x324b8e(0x383),
            'IBL': 'IBL',
            'FLATTEN': _0x324b8e(0x12f),
            'UseLineColor': _0x324b8e(0x7fc),
            'Instance': _0x324b8e(0x145),
            'InstanceBim': 'InstanceBim',
            'InstancePipe': _0x324b8e(0x5bc),
            'COMPUTE_TEXCOORD': 'COMPUTE_TEXCOORD',
            'VertexColor': _0x324b8e(0x899),
            'VertexNormal': _0x324b8e(0x39f),
            'HAS_BASE_TEXTURE': 'HAS_BASE_TEXTURE',
            'HAS_NORMAL_TEXTURE': _0x324b8e(0x788),
            'HAS_OCCLUSION_TEXTURE': _0x324b8e(0x836),
            'HAS_EMISSIVE_TEXTURE': 'HAS_EMISSIVE_TEXTURE',
            'REFRACTION': _0x324b8e(0x581),
            'HAS_ANISOTROPY': _0x324b8e(0xa50),
            'HAS_CLEARCOAT': _0x324b8e(0x51c),
            'HAS_VOLUME': _0x324b8e(0x772),
            'HAS_TRANSMISSION': 'HAS_TRANSMISSION',
            'USE_BatchPBR': _0x324b8e(0x4aa),
            'HAS_DIR_LIGHTS': _0x324b8e(0x9f1),
            'HAS_POINT_LIGHTS': _0x324b8e(0x2b7),
            'HAS_SPOT_LIGHTS': _0x324b8e(0x539),
            'HAS_HEMISPHERE_LIGHTS': 'HAS_HEMISPHERE_LIGHTS',
            'NO_TEXCOORD': _0x324b8e(0x748),
            'FLOOD_ANALYSIS': _0x324b8e(0x8bb),
            'HAS_RAIN': 'HAS_RAIN',
            'HAS_WETNESS': _0x324b8e(0x4e5),
            'HAS_SNOW': 'HAS_SNOW',
            'HAS_MetallicRoughness_TEXTURE': _0x324b8e(0x7e6)
        })
            , _0x288745 = Object['freeze']({
                'BIM': 0x11,
                'PIPELINE': 0x1d
            })
            , _0x459ff1 = _0x324b8e(0x25a)
            , _0x256ca9 = '\x0a#ifdef\x20HAS_SNOW\x0auniform\x20float\x20uSnowCoverageFactor;\x0auniform\x20sampler2D\x20uSnowMaskTexture;\x0auniform\x20sampler2D\x20uSnowNormalTexture;\x0a\x0avec3\x20getSnowMaskValue(sampler2D\x20uSnowMaskTexture,\x20vec2\x20snowUV)\x0a{\x0a\x09return\x20texture(uSnowMaskTexture,\x20snowUV).rgb;\x0a}\x0a\x0afloat\x20getSnowCoverage(float\x20snow_coverage,\x20float\x20max_snow_coverage,\x20vec3\x20normalWS,\x20float\x20z_mask)\x0a{\x0a\x09float\x20normal_z\x20=\x20normalWS.z;\x0a\x09normal_z\x20+=\x201.1\x20+\x20z_mask;\x0a\x09normal_z\x20=\x20clamp(normal_z\x20*\x200.5,\x200.0,\x201.0);\x0a\x09float\x20final_snow_coverage\x20=\x20clamp(snow_coverage,\x200.0,\x20max_snow_coverage);\x0a\x09final_snow_coverage\x20=\x20clamp(final_snow_coverage*normal_z,\x200.0,\x201.0);\x0a\x09return\x20final_snow_coverage;\x0a}\x0a\x0afloat\x20getSnowCoverageWithMaskTexture(float\x20finalSnowCoverage,\x20float\x20heightValue,\x20float\x20snow_scatter_value,\x20float\x20snow_scatter_alpha,\x20float\x20tighten_value)\x0a{\x0a\x09float\x20scatter_value\x20=\x20mix(heightValue,\x20snow_scatter_value,\x20snow_scatter_alpha);\x0a\x09return\x20clamp((tighten_value\x20+\x201.0)\x20*\x20finalSnowCoverage\x20-\x20tighten_value\x20*\x20scatter_value,\x200.0,\x201.0);\x0a}\x0a\x0afloat\x20getSnowAlpha(vec3\x20normalWS,\x20float\x20snow_coverage,\x20float\x20z_mask)\x0a{\x0a\x09return\x20clamp((normalWS.z\x20+\x20z_mask)\x20*\x205.0,\x200.0,\x201.0)\x20*\x20snow_coverage;\x0a}\x0a\x0avec3\x20getFinalBaseColor(vec3\x20baseColor,\x20vec3\x20snow_baseColor,\x20float\x20snowAlpha)\x0a{\x0a\x09return\x20mix(baseColor,\x20snow_baseColor,\x20snowAlpha);\x0a}\x0a\x0afloat\x20getFinalRoughness(float\x20roughness,\x20float\x20snow_roughness,\x20float\x20snowAlpha)\x0a{\x0a\x09return\x20mix(roughness,\x20snow_roughness,\x20snowAlpha);\x0a}\x0a\x0avec3\x20getFinalNormal(vec3\x20normalWS,\x20vec3\x20snowNormal,\x20float\x20blendNormalValue,\x20float\x20snow_coverage)\x0a{\x0a\x09vec3\x20snowNormal_part2\x20=\x20vec3(snowNormal.xy\x20-\x20vec2(0.5),\x201.0);\x0a\x09float\x20normal_alpha\x20=\x20(1.0\x20-\x20blendNormalValue)*\x20snow_coverage;\x0a\x09return\x20mix(normalWS,\x20snowNormal_part2,\x20normal_alpha);\x0a}\x0a\x0avoid\x20snowGenerator(sampler2D\x20uSnowMaskTexture,\x20sampler2D\x20uSnowNormalTexture,\x20vec2\x20snowUV,\x20float\x20snow_coverage,\x20inout\x20vec3\x20normalWS,\x20inout\x20vec3\x20baseColor,\x20inout\x20float\x20roughness)\x0a{\x0a\x09vec3\x20snowMaskValue\x20=\x20texture(uSnowMaskTexture,\x20snowUV).rgb;\x0a\x09const\x20float\x20max_snow_coverage\x20=\x201.0;\x0a\x09const\x20float\x20z_mask\x20=\x200.0;\x0a\x09float\x20snowCoverage\x20=\x20getSnowCoverage(snow_coverage,\x20max_snow_coverage,\x20normalWS,\x20z_mask);\x0a\x09const\x20float\x20heightValue\x20=\x200.5;\x0a\x09float\x20snow_scatter_value\x20=\x20snowMaskValue.g;\x0a\x09const\x20float\x20snow_scatter_alpha\x20=\x200.5;\x0a\x09const\x20float\x20tighten_value\x20=\x204.0;\x0a\x20\x20\x20\x20snowCoverage\x20=\x20getSnowCoverageWithMaskTexture(snowCoverage,\x20heightValue,\x20snow_scatter_value,\x20snow_scatter_alpha,\x20tighten_value);\x0a\x09float\x20snow_alpha\x20=\x20getSnowAlpha(normalWS,\x20snowCoverage,\x20z_mask);\x0a\x09baseColor\x20=\x20getFinalBaseColor(baseColor,\x20vec3(snowMaskValue.r),\x20snow_alpha);\x0a\x09roughness\x20=\x20getFinalRoughness(roughness,\x20snowMaskValue.b,\x20snow_alpha);\x0a\x09vec3\x20snowNormalValue\x20=\x20texture(uSnowNormalTexture,\x20snowUV).rgb;\x0a\x09const\x20float\x20blendNormalValue\x20=\x200.3;\x0a\x09normalWS\x20=\x20getFinalNormal(normalWS,\x20snowNormalValue,\x20blendNormalValue,\x20snowCoverage);\x0a}\x0a\x0a#endif\x0a'
            , _0x429de0 = _0x324b8e(0x13c)
            , _0x531220 = _0x324b8e(0x54a)
            , _0x3199f8 = _0x324b8e(0x53f)
            , _0x1c9f6c = _0x324b8e(0x4b0)
            , _0x5eb8a8 = _0x324b8e(0x1bf)
            , _0x58c8a8 = _0x324b8e(0xa8c)
            , _0x725163 = _0x324b8e(0x484)
            , _0x972fb5 = '\x0a\x20\x20\x20\x20#define\x20cubeUV_minMipLevel\x204.0\x0a\x09#define\x20cubeUV_minTileSize\x2016.0\x0a\x0a\x09//\x20These\x20shader\x20functions\x20convert\x20between\x20the\x20UV\x20coordinates\x20of\x20a\x20single\x20face\x20of\x0a\x09//\x20a\x20cubemap,\x20the\x200-5\x20integer\x20index\x20of\x20a\x20cube\x20face,\x20and\x20the\x20direction\x20vector\x20for\x0a\x09//\x20sampling\x20a\x20textureCube\x20(not\x20generally\x20normalized\x20).\x0a\x0a\x09float\x20getFace(\x20vec3\x20direction\x20)\x20{\x0a\x0a\x09\x09vec3\x20absDirection\x20=\x20abs(\x20direction\x20);\x0a\x0a\x09\x09float\x20face\x20=\x20-\x201.0;\x0a\x0a\x09\x09if\x20(\x20absDirection.x\x20>\x20absDirection.z\x20)\x20{\x0a\x0a\x09\x09\x09if\x20(\x20absDirection.x\x20>\x20absDirection.y\x20)\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.x\x20>\x200.0\x20?\x200.0\x20:\x203.0;\x0a\x0a\x09\x09\x09else\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201.0\x20:\x204.0;\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09if\x20(\x20absDirection.z\x20>\x20absDirection.y\x20)\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.z\x20>\x200.0\x20?\x202.0\x20:\x205.0;\x0a\x0a\x09\x09\x09else\x0a\x0a\x09\x09\x09\x09face\x20=\x20direction.y\x20>\x200.0\x20?\x201.0\x20:\x204.0;\x0a\x0a\x09\x09}\x0a\x0a\x09\x09return\x20face;\x0a\x0a\x09}\x0a\x0a\x09//\x20RH\x20coordinate\x20system;\x20PMREM\x20face-indexing\x20convention\x0a\x09vec2\x20getUV(\x20vec3\x20direction,\x20float\x20face\x20)\x20{\x0a\x0a\x09\x09vec2\x20uv;\x0a\x0a\x09\x09if\x20(\x20face\x20==\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20direction.z,\x20direction.y\x20)\x20/\x20abs(\x20direction.x\x20);\x20//\x20pos\x20x\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x201.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.x,\x20-\x20direction.z\x20)\x20/\x20abs(\x20direction.y\x20);\x20//\x20pos\x20y\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x202.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.x,\x20direction.y\x20)\x20/\x20abs(\x20direction.z\x20);\x20//\x20pos\x20z\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x203.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.z,\x20direction.y\x20)\x20/\x20abs(\x20direction.x\x20);\x20//\x20neg\x20x\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20face\x20==\x204.0\x20)\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20-\x20direction.x,\x20direction.z\x20)\x20/\x20abs(\x20direction.y\x20);\x20//\x20neg\x20y\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09uv\x20=\x20vec2(\x20direction.x,\x20direction.y\x20)\x20/\x20abs(\x20direction.z\x20);\x20//\x20neg\x20z\x0a\x0a\x09\x09}\x0a\x0a\x09\x09return\x200.5\x20*\x20(\x20uv\x20+\x201.0\x20);\x0a\x0a\x09}\x0a\x0a\x09vec3\x20bilinearCubeUV(\x20sampler2D\x20envMap,\x20vec3\x20direction,\x20float\x20mipInt\x20)\x20{\x0a\x0a\x09\x09float\x20face\x20=\x20getFace(\x20direction\x20);\x0a\x0a\x09\x09float\x20filterInt\x20=\x20max(\x20cubeUV_minMipLevel\x20-\x20mipInt,\x200.0\x20);\x0a\x0a\x09\x09mipInt\x20=\x20max(\x20mipInt,\x20cubeUV_minMipLevel\x20);\x0a\x0a\x09\x09float\x20faceSize\x20=\x20exp2(\x20mipInt\x20);\x0a\x0a\x09\x09vec2\x20uv\x20=\x20getUV(\x20direction,\x20face\x20)\x20*\x20(\x20faceSize\x20-\x202.0\x20)\x20+\x201.0;\x0a\x0a\x09\x09if\x20(\x20face\x20>\x202.0\x20)\x20{\x0a\x0a\x09\x09\x09uv.y\x20+=\x20faceSize;\x0a\x0a\x09\x09\x09face\x20-=\x203.0;\x0a\x0a\x09\x09}\x0a\x0a\x09\x09uv.x\x20+=\x20face\x20*\x20faceSize;\x0a\x0a\x09\x09uv.x\x20+=\x20filterInt\x20*\x203.0\x20*\x20cubeUV_minTileSize;\x0a\x0a\x09\x09uv.y\x20+=\x204.0\x20*\x20(\x20exp2(\x20CUBEUV_MAX_MIP\x20)\x20-\x20faceSize\x20);\x0a\x0a\x09\x09uv.x\x20*=\x20CUBEUV_TEXEL_WIDTH;\x0a\x09\x09uv.y\x20*=\x20CUBEUV_TEXEL_HEIGHT;\x0a\x0a\x09\x09return\x20textureGradEXT(\x20envMap,\x20uv,\x20vec2(\x200.0\x20),\x20vec2(\x200.0\x20)\x20).rgb;\x20//\x20disable\x20anisotropic\x20filtering\x0a\x0a\x09}\x0a\x0a\x09//\x20These\x20defines\x20must\x20match\x20with\x20PMREMGenerator\x0a\x0a\x09#define\x20cubeUV_r0\x201.0\x0a\x09#define\x20cubeUV_v0\x200.339\x0a\x09#define\x20cubeUV_m0\x20-\x202.0\x0a\x09#define\x20cubeUV_r1\x200.8\x0a\x09#define\x20cubeUV_v1\x200.276\x0a\x09#define\x20cubeUV_m1\x20-\x201.0\x0a\x09#define\x20cubeUV_r4\x200.4\x0a\x09#define\x20cubeUV_v4\x200.046\x0a\x09#define\x20cubeUV_m4\x202.0\x0a\x09#define\x20cubeUV_r5\x200.305\x0a\x09#define\x20cubeUV_v5\x200.016\x0a\x09#define\x20cubeUV_m5\x203.0\x0a\x09#define\x20cubeUV_r6\x200.21\x0a\x09#define\x20cubeUV_v6\x200.0038\x0a\x09#define\x20cubeUV_m6\x204.0\x0a\x0a\x09float\x20roughnessToMip(\x20float\x20roughness\x20)\x20{\x0a\x0a\x09\x09float\x20mip\x20=\x200.0;\x0a\x0a\x09\x09if\x20(\x20roughness\x20>=\x20cubeUV_r1\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r0\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m1\x20-\x20cubeUV_m0\x20)\x20/\x20(\x20cubeUV_r0\x20-\x20cubeUV_r1\x20)\x20+\x20cubeUV_m0;\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20roughness\x20>=\x20cubeUV_r4\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r1\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m4\x20-\x20cubeUV_m1\x20)\x20/\x20(\x20cubeUV_r1\x20-\x20cubeUV_r4\x20)\x20+\x20cubeUV_m1;\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20roughness\x20>=\x20cubeUV_r5\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r4\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m5\x20-\x20cubeUV_m4\x20)\x20/\x20(\x20cubeUV_r4\x20-\x20cubeUV_r5\x20)\x20+\x20cubeUV_m4;\x0a\x0a\x09\x09}\x20else\x20if\x20(\x20roughness\x20>=\x20cubeUV_r6\x20)\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20(\x20cubeUV_r5\x20-\x20roughness\x20)\x20*\x20(\x20cubeUV_m6\x20-\x20cubeUV_m5\x20)\x20/\x20(\x20cubeUV_r5\x20-\x20cubeUV_r6\x20)\x20+\x20cubeUV_m5;\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09mip\x20=\x20-\x202.0\x20*\x20log2(\x201.16\x20*\x20roughness\x20);\x20//\x201.16\x20=\x201.79^0.25\x0a\x09\x09}\x0a\x0a\x09\x09return\x20mip;\x0a\x0a\x09}\x0a\x0a\x09vec4\x20textureCubeUV(\x20sampler2D\x20envMap,\x20vec3\x20sampleDir,\x20float\x20roughness\x20)\x20{\x0a\x0a\x09\x09float\x20mip\x20=\x20clamp(\x20roughnessToMip(\x20roughness\x20),\x20cubeUV_m0,\x20CUBEUV_MAX_MIP\x20);\x0a\x0a\x09\x09float\x20mipF\x20=\x20fract(\x20mip\x20);\x0a\x0a\x09\x09float\x20mipInt\x20=\x20floor(\x20mip\x20);\x0a\x0a\x09\x09vec3\x20color0\x20=\x20bilinearCubeUV(\x20envMap,\x20sampleDir,\x20mipInt\x20);\x0a\x0a\x09\x09if\x20(\x20mipF\x20==\x200.0\x20)\x20{\x0a\x0a\x09\x09\x09return\x20vec4(\x20color0,\x201.0\x20);\x0a\x0a\x09\x09}\x20else\x20{\x0a\x0a\x09\x09\x09vec3\x20color1\x20=\x20bilinearCubeUV(\x20envMap,\x20sampleDir,\x20mipInt\x20+\x201.0\x20);\x0a\x0a\x09\x09\x09return\x20vec4(\x20mix(\x20color0,\x20color1,\x20mipF\x20),\x201.0\x20);\x0a\x0a\x09\x09}\x0a\x0a\x09}\x0a';
        const _0x495499 = {
            'rainDecl': _0x459ff1,
            'snowDecl': _0x256ca9,
            'hemisphereLightDecl': _0x429de0,
            'pointLightDecl': _0x531220,
            'spotLightDecl': _0x3199f8,
            'directionLightDecl': _0x1c9f6c,
            'lightSourceImpl': _0x5eb8a8,
            'brdf': _0x58c8a8,
            'executeServerExcavationDecl': _0x725163,
            'cubeUV_reflection': _0x972fb5
        }
            , _0x3e64d6 = Cesium[_0x324b8e(0x14b)];
        function _0x201542() {
            const _0x1ae448 = _0x324b8e;
            this[_0x1ae448(0x40e)] = void 0x0,
                this[_0x1ae448(0x56c)] = void 0x0;
        }
        function _0x12909d(_0x4f87cb) {
            const _0x7edb83 = _0x324b8e;
            return _0x4f87cb[_0x7edb83(0x3ed)](/^[ \t]*#include +<([\w\d./]+)>/gm, function (_0x36f988, _0x3de554) {
                var _0x2b7db1 = _0x495499[_0x3de554];
                if (void 0x0 === _0x2b7db1)
                    throw new Error('Can\x20not\x20resolve\x20#include\x20<' + _0x3de554 + '>');
                return _0x12909d(_0x2b7db1);
            });
        }
        _0x201542[_0x324b8e(0x74f)][_0x324b8e(0x414)] = function (_0x289e69, _0x40438f) {
            const _0x4dc5ea = _0x324b8e;
            this['model'] = _0x40438f,
                this[_0x4dc5ea(0x56c)] = _0x289e69;
        }
            ,
            _0x201542[_0x324b8e(0x74f)][_0x324b8e(0x62c)] = function () {
                const _0x4e0670 = _0x324b8e
                    , _0x5b5d58 = this['context']
                    , _0x1052ea = this[_0x4e0670(0x40e)]
                    , _0x7420aa = _0x1052ea['layer']
                    , _0x319d99 = _0x1052ea['vs']
                    , _0x121ec3 = _0x12909d(_0x1052ea['fs'])
                    , _0x44d553 = _0x1052ea[_0x4e0670(0xa0f)]
                    , _0x4fa572 = _0x1052ea[_0x4e0670(0x932)]
                    , _0x3201c0 = _0x1052ea[_0x4e0670(0x76b)];
                let _0x4e75d4 = _0x1052ea[_0x4e0670(0x5d3)] ? _0x1052ea[_0x4e0670(0x5d3)]['getVertexShaderCallback']()(_0x319d99) : _0x319d99;
                void 0x0 === _0x5b5d58[_0x4e0670(0x40f)] && (_0x5b5d58[_0x4e0670(0x40f)] = Cesium['defaultValue'](function (_0x4d5a02, _0x1255ba) {
                    const _0x31354b = _0x4e0670;
                    let _0x3d1c32 = _0x1255ba[_0x31354b(0x376)];
                    for (let _0x4e5d4c = 0x0; _0x4e5d4c < _0x3d1c32; ++_0x4e5d4c) {
                        let _0x4af9a3 = _0x4d5a02['getExtension'](_0x1255ba[_0x4e5d4c]);
                        if (_0x4af9a3)
                            return _0x4af9a3;
                    }
                }(_0x5b5d58[_0x4e0670(0x6c7)], [_0x4e0670(0x784)]), !0x1));
                let _0x5f3c50 = new Cesium['ShaderSource']({
                    'sources': [_0x4e75d4]
                })
                    , _0x16d79e = new Cesium[(_0x4e0670(0x966))]({
                        'sources': [_0x121ec3]
                    });
                if (Cesium[_0x4e0670(0x14b)](_0x44d553['aNormal']) && (_0x5f3c50[_0x4e0670(0x9e5)]['push'](_0x48861b[_0x4e0670(0x39f)]),
                    _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b['VertexNormal'])),
                    Cesium[_0x4e0670(0x14b)](_0x44d553[_0x4e0670(0x262)]) && _0x5f3c50[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b['VertexColor']),
                    _0x4fa572 && 0x2 === _0x4fa572['textures'][_0x4e0670(0x376)] && (_0x5f3c50[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x4e0670(0x717)),
                        _0x16d79e['defines'][_0x4e0670(0x745)](_0x4e0670(0x717))),
                    Cesium[_0x4e0670(0x14b)](_0x44d553['aTexCoord0']) ? (_0x5f3c50[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x4e0670(0xed)),
                        _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x4e0670(0xed)),
                        _0x4fa572 && _0x4fa572['textures']['length'] > 0x0 && (_0x5f3c50[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x651)]),
                            _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x651)]))) : _0x4fa572 && _0x4fa572['textures']['length'] > 0x0 && _0x16d79e['defines'][_0x4e0670(0x745)](_0x4e0670(0x748)),
                    _0x3201c0[_0x4e0670(0x7eb)] > -0x1 && _0x5f3c50['defines'][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x145)]),
                    _0x3201c0[_0x4e0670(0x313)] === _0x288745[_0x4e0670(0x433)] && _0x5f3c50[_0x4e0670(0x9e5)]['push'](_0x48861b[_0x4e0670(0x5f2)]),
                    _0x3201c0[_0x4e0670(0x313)] === _0x288745[_0x4e0670(0x8ed)] && _0x5f3c50['defines'][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x5bc)]),
                    Cesium[_0x4e0670(0x14b)](_0x3201c0[_0x4e0670(0xa19)])) {
                    let _0x26f05b = _0x3201c0['compressOptions'];
                    (_0x26f05b & _0x5983eb[_0x4e0670(0x649)]) === _0x5983eb[_0x4e0670(0x649)] && _0x5f3c50['defines'][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x272)]),
                        (_0x26f05b & _0x5983eb[_0x4e0670(0x5e2)]) === _0x5983eb['SVC_Normal'] && _0x5f3c50[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x10a)]),
                        (_0x26f05b & _0x5983eb[_0x4e0670(0x9ca)]) === _0x5983eb['SVC_VertexColor'] && _0x5f3c50[_0x4e0670(0x9e5)]['push'](_0x48861b[_0x4e0670(0x456)]),
                        (_0x26f05b & _0x5983eb[_0x4e0670(0x7e0)]) === _0x5983eb['SVC_TexutreCoord'] && _0x5f3c50[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x17e)]);
                }
                if (_0x3201c0[_0x4e0670(0x599)] && _0x44d553[_0x4e0670(0xed)] && _0x5f3c50['defines']['push'](_0x48861b[_0x4e0670(0x465)]),
                    _0x7420aa[_0x4e0670(0x314)] && _0x16d79e['defines'][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x6dd)]),
                    _0x7420aa[_0x4e0670(0x151)] && _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x803)]),
                    _0x7420aa[_0x4e0670(0x2cf)]['isUseHypColorTable'] && (_0x5f3c50['defines'][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x541)]),
                        _0x16d79e[_0x4e0670(0x9e5)]['push'](_0x48861b[_0x4e0670(0x541)])),
                    _0x7420aa[_0x4e0670(0x460)][_0x4e0670(0x552)] && _0x5f3c50[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x12f)]),
                    _0x7420aa['swipeEnabled'] && _0x16d79e['defines']['push'](_0x48861b['APPLY_SWIPE']),
                    _0x3201c0['textureCoordIsW'] && _0x44d553[_0x4e0670(0x724)] && _0x5f3c50[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x465)]),
                    _0x4fa572['batchTable'] && (_0x5f3c50['defines'][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x50a)]),
                        _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x50a)])),
                    _0x4fa572[_0x4e0670(0x4d3)] && (_0x5f3c50['defines'][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x9bf)]),
                        _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b['TextureAtlasSec'])),
                    Cesium[_0x4e0670(0x14b)](_0x1052ea[_0x4e0670(0xa46)]) && _0x1052ea[_0x4e0670(0xa46)][_0x4e0670(0x376)] > 0x0 && 0x2 === _0x1052ea[_0x4e0670(0xa46)][0x0][_0x4e0670(0x97f)] && _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x491)]),
                    function (_0x3b9ac8) {
                        const _0xd2da67 = _0x4e0670;
                        return 0x1 !== _0x3b9ac8[_0xd2da67(0x5d1)] || 0x1 !== _0x3b9ac8[_0xd2da67(0xf3)] || 0x0 !== _0x3b9ac8[_0xd2da67(0x4b5)] || 0x1 !== _0x3b9ac8[_0xd2da67(0x19f)] || 0x1 !== _0x3b9ac8[_0xd2da67(0xaa0)];
                    }(_0x7420aa) && _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b['ADJUST_COLOR']),
                    _0x4fa572[_0x4e0670(0x1b9)] || Cesium['defined'](_0x7420aa[_0x4e0670(0x5e5)][_0x4e0670(0xdf)]) && !_0x7420aa[_0x4e0670(0x5e5)][_0x4e0670(0xdf)]) {
                    var _0x87aaa6 = Cesium['defined'](_0x44d553[_0x4e0670(0x724)]);
                    _0x87aaa6 && _0x16d79e[_0x4e0670(0x9e5)]['push'](_0x48861b[_0x4e0670(0x87a)]),
                        (_0x4fa572[_0x4e0670(0x1b8)] > -0x1 && _0x3e64d6(_0x4fa572['baseColorTexture']) || _0x3e64d6(_0x7420aa[_0x4e0670(0x5e5)][_0x4e0670(0x163)][_0x4e0670(0x79f)])) && _0x87aaa6 && _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x6d2)]),
                        (_0x4fa572[_0x4e0670(0x1d7)] > -0x1 && _0x3e64d6(_0x4fa572[_0x4e0670(0xaaf)]) || _0x3e64d6(_0x7420aa['_PBRMaterialParams'][_0x4e0670(0x163)][_0x4e0670(0xaaf)])) && _0x87aaa6 && _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x7e6)]),
                        (_0x4fa572[_0x4e0670(0x445)] > -0x1 && _0x3e64d6(_0x4fa572[_0x4e0670(0x565)]) || _0x3e64d6(_0x7420aa[_0x4e0670(0x5e5)]['pbrMetallicRoughness'][_0x4e0670(0x565)])) && _0x87aaa6 && _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x788)]),
                        (_0x4fa572['_emissiveTextureIndex'] > -0x1 && _0x3e64d6(_0x4fa572[_0x4e0670(0x876)]) || _0x3e64d6(_0x7420aa[_0x4e0670(0x5e5)]['pbrMetallicRoughness'][_0x4e0670(0x876)])) && _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x66f)]),
                        (_0x4fa572[_0x4e0670(0x5c5)] > -0x1 || _0x3e64d6(_0x7420aa['_PBRMaterialParams'][_0x4e0670(0x163)][_0x4e0670(0x656)]) && _0x7420aa[_0x4e0670(0x5e5)][_0x4e0670(0x163)][_0x4e0670(0x656)] instanceof Texture) && _0x87aaa6 && _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x836)]),
                        (_0x3e64d6(_0x4fa572[_0x4e0670(0x14e)]) || _0x3e64d6(_0x7420aa['_PBRMaterialParams']['pbrMetallicRoughness'][_0x4e0670(0x17a)])) && _0x87aaa6 && _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0xa50)]),
                        (_0x3e64d6(_0x4fa572[_0x4e0670(0x51d)]) || _0x3e64d6(_0x7420aa['_PBRMaterialParams'][_0x4e0670(0x163)][_0x4e0670(0x969)])) && _0x87aaa6 && _0x16d79e['defines']['push'](_0x48861b[_0x4e0670(0x51c)]),
                        (_0x4fa572[_0x4e0670(0x844)] > -0x1 || _0x3e64d6(_0x7420aa['_PBRMaterialParams'][_0x4e0670(0x163)][_0x4e0670(0x1de)]) && _0x7420aa[_0x4e0670(0x5e5)][_0x4e0670(0x163)][_0x4e0670(0x1de)] > 0x0) && _0x16d79e['defines'][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x581)]),
                        _0x3e64d6(_0x7420aa[_0x4e0670(0x5e5)][_0x4e0670(0x163)]['snowEffect']) && _0x7420aa['_PBRMaterialParams']['pbrMetallicRoughness'][_0x4e0670(0xa2a)][_0x4e0670(0x380)] && _0x7420aa[_0x4e0670(0x5e5)][_0x4e0670(0x163)]['snowEffect']['snowMaskTexture'] instanceof Texture && _0x3e64d6(_0x7420aa[_0x4e0670(0x5e5)][_0x4e0670(0x163)]['snowEffect'][_0x4e0670(0x488)]) && _0x7420aa[_0x4e0670(0x5e5)][_0x4e0670(0x163)][_0x4e0670(0xa2a)][_0x4e0670(0x488)] instanceof Texture && _0x16d79e['defines']['push'](_0x48861b[_0x4e0670(0x665)]),
                        _0x3e64d6(_0x7420aa['_PBRMaterialParams']['pbrMetallicRoughness']['rainEffect']) && _0x7420aa[_0x4e0670(0x5e5)]['pbrMetallicRoughness'][_0x4e0670(0x9f5)][_0x4e0670(0x221)] && _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x4e5)]),
                        _0x3e64d6(_0x7420aa['_PBRMaterialParams'][_0x4e0670(0x163)][_0x4e0670(0x9f5)]) && _0x7420aa['_PBRMaterialParams'][_0x4e0670(0x163)][_0x4e0670(0x9f5)]['rippleTexture'] && _0x7420aa[_0x4e0670(0x5e5)][_0x4e0670(0x163)]['rainEffect'][_0x4e0670(0x189)] instanceof Texture && _0x16d79e[_0x4e0670(0x9e5)][_0x4e0670(0x745)](_0x48861b[_0x4e0670(0x59a)]);
                }
                _0x1052ea['shaderProgram'] = Cesium[_0x4e0670(0x5a0)][_0x4e0670(0x6bf)]({
                    'context': _0x5b5d58,
                    'vertexShaderSource': _0x5f3c50,
                    'fragmentShaderSource': _0x16d79e,
                    'attributeLocations': _0x44d553
                });
            }
            ;
        var _0x1645f2 = Object[_0x324b8e(0x3e6)]({
            'RESET': 0x0,
            'SetColor': 0x1,
            'SELECTED': 0x2,
            'HIDE': 0x4,
            'OFFSET': 0x8,
            'CLIP': 0x10,
            'BLOOM': 0x20,
            'ALL': 0xff
        })
            , _0x2c6caf = Object['freeze']({
                'NONE': 0x0,
                'TITANIUM_SCUFFED': 0x1,
                'METAL_PLATE': 0x2,
                'EMISSION': 0x4,
                'ROUGHNESS': 0x8
            });
        function _0x35de87(_0x2f68b2) {
            const _0x1b25bd = _0x324b8e;
            let _0x47f160, _0x5be7ec;
            for (this[_0x1b25bd(0xa41)] = _0x2f68b2[_0x1b25bd(0xa41)],
                this[_0x1b25bd(0x76b)] = _0x2f68b2[_0x1b25bd(0x76b)],
                this[_0x1b25bd(0xa46)] = _0x2f68b2[_0x1b25bd(0xa46)],
                this[_0x1b25bd(0x216)] = new Cesium[(_0x1b25bd(0x953))](),
                this[_0x1b25bd(0x57b)] = new Cesium[(_0x1b25bd(0x953))](),
                this['shaderProgramToCreate'] = new Cesium[(_0x1b25bd(0x953))](),
                _0x47f160 = 0x0,
                _0x5be7ec = this['vertexPackage'][_0x1b25bd(0xaa9)][_0x1b25bd(0x376)]; _0x47f160 < _0x5be7ec; _0x47f160++)
                this[_0x1b25bd(0x216)][_0x1b25bd(0x2a8)](_0x47f160);
            for (_0x47f160 = 0x0,
                _0x5be7ec = this[_0x1b25bd(0xa46)]['length']; _0x47f160 < _0x5be7ec; _0x47f160++)
                this['indexBufferToCreate']['enqueue'](_0x47f160);
            this[_0x1b25bd(0xad2)][_0x1b25bd(0x2a8)](0x0),
                this[_0x1b25bd(0x399)] = _0x2f68b2[_0x1b25bd(0x399)],
                this[_0x1b25bd(0x932)] = Cesium[_0x1b25bd(0x225)](_0x2f68b2[_0x1b25bd(0x932)], new _0xec489()),
                this[_0x1b25bd(0x235)] = _0x2f68b2[_0x1b25bd(0x235)],
                this['modelMatrix'] = _0x2f68b2[_0x1b25bd(0x896)],
                this[_0x1b25bd(0x1f6)] = _0x2f68b2[_0x1b25bd(0x1f6)],
                this['invGeoMatrix'] = Cesium[_0x1b25bd(0x5ab)][_0x1b25bd(0x20e)](this[_0x1b25bd(0x1f6)], new Cesium[(_0x1b25bd(0x5ab))]()),
                this[_0x1b25bd(0x332)] = _0x2f68b2[_0x1b25bd(0x76b)][_0x1b25bd(0x332)],
                this[_0x1b25bd(0xa0f)] = _0x2f68b2[_0x1b25bd(0x76b)][_0x1b25bd(0xe2)],
                this[_0x1b25bd(0x67b)] = void 0x0,
                this[_0x1b25bd(0x99e)] = void 0x0,
                this['colorCommand'] = void 0x0,
                this[_0x1b25bd(0x49c)] = _0x2f68b2[_0x1b25bd(0x49c)],
                this[_0x1b25bd(0x813)] = new Cesium[(_0x1b25bd(0x869))](),
                this[_0x1b25bd(0x5d3)] = void 0x0,
                this[_0x1b25bd(0x6e5)] = !0x1,
                this['pickColorIdentifier'] = _0x1b25bd(0x385),
                this[_0x1b25bd(0x9f3)] = new Cesium['AssociativeArray'](),
                this[_0x1b25bd(0x192)] = new Cesium[(_0x1b25bd(0x869))](),
                this[_0x1b25bd(0x700)] = 0x4 === _0x2f68b2[_0x1b25bd(0x76b)][_0x1b25bd(0xaa9)][0x0][_0x1b25bd(0x70f)],
                this[_0x1b25bd(0x66a)] = _0x2f68b2[_0x1b25bd(0x66a)],
                this[_0x1b25bd(0x171)](),
                this[_0x1b25bd(0x84b)] = !0x1;
        }
        const _0x16f70b = new _0x3c1766()
            , _0x40681e = new _0x37b90f()
            , _0x49b160 = new _0x201542();
        _0x35de87[_0x324b8e(0x74f)][_0x324b8e(0x47f)] = function (_0x332757) {
            !function (_0x466a34, _0x10201a) {
                const _0x586b5d = _0x557c;
                let _0x4a79b7 = _0x466a34[_0x586b5d(0xa41)][_0x586b5d(0x56c)]
                    , _0x1ef02b = _0x466a34[_0x586b5d(0x216)];
                for (; _0x1ef02b['length'];) {
                    let _0x4b0883 = _0x1ef02b[_0x586b5d(0x919)]();
                    if (_0x16f70b['set'](_0x4a79b7, _0x466a34, _0x4b0883),
                        !_0x10201a[_0x586b5d(0x211)][_0x586b5d(0x62c)](_0x16f70b, Cesium['JobType']['BUFFER']))
                        break;
                    _0x1ef02b[_0x586b5d(0xace)]();
                }
            }(this, _0x332757),
                function (_0x4ec5b2, _0x5e4968) {
                    const _0xa7ad1c = _0x557c;
                    let _0x33bf30 = _0x4ec5b2[_0xa7ad1c(0xa41)]['context']
                        , _0x5a6ca5 = _0x4ec5b2[_0xa7ad1c(0x57b)];
                    for (; _0x5a6ca5['length'];) {
                        let _0xafb3b = _0x5a6ca5['peek']();
                        if (_0x40681e['set'](_0x33bf30, _0x4ec5b2, _0xafb3b),
                            !_0x5e4968['jobScheduler'][_0xa7ad1c(0x62c)](_0x40681e, Cesium['JobType']['BUFFER']))
                            break;
                        _0x5a6ca5['dequeue']();
                    }
                }(this, _0x332757);
        }
            ,
            _0x35de87[_0x324b8e(0x74f)][_0x324b8e(0x250)] = function (_0x4fe229) {
                !function (_0x1ce343, _0x233229) {
                    const _0xc902ee = _0x557c;
                    let _0x1cabdd = _0x1ce343[_0xc902ee(0xa41)]['context']
                        , _0x599c57 = _0x1ce343['shaderProgramToCreate'];
                    for (; _0x599c57[_0xc902ee(0x376)] && (_0x599c57[_0xc902ee(0x919)](),
                        _0x49b160['set'](_0x1cabdd, _0x1ce343),
                        _0x233229[_0xc902ee(0x211)][_0xc902ee(0x62c)](_0x49b160, Cesium[_0xc902ee(0x398)][_0xc902ee(0x353)]));)
                        _0x599c57[_0xc902ee(0xace)]();
                }(this, _0x4fe229);
            }
            ,
            _0x35de87['prototype'][_0x324b8e(0x3f4)] = function (_0xd039f6) {
                !function (_0x258604, _0x2e79b0) {
                    const _0x747d0c = _0x557c;
                    if (Cesium[_0x747d0c(0x14b)](_0x258604[_0x747d0c(0x5d3)]) || !_0x258604[_0x747d0c(0x49c)])
                        return;
                    const _0x52e23e = _0x258604[_0x747d0c(0xa41)]['context'];
                    let _0xe0de98 = [];
                    _0xe0de98['push']({
                        'functionName': 's3m_batchTable_color',
                        'componentDatatype': Cesium[_0x747d0c(0xa57)][_0x747d0c(0x1e0)],
                        'componentsPerAttribute': 0x4,
                        'normalize': !0x0
                    }, {
                        'functionName': _0x747d0c(0xa90),
                        'componentDatatype': Cesium[_0x747d0c(0xa57)][_0x747d0c(0x1e0)],
                        'componentsPerAttribute': 0x4
                    }, {
                        'functionName': _0x747d0c(0x640),
                        'componentDatatype': Cesium[_0x747d0c(0xa57)][_0x747d0c(0x1e0)],
                        'componentsPerAttribute': 0x4,
                        'normalize': !0x0
                    });
                    let _0x41e5a0 = _0x258604[_0x747d0c(0x49c)]
                        , _0x1d1083 = Object['keys'](_0x41e5a0)
                        , _0x1c7dab = _0x258604[_0x747d0c(0x332)] > 0x0 ? _0x258604[_0x747d0c(0x332)] : _0x1d1083[_0x747d0c(0x376)];
                    _0x258604['batchTable'] = new Cesium[(_0x747d0c(0x2e2))](_0x52e23e, _0xe0de98, _0x1c7dab);
                }(this);
            }
            ;
        let _0x346720 = new Cesium[(_0x324b8e(0x85d))]();
        _0x35de87['prototype']['createBoundingBoxForInstance'] = function () {
            const _0x403b64 = _0x324b8e
                , _0x37bd6a = this['vertexPackage'];
            if (!Cesium[_0x403b64(0x14b)](_0x37bd6a) || -0x1 === _0x37bd6a['instanceIndex'] || !Cesium[_0x403b64(0x14b)](_0x37bd6a[_0x403b64(0x197)]))
                return;
            let _0x256e81 = _0x37bd6a[_0x403b64(0x197)]
                , _0x3f6908 = new Cesium[(_0x403b64(0x85d))](_0x256e81[0x0], _0x256e81[0x1], _0x256e81[0x2])
                , _0x55d057 = new Cesium['Cartesian3'](_0x256e81[0x3], _0x256e81[0x4], _0x256e81[0x5])
                , _0x234fe1 = Cesium[_0x403b64(0x85d)][_0x403b64(0x687)](_0x3f6908, _0x55d057, 0.5, _0x346720)
                , _0x3499d7 = Cesium['Cartesian3']['distance'](_0x234fe1, _0x3f6908)
                , _0x4da31f = new Cesium['Cartesian3']();
            Cesium['Matrix4'][_0x403b64(0x5d5)](this[_0x403b64(0x896)], _0x234fe1, _0x4da31f),
                this[_0x403b64(0x399)][_0x403b64(0x6f1)] = _0x4da31f,
                this['boundingVolume'][_0x403b64(0x1cc)] = _0x3499d7,
                _0x37bd6a[_0x403b64(0x197)] = void 0x0;
        }
            ;
        let _0x2d7fff = new Cesium[(_0x324b8e(0x747))]();
        function _0x2e0e39(_0x2ee67f, _0x1be8b2) {
            const _0x373ac6 = _0x324b8e;
            let _0x15ba88 = _0x2ee67f['defines'][_0x373ac6(0xa59)](_0x1be8b2);
            _0x15ba88 >= 0x0 && _0x2ee67f[_0x373ac6(0x9e5)][_0x373ac6(0x646)](_0x15ba88, 0x1);
        }
        function _0x36840f(_0x354dd3) {
            _0x35de87['call'](this, _0x354dd3),
                this['vs'] = _0x293ce9,
                this['fs'] = _0x27cbe0;
        }
        _0x35de87[_0x324b8e(0x74f)][_0x324b8e(0x54b)] = function () {
            const _0x205dcc = _0x324b8e
                , _0x1f923d = this[_0x205dcc(0xa41)]
                , _0x150b27 = _0x1f923d[_0x205dcc(0x56c)]
                , _0x4c4b6f = this[_0x205dcc(0x49c)];
            if (!Cesium[_0x205dcc(0x14b)](_0x4c4b6f))
                return;
            for (let _0x10c030 in _0x4c4b6f)
                _0x4c4b6f[_0x205dcc(0x704)](_0x10c030) && this['selectionInfoMap'][_0x205dcc(0x414)](_0x10c030, _0x4c4b6f[_0x10c030]);
            let _0x3f8a6d = this['batchTable']
                , _0x576cf2 = this[_0x205dcc(0x813)]
                , _0x3c10d3 = _0x576cf2[_0x205dcc(0x17f)];
            for (let _0x42cecb in _0x3c10d3)
                if (_0x3c10d3['hasOwnProperty'](_0x42cecb)) {
                    let _0x728395, _0x5aa777 = _0x576cf2['get'](_0x42cecb);
                    Cesium[_0x205dcc(0x14b)](_0x728395) || (_0x728395 = _0x150b27[_0x205dcc(0x952)]({
                        'primitive': _0x1f923d,
                        'id': _0x42cecb
                    }));
                    let _0x14b45e = _0x728395[_0x205dcc(0x340)];
                    _0x2d7fff['x'] = Cesium[_0x205dcc(0x75c)][_0x205dcc(0xa68)](_0x14b45e['red']),
                        _0x2d7fff['y'] = Cesium[_0x205dcc(0x75c)][_0x205dcc(0xa68)](_0x14b45e[_0x205dcc(0x69b)]),
                        _0x2d7fff['z'] = Cesium[_0x205dcc(0x75c)][_0x205dcc(0xa68)](_0x14b45e['blue']),
                        _0x2d7fff['w'] = Cesium[_0x205dcc(0x75c)][_0x205dcc(0xa68)](_0x14b45e['alpha']);
                    let _0x16601d = _0x5aa777[_0x205dcc(0x256)];
                    if (this[_0x205dcc(0x332)] > 0x0)
                        _0x16601d[_0x205dcc(0xa64)](function (_0x2b0a82) {
                            const _0x5f1292 = _0x205dcc;
                            _0x3f8a6d[_0x5f1292(0x894)](_0x2b0a82, 0x2, _0x2d7fff);
                        });
                    else {
                        let _0xeeba8a = _0x5aa777[_0x205dcc(0x762)];
                        _0x3f8a6d[_0x205dcc(0x894)](_0xeeba8a, 0x2, _0x2d7fff);
                    }
                }
            this['pickInfo'] = void 0x0;
        }
            ,
            _0x35de87[_0x324b8e(0x74f)][_0x324b8e(0x8c1)] = function (_0x3f8ada) {
                const _0xe539f7 = _0x324b8e;
                _0x3f8ada[_0xe539f7(0x384)] && this[_0xe539f7(0x99d)](!_0x3f8ada[_0xe539f7(0x384)]),
                    Object[_0xe539f7(0x698)](_0x3f8ada[_0xe539f7(0x35f)])['length'] > 0x0 && this[_0xe539f7(0x73b)](_0x3f8ada[_0xe539f7(0x35f)]),
                    _0x3f8ada['_objsOperationList']['length'] > 0x0 && this[_0xe539f7(0xac9)](_0x3f8ada[_0xe539f7(0x1e5)]);
            }
            ,
            _0x35de87[_0x324b8e(0x74f)]['updateBatchTableAttributes'] = function () {
                const _0x5c31fa = _0x324b8e;
                let _0x14deaa = this
                    , _0x3aa14f = this[_0x5c31fa(0x192)]
                    , _0x26fb74 = [];
                for (let _0x3ce243 = 0x0, _0x154f52 = _0x3aa14f[_0x5c31fa(0x376)]; _0x3ce243 < _0x154f52; _0x3ce243++) {
                    let _0x5b0309 = _0x3aa14f['values'][_0x3ce243];
                    _0x5b0309['dirty'] && (_0x5b0309[_0x5c31fa(0x1b4)] = !0x1,
                        _0x26fb74 = _0x5b0309[_0x5c31fa(0x340)][_0x5c31fa(0x692)](),
                        _0x2d7fff['x'] = _0x26fb74[0x0],
                        _0x2d7fff['y'] = _0x26fb74[0x1],
                        _0x2d7fff['z'] = _0x26fb74[0x2],
                        _0x2d7fff['w'] = _0x26fb74[0x3],
                        Cesium['defined'](_0x5b0309[_0x5c31fa(0x762)]) ? this[_0x5c31fa(0x5d3)][_0x5c31fa(0x894)](_0x5b0309[_0x5c31fa(0x762)], 0x0, _0x2d7fff) : Array[_0x5c31fa(0x43e)](_0x5b0309[_0x5c31fa(0x256)]) && _0x5b0309[_0x5c31fa(0x256)][_0x5c31fa(0xa64)](function (_0xd51a60) {
                            const _0x4f20ed = _0x5c31fa;
                            _0x14deaa[_0x4f20ed(0x5d3)][_0x4f20ed(0x894)](_0xd51a60, 0x0, _0x2d7fff);
                        }));
                }
                let _0xbf5184 = this[_0x5c31fa(0x9f3)];
                for (let _0x1a82c0 = 0x0, _0x112473 = _0xbf5184[_0x5c31fa(0x376)]; _0x1a82c0 < _0x112473; _0x1a82c0++) {
                    let _0x4bbe90 = _0xbf5184[_0x5c31fa(0x347)][_0x1a82c0];
                    _0x4bbe90[_0x5c31fa(0x1b4)] && (_0x4bbe90[_0x5c31fa(0x1b4)] = !0x1,
                        this[_0x5c31fa(0x332)] > 0x0 ? Array['isArray'](_0x4bbe90['instanceIds']) && _0x4bbe90[_0x5c31fa(0x256)]['map'](function (_0xdbfca6) {
                            const _0x4b5e57 = _0x5c31fa;
                            _0x14deaa[_0x4b5e57(0x5d3)]['setBatchedAttribute'](_0xdbfca6, 0x1, _0x4bbe90['operationValue']);
                        }) : Cesium[_0x5c31fa(0x14b)](_0x4bbe90[_0x5c31fa(0x762)]) && this[_0x5c31fa(0x5d3)][_0x5c31fa(0x894)](_0x4bbe90[_0x5c31fa(0x762)], 0x1, _0x4bbe90[_0x5c31fa(0x5f4)]));
                }
            }
            ,
            _0x35de87[_0x324b8e(0x74f)][_0x324b8e(0x73b)] = function (_0x1f2333) {
                const _0x53e41f = _0x324b8e;
                if (!this['ready'] || this['selectionInfoMap'][_0x53e41f(0x376)] < 0x1)
                    return;
                let _0x255dd4 = this['selectionInfoMap']['_hash'];
                for (let _0x52d36a in _0x255dd4) {
                    if (!_0x255dd4[_0x53e41f(0x704)](_0x52d36a))
                        continue;
                    let _0x1590d6 = _0x1f2333[_0x52d36a];
                    if (!Cesium[_0x53e41f(0x14b)](_0x1590d6))
                        continue;
                    let _0x4f90ce = _0x255dd4[_0x52d36a];
                    const _0xd3ba4b = _0x4f90ce[_0x53e41f(0x762)]
                        , _0x496bc7 = _0x4f90ce[_0x53e41f(0x256)];
                    this[_0x53e41f(0x192)][_0x53e41f(0x414)](_0x52d36a, {
                        'batchId': _0xd3ba4b,
                        'instanceIds': _0x496bc7,
                        'color': _0x1590d6,
                        'dirty': !0x0
                    });
                    let _0x476be2 = this[_0x53e41f(0x9f3)][_0x53e41f(0xa61)](_0x52d36a);
                    Cesium[_0x53e41f(0x14b)](_0x476be2) || (_0x476be2 = {
                        'batchId': _0xd3ba4b,
                        'instanceIds': _0x496bc7,
                        'operationValue': new Cesium[(_0x53e41f(0x747))](),
                        'dirty': !0x0
                    }),
                        _0x476be2[_0x53e41f(0x1b4)] = !0x0,
                        _0x476be2[_0x53e41f(0x5f4)]['x'] = _0x1590d6 === Cesium[_0x53e41f(0x75c)][_0x53e41f(0x5cb)] ? 0xfe & _0x476be2[_0x53e41f(0x5f4)]['x'] : 0x1 | _0x476be2[_0x53e41f(0x5f4)]['x'],
                        this['idsOperationMap']['set'](_0x52d36a, _0x476be2),
                        this['batchTableDirty'] = !0x0;
                }
            }
            ,
            _0x35de87[_0x324b8e(0x74f)][_0x324b8e(0xac9)] = function (_0x3a70c4) {
                const _0x51741b = _0x324b8e;
                if (!this['ready'] || this[_0x51741b(0x813)][_0x51741b(0x376)] < 0x1)
                    return;
                let _0x10f251 = this['selectionInfoMap'][_0x51741b(0x17f)];
                for (let _0x4bc2ec in _0x10f251) {
                    if (!_0x10f251[_0x51741b(0x704)](_0x4bc2ec))
                        continue;
                    if (!_0x3a70c4[_0x51741b(0x924)](_0x4bc2ec))
                        continue;
                    let _0x2573a3 = _0x10f251[_0x4bc2ec]
                        , _0x5601d9 = _0x2573a3[_0x51741b(0x762)]
                        , _0x3bd23f = _0x2573a3[_0x51741b(0x256)]
                        , _0x21981a = _0x3a70c4[_0x51741b(0xa61)](_0x4bc2ec)
                        , _0x58115c = this[_0x51741b(0x9f3)][_0x51741b(0xa61)](_0x4bc2ec);
                    Cesium[_0x51741b(0x14b)](_0x58115c) || (_0x58115c = {
                        'batchId': _0x5601d9,
                        'instanceIds': _0x3bd23f,
                        'operationValue': new Cesium[(_0x51741b(0x747))](),
                        'dirty': !0x0
                    }),
                        _0x58115c[_0x51741b(0x1b4)] = !0x0,
                        _0x58115c[_0x51741b(0x5f4)]['x'] = 0x1 & _0x58115c[_0x51741b(0x5f4)]['x'] | _0x21981a,
                        this['idsOperationMap'][_0x51741b(0x414)](_0x4bc2ec, _0x58115c),
                        this[_0x51741b(0x6e5)] = !0x0;
                }
            }
            ,
            _0x35de87[_0x324b8e(0x74f)][_0x324b8e(0x99d)] = function (_0x52b010) {
                const _0x171570 = _0x324b8e;
                if (!this[_0x171570(0x84b)] || this[_0x171570(0x813)][_0x171570(0x376)] < 0x1)
                    return;
                let _0x4e579e = this['layer']
                    , _0x3a9267 = this[_0x171570(0x813)][_0x171570(0x17f)];
                for (let _0x128c7a in _0x3a9267) {
                    if (!_0x3a9267['hasOwnProperty'](_0x128c7a))
                        continue;
                    if (_0x4e579e[_0x171570(0xa09)]['contains'](_0x128c7a))
                        continue;
                    let _0x20ecc6 = _0x3a9267[_0x128c7a][0x0]
                        , _0x5a6019 = _0x20ecc6[_0x171570(0x762)]
                        , _0x4d48cc = _0x20ecc6[_0x171570(0x256)]
                        , _0x1f3fa8 = this[_0x171570(0x9f3)][_0x171570(0xa61)](_0x128c7a);
                    Cesium[_0x171570(0x14b)](_0x1f3fa8) || (_0x1f3fa8 = {
                        'batchId': _0x5a6019,
                        'instanceIds': _0x4d48cc,
                        'operationValue': new Cesium[(_0x171570(0x747))](),
                        'dirty': !0x0
                    }),
                        _0x1f3fa8[_0x171570(0x1b4)] = !0x0,
                        _0x1f3fa8[_0x171570(0x5f4)]['x'] = _0x52b010 ? _0x1f3fa8[_0x171570(0x5f4)]['x'] & (_0x1645f2[_0x171570(0x61d)] ^ _0x1645f2[_0x171570(0x2be)]) : _0x1f3fa8[_0x171570(0x5f4)]['x'] | _0x1645f2[_0x171570(0x2be)],
                        this['idsOperationMap']['set'](_0x128c7a, _0x1f3fa8),
                        _0x1f3fa8['operationValue']['x'] === _0x1645f2[_0x171570(0x4d5)] ? _0x4e579e['_objsOperationList']['remove'](_0x128c7a) : (_0x4e579e[_0x171570(0x1e5)][_0x171570(0x414)](_0x128c7a, _0x1f3fa8[_0x171570(0x5f4)]['x']),
                            _0x4e579e[_0x171570(0x6f6)]['set'](_0x128c7a, !0x0)),
                        this[_0x171570(0x6e5)] = !0x0;
                }
            }
            ,
            _0x35de87[_0x324b8e(0x74f)][_0x324b8e(0x49b)] = function (_0x90e3d9) {
                const _0x30b91a = _0x324b8e;
                if (!this[_0x30b91a(0x84b)])
                    return;
                let _0x38a816 = this['shaderProgram'][_0x30b91a(0x4c4)][_0x30b91a(0x157)]()
                    , _0x372453 = this[_0x30b91a(0x67b)]['fragmentShaderSource'][_0x30b91a(0x157)]()
                    , _0x13233d = this[_0x30b91a(0xa0f)];
                _0x90e3d9['enable'] ? -0x1 === _0x372453['defines'][_0x30b91a(0xa59)](_0x48861b[_0x30b91a(0x6dd)]) && _0x372453[_0x30b91a(0x9e5)]['push'](_0x48861b[_0x30b91a(0x6dd)]) : _0x2e0e39(_0x372453, _0x48861b[_0x30b91a(0x6dd)]),
                    this[_0x30b91a(0xa41)][_0x30b91a(0x151)] ? -0x1 === _0x372453['defines'][_0x30b91a(0xa59)](_0x48861b['CLIPPLANE']) && _0x372453[_0x30b91a(0x9e5)][_0x30b91a(0x745)](_0x48861b[_0x30b91a(0x803)]) : _0x2e0e39(_0x372453, _0x48861b[_0x30b91a(0x803)]),
                    this[_0x30b91a(0x67b)][_0x30b91a(0x4dd)](),
                    this[_0x30b91a(0x67b)] = Cesium[_0x30b91a(0x5a0)]['fromCache']({
                        'context': this['layer'][_0x30b91a(0x56c)],
                        'vertexShaderSource': _0x38a816,
                        'fragmentShaderSource': _0x372453,
                        'attributeLocations': _0x13233d
                    }),
                    this[_0x30b91a(0x38e)][_0x30b91a(0x67b)] = this[_0x30b91a(0x67b)];
            }
            ,
            _0x35de87['prototype'][_0x324b8e(0x560)] = function (_0x1880cd) {
                const _0x23e7c3 = _0x324b8e;
                if (!this[_0x23e7c3(0x84b)])
                    return;
                let _0x2a635e = this[_0x23e7c3(0x67b)]['vertexShaderSource'][_0x23e7c3(0x157)]()
                    , _0x3bb66c = this[_0x23e7c3(0x67b)][_0x23e7c3(0x6e2)][_0x23e7c3(0x157)]()
                    , _0x4f3985 = this['attributeLocations'];
                _0x1880cd[_0x23e7c3(0x62f)] ? (-0x1 === _0x2a635e['defines'][_0x23e7c3(0xa59)](_0x48861b[_0x23e7c3(0x541)]) && _0x2a635e['defines'][_0x23e7c3(0x745)](_0x48861b[_0x23e7c3(0x541)]),
                    -0x1 === _0x3bb66c[_0x23e7c3(0x9e5)][_0x23e7c3(0xa59)](_0x48861b['HYPSOMETRIC']) && _0x3bb66c['defines'][_0x23e7c3(0x745)](_0x48861b['HYPSOMETRIC'])) : _0x2e0e39(_0x3bb66c, _0x48861b[_0x23e7c3(0x541)]),
                    this[_0x23e7c3(0x67b)]['destroy'](),
                    this[_0x23e7c3(0x67b)] = Cesium[_0x23e7c3(0x5a0)][_0x23e7c3(0x6bf)]({
                        'context': this[_0x23e7c3(0xa41)][_0x23e7c3(0x56c)],
                        'vertexShaderSource': _0x2a635e,
                        'fragmentShaderSource': _0x3bb66c,
                        'attributeLocations': _0x4f3985
                    }),
                    this[_0x23e7c3(0x38e)][_0x23e7c3(0x67b)] = this[_0x23e7c3(0x67b)];
            }
            ,
            _0x35de87[_0x324b8e(0x74f)]['swipe'] = function (_0xe60b7a) {
                const _0xb4f848 = _0x324b8e;
                if (!this[_0xb4f848(0x84b)])
                    return;
                let _0x52544a = this['shaderProgram'][_0xb4f848(0x4c4)][_0xb4f848(0x157)]()
                    , _0x29cef2 = this['shaderProgram'][_0xb4f848(0x6e2)][_0xb4f848(0x157)]()
                    , _0x42e170 = this['attributeLocations'];
                _0xe60b7a[_0xb4f848(0x62f)] ? -0x1 === _0x29cef2[_0xb4f848(0x9e5)][_0xb4f848(0xa59)](_0x48861b['APPLY_SWIPE']) && _0x29cef2[_0xb4f848(0x9e5)][_0xb4f848(0x745)](_0x48861b['APPLY_SWIPE']) : _0x2e0e39(_0x29cef2, _0x48861b[_0xb4f848(0x920)]),
                    this['shaderProgram'][_0xb4f848(0x4dd)](),
                    this[_0xb4f848(0x67b)] = Cesium['ShaderProgram'][_0xb4f848(0x6bf)]({
                        'context': this['layer'][_0xb4f848(0x56c)],
                        'vertexShaderSource': _0x52544a,
                        'fragmentShaderSource': _0x29cef2,
                        'attributeLocations': _0x42e170
                    }),
                    this[_0xb4f848(0x38e)][_0xb4f848(0x67b)] = this[_0xb4f848(0x67b)];
            }
            ,
            _0x35de87['prototype'][_0x324b8e(0x4eb)] = function (_0x156039) {
                const _0x2d930a = _0x324b8e;
                if (!this[_0x2d930a(0x84b)])
                    return;
                let _0x3b4c09 = this[_0x2d930a(0x67b)][_0x2d930a(0x4c4)][_0x2d930a(0x157)]()
                    , _0x4fe5ef = this[_0x2d930a(0x67b)][_0x2d930a(0x6e2)][_0x2d930a(0x157)]()
                    , _0x1b4c84 = this[_0x2d930a(0xa0f)];
                _0x156039['enable'] ? -0x1 === _0x3b4c09[_0x2d930a(0x9e5)][_0x2d930a(0xa59)](_0x48861b['FLATTEN']) && _0x3b4c09['defines'][_0x2d930a(0x745)](_0x48861b[_0x2d930a(0x12f)]) : _0x2e0e39(_0x3b4c09, _0x48861b[_0x2d930a(0x12f)]),
                    this['shaderProgram'][_0x2d930a(0x4dd)](),
                    this[_0x2d930a(0x67b)] = Cesium[_0x2d930a(0x5a0)][_0x2d930a(0x6bf)]({
                        'context': this[_0x2d930a(0xa41)][_0x2d930a(0x56c)],
                        'vertexShaderSource': _0x3b4c09,
                        'fragmentShaderSource': _0x4fe5ef,
                        'attributeLocations': _0x1b4c84
                    }),
                    this[_0x2d930a(0x38e)][_0x2d930a(0x67b)] = this[_0x2d930a(0x67b)];
            }
            ,
            _0x35de87['prototype'][_0x324b8e(0x522)] = function (_0x563abe) {
                const _0x39cdc4 = _0x324b8e;
                let _0x259010 = this['shaderProgram'][_0x39cdc4(0x4c4)][_0x39cdc4(0x157)]()
                    , _0x183fb5 = this[_0x39cdc4(0x67b)][_0x39cdc4(0x6e2)][_0x39cdc4(0x157)]()
                    , _0x256046 = this[_0x39cdc4(0xa0f)];
                if (_0x563abe['enable']) {
                    var _0x5de603 = _0x563abe['layer']
                        , _0x1c17a3 = (_0x5de603['_pbrParameter'] & _0x2c6caf[_0x39cdc4(0x6d1)]) > 0x0 || _0x5de603[_0x39cdc4(0x5e5)][_0x39cdc4(0xdf)]
                        , _0x32b0ca = Cesium[_0x39cdc4(0x14b)](_0x5de603[_0x39cdc4(0x444)]) && Cesium[_0x39cdc4(0x14b)](_0x5de603[_0x39cdc4(0x444)]['pbrMaterialIndex'])
                        , _0x23ae41 = []
                        , _0x94d460 = Cesium[_0x39cdc4(0x14b)](this[_0x39cdc4(0xa0f)][_0x39cdc4(0x724)]);
                    _0x1c17a3 || _0x32b0ca ? (_0x94d460 && _0x23ae41['push'](_0x48861b[_0x39cdc4(0x87a)]),
                        _0x32b0ca && (_0x23ae41[_0x39cdc4(0x745)](_0x48861b[_0x39cdc4(0x383)]),
                            _0x23ae41[_0x39cdc4(0x745)](_0x39cdc4(0x96d) + _0x5de603[_0x39cdc4(0x1c0)][_0x39cdc4(0x8a2)]['length'])),
                        Cesium[_0x39cdc4(0x14b)](_0x5de603[_0x39cdc4(0x5e5)][_0x39cdc4(0x163)][_0x39cdc4(0x79f)]) && _0x5de603['_PBRMaterialParams'][_0x39cdc4(0x163)][_0x39cdc4(0x79f)] instanceof Cesium[_0x39cdc4(0x130)] && _0x94d460 && _0x23ae41[_0x39cdc4(0x745)](_0x48861b[_0x39cdc4(0x6d2)]),
                        _0x94d460 && Cesium[_0x39cdc4(0x14b)](_0x5de603[_0x39cdc4(0x5e5)][_0x39cdc4(0x163)][_0x39cdc4(0x9f5)]) && Cesium['defined'](_0x5de603['_PBRMaterialParams'][_0x39cdc4(0x163)][_0x39cdc4(0x9f5)]['wetnessFactor']) && (_0x23ae41['push'](_0x48861b[_0x39cdc4(0x4e5)]),
                            Cesium[_0x39cdc4(0x14b)](_0x5de603[_0x39cdc4(0x5e5)][_0x39cdc4(0x163)][_0x39cdc4(0x9f5)][_0x39cdc4(0x189)]) && _0x5de603[_0x39cdc4(0x5e5)][_0x39cdc4(0x163)][_0x39cdc4(0x9f5)][_0x39cdc4(0x189)] instanceof Cesium[_0x39cdc4(0x130)] && _0x23ae41[_0x39cdc4(0x745)](_0x48861b['HAS_RAIN'])),
                        _0x94d460 && Cesium[_0x39cdc4(0x14b)](_0x5de603[_0x39cdc4(0x5e5)]['pbrMetallicRoughness'][_0x39cdc4(0xa2a)]) && Cesium['defined'](_0x5de603['_PBRMaterialParams']['pbrMetallicRoughness'][_0x39cdc4(0xa2a)][_0x39cdc4(0x380)]) && _0x5de603[_0x39cdc4(0x5e5)][_0x39cdc4(0x163)][_0x39cdc4(0xa2a)][_0x39cdc4(0x380)] instanceof Cesium[_0x39cdc4(0x130)] && Cesium[_0x39cdc4(0x14b)](_0x5de603[_0x39cdc4(0x5e5)][_0x39cdc4(0x163)][_0x39cdc4(0xa2a)][_0x39cdc4(0x488)]) && _0x5de603[_0x39cdc4(0x5e5)][_0x39cdc4(0x163)]['snowEffect'][_0x39cdc4(0x488)] instanceof Cesium['Texture'] && _0x23ae41[_0x39cdc4(0x745)](_0x48861b[_0x39cdc4(0x665)]),
                        (Cesium[_0x39cdc4(0x14b)](this[_0x39cdc4(0x63e)]) && this[_0x39cdc4(0x63e)][_0x39cdc4(0x1d7)] > -0x1 || Cesium[_0x39cdc4(0x14b)](_0x5de603['_PBRMaterialParams'][_0x39cdc4(0x163)][_0x39cdc4(0xaaf)]) && _0x5de603['_PBRMaterialParams'][_0x39cdc4(0x163)][_0x39cdc4(0xaaf)] instanceof Cesium[_0x39cdc4(0x130)]) && _0x94d460 && _0x23ae41[_0x39cdc4(0x745)](_0x48861b[_0x39cdc4(0x7e6)]),
                        (Cesium['defined'](this[_0x39cdc4(0x63e)]) && this[_0x39cdc4(0x63e)][_0x39cdc4(0x445)] > -0x1 || Cesium[_0x39cdc4(0x14b)](_0x5de603[_0x39cdc4(0x5e5)][_0x39cdc4(0x163)][_0x39cdc4(0x565)]) && _0x5de603[_0x39cdc4(0x5e5)][_0x39cdc4(0x163)][_0x39cdc4(0x565)] instanceof Cesium[_0x39cdc4(0x130)]) && _0x94d460 && _0x23ae41[_0x39cdc4(0x745)](_0x48861b[_0x39cdc4(0x788)]),
                        (Cesium[_0x39cdc4(0x14b)](this[_0x39cdc4(0x63e)]) && this['materialPass'][_0x39cdc4(0x5c5)] > -0x1 || Cesium['defined'](_0x5de603[_0x39cdc4(0x5e5)]['pbrMetallicRoughness'][_0x39cdc4(0x656)]) && _0x5de603[_0x39cdc4(0x5e5)][_0x39cdc4(0x163)][_0x39cdc4(0x656)] instanceof Cesium['Texture']) && _0x94d460 && _0x23ae41['push'](_0x48861b['HAS_OCCLUSION_TEXTURE']),
                        (Cesium[_0x39cdc4(0x14b)](this[_0x39cdc4(0x63e)]) && Cesium[_0x39cdc4(0x14b)](this[_0x39cdc4(0x63e)][_0x39cdc4(0x14e)]) || Cesium[_0x39cdc4(0x14b)](_0x5de603[_0x39cdc4(0x5e5)]['pbrMetallicRoughness'][_0x39cdc4(0x17a)])) && _0x23ae41['push'](_0x48861b[_0x39cdc4(0xa50)]),
                        (Cesium[_0x39cdc4(0x14b)](this[_0x39cdc4(0x63e)]) && Cesium['defined'](this[_0x39cdc4(0x63e)]['_volume']) || Cesium[_0x39cdc4(0x14b)](_0x5de603['_PBRMaterialParams'][_0x39cdc4(0x163)][_0x39cdc4(0x795)])) && (_0x23ae41[_0x39cdc4(0x745)](_0x48861b['HAS_VOLUME']),
                            _0x23ae41[_0x39cdc4(0x745)](_0x48861b[_0x39cdc4(0xa56)])),
                        (Cesium[_0x39cdc4(0x14b)](this[_0x39cdc4(0x63e)]) && Cesium[_0x39cdc4(0x14b)](this[_0x39cdc4(0x63e)][_0x39cdc4(0x51d)]) || Cesium[_0x39cdc4(0x14b)](_0x5de603['_PBRMaterialParams'][_0x39cdc4(0x163)][_0x39cdc4(0x969)])) && _0x23ae41[_0x39cdc4(0x745)](_0x48861b[_0x39cdc4(0x51c)]),
                        (Cesium[_0x39cdc4(0x14b)](this[_0x39cdc4(0x63e)]) && this['materialPass'][_0x39cdc4(0x844)] > -0x1 || Cesium[_0x39cdc4(0x14b)](_0x5de603[_0x39cdc4(0x5e5)][_0x39cdc4(0x163)][_0x39cdc4(0x1de)]) && _0x5de603['_PBRMaterialParams'][_0x39cdc4(0x163)]['indexOfRefraction'] > 0x0) && _0x23ae41['push'](_0x48861b['REFRACTION']),
                        Cesium[_0x39cdc4(0x14b)](this['materialPass']) && this[_0x39cdc4(0x63e)][_0x39cdc4(0x6fd)] > -0x1 && _0x23ae41[_0x39cdc4(0x745)](_0x48861b[_0x39cdc4(0x66f)]),
                        Cesium[_0x39cdc4(0x14b)](_0x5de603[_0x39cdc4(0x1c0)][_0x39cdc4(0x6d9)]) && _0x23ae41['push'](_0x48861b[_0x39cdc4(0x835)]),
                        _0x23ae41['forEach'](_0x547459 => {
                            !function (_0x3cd2ad, _0x28ffcc) {
                                const _0x20122e = _0x557c;
                                -0x1 === _0x3cd2ad[_0x20122e(0x9e5)][_0x20122e(0xa59)](_0x28ffcc) && _0x3cd2ad[_0x20122e(0x9e5)][_0x20122e(0x745)](_0x28ffcc);
                            }(_0x183fb5, _0x547459);
                        }
                        )) : (_0x23ae41 = [_0x48861b['BRDF'], _0x39cdc4(0x96d) + _0x5de603['_frameState'][_0x39cdc4(0x8a2)]['length'], _0x48861b[_0x39cdc4(0x6d2)], _0x48861b[_0x39cdc4(0x788)], _0x48861b[_0x39cdc4(0x66f)], _0x48861b[_0x39cdc4(0x835)], _0x48861b[_0x39cdc4(0x7e6)], _0x48861b[_0x39cdc4(0x665)], _0x48861b[_0x39cdc4(0x59a)]])[_0x39cdc4(0x4f6)](_0x3b2ea8 => {
                            _0x2e0e39(_0x183fb5, _0x3b2ea8);
                        }
                        ),
                        this[_0x39cdc4(0x67b)][_0x39cdc4(0x4dd)](),
                        this['shaderProgram'] = Cesium[_0x39cdc4(0x5a0)][_0x39cdc4(0x6bf)]({
                            'context': _0x5de603[_0x39cdc4(0x56c)],
                            'vertexShaderSource': _0x259010,
                            'fragmentShaderSource': _0x183fb5,
                            'attributeLocations': _0x256046
                        }),
                        this['colorCommand']['shaderProgram'] = this[_0x39cdc4(0x67b)];
                }
            }
            ,
            _0x35de87['prototype']['createCommand'] = Cesium[_0x324b8e(0x335)][_0x324b8e(0x103)],
            _0x35de87[_0x324b8e(0x74f)][_0x324b8e(0x4bc)] = Cesium['DeveloperError']['throwInstantiationError'],
            _0x35de87[_0x324b8e(0x74f)]['isDestroyed'] = Cesium[_0x324b8e(0x335)][_0x324b8e(0x103)],
            _0x35de87[_0x324b8e(0x74f)][_0x324b8e(0x4dd)] = Cesium[_0x324b8e(0x335)][_0x324b8e(0x103)],
            _0x36840f['prototype'] = Object[_0x324b8e(0x34c)](_0x35de87['prototype']),
            _0x36840f[_0x324b8e(0x74f)][_0x324b8e(0x124)] = _0x35de87;
        let _0x259459 = new Cesium[(_0x324b8e(0x747))]()
            , _0x5a65cf = new Cesium[(_0x324b8e(0x747))]()
            , _0x7634b0 = new Cesium[(_0x324b8e(0x747))]();
        _0x36840f[_0x324b8e(0x74f)]['createCommand'] = function () {
            const _0x43566a = _0x324b8e;
            if (Cesium[_0x43566a(0x14b)](this[_0x43566a(0x38e)]) || 0x0 !== this[_0x43566a(0x216)]['length'] || 0x0 !== this[_0x43566a(0x57b)][_0x43566a(0x376)] || 0x0 !== this['shaderProgramToCreate'][_0x43566a(0x376)])
                return;
            let _0x336fb1 = this['layer']
                , _0x5c6f14 = _0x336fb1[_0x43566a(0x56c)]
                , _0x171281 = this['vertexPackage']
                , _0x2ef26f = this[_0x43566a(0xa46)]
                , _0x3ec396 = _0x171281['vertexAttributes'];
            if (_0x2ef26f['length'] < 0x1)
                return;
            let _0x27c969 = _0x2ef26f[0x0]
                , _0x268aad = this['material'];
            this['vertexArray'] = new Cesium[(_0x43566a(0x403))]({
                'context': _0x5c6f14,
                'attributes': _0x3ec396,
                'indexBuffer': _0x27c969[_0x43566a(0x118)]
            }),
                this[_0x43566a(0x38e)] = new Cesium['DrawCommand']({
                    'primitiveType': _0x27c969[_0x43566a(0x97f)],
                    'modelMatrix': this['modelMatrix'],
                    'boundingVolume': Cesium[_0x43566a(0xa4a)][_0x43566a(0x157)](this['boundingVolume']),
                    'vertexArray': this['vertexArray'],
                    'shaderProgram': this[_0x43566a(0x67b)],
                    'pass': _0x268aad[_0x43566a(0x29f)] ? Cesium[_0x43566a(0x119)][_0x43566a(0x5b6)] : Cesium[_0x43566a(0x119)][_0x43566a(0x641)],
                    'renderState': Cesium[_0x43566a(0x4ca)][_0x43566a(0x6bf)]({
                        'cull': {
                            'enabled': !0x0
                        },
                        'depthTest': {
                            'enabled': !0x0,
                            'func': Cesium[_0x43566a(0x83d)]['LESS_OR_EQUAL']
                        },
                        'blending': Cesium[_0x43566a(0x586)][_0x43566a(0x753)]
                    }),
                    'instanceCount': _0x171281[_0x43566a(0x332)]
                }),
                this['colorCommand'][_0x43566a(0x501)] = function (_0x4af2c4, _0x4c1ec5, _0x239ed6) {
                    return {
                        'uGeoMatrix': function () {
                            const _0x2fa823 = _0x557c;
                            return _0x239ed6[_0x2fa823(0x1f6)];
                        },
                        'uInverseGeoMatrix': function () {
                            const _0x56b373 = _0x557c;
                            return _0x239ed6[_0x56b373(0x93b)];
                        },
                        'uTexture': function () {
                            const _0x1b88cd = _0x557c;
                            return _0x4af2c4[_0x1b88cd(0x37b)][0x0];
                        },
                        'uTexture0Width': function () {
                            const _0x48f3d0 = _0x557c;
                            return _0x4af2c4[_0x48f3d0(0x37b)][0x0]['width'];
                        },
                        'uClipMode': function () {
                            return _0x4c1ec5['_clipMode'];
                        },
                        'uClipPlanes': function () {
                            const _0x2c9ea2 = _0x557c;
                            return _0x4c1ec5[_0x2c9ea2(0x132)];
                        },
                        'uHypsometricTexture': function () {
                            const _0x13eac9 = _0x557c;
                            return _0x4c1ec5['_hypsometric'][_0x13eac9(0x6ba)];
                        },
                        'uHypLineColor': function () {
                            const _0x485369 = _0x557c;
                            return _0x4c1ec5[_0x485369(0x2cf)][_0x485369(0x27b)][_0x485369(0x592)];
                        },
                        'uNoValueColor': function () {
                            const _0x40468e = _0x557c;
                            return _0x4c1ec5[_0x40468e(0x2cf)]['setting']['noValueColor'];
                        },
                        'uMinMaxValue': function () {
                            const _0xa98512 = _0x557c;
                            let _0x34705b = _0x4c1ec5['_hypsometric']['setting'];
                            return _0x259459['x'] = _0x34705b['ColorTableMinKey'],
                                _0x259459['y'] = _0x34705b[_0xa98512(0x8cc)],
                                _0x259459['z'] = _0x34705b['MinVisibleValue'],
                                _0x259459['w'] = _0x34705b[_0xa98512(0x266)],
                                _0x259459;
                        },
                        'uOpacityIntervalFillMode': function () {
                            const _0x4dd73f = _0x557c;
                            let _0x6e2ddd = _0x4c1ec5[_0x4dd73f(0x2cf)]['setting'];
                            return _0x5a65cf['x'] = _0x6e2ddd[_0x4dd73f(0x573)],
                                _0x5a65cf['y'] = _0x6e2ddd[_0x4dd73f(0x2db)],
                                _0x5a65cf['z'] = _0x6e2ddd[_0x4dd73f(0x36a)],
                                _0x5a65cf;
                        },
                        'uFlattenRect': function () {
                            const _0x4f6749 = _0x557c;
                            return _0x4c1ec5[_0x4f6749(0x460)][_0x4f6749(0x39d)];
                        },
                        'uFlattenTexture': function () {
                            const _0x4c7c84 = _0x557c;
                            return _0x4c1ec5[_0x4c7c84(0x460)][_0x4c7c84(0x6ba)];
                        },
                        'uSwipeRegion': function () {
                            const _0x272ea6 = _0x557c
                                , _0x53f1b3 = _0x4c1ec5[_0x272ea6(0x56c)];
                            return _0x7634b0['x'] = _0x4c1ec5[_0x272ea6(0x90b)]['x'] * _0x53f1b3[_0x272ea6(0x142)],
                                _0x7634b0['y'] = (0x1 - _0x4c1ec5[_0x272ea6(0x90b)]['y']) * _0x53f1b3[_0x272ea6(0x35c)],
                                _0x7634b0['z'] = _0x4c1ec5[_0x272ea6(0x90b)]['z'] * _0x53f1b3[_0x272ea6(0x142)],
                                _0x7634b0['w'] = (0x1 - _0x4c1ec5[_0x272ea6(0x90b)]['w']) * _0x53f1b3[_0x272ea6(0x35c)],
                                _0x7634b0;
                        }
                    };
                }(_0x268aad, _0x336fb1, this),
                this['vertexPackage'] = void 0x0,
                this[_0x43566a(0xa46)] = void 0x0,
                this['vs'] = void 0x0,
                this['fs'] = void 0x0,
                this['ready'] = !0x0;
        }
            ,
            _0x36840f[_0x324b8e(0x74f)][_0x324b8e(0x4bc)] = function (_0x3de8dc, _0x520a2f) {
                const _0x390787 = _0x324b8e;
                if (!this[_0x390787(0x84b)])
                    return this['createBuffers'](_0x3de8dc),
                        this['createShaderProgram'](_0x3de8dc),
                        this[_0x390787(0x29c)](_0x3de8dc),
                        void this[_0x390787(0x8c1)](_0x520a2f);
                _0x3de8dc[_0x390787(0x728)][_0x390787(0x745)](this[_0x390787(0x38e)]);
            }
            ,
            _0x36840f[_0x324b8e(0x74f)][_0x324b8e(0x575)] = function () {
                return !0x1;
            }
            ,_0x348b89
            _0x36840f['prototype'][_0x324b8e(0x4dd)] = function () {
                const _0x2993f2 = _0x324b8e;
                return this['shaderProgram'] = this[_0x2993f2(0x67b)] && !this[_0x2993f2(0x67b)][_0x2993f2(0x575)]() && this[_0x2993f2(0x67b)][_0x2993f2(0x4dd)](),
                    this[_0x2993f2(0x99e)] = this[_0x2993f2(0x99e)] && !this['vertexArray']['isDestroyed']() && this[_0x2993f2(0x99e)][_0x2993f2(0x4dd)](),
                    this[_0x2993f2(0x932)] = this['material'] && !this[_0x2993f2(0x932)][_0x2993f2(0x575)]() && this[_0x2993f2(0x932)]['destroy'](),
                    this[_0x2993f2(0x38e)] = void 0x0,
                    this['vertexPackage'] = null,
                    this[_0x2993f2(0xa46)] = null,
                    this[_0x2993f2(0x896)] = void 0x0,
                    this[_0x2993f2(0x49c)] = void 0x0,
                    this[_0x2993f2(0x813)] = void 0x0,
                    this['vs'] = void 0x0,
                    this['fs'] = void 0x0,
                    Cesium[_0x2993f2(0x9ef)](this);
            }
            ;
        var _0x348b89 = '\x0a\x20\x20\x20\x20in\x20vec4\x20aPosition;\x0a#ifdef\x20VertexColor\x0a\x20\x20\x20\x20in\x20vec4\x20aColor;\x0a#endif\x0a#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20in\x20vec3\x20aNormal;\x0a#endif\x0a#ifdef\x20Instance\x0a\x20\x20\x20\x20in\x20float\x20instanceId;\x0a#else\x0a\x20\x20\x20\x20in\x20float\x20batchId;\x0a#endif\x20\x0a\x0a#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20in\x20float\x20aTextureBatchId0;\x0a#endif\x0a\x0a#ifdef\x20TexCoord\x0a\x20\x20\x20\x20in\x20vec4\x20aTexCoord0;\x0a\x20\x20\x20\x20out\x20vec4\x20vTexCoord;\x0a\x20\x20\x20\x20uniform\x20mat4\x20uTexMatrix;\x0a#ifdef\x20COMPUTE_TEXCOORD\x0a#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20uniform\x20vec4\x20uTexAtlasDim;\x0a\x20\x20\x20\x20out\x20vec4\x20vTexAtlasTran;\x0a\x20\x20\x20\x20out\x20vec4\x20vTexAtlasScale;\x0a\x20\x20\x20\x20out\x20vec4\x20vTexAtlasSize;\x0a\x20\x20\x20\x20out\x20vec2\x20vMaxMipLevel;\x0a#else\x0a\x20\x20\x20\x20uniform\x20float\x20uTexture0Width;\x0a\x20\x20\x20\x20out\x20vec4\x20vTexMatrix;\x0a\x20\x20\x20\x20out\x20vec4\x20vTexCoordTransform;\x0a#endif\x20\x20\x20\x20\x0a#endif\x0a#endif\x0a\x0a#ifdef\x20TexCoord2\x0a\x20\x20\x20\x20in\x20vec4\x20aTexCoord1;\x0a\x20\x20\x20\x20uniform\x20float\x20uTexture1Width;\x0a\x20\x20\x20\x20out\x20vec4\x20vTexMatrix2;\x0a#endif\x0a#ifdef\x20InstanceBim\x0a\x20\x20\x20\x20in\x20vec4\x20uv2;\x0a\x20\x20\x20\x20in\x20vec4\x20uv3;\x0a\x20\x20\x20\x20in\x20vec4\x20uv4;\x0a\x20\x20\x20\x20in\x20vec4\x20secondary_colour;\x0a\x20\x20\x20\x20in\x20vec4\x20uv6;\x20\x20\x20\x0a#endif\x0a\x0a#ifdef\x20InstancePipe\x0a\x20\x20\x20\x20in\x20vec4\x20uv1;\x0a\x20\x20\x20\x20in\x20vec4\x20uv2;\x0a\x20\x20\x20\x20in\x20vec4\x20uv3;\x0a\x20\x20\x20\x20in\x20vec4\x20uv4;\x0a\x20\x20\x20\x20in\x20vec4\x20uv5;\x0a\x20\x20\x20\x20in\x20vec4\x20uv6;\x0a\x20\x20\x20\x20in\x20vec4\x20uv7;\x0a\x20\x20\x20\x20in\x20vec4\x20secondary_colour;\x0a\x20\x20\x20\x20in\x20vec4\x20uv9;\x0a#endif\x0a\x0a#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20out\x20float\x20wValue;\x20\x20\x20\x20\x0a#endif\x0a#ifdef\x20FLATTEN\x0a\x20\x20\x20\x20uniform\x20mat4\x20uGeoMatrix;\x0a\x20\x20\x20\x20uniform\x20mat4\x20uInverseGeoMatrix;\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uFlattenTexture;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uFlattenRect;\x0a#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSelectedColor;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uFillForeColor;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20out\x20vec4\x20vSecondColor;\x0a\x20\x20\x20\x20out\x20vec4\x20vPositionMC;\x0a\x20\x20\x20\x20out\x20vec3\x20vPositionEC;\x0a#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20out\x20vec3\x20vNormalEC;\x0a#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20out\x20vec4\x20vColor;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_LEFT8\x20=\x20256.0;\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_RIGHT8\x20=\x201.0\x20/\x20256.0;\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_RIGHT4\x20=\x201.0\x20/\x2016.0;\x0a\x20\x20\x20\x20const\x20float\x20SHIFT_LEFT4\x20=\x2016.0;\x0a\x20\x20\x20\x20void\x20getTextureMatrixFromZValue(in\x20float\x20nZ,\x20inout\x20float\x20XTran,\x20inout\x20float\x20YTran,\x20inout\x20float\x20scale)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(nZ\x20<=\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nDel8\x20=\x20floor(nZ\x20*\x20SHIFT_RIGHT8);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nDel16\x20=\x20floor(nDel8\x20*\x20SHIFT_RIGHT8);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nDel20\x20=\x20floor(nDel16\x20*\x20SHIFT_RIGHT4);\x0a\x20\x20\x20\x20\x20\x20\x20\x20YTran\x20=\x20nZ\x20-\x20nDel8\x20*\x20SHIFT_LEFT8;\x0a\x20\x20\x20\x20\x20\x20\x20\x20XTran\x20=\x20nDel8\x20-\x20nDel16\x20*\x20SHIFT_LEFT8;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20nLevel\x20=\x20nDel16\x20-\x20nDel20\x20*\x20SHIFT_LEFT4;\x0a\x20\x20\x20\x20\x20\x20\x20\x20scale\x20=\x201.0\x20/\x20pow(2.0,\x20nLevel);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20void\x20operation(vec4\x20operationType,\x20vec4\x20color,\x20vec4\x20selectedColor,\x20inout\x20vec4\x20vertexColor)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20right_2\x20=\x20operationType.x\x20*\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20right_4\x20=\x20right_2\x20*\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20right_8\x20=\x20right_4\x20*\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20right_16\x20=\x20right_8\x20*\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20isSetColor\x20=\x20fract(right_2);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(isSetColor\x20>\x200.1)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vertexColor\x20*=\x20color;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20isPicked\x20=\x20fract(floor(right_2)*\x200.5);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(isPicked\x20>\x200.1)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vertexColor\x20*=\x20selectedColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20isHide\x20=\x20fract(floor(right_4)*\x200.5);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(isHide\x20>\x200.1)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vertexColor.a\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a#ifdef\x20FLATTEN\x0a\x20\x20\x20\x20float\x20unpackValue(vec4\x20packedValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20SHIFT_LEFT16\x20=\x2065536.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20SHIFT_LEFT8\x20=\x20256.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20value\x20=\x20packedValue\x20*\x20255.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20value.r\x20*\x20SHIFT_LEFT16\x20+\x20value.g\x20*\x20SHIFT_LEFT8\x20+\x20value.b\x20-\x209000.0;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec4\x20calculateHeight(vec4\x20vertexPos)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20vecPos\x20=\x20uGeoMatrix\x20*\x20vec4(vertexPos.xyz,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20vecRatio\x20=\x20vec2(uFlattenRect.z\x20-\x20uFlattenRect.x,\x20uFlattenRect.w\x20-\x20uFlattenRect.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20vecTexCoord\x20=\x20vec2(vecPos.x\x20-\x20uFlattenRect.x,\x20vecPos.y\x20-\x20uFlattenRect.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vecTexCoord.x\x20=\x20vecTexCoord.x\x20/\x20vecRatio.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vecTexCoord.y\x20=\x20vecTexCoord.y\x20/\x20vecRatio.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vecTexCoord.x\x20>\x201.0\x20||\x20vecTexCoord.x\x20<\x200.0\x20||\x20vecTexCoord.y\x20>\x201.0\x20||\x20vecTexCoord.y\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vertexPos;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fHeight\x20=\x20unpackValue(texture(uFlattenTexture,\x20vecTexCoord.xy));\x0a\x20\x20\x20\x20\x20\x20\x20\x20fHeight\x20=\x20fHeight;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vecPos.z\x20>\x20fHeight)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vecPos.z\x20=\x20fHeight;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vecPos.w\x20=\x20vecPos.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20uInverseGeoMatrix\x20*\x20vec4(vecPos.xyz,\x201.0);\x0a\x20\x20\x20\x20}\x0a#endif\x0a#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20uniform\x20highp\x20sampler2D\x20batchTextureAtlas;\x20\x0a\x20\x20\x20\x20uniform\x20vec4\x20batchTextureAtlasStep;\x20\x0a#ifdef\x20SecTextureAtlas\x0a\x20\x20\x20\x20uniform\x20highp\x20sampler2D\x20batchTextureAtlasSec;\x20\x0a\x20\x20\x20\x20uniform\x20vec4\x20batchTextureAtlasStepSec;\x20\x0a#endif\x0a\x20\x20\x20\x20vec2\x20computeAtlasSt(float\x20batchId,\x20vec4\x20step)\x20\x0a\x20\x20\x20\x20{\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20stepX\x20=\x20step.x;\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20centerX\x20=\x20step.y;\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20numberOfAttributes\x20=\x20float(1);\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec2(centerX\x20+\x20(batchId\x20*\x20numberOfAttributes\x20*\x20stepX),\x200.5);\x20\x0a\x20\x20\x20\x20}\x20\x0a\x20\x20\x20\x20vec4\x20atlas_batchTable_xywh(float\x20batchId,\x20sampler2D\x20texture,\x20vec4\x20step)\x20\x0a\x20\x20\x20\x20{\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20st\x20=\x20computeAtlasSt(batchId,\x20step);\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20st.x\x20+=\x20step.x\x20*\x20float(0);\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20textureValue\x20=\x20texture(texture,\x20st);\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20value\x20=\x20textureValue;\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20value;\x20\x0a\x20\x20\x20\x20}\x20\x0a\x20\x20\x20\x20void\x20getTexAtlasParameter(in\x20vec4\x20xywh,\x20in\x20vec2\x20textureDim,\x20inout\x20vec2\x20translate,\x20inout\x20vec2\x20scale,\x20inout\x20vec2\x20texSize,\x20inout\x20float\x20maxMipLevel)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20width\x20=\x20xywh.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20height\x20\x20=\x20xywh.w;\x0a\x20\x20\x20\x20\x20\x20\x20\x20width\x20*=\x202.0\x20/\x203.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20maxMipLevel\x20=\x20log2(min(width,\x20height));\x0a\x20\x20\x20\x20\x20\x20\x20\x20scale.x\x20=\x20width\x20/\x20textureDim.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20scale.y\x20=\x20height\x20/\x20textureDim.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20translate.x\x20=\x20xywh.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20translate.y\x20\x20=\x20xywh.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20translate\x20/=\x20textureDim;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texSize.x\x20=\x20width;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texSize.y\x20=\x20height;\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x20\x20void\x20main()\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20#ifdef\x20TexCoord\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoord.xy\x20=\x20aTexCoord0.xy;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(aTextureBatchId0\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMaxMipLevel.x\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20xywh\x20=\x20atlas_batchTable_xywh(aTextureBatchId0,\x20batchTextureAtlas,\x20batchTextureAtlasStep);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20getTexAtlasParameter(xywh,\x20uTexAtlasDim.xy,\x20vTexAtlasTran.xy,\x20vTexAtlasScale.xy,\x20vTexAtlasSize.xy,\x20vMaxMipLevel.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix\x20=\x20vec4(0.0,0.0,1.0,0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoordTransform.x\x20=\x20aTexCoord0.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vTexCoordTransform.x\x20<\x20-90000.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix.z\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20getTextureMatrixFromZValue(floor(vTexCoordTransform.x),\x20vTexMatrix.x,\x20vTexMatrix.y,\x20vTexMatrix.z);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix.w\x20=\x20log2(uTexture0Width\x20*\x20vTexMatrix.z);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20TexCoord2\x0a\x20\x20\x20\x20#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(aTextureBatchIdSec\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vMaxMipLevel.y\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20xywh2\x20=\x20atlas_batchTable_xywh(aTextureBatchIdSec,\x20batchTextureAtlasSec,\x20batchTextureAtlasStepSec);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20getTexAtlasParameter(xywh2,\x20uTexAtlasDim.zw,\x20vTexAtlasTran.zw,\x20vTexAtlasScale.zw,\x20vTexAtlasSize.zw,\x20vMaxMipLevel.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoord.zw\x20=\x20aTexCoord1.xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix2\x20=\x20vec4(0.0,0.0,1.0,0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoordTransform.y\x20=\x20aTexCoord1.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vTexCoordTransform.y\x20<\x20-90000.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix2.z\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20getTextureMatrixFromZValue(floor(vTexCoordTransform.y),\x20vTexMatrix2.x,\x20vTexMatrix2.y,\x20vTexMatrix2.z);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexMatrix2.w\x20=\x20log2(uTexture1Width\x20*\x20vTexMatrix.z);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20vertexPos\x20=\x20aPosition;\x0a#ifdef\x20FLATTEN\x0a\x20\x20\x20\x20vertexPos\x20=\x20calculateHeight(vertexPos);\x0a#endif\x0a\x20\x20\x20\x20vec4\x20vertexColor\x20=\x20uFillForeColor;\x0a#ifdef\x20VertexColor\x0a\x20\x20\x20\x20vertexColor\x20*=\x20aColor;\x0a#endif\x0a#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20vec3\x20normal\x20=\x20aNormal;\x0a#endif\x0a#ifdef\x20InstanceBim\x0a\x20\x20\x20\x20mat4\x20worldMatrix;\x0a\x20\x20\x20\x20worldMatrix[0]\x20=\x20uv2;\x0a\x20\x20\x20\x20worldMatrix[1]\x20=\x20uv3;\x0a\x20\x20\x20\x20worldMatrix[2]\x20=\x20uv4;\x0a\x20\x20\x20\x20worldMatrix[3]\x20=\x20vec4(0,\x200,\x200,\x201);\x0a\x20\x20\x20\x20vertexPos\x20=\x20vec4(vertexPos.xyz,1.0)\x20*\x20worldMatrix;\x0a\x20\x20\x20\x20vertexColor\x20*=\x20secondary_colour;\x20\x0a#endif\x0a#ifdef\x20InstancePipe\x0a\x20\x20\x20\x20mat4\x20worldMatrix;\x0a\x20\x20\x20\x20mat4\x20worldMatrix0;\x0a\x20\x20\x20\x20mat4\x20worldMatrix1;\x0a\x20\x20\x20\x20vec4\x20worldPos0;\x0a\x20\x20\x20\x20vec4\x20worldPos1;\x0a\x20\x20\x20\x20worldMatrix0[0]\x20=\x20uv1;\x0a\x20\x20\x20\x20worldMatrix0[1]\x20=\x20uv2;\x0a\x20\x20\x20\x20worldMatrix0[2]\x20=\x20uv3;\x0a\x20\x20\x20\x20worldMatrix0[3]\x20=\x20vec4(\x200.0,\x200.0,\x200.0,\x201.0\x20);\x0a\x20\x20\x20\x20worldMatrix1[0]\x20=\x20uv4;\x0a\x20\x20\x20\x20worldMatrix1[1]\x20=\x20uv5;\x0a\x20\x20\x20\x20worldMatrix1[2]\x20=\x20uv6;\x0a\x20\x20\x20\x20worldMatrix1[3]\x20=\x20vec4(\x200.0,\x200.0,\x200.0,\x201.0\x20);\x0a\x20\x20\x20\x20vec4\x20realVertex\x20=\x20vec4(vertexPos.xyz,\x201.0);\x0a\x20\x20\x20\x20realVertex.x\x20=\x20realVertex.x\x20*\x20uv7.z;\x0a\x20\x20\x20\x20worldPos0\x20=\x20realVertex\x20*\x20worldMatrix0;\x0a\x20\x20\x20\x20worldPos1\x20=\x20realVertex\x20*\x20worldMatrix1;\x0a\x20\x20\x20\x20vertexColor\x20*=\x20secondary_colour;\x20\x0a#ifdef\x20TexCoord\x0a\x20\x20\x20\x20if(aTexCoord0.y\x20>\x200.5)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20tex4Vec\x20=\x20uTexMatrix\x20*\x20vec4(uv7.y,\x20aTexCoord0.x,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoord.xy\x20=\x20tex4Vec.xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vertexPos\x20=\x20worldPos1;\x0a\x20\x20\x20\x20\x20\x20\x20\x20worldMatrix\x20=\x20worldMatrix1;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20tex4Vec\x20=\x20uTexMatrix\x20*\x20vec4(uv7.x,\x20aTexCoord0.x,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vTexCoord.xy\x20=\x20tex4Vec.xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vertexPos\x20=\x20worldPos0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20worldMatrix\x20=\x20worldMatrix0;\x0a\x20\x20\x20\x20}\x0a#endif\x0a#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20normal.x\x20=\x20normal.x\x20*\x20uv7.z;\x0a#endif\x0a#endif\x0a\x20\x20\x20\x20#ifdef\x20Instance\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20index\x20=\x20instanceId;\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20index\x20=\x20batchId;\x0a\x20\x20\x20\x20#endif\x20\x20\x0a\x20\x20\x20\x20#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20\x20\x20\x20\x20wValue\x20=\x20vertexPos.w;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20operationType\x20=\x20s3m_batchTable_operation(index);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20objsColor\x20=\x20s3m_batchTable_color(index);\x0a\x20\x20\x20\x20\x20\x20\x20\x20operation(operationType,\x20objsColor,\x20uSelectedColor,\x20vertexColor);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vSecondColor\x20=\x20s3m_batchTable_pickColor(index);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20positionMC\x20=\x20vec4(vertexPos.xyz,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vColor\x20=\x20vertexColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vPositionMC\x20=\x20positionMC;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vPositionEC\x20=\x20(czm_modelView\x20*\x20positionMC).xyz;\x0a\x20\x20\x20\x20#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20\x20\x20\x20\x20vNormalEC\x20=\x20czm_normal\x20*\x20normal;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20gl_Position\x20=\x20czm_modelViewProjection\x20*\x20vec4(vertexPos.xyz,\x201.0);\x0a\x20\x20\x20\x20}\x0a'
            , _0x57a126 = '\x0a#ifdef\x20GL_OES_standard_derivatives\x0a#extension\x20GL_OES_standard_derivatives\x20:\x20enable\x0a#endif\x0a#ifdef\x20GL_EXT_shader_texture_lod\x0a#extension\x20GL_EXT_shader_texture_lod\x20:\x20enable\x0a#endif\x0a\x20\x20\x20\x20uniform\x20vec4\x20uDiffuseColor;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uAmbientColor;\x0a#ifdef\x20TexCoord\x0a\x20\x20\x20\x20in\x20vec4\x20vTexCoord;\x0a#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uTexture;\x0a#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20uniform\x20vec4\x20uTexAtlasDim;\x0a\x20\x20\x20\x20out\x20vec4\x20vTexAtlasTran;\x0a\x20\x20\x20\x20out\x20vec4\x20vTexAtlasScale;\x0a\x20\x20\x20\x20out\x20vec4\x20vTexAtlasSize;\x0a\x20\x20\x20\x20out\x20vec2\x20vMaxMipLevel;\x0a#else\x0a\x20\x20\x20\x20uniform\x20float\x20uTexture0Width;\x0a\x20\x20\x20\x20in\x20vec4\x20vTexCoordTransform;\x0a\x20\x20\x20\x20in\x20vec4\x20vTexMatrix;\x0a#endif\x0a#endif\x0a#endif\x0a#ifdef\x20NO_TEXCOORD\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uTexture;\x0a#endif\x0a\x20\x20\x20\x20in\x20vec4\x20vColor;\x0a\x20\x20\x20\x20in\x20vec4\x20vSecondColor;\x0a\x20\x20\x20\x20in\x20vec4\x20vPositionMC;\x0a\x20\x20\x20\x20in\x20vec3\x20vPositionEC;\x0a#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20in\x20vec3\x20vNormalEC;\x0a#endif\x0a#ifdef\x20TexCoord2\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uTexture2;\x0a\x20\x20\x20\x20uniform\x20float\x20uTexture1Width;\x0a\x20\x20\x20\x20in\x20vec4\x20vTexMatrix2;\x0a#endif\x20\x0a\x20\x20\x20\x20void\x20calculateMipLevel(in\x20vec2\x20inTexCoord,\x20in\x20float\x20vecTile,\x20in\x20float\x20fMaxMip,\x20inout\x20float\x20mipLevel)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dx\x20=\x20dFdx(inTexCoord\x20*\x20vecTile);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dy\x20=\x20dFdy(inTexCoord\x20*\x20vecTile);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotX\x20=\x20dot(dx,\x20dx);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotY\x20=\x20dot(dy,\x20dy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMax\x20=\x20max(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMin\x20=\x20min(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20offset\x20=\x20(dMax\x20-\x20dMin)\x20/\x20(dMax\x20+\x20dMin);\x0a\x20\x20\x20\x20\x20\x20\x20\x20offset\x20=\x20clamp(offset,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20d\x20=\x20dMax\x20*\x20(1.0\x20-\x20offset)\x20+\x20dMin\x20*\x20offset;\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x200.5\x20*\x20log2(d);\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x20clamp(mipLevel,\x200.0,\x20fMaxMip\x20-\x201.62);\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20void\x20calculateMipLevel(in\x20vec2\x20inTexCoord,\x20in\x20vec2\x20vecTile,\x20in\x20float\x20fMaxMip,\x20inout\x20float\x20mipLevel)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dx\x20=\x20dFdx(inTexCoord\x20*\x20vecTile.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20dy\x20=\x20dFdy(inTexCoord\x20*\x20vecTile.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotX\x20=\x20dot(dx,\x20dx);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dotY\x20=\x20dot(dy,\x20dy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMax\x20=\x20max(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dMin\x20=\x20min(dotX,\x20dotY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20offset\x20=\x20(dMax\x20-\x20dMin)\x20/\x20(dMax\x20+\x20dMin);\x0a\x20\x20\x20\x20\x20\x20\x20\x20offset\x20=\x20clamp(offset,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20d\x20=\x20dMax\x20*\x20(1.0\x20-\x20offset)\x20+\x20dMin\x20*\x20offset;\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x200.5\x20*\x20log2(d);\x0a\x20\x20\x20\x20\x20\x20\x20\x20mipLevel\x20=\x20clamp(mipLevel,\x200.0,\x20fMaxMip\x20-\x201.62);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20void\x20calculateTexCoord(in\x20vec3\x20inTexCoord,\x20in\x20float\x20scale,\x20in\x20float\x20XTran,\x20in\x20float\x20YTran,\x20in\x20float\x20fTile,\x20in\x20float\x20mipLevel,\x20inout\x20vec2\x20outTexCoord)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(inTexCoord.z\x20<\x20-9000.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outTexCoord\x20=\x20inTexCoord.xy;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20fTexCoord\x20=\x20fract(inTexCoord.xy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20offset\x20=\x201.0\x20*\x20pow(2.0,\x20mipLevel)\x20/\x20fTile;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20fTexCoord\x20=\x20clamp(fTexCoord,\x20offset,\x201.0\x20-\x20offset);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outTexCoord.x\x20=\x20(fTexCoord.x\x20+\x20XTran)\x20*\x20scale;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outTexCoord.y\x20=\x20(fTexCoord.y\x20+\x20YTran)\x20*\x20scale;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20getTexColorForS3M(sampler2D\x20curTexture,\x20vec3\x20oriTexCoord,\x20float\x20texTileWidth,\x20float\x20fMaxMipLev,\x20float\x20fTexCoordScale,\x20vec2\x20vecTexCoordTranslate)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20color\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20mipLevel\x20=\x200.0;\x0a\x20\x20\x20\x20#ifdef\x20GL_OES_standard_derivatives\x0a\x20\x20\x20\x20\x20\x20\x20\x20calculateMipLevel(oriTexCoord.xy,\x20texTileWidth,\x20fMaxMipLev,\x20mipLevel);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20realTexCoord;\x0a\x20\x20\x20\x20\x20\x20\x20\x20calculateTexCoord(oriTexCoord,\x20fTexCoordScale,\x20vecTexCoordTranslate.x,\x20vecTexCoordTranslate.y,\x20texTileWidth,\x20mipLevel,\x20realTexCoord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(oriTexCoord.z\x20<\x20-9000.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20=\x20texture(curTexture,\x20realTexCoord.xy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#ifdef\x20GL_EXT_shader_texture_lod\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20=\x20textureLodEXT(curTexture,\x20realTexCoord.xy,\x20mipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20color\x20=\x20texture(curTexture,\x20realTexCoord.xy,\x20-fMaxMipLev);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20color;\x0a\x20\x20\x20\x20}\x0a#ifdef\x20COMPUTE_TEXCOORD\x0a#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20vec4\x20getTextureAtlasColor(sampler2D\x20texture,\x20vec2\x20uv,\x20vec2\x20texDim,\x20vec2\x20texTran,\x20vec2\x20texScale,\x20float\x20maxMipLevel)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(maxMipLevel\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20colorCeil\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20mipLevel\x20=\x200.0;\x0a\x20\x20\x20\x20#ifdef\x20GL_OES_standard_derivatives\x0a\x20\x20\x20\x20\x20\x20\x20\x20calculateMipLevel(uv,\x20texDim,\x20maxMipLevel,\x20mipLevel);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20ceilMipLevel\x20=\x20ceil(mipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20translate\x20=\x20vec2(texTran.x,\x20texTran.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20temp;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(ceilMipLevel\x20>\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20translate.x\x20=\x20texTran.x\x20+\x20texScale.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20temp\x20=\x20pow(2.0,\x20ceilMipLevel\x20-\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20translate.y\x20=\x20texTran.y\x20+\x20texScale.y\x20*\x20(temp\x20-\x201.0)\x20/\x20temp;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20scale\x20=\x201.0\x20/\x20pow(2.0,\x20ceilMipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20texcoord\x20=\x20fract(uv);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20offsetX\x20=\x20pow(2.0,\x20ceilMipLevel)\x20/\x20texDim.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20offsetY\x20=\x20pow(2.0,\x20ceilMipLevel)\x20/\x20texDim.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.x\x20=\x20clamp(texcoord.x,\x200.0\x20+\x20offsetX,\x201.0\x20-\x20offsetX);\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.y\x20=\x20clamp(texcoord.y,\x200.0\x20+\x20offsetY,\x201.0\x20-\x20offsetY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.x\x20=\x20texcoord.x\x20*\x20texScale.x\x20*\x20scale\x20+\x20translate.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.y\x20=\x20texcoord.y\x20*\x20texScale.y\x20*\x20scale\x20+\x20translate.y;\x0a\x20\x20\x20\x20#ifdef\x20GL_EXT_shader_texture_lod\x0a\x20\x20\x20\x20\x20\x20\x20\x20colorCeil\x20=\x20textureLodEXT(texture,\x20texcoord.xy,\x200.0);\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20colorCeil\x20=\x20texture(texture,\x20texcoord.xy,\x200.0);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20colorFloor\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20floorMipLevel\x20=\x20floor(mipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20translate\x20=\x20vec2(texTran.x,\x20texTran.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(floorMipLevel\x20>\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20translate.x\x20=\x20texTran.x\x20+\x20texScale.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20temp\x20=\x20pow(2.0,\x20floorMipLevel\x20-\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20translate.y\x20=\x20texTran.y\x20+\x20texScale.y\x20*\x20(temp\x20-\x201.0)\x20/\x20temp;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20scale\x20=\x201.0\x20/\x20pow(2.0,\x20floorMipLevel);\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord\x20=\x20fract(uv);\x0a\x20\x20\x20\x20\x20\x20\x20\x20offsetX\x20=\x20pow(2.0,\x20floorMipLevel)\x20/\x20texDim.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20offsetY\x20=\x20pow(2.0,\x20floorMipLevel)\x20/\x20texDim.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.x\x20=\x20clamp(texcoord.x,\x200.0\x20+\x20offsetX,\x201.0\x20-\x20offsetX);\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.y\x20=\x20clamp(texcoord.y,\x200.0\x20+\x20offsetY,\x201.0\x20-\x20offsetY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.x\x20=\x20texcoord.x\x20*\x20texScale.x\x20*\x20scale\x20+\x20translate.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20texcoord.y\x20=\x20texcoord.y\x20*\x20texScale.y\x20*\x20scale\x20+\x20translate.y;\x0a\x20\x20\x20\x20#ifdef\x20GL_EXT_shader_texture_lod\x0a\x20\x20\x20\x20\x20\x20\x20\x20colorFloor\x20=\x20textureLodEXT(texture,\x20texcoord.xy,\x200.0);\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20colorFloor\x20=\x20texture(texture,\x20texcoord.xy,\x200.0);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20color\x20=\x20colorCeil\x20*\x200.5\x20+\x20colorFloor\x20*\x200.5;\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20color;\x0a\x20\x20\x20\x20}\x0a#else\x0a\x20\x20\x20\x20vec4\x20getTextureColor()\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vTexMatrix.z\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20texTileWidth0\x20=\x20vTexMatrix.z\x20*\x20uTexture0Width;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20realTexCoord\x20=\x20vec3(vTexCoord.xy,\x20vTexCoordTransform.x);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20FColor\x20=\x20getTexColorForS3M(uTexture,\x20realTexCoord,\x20texTileWidth0,\x20vTexMatrix.w,\x20vTexMatrix.z,\x20vTexMatrix.xy);\x0a\x20\x20\x20\x20#ifdef\x20TexCoord2\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20texTileWidth1\x20=\x20vTexMatrix2.z\x20*\x20uTexture1Width;\x0a\x20\x20\x20\x20\x20\x20\x20\x20realTexCoord\x20=\x20vec3(vTexCoord.zw,\x20vTexCoordTransform.y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20SColor\x20=\x20getTexColorForS3M(uTexture2,\x20realTexCoord,\x20texTileWidth1,\x20vTexMatrix2.w,\x20vTexMatrix2.z,\x20vTexMatrix2.xy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20SColor.r\x20=\x20clamp(SColor.r,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20SColor.g\x20=\x20clamp(SColor.g,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20SColor.b\x20=\x20clamp(SColor.b,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20FColor\x20*\x20SColor;\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20FColor;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20}\x0a#endif\x0a#endif\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20const\x20float\x20M_PI\x20=\x203.141592653589793;\x0a\x20\x20\x20\x20vec3\x20SRGBtoLINEAR3(vec3\x20srgbIn)\x20\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20pow(srgbIn,\x20vec3(2.2));\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20SRGBtoLINEAR4(vec4\x20srgbIn)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20srgbIn\x20=\x20srgbIn\x20;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20linearOut\x20=\x20pow(srgbIn.rgb,\x20vec3(2.2));\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(linearOut,\x20srgbIn.a);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec3\x20LINEARtoSRGB(vec3\x20linearIn)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20#ifndef\x20HDR\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20pow(linearIn,\x20vec3(1.0/2.2));\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20linearIn;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec3\x20fresnelSchlick2(vec3\x20f0,\x20vec3\x20f90,\x20float\x20VdotH)\x20\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20f0\x20+\x20(f90\x20-\x20f0)\x20*\x20pow(clamp(1.0\x20-\x20VdotH,\x200.0,\x201.0),\x205.0);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20float\x20smithVisibilityG1(float\x20NdotV,\x20float\x20roughness)\x20\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20k\x20=\x20(roughness\x20+\x201.0)\x20*\x20(roughness\x20+\x201.0)\x20/\x208.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20NdotV\x20/\x20(NdotV\x20*\x20(1.0\x20-\x20k)\x20+\x20k);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20float\x20smithVisibilityGGX(float\x20roughness,\x20float\x20NdotL,\x20float\x20NdotV)\x20\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20smithVisibilityG1(NdotL,\x20roughness)\x20*\x20smithVisibilityG1(NdotV,\x20roughness);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20float\x20GGX(float\x20roughness,\x20float\x20NdotH)\x20\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20roughnessSquared\x20=\x20roughness\x20*\x20roughness;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20f\x20=\x20(NdotH\x20*\x20roughnessSquared\x20-\x20NdotH)\x20*\x20NdotH\x20+\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20roughnessSquared\x20/\x20(M_PI\x20*\x20f\x20*\x20f);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a#ifdef\x20CLIP\x0a\x20\x20\x20\x20uniform\x20float\x20uClipMode;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uClipPlanes[6];\x0a\x20\x20\x20\x20float\x20clipBehindAllPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20#ifdef\x20CLIPPLANE\x0a\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20czm_planeDistance(uClipPlanes[0].xyz,\x20uClipPlanes[0].w,\x20vertex.xyz);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20czm_planeDistance(uClipPlanes[i].xyz,\x20uClipPlanes[i].w,\x20vertex.xyz);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20clipBehindAnyPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20czm_planeDistance(uClipPlanes[i].xyz,\x20uClipPlanes[i].w,\x20vertex.xyz);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if((distance\x20+\x20fBorderWidth)\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20float\x20clipAnythingButLine(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20czm_planeDistance(uClipPlanes[i].xyz,\x20uClipPlanes[i].w,\x20vertex.xyz);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec4\x20clip(vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#ifdef\x20GL_OES_standard_derivatives\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dxc\x20=\x20abs(dFdx(vertex.x));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dyc\x20=\x20abs(dFdy(vertex.y));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x20max(dxc,\x20dyc);\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x201.0;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20clipResult\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x201.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAnyPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x202.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAllPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x203.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipAnythingButLine(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(clipResult\x20<\x20-0.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(clipResult\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x0a#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uHypsometricTexture;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uMinMaxValue;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uOpacityIntervalFillMode;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uHypLineColor;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uNoValueColor;\x0a\x20\x20\x20\x20out\x20float\x20wValue;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20float\x20computeMixCon(float\x20fValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20distanceToContour;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20minVisibleValue\x20=\x20uMinMaxValue.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20maxVisibleValue\x20=\x20uMinMaxValue.w;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20interval\x20=\x20uOpacityIntervalFillMode.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(abs(maxVisibleValue\x20-\x20minVisibleValue)\x20>\x200.1)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(fValue\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distanceToContour\x20=\x20mod(fValue\x20-\x200.0002,\x20interval);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20t\x20=\x20floor(fValue\x20/\x20interval);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distanceToContour\x20=\x20abs(fValue\x20-\x20(t\x20*\x20interval)\x20-\x200.1);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distanceToContour\x20=\x20abs(fValue\x20-\x20maxVisibleValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dxc\x20=\x20abs(dFdx(fValue));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dyc\x20=\x20abs(dFdy(fValue));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dF\x20=\x20max(dxc,\x20dyc);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20distanceToContour\x20<\x20dF\x20?\x201.0\x20:\x200.0;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20computeContourMapColor(float\x20fValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20floorValue\x20=\x20uMinMaxValue.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20ceilValue\x20=\x20uMinMaxValue.y;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20threshold\x20=\x20abs(ceilValue\x20-\x20floorValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20contourRate\x20=\x20(fValue\x20-\x20floorValue)\x20/\x20threshold;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20finalCoord\x20=\x20clamp(contourRate,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20count\x20=\x20floor(finalCoord\x20*\x2016.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20y\x20=\x20(count*2.0\x20+\x201.0)/32.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20x\x20=\x20fract(finalCoord*16.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(y\x20>\x201.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20x\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20contourCoord\x20=\x20vec2(x,\x20y);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20texture(uHypsometricTexture,\x20contourCoord);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec4\x20getContourMapColor(vec4\x20oriColor,\x20float\x20fValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20contourMapColor\x20=\x20vec4(0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20finalOpacity\x20=\x20uOpacityIntervalFillMode.x;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20minVisibleValue\x20=\x20uMinMaxValue.z;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20maxVisibleValue\x20=\x20uMinMaxValue.w;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fillMode\x20=\x20uOpacityIntervalFillMode.z;\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(fValue\x20>\x20maxVisibleValue\x20+\x204.0\x20||\x20fValue\x20<\x20minVisibleValue\x20-\x204.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20uNoValueColor\x20*\x20oriColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(fillMode\x20>\x202.9)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20mix_con\x20=\x20computeMixCon(fValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20contourMapColor\x20=\x20mix(computeContourMapColor(fValue),\x20uHypLineColor,\x20mix_con);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(fillMode\x20>\x201.9)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20finalOpacity\x20=\x20computeMixCon(fValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20contourMapColor\x20=\x20uHypLineColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(fillMode\x20>\x200.9)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20contourMapColor\x20=\x20computeContourMapColor(fValue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20finalOpacity\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20finalColor\x20=\x20mix(oriColor,\x20contourMapColor,\x20finalOpacity);\x0a\x20\x20\x20\x20#ifdef\x20PT_CLOUD\x0a\x20\x20\x20\x20\x20\x20\x20\x20finalColor\x20=\x20mix(vec4(1.0,1.0,1.0,1.0),\x20contourMapColor,\x20finalOpacity);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20finalColor;\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x0a#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSwipeRegion;\x0a\x20\x20\x20\x20void\x20rollerShutter(vec2\x20coord,\x20vec4\x20region)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20f\x20=\x20step(region.xw,\x20coord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20s\x20=\x20step(coord,\x20region.zy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(f.x\x20*\x20f.y\x20*\x20s.x\x20*\x20s.y\x20<\x201.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x20\x20\x20\x20vec3\x20computeNormal(in\x20vec3\x20oriVertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20normal\x20=\x20cross(vec3(dFdx(oriVertex.x),\x20dFdx(oriVertex.y),\x20dFdx(oriVertex.z)),\x20vec3(dFdy(oriVertex.x),\x20dFdy(oriVertex.y),\x20dFdy(oriVertex.z)));\x0a\x20\x20\x20\x20\x20\x20\x20\x20normal\x20=\x20normalize(normal);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20normal;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20vec3\x20directionLight(vec3\x20normalEC)\x20\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20vec3\x20SunLightColor\x20=\x20vec3(0.8);\x0a\x20\x20\x20\x20\x20\x20\x20\x20const\x20vec3\x20AmbientLightColor\x20=\x20vec3(0.7);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20totalDiffuseLight\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20totalSpecularLight\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20sunLightDiffuseWeight\x20=\x20max(\x20dot(\x20normalEC,\x20czm_lightDirectionEC\x20),\x200.0\x20);\x0a\x20\x20\x20\x20\x20\x20\x20\x20totalDiffuseLight\x20=\x20SunLightColor\x20*\x20sunLightDiffuseWeight;\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20uDiffuseColor.rgb\x20*\x20(totalDiffuseLight\x20+\x20AmbientLightColor\x20*\x20uAmbientColor.rgb)\x20+\x20totalSpecularLight;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#ifdef\x20ADJUST_COLOR\x0a\x20\x20\x20\x20\x20\x20\x20\x20uniform\x20float\x20uBrightness;\x0a\x20\x20\x20\x20\x20\x20\x20\x20uniform\x20float\x20uContrast;\x0a\x20\x20\x20\x20\x20\x20\x20\x20uniform\x20float\x20uHue;\x0a\x20\x20\x20\x20\x20\x20\x20\x20uniform\x20float\x20uSaturation;\x0a\x20\x20\x20\x20\x20\x20\x20\x20uniform\x20float\x20uOneOverGamma;\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20adjustColor(vec3\x20inputColor)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20outputColor\x20=\x20inputColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outputColor.rgb\x20=\x20mix(vec3(0.0),\x20outputColor.rgb,\x20uBrightness);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outputColor.rgb\x20=\x20mix(vec3(0.5),\x20outputColor.rgb,\x20uContrast);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outputColor.rgb\x20=\x20czm_hue(outputColor.rgb,\x20uHue);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outputColor.rgb\x20=\x20clamp(outputColor.rgb,\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outputColor.rgb\x20=\x20czm_saturation(outputColor.rgb,\x20uSaturation);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20outputColor.rgb\x20=\x20pow(outputColor.rgb,\x20vec3(uOneOverGamma));\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20outputColor;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x0a\x20\x20\x20\x20#include\x20<brdf>\x0a\x0a\x20\x20\x20\x20void\x20main()\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(vColor.a\x20<\x200.1)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x20\x0a\x20\x20\x20\x20#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20\x20\x20\x20\x20rollerShutter(gl_FragCoord.xy,\x20uSwipeRegion);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20baseColorWithAlpha\x20=\x20vColor;\x0a\x20\x20\x20\x20#ifdef\x20COMPUTE_TEXCOORD\x0a\x20\x20\x20\x20#ifdef\x20TextureAtlas\x0a\x20\x20\x20\x20\x20\x20\x20\x20baseColorWithAlpha\x20*=\x20getTextureAtlasColor(uTexture,\x20vTexCoord.xy,\x20vTexAtlasSize.xy,\x20vTexAtlasTran.xy,\x20vTexAtlasScale.xy,\x20vMaxMipLevel.x);\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20baseColorWithAlpha\x20*=\x20getTextureColor();\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20NO_TEXCOORD\x0a\x20\x20\x20\x20\x20\x20\x20\x20#ifndef\x20REPLACE_COLOR_TYPE\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20baseColorWithAlpha\x20*=\x20texture(uTexture,\x20vec2(0.5));\x0a\x20\x20\x20\x20\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(baseColorWithAlpha.a\x20<\x200.1)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec4\x20outColor\x20=\x20baseColorWithAlpha;\x0a\x20\x20\x20\x20#ifndef\x20USE_LINECOLOR\x20\x20\x20\x20\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20ng\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20\x20\x20\x20\x20ng\x20=\x20normalize(vNormalEC);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20ng\x20=\x20length(ng)\x20>\x200.1\x20?\x20ng\x20:\x20computeNormal(vPositionMC.xyz);\x0a\x20\x20\x20\x20#ifdef\x20HAS_NORMAL_TEXTURE\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20pos_dx\x20=\x20dFdx(vPositionEC);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20pos_dy\x20=\x20dFdy(vPositionEC);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20tex_dx\x20=\x20dFdx(vec3(vTexCoord.xy,\x200.0));\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20tex_dy\x20=\x20dFdy(vec3(vTexCoord.xy,\x200.0));\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20t\x20=\x20(tex_dy.t\x20*\x20pos_dx\x20-\x20tex_dx.t\x20*\x20pos_dy)\x20/\x20(tex_dx.s\x20*\x20tex_dy.t\x20-\x20tex_dy.s\x20*\x20tex_dx.t);\x0a\x20\x20\x20\x20\x20\x20\x20\x20t\x20=\x20normalize(t\x20-\x20ng\x20*\x20dot(ng,\x20t));\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20b\x20=\x20normalize(cross(ng,\x20t));\x0a\x20\x20\x20\x20\x20\x20\x20\x20mat3\x20tbn\x20=\x20mat3(t,\x20b,\x20ng);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20n\x20=\x20texture(uNormalTexture,\x20vTexCoord.xy).rgb;\x0a\x20\x20\x20\x20\x20\x20\x20\x20n\x20=\x20normalize(tbn\x20*\x20(2.0\x20*\x20n\x20-\x201.0));\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec3\x20n\x20=\x20ng;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20vec3\x20baseColor\x20=\x20baseColorWithAlpha.rgb;\x0a\x20\x20\x20\x20outColor.rgb\x20=\x20baseColor\x20*\x20directionLight(n);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20\x20\x20\x20\x20outColor\x20=\x20getContourMapColor(outColor,\x20wValue);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20BRDF\x0a\x20\x20\x20\x20vec2\x20texCoord\x20=\x20vec2(0.0);\x0a\x20\x20\x20\x20#ifdef\x20TexCoord\x0a\x20\x20\x20\x20\x20\x20\x20\x20texCoord\x20=\x20vTexCoord.xy;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20vec3\x20normal_EC\x20=\x20vec3(0.0);\x0a\x20\x20\x20\x20#ifdef\x20VertexNormal\x0a\x20\x20\x20\x20\x20\x20\x20\x20normal_EC\x20=\x20vNormalEC;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20outColor\x20=\x20brdf(outColor,\x20texCoord,\x20texCoord,\x20vPositionEC,\x20vPositionMC.xyz,\x20normal_EC,\x20uAmbientColor);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20ADJUST_COLOR\x0a\x20\x20\x20\x20\x20\x20\x20\x20outColor.rgb\x20=\x20adjustColor(outColor.rgb);\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20#ifdef\x20CLIP\x0a\x20\x20\x20\x20\x20\x20\x20\x20outColor\x20*=\x20clip(vec4(vPositionEC,\x201.0));\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20out_FragColor\x20=\x20outColor;\x0a\x20\x20\x20\x20}\x0a'
            , _0x4c4475 = _0x324b8e(0x867)
            , _0x377d2c = '\x0a#ifdef\x20GL_OES_standard_derivatives\x0a#extension\x20GL_OES_standard_derivatives\x20:\x20enable\x0a#endif\x0aprecision\x20highp\x20float;\x0avarying\x20vec4\x20vColor;\x0avarying\x20float\x20vRadius;\x0avarying\x20vec3\x20vPosition;\x0avarying\x20vec3\x20vViewPosition;\x0avarying\x20float\x20vLineLengthPixels;\x0avarying\x20float\x20vSizeFalloffFactor;\x0avarying\x20float\x20vLineIndex;\x0avarying\x20float\x20vDistanceFromEye;\x0a\x0a//\x20At\x20which\x20coverage\x20threshold\x20we\x20discard\x20a\x20fragment\x20completely\x0a#define\x20COVERAGE_TEST_THRESHOLD\x200.01\x0aconst\x20float\x20nearRange\x20=\x201000.0;\x0aconst\x20float\x20farRange\x20=\x2020000.0;\x0a\x0a//\x20Sketch\x0a#if\x20(MODE\x20==\x202\x20||\x20MODE\x20==\x201)\x0a//uniform\x20sampler2D\x20uStrokesTexture;\x0a//uniform\x20float\x20uStrokesNormalizationScale;\x0avarying\x20vec2\x20vStrokeUV;\x0a\x0afloat\x20calculateLineOffsetSketch()\x0a{\x0a\x20\x20\x20\x20//float\x20offsetNorm\x20=\x20rgba2float(texture(uStrokesTexture,\x20vStrokeUV));\x0a\x20\x20\x20\x20//return\x20(offsetNorm\x20-\x200.5)\x20*\x20uStrokesNormalizationScale;\x0a\x20\x20\x20\x20return\x201.0;\x0a}\x0a\x0afloat\x20calculateLinePressureSketch()\x0a{\x0a\x20\x20\x20\x20//return\x20rgba2float(texture(uStrokesTexture,\x20vStrokeUV\x20+\x20vec2(0.0,\x200.5)));\x0a\x20\x20\x20\x20return\x201.0;\x0a}\x0a#endif\x0a\x0a#if\x20(MODE\x20==\x201)\x0afloat\x20calculateLineOffset()\x0a{\x0a\x20\x20\x20\x20return\x20calculateLineOffsetSketch();\x0a}\x0afloat\x20calculateLinePressure()\x0a{\x0a\x20\x20\x20\x20return\x20calculateLinePressureSketch();\x0a}\x0a#endif\x0a\x0a//\x20Solid\x0a#if\x20(MODE\x20==\x202\x20||\x20MODE\x20==\x200)\x0afloat\x20calculateLineOffsetSolid()\x0a{\x0a\x20\x20\x20\x20return\x200.0;\x0a}\x0afloat\x20calculateLinePressureSolid()\x0a{\x0a\x20\x20\x20\x20return\x201.0;\x0a}\x0a#endif\x0a\x0a#if\x20(MODE\x20==\x200)\x0afloat\x20calculateLineOffset()\x0a{\x0a\x20\x20\x20\x20return\x20calculateLineOffsetSolid();\x0a}\x0afloat\x20calculateLinePressure()\x0a{\x0a\x20\x20\x20\x20return\x20calculateLinePressureSolid();\x0a}\x0a#endif\x0a\x0a//\x20Uber\x0a#if\x20(MODE\x20==\x202)\x0avarying\x20float\x20vType;\x0afloat\x20calculateLineOffset()\x0a{\x0a\x20\x20\x20\x20if\x20(vType\x20<=\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20calculateLineOffsetSketch();\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20calculateLineOffsetSolid();\x0a\x20\x20\x20\x20}\x0a}\x0a\x0afloat\x20calculateLinePressure()\x0a{\x0a\x20\x20\x20\x20if\x20(vType\x20<=\x200.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20calculateLinePressureSketch();\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20calculateLinePressureSolid();\x0a\x20\x20\x20\x20}\x0a}\x0a#endif\x0a\x0avec2\x20lineWithCapsDistance(float\x20radius,\x20vec2\x20position,\x20float\x20lineLength)\x0a{\x0a\x20\x20\x20\x20float\x20lineOffset\x20=\x20calculateLineOffset();\x0a\x20\x20\x20\x20float\x20positionX\x20=\x20position.x\x20-\x20lineOffset;\x0a\x20\x20\x20\x20if\x20(radius\x20<\x201.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20coverageX\x20=\x20clamp(min(radius,\x20positionX\x20+\x200.5)\x20-\x20max(-radius,\x20positionX\x20-\x200.5),\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20coverageY\x20=\x20clamp(min(lineLength,\x20position.y\x20+\x200.5)\x20-\x20max(0.0,\x20position.y\x20-\x200.5),\x200.0,\x201.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20coverage\x20=\x20min(coverageX,\x20coverageY);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec2(0.5\x20-\x20coverage,\x200.0);\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20else\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20//\x20Between\x20-radius\x20->\x200\x20for\x20start\x20cap,\x200\x20for\x20line,\x200\x20->\x20radius\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20positionOnCap\x20=\x20position.y\x20-\x20clamp(position.y,\x200.0,\x20lineLength);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20lineToPosition\x20=\x20vec2(positionX,\x20positionOnCap);\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec2(length(lineToPosition)\x20-\x20radius,\x20positionOnCap\x20/\x20radius);\x0a\x20\x20\x20\x20}\x0a}\x0a\x0a#ifdef\x20CLIP\x0a\x20\x20\x20\x20uniform\x20float\x20uClipMode;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uClipPlanes[6];\x0a\x20\x20\x20\x20float\x20getClipDistance(vec3\x20pos,\x20vec3\x20planeNormal,\x20float\x20disToOrigin)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20dot(planeNormal,\x20pos)\x20+\x20disToOrigin;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20clipBehindAllPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20#ifdef\x20CLIPPLANE\x0a\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[0].xyz,\x20uClipPlanes[0].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if\x20(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x0a\x20\x20\x20\x20float\x20clipBehindAnyPlane(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if((distance\x20+\x20fBorderWidth)\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20float\x20clipAnythingButLine(float\x20fBorderWidth,\x20vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20result\x20=\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20for(int\x20i\x20=\x200;\x20i\x20<\x206;\x20i++)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20float\x20distance\x20=\x20getClipDistance(vertex.xyz,\x20uClipPlanes[i].xyz,\x20uClipPlanes[i].w);\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20if(distance\x20<\x200.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20-1.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(distance\x20<\x20fBorderWidth)\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20result\x20=\x200.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20result;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20vec4\x20clip(vec4\x20vertex)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20#ifdef\x20GL_OES_standard_derivatives\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dxc\x20=\x20abs(dFdx(vertex.x));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20dyc\x20=\x20abs(dFdy(vertex.y));\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x20max(dxc,\x20dyc);\x0a\x20\x20\x20\x20#else\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20fBorderWidth\x20=\x201.0;\x0a\x20\x20\x20\x20#endif\x0a\x20\x20\x20\x20\x20\x20\x20\x20float\x20clipResult\x20=\x201.0;\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(uClipMode\x20<\x201.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAnyPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x202.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipBehindAllPlane(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(uClipMode\x20<\x203.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20clipResult\x20=\x20clipAnythingButLine(fBorderWidth,\x20vertex);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20if(clipResult\x20<\x20-0.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20else\x20if(clipResult\x20<\x200.5)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20vec4(1.0);\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x0a#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20uniform\x20vec4\x20uSwipeRegion;\x0a\x20\x20\x20\x20void\x20rollerShutter(vec2\x20coord,\x20vec4\x20region)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20f\x20=\x20step(region.xw,\x20coord);\x0a\x20\x20\x20\x20\x20\x20\x20\x20vec2\x20s\x20=\x20step(coord,\x20region.zy);\x0a\x20\x20\x20\x20\x20\x20\x20\x20if\x20(f.x\x20*\x20f.y\x20*\x20s.x\x20*\x20s.y\x20<\x201.0)\x0a\x20\x20\x20\x20\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20\x20\x20\x20\x20}\x0a\x20\x20\x20\x20}\x0a#endif\x0a\x0afloat\x20readNonPerspective(float\x20value,\x20float\x20oneOverW)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20oneOverW;\x0a}\x0a\x0avec2\x20readNonPerspective(vec2\x20value,\x20float\x20oneOverW)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20oneOverW;\x0a}\x0a\x0avec3\x20readNonPerspective(vec3\x20value,\x20float\x20oneOverW)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20oneOverW;\x0a}\x0a\x0avec4\x20readNonPerspective(vec4\x20value,\x20float\x20oneOverW)\x20{\x0a\x20\x20\x20\x20return\x20value\x20*\x20oneOverW;\x0a}\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20\x20vec3\x20realPosition\x20=\x20readNonPerspective(vPosition,\x20gl_FragCoord.w);\x0a\x20\x20\x20\x20float\x20radius\x20=\x20vRadius\x20*\x20calculateLinePressure();\x0a\x20\x20\x20\x20vec2\x20distance\x20=\x20lineWithCapsDistance(radius,\x20realPosition.xy,\x20vLineLengthPixels);\x0a\x20\x20\x20\x20float\x20coverage\x20=\x20clamp(0.5\x20-\x20distance.x,\x200.0,\x201.0);\x0a#ifdef\x20ANTIALIASING\x0a\x20\x20\x20\x20const\x20float\x20coverageLimit\x20=\x20COVERAGE_TEST_THRESHOLD;\x0a#else\x0a\x20\x20\x20\x20/*\x20ANTIALIASING\x20*/\x0a\x20\x20\x20\x20//\x20Use\x20subpixel\x20coverage\x20computation\x20when\x20lines\x20get\x20subpixel\x20widths\x0a\x20\x20\x20\x20//\x20so\x20we\x20still\x20render\x20them\x20appropriately.\x20Otherwise\x20discard\x20anything\x0a\x20\x20\x20\x20//\x20that\x20is\x20not\x20fully\x20within\x20the\x20line\x0a\x20\x20\x20\x20float\x20coverageLimit\x20=\x20radius\x20<=\x200.5\x20?\x20COVERAGE_TEST_THRESHOLD\x20:\x200.75;\x0a#endif\x20/*\x20ANTIALIASING\x20*/\x0a\x20\x20\x20\x20if\x20(coverage\x20<\x20coverageLimit)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20discard;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20float\x20alpha\x20=\x20vColor.a\x20*\x20coverage;\x0a\x20\x20\x20\x20out_FragColor\x20=\x20vec4(vColor.rgb,\x20alpha);\x0a#ifdef\x20APPLY_SWIPE\x0a\x20\x20\x20\x20\x20rollerShutter(gl_FragCoord.xy,\x20uSwipeRegion);\x0a#endif\x0a\x0a#ifdef\x20CLIP\x0a\x20\x20\x20\x20\x20out_FragColor\x20*=\x20clip(vec4(vViewPosition,\x201.0),\x201.0);\x0a#endif\x0a\x0a\x20\x20\x20\x20\x20float\x20attenuation\x20=\x201.0\x20-\x20smoothstep(nearRange,\x20farRange,\x20vDistanceFromEye);\x0a\x20\x20\x20\x20\x20out_FragColor.a\x20*=\x20attenuation;\x0a\x20\x20\x20\x20\x20czm_writeLogDepth();\x0a}';
        function _0x119597() {
            const _0x2e9a9c = _0x324b8e;
            this['model'] = void 0x0,
                this['context'] = void 0x0,
                this[_0x2e9a9c(0x6ba)] = void 0x0,
                this[_0x2e9a9c(0x9f8)] = void 0x0;
        }
        _0x119597[_0x324b8e(0x74f)][_0x324b8e(0x414)] = function (_0x23e572, _0x542158, _0x4136db, _0xf1aaec) {
            const _0xb84578 = _0x324b8e;
            this[_0xb84578(0x40e)] = _0x542158,
                this[_0xb84578(0x56c)] = _0x23e572,
                this['texture'] = _0x4136db,
                this[_0xb84578(0x9f8)] = _0xf1aaec;
        }
            ,
            _0x119597[_0x324b8e(0x74f)]['execute'] = function () {
                const _0x5b9c86 = _0x324b8e;
                let _0x5714ce = this['subTextureInfo'];
                this['texture'][_0x5b9c86(0x84b)] || this['texture'][_0x5b9c86(0x9b0)](),
                    this[_0x5b9c86(0x6ba)]['copyFrom']({
                        'xOffset': _0x5714ce['xOffset'],
                        'yOffset': _0x5714ce[_0x5b9c86(0x8d4)],
                        'width': _0x5714ce[_0x5b9c86(0x8ce)],
                        'height': _0x5714ce[_0x5b9c86(0x88d)],
                        'arrayBufferView': _0x5714ce[_0x5b9c86(0x3d3)]
                    });
            }
            ;
        var _0x5aa1c1 = Object[_0x324b8e(0x3e6)]({
            'OPAQUE': _0x324b8e(0x7a6),
            'BLEND': _0x324b8e(0x97e),
            'MASK': _0x324b8e(0x3f5)
        });
        const _0x50233c = Cesium[_0x324b8e(0x14b)];
        function _0x245702(_0x28916c) {
            const _0x35dc29 = _0x324b8e;
            _0x35de87[_0x35dc29(0x479)](this, _0x28916c),
                this['vs'] = _0x348b89,
                this['fs'] = _0x57a126,
                this[_0x35dc29(0x4ad)] = void 0x0,
                this[_0x35dc29(0x2bd)] = void 0x0,
                this[_0x35dc29(0x182)] = void 0x0,
                this[_0x35dc29(0xa29)] = void 0x0,
                this[_0x35dc29(0x81c)] = !0x1;
        }
        _0x245702[_0x324b8e(0x74f)] = Object[_0x324b8e(0x34c)](_0x35de87[_0x324b8e(0x74f)]),
            _0x245702['prototype'][_0x324b8e(0x124)] = _0x35de87;
        let _0xe0019c = new Cesium[(_0x324b8e(0x747))]()
            , _0x4757aa = new Cesium[(_0x324b8e(0x747))]()
            , _0x534849 = new Cesium[(_0x324b8e(0x747))]()
            , _0x577a1e = new Cesium[(_0x324b8e(0x747))]();
        new Cesium[(_0x324b8e(0x75c))](),
            new Cesium['Color'](),
            _0x245702[_0x324b8e(0x74f)]['createOneEdgeCommand'] = function (_0x7591cb, _0x37f0cf, _0x329828, _0x3cbc87, _0x1ed462) {
                const _0x452dde = _0x324b8e;
                if (!_0x329828[_0x452dde(0x2da)] || 0x0 == _0x329828[_0x452dde(0x2da)][_0x452dde(0x376)] || !_0x329828[_0x452dde(0x332)] || 0x0 === _0x329828['instanceCount'])
                    return null;
                let _0x48730d, _0x2b2334, _0x1087a7 = new Cesium[(_0x452dde(0x39a))]({
                    'primitiveType': Cesium['PrimitiveType'][_0x452dde(0x22e)],
                    'modelMatrix': this[_0x452dde(0x896)],
                    'boundingVolume': this[_0x452dde(0x399)],
                    'pass': Cesium[_0x452dde(0x119)][_0x452dde(0x641)],
                    'owner': this,
                    'cull': !0x0
                });
                this[_0x452dde(0x4ad)] = new Cesium[(_0x452dde(0x403))]({
                    'context': _0x7591cb,
                    'attributes': _0x329828[_0x452dde(0x2da)],
                    'indexBuffer': _0x3cbc87
                }),
                    _0x1087a7['vertexArray'] = this[_0x452dde(0x4ad)],
                    _0x1087a7[_0x452dde(0x332)] = _0x329828[_0x452dde(0x332)],
                    _0x48730d = new Cesium[(_0x452dde(0x966))]({
                        'sources': [_0x4c4475]
                    }),
                    _0x2b2334 = new Cesium['ShaderSource']({
                        'sources': [_0x377d2c]
                    }),
                    _0x1ed462 || (_0x48730d[_0x452dde(0x9e5)][_0x452dde(0x745)](_0x452dde(0x78f)),
                        _0x2b2334[_0x452dde(0x9e5)][_0x452dde(0x745)]('SILHOUETTE')),
                    _0x48730d[_0x452dde(0x9e5)][_0x452dde(0x745)](_0x452dde(0x886)),
                    _0x2b2334[_0x452dde(0x9e5)][_0x452dde(0x745)](_0x452dde(0x886)),
                    _0x48730d[_0x452dde(0x9e5)][_0x452dde(0x745)](_0x452dde(0x55d)),
                    _0x2b2334['defines']['push'](_0x452dde(0x55d)),
                    _0x37f0cf['swipeEnabled'] && _0x2b2334[_0x452dde(0x9e5)][_0x452dde(0x745)](ProgramDefines[_0x452dde(0x920)]),
                    _0x37f0cf[_0x452dde(0x314)] && _0x2b2334[_0x452dde(0x9e5)][_0x452dde(0x745)](_0x452dde(0x6dd)),
                    _0x37f0cf[_0x452dde(0x151)] && _0x2b2334[_0x452dde(0x9e5)]['push'](_0x452dde(0x803)),
                    (_0x48730d[_0x452dde(0x9e5)]['push']('MODE\x200'),
                        _0x2b2334[_0x452dde(0x9e5)][_0x452dde(0x745)](_0x452dde(0x9f7)),
                        this['edgeSP'] = Cesium[_0x452dde(0x5a0)][_0x452dde(0x6bf)]({
                            'context': _0x7591cb,
                            'vertexShaderSource': _0x48730d,
                            'fragmentShaderSource': _0x2b2334,
                            'attributeLocations': _0x329828['attributeLocations']
                        }),
                        _0x1087a7[_0x452dde(0x67b)] = this[_0x452dde(0x2bd)],
                        _0x1087a7[_0x452dde(0x9c1)] = Cesium[_0x452dde(0x4ca)][_0x452dde(0x6bf)]({
                            'depthTest': {
                                'enabled': !0x0,
                                'func': Cesium['DepthFunction'][_0x452dde(0x7fa)]
                            },
                            'cull': {
                                'enabled': !0x0
                            },
                            'blending': Cesium[_0x452dde(0x586)][_0x452dde(0x753)]
                        }));
                let _0x3936e8 = {
                    'uLineColor': function () {
                        const _0x2c89ba = _0x452dde;
                        return _0x37f0cf[_0x2c89ba(0x11d)][_0x2c89ba(0x320)];
                    },
                    'uLineWidth': function () {
                        const _0x4d57bd = _0x452dde;
                        return _0x37f0cf[_0x4d57bd(0x11d)]['lineWidth'];
                    },
                    'uDistanceFalloffFactor': function () {
                        const _0x50e663 = _0x452dde;
                        return _0x37f0cf[_0x50e663(0x52f)];
                    },
                    'u_polygonOffset': function () {
                        const _0x586898 = _0x452dde;
                        return new Cesium[(_0x586898(0xab7))](-0x5, -0x5);
                    }
                };
                return _0x1087a7[_0x452dde(0x501)] = Cesium[_0x452dde(0x884)](_0x3936e8, this[_0x452dde(0x38e)][_0x452dde(0x501)]),
                    _0x1087a7[_0x452dde(0x28a)] = _0x329828[_0x452dde(0xa34)],
                    _0x1087a7[_0x452dde(0x959)] = _0x329828[_0x452dde(0x332)],
                    _0x1087a7;
            }
            ,
            _0x245702[_0x324b8e(0x74f)][_0x324b8e(0x29c)] = function () {
                const _0xc3bec = _0x324b8e;
                if (Cesium[_0xc3bec(0x14b)](this[_0xc3bec(0x38e)]) || 0x0 !== this[_0xc3bec(0x216)][_0xc3bec(0x376)] || 0x0 !== this[_0xc3bec(0x57b)][_0xc3bec(0x376)] || 0x0 !== this[_0xc3bec(0xad2)]['length'])
                    return;
                let _0x188d36 = this[_0xc3bec(0xa41)]
                    , _0x277725 = _0x188d36[_0xc3bec(0x56c)]
                    , _0x53441e = this[_0xc3bec(0x76b)]
                    , _0x384494 = this['arrIndexPackage']
                    , _0x661f08 = _0x53441e[_0xc3bec(0xaa9)];
                if (_0x384494['length'] < 0x1)
                    return;
                let _0x94730b = _0x384494[0x0]
                    , _0x2fd099 = this['material'];
                this[_0xc3bec(0x99e)] = new Cesium[(_0xc3bec(0x403))]({
                    'context': _0x277725,
                    'attributes': _0x661f08,
                    'indexBuffer': _0x94730b[_0xc3bec(0x118)]
                });
                let _0xaa2a3d = Cesium['PrimitiveType']['TRIANGLES'];
                switch (_0x94730b[_0xc3bec(0x97f)]) {
                    case 0x1:
                        _0xaa2a3d = Cesium['PrimitiveType'][_0xc3bec(0x5b1)];
                        break;
                    case 0x2:
                        _0xaa2a3d = Cesium[_0xc3bec(0x635)][_0xc3bec(0x8f5)];
                        break;
                    case 0x4:
                        _0xaa2a3d = Cesium[_0xc3bec(0x635)]['TRIANGLES'];
                }
                this[_0xc3bec(0x81c)] = _0xaa2a3d === Cesium['PrimitiveType'][_0xc3bec(0x8f5)];
                let _0x2a4671 = !0x1;
                (_0x2fd099[_0xc3bec(0x61c)] === _0x5aa1c1[_0xc3bec(0x53a)] || _0x2fd099[_0xc3bec(0x61c)] === _0x5aa1c1[_0xc3bec(0xd1)] || _0x188d36['_isTransparencyOptimization'] && _0x2fd099[_0xc3bec(0x29f)]) && (_0x2a4671 = !0x0),
                    this[_0xc3bec(0x38e)] = new Cesium['DrawCommand']({
                        'primitiveType': _0xaa2a3d,
                        'modelMatrix': this['modelMatrix'],
                        'boundingVolume': Cesium[_0xc3bec(0xa4a)][_0xc3bec(0x157)](this[_0xc3bec(0x399)]),
                        'pickId': this[_0xc3bec(0x428)],
                        'vertexArray': this[_0xc3bec(0x99e)],
                        'shaderProgram': this[_0xc3bec(0x67b)],
                        'pass': _0x2a4671 ? Cesium['Pass'][_0xc3bec(0x5b6)] : Cesium[_0xc3bec(0x119)][_0xc3bec(0x641)],
                        'renderState': _0x2fd099['bTransparentSorting'] ? Cesium[_0xc3bec(0x4ca)]['fromCache']({
                            'cull': {
                                'enabled': !0x0
                            },
                            'depthTest': {
                                'enabled': !0x0,
                                'func': Cesium[_0xc3bec(0x83d)][_0xc3bec(0x7fa)]
                            },
                            'blending': Cesium[_0xc3bec(0x586)][_0xc3bec(0x753)]
                        }) : Cesium[_0xc3bec(0x4ca)][_0xc3bec(0x6bf)]({
                            'cull': {
                                'enabled': !0x1
                            },
                            'depthTest': {
                                'enabled': !0x0,
                                'func': Cesium[_0xc3bec(0x83d)]['LESS_OR_EQUAL']
                            },
                            'blending': Cesium['BlendingState'][_0xc3bec(0x753)]
                        }),
                        'instanceCount': _0x53441e[_0xc3bec(0x332)]
                    });
                let _0x5263c6 = function (_0x3b24b5, _0x34c627, _0xdd4ece) {
                    const _0x515b00 = _0xc3bec;
                    var _0x8c70c5 = _0xdd4ece[_0x515b00(0x63e)] || {};
                    return {
                        'uGeoMatrix': function () {
                            return _0xdd4ece['geoMatrix'];
                        },
                        'uTexMatrix': function () {
                            const _0x23057a = _0x515b00;
                            return _0x3b24b5[_0x23057a(0xe3)];
                        },
                        'uFillForeColor': function () {
                            const _0x86952f = _0x515b00;
                            return _0xdd4ece['useLineColor'] ? _0x34c627[_0x86952f(0x11d)]['lineColor'] : _0x34c627[_0x86952f(0x11d)][_0x86952f(0x93f)];
                        },
                        'uDiffuseColor': function () {
                            const _0x4d435f = _0x515b00;
                            return _0x3b24b5[_0x4d435f(0x77a)];
                        },
                        'uAmbientColor': function () {
                            const _0x318d5c = _0x515b00;
                            return _0x3b24b5[_0x318d5c(0x38f)];
                        },
                        'uInverseGeoMatrix': function () {
                            return _0xdd4ece['invGeoMatrix'];
                        },
                        'uTexture': function () {
                            const _0x589d11 = _0x515b00;
                            let _0x3323f1 = _0x3b24b5['textures'][0x0];
                            return _0x3323f1['isTexBlock'] ? _0x3323f1[_0x589d11(0x7d4)] && _0x3323f1[_0x589d11(0x84b)] ? _0x3323f1 : _0x3b24b5[_0x589d11(0x3bb)] ? _0x3b24b5[_0x589d11(0x3bb)] : _0x3323f1 : _0x3b24b5[_0x589d11(0x37b)][0x0];
                        },
                        'uTexture2': function () {
                            const _0x178ea3 = _0x515b00;
                            return _0x3b24b5[_0x178ea3(0x37b)][0x1];
                        },
                        'uTexAtlasDim': function () {
                            const _0x4e38f3 = _0x515b00;
                            let _0x3db41a = _0x3b24b5[_0x4e38f3(0x37b)][0x0][_0x4e38f3(0x7d4)] ? _0x3b24b5[_0x4e38f3(0x37b)][0x0] : _0x3b24b5[_0x4e38f3(0x3bb)] ? _0x3b24b5['ancestorTexture'] : _0x3b24b5[_0x4e38f3(0x37b)][0x0];
                            if (_0x577a1e['x'] = _0x3db41a[_0x4e38f3(0x8ce)],
                                _0x577a1e['y'] = _0x3db41a['height'],
                                _0x3b24b5[_0x4e38f3(0x37b)][0x1]) {
                                let _0x3431e3 = _0x3b24b5['textures'][0x1][_0x4e38f3(0x7d4)] ? _0x3b24b5[_0x4e38f3(0x37b)][0x1] : _0x3b24b5[_0x4e38f3(0x7b4)] ? _0x3b24b5[_0x4e38f3(0x7b4)] : _0x3b24b5[_0x4e38f3(0x37b)][0x1];
                                _0x577a1e['z'] = _0x3431e3['width'],
                                    _0x577a1e['w'] = _0x3431e3[_0x4e38f3(0x88d)];
                            }
                            return _0x577a1e;
                        },
                        'batchTextureAtlas': function () {
                            const _0x990b30 = _0x515b00;
                            return _0x3b24b5[_0x990b30(0x5d3)][_0x990b30(0xa12)];
                        },
                        'batchTextureAtlasStep': function () {
                            const _0x5a5d53 = _0x515b00;
                            return _0x3b24b5['batchTable'][_0x5a5d53(0x3e0)];
                        },
                        'batchTextureAtlasSec': function () {
                            const _0x2bc165 = _0x515b00;
                            return _0x3b24b5[_0x2bc165(0x4d3)][_0x2bc165(0xa12)];
                        },
                        'batchTextureAtlasStepSec': function () {
                            const _0x540b9d = _0x515b00;
                            return _0x3b24b5[_0x540b9d(0x4d3)]['_textureStep'];
                        },
                        'uTexture0Width': function () {
                            const _0x28848c = _0x515b00;
                            return _0x3b24b5[_0x28848c(0x37b)][0x0]['width'];
                        },
                        'uTexture1Width': function () {
                            const _0x45f7f3 = _0x515b00;
                            return _0x3b24b5[_0x45f7f3(0x37b)][0x1][_0x45f7f3(0x8ce)];
                        },
                        'uSelectedColor': function () {
                            const _0x21ee73 = _0x515b00;
                            return _0x34c627[_0x21ee73(0x203)];
                        },
                        'uClipMode': function () {
                            const _0x5998f4 = _0x515b00;
                            return _0x34c627[_0x5998f4(0x96e)];
                        },
                        'uClipPlanes': function () {
                            const _0x1b3124 = _0x515b00;
                            return _0x34c627[_0x1b3124(0x132)];
                        },
                        'uHypsometricTexture': function () {
                            const _0x34c6fe = _0x515b00;
                            return _0x34c627[_0x34c6fe(0x2cf)][_0x34c6fe(0x6ba)];
                        },
                        'uHypLineColor': function () {
                            const _0x20bfb1 = _0x515b00;
                            return _0x34c627[_0x20bfb1(0x2cf)][_0x20bfb1(0x27b)][_0x20bfb1(0x592)];
                        },
                        'uNoValueColor': function () {
                            const _0x5e7f70 = _0x515b00;
                            return _0x34c627[_0x5e7f70(0x2cf)]['setting'][_0x5e7f70(0x94f)];
                        },
                        'uMinMaxValue': function () {
                            const _0x593a4d = _0x515b00;
                            let _0x55d582 = _0x34c627[_0x593a4d(0x2cf)][_0x593a4d(0x27b)];
                            return _0xe0019c['x'] = _0x55d582[_0x593a4d(0x70c)],
                                _0xe0019c['y'] = _0x55d582[_0x593a4d(0x8cc)],
                                _0xe0019c['z'] = _0x55d582['MinVisibleValue'],
                                _0xe0019c['w'] = _0x55d582[_0x593a4d(0x266)],
                                _0xe0019c;
                        },
                        'uOpacityIntervalFillMode': function () {
                            const _0x2e7ab4 = _0x515b00;
                            let _0x2f296c = _0x34c627[_0x2e7ab4(0x2cf)][_0x2e7ab4(0x27b)];
                            return _0x4757aa['x'] = _0x2f296c[_0x2e7ab4(0x573)],
                                _0x4757aa['y'] = _0x2f296c[_0x2e7ab4(0x2db)],
                                _0x4757aa['z'] = _0x2f296c[_0x2e7ab4(0x36a)],
                                _0x4757aa;
                        },
                        'uFlattenRect': function () {
                            const _0x4532b2 = _0x515b00;
                            return _0x34c627[_0x4532b2(0x460)][_0x4532b2(0x39d)];
                        },
                        'uFlattenTexture': function () {
                            const _0x4f23f5 = _0x515b00;
                            return _0x34c627['_flattenPar'][_0x4f23f5(0x6ba)];
                        },
                        'uSwipeRegion': function () {
                            const _0x8fbc83 = _0x515b00
                                , _0x37034b = _0x34c627[_0x8fbc83(0x56c)];
                            return _0x534849['x'] = _0x34c627[_0x8fbc83(0x90b)]['x'] * _0x37034b[_0x8fbc83(0x142)],
                                _0x534849['y'] = (0x1 - _0x34c627[_0x8fbc83(0x90b)]['y']) * _0x37034b['drawingBufferHeight'],
                                _0x534849['z'] = _0x34c627[_0x8fbc83(0x90b)]['z'] * _0x37034b[_0x8fbc83(0x142)],
                                _0x534849['w'] = (0x1 - _0x34c627[_0x8fbc83(0x90b)]['w']) * _0x37034b['drawingBufferHeight'],
                                _0x534849;
                        },
                        'uBrightness': function () {
                            const _0x268cce = _0x515b00;
                            return _0x34c627[_0x268cce(0x5d1)];
                        },
                        'uContrast': function () {
                            return _0x34c627['_contrast'];
                        },
                        'uHue': function () {
                            const _0x19da4e = _0x515b00;
                            return _0x34c627[_0x19da4e(0x4b5)];
                        },
                        'uSaturation': function () {
                            return _0x34c627['_saturation'];
                        },
                        'uOneOverGamma': function () {
                            const _0x4f3a66 = _0x515b00;
                            return 0x1 / _0x34c627[_0x4f3a66(0xaa0)];
                        },
                        'uBaseColorTextureIndex': function () {
                            const _0x2bcd8a = _0x515b00;
                            return _0x8c70c5['_baseColorTextureIndex'] > -0x1 ? _0x8c70c5[_0x2bcd8a(0x1b8)] : _0x34c627['_PBRMaterialParams'][_0x2bcd8a(0x163)][_0x2bcd8a(0x940)];
                        },
                        'uBaseColorFactor': function () {
                            const _0xd4d40c = _0x515b00;
                            return _0x8c70c5[_0xd4d40c(0x631)] || _0x34c627['_PBRMaterialParams']['pbrMetallicRoughness'][_0xd4d40c(0x63c)];
                        },
                        'uMetallicFactor': function () {
                            const _0x2b8741 = _0x515b00;
                            return _0x8c70c5[_0x2b8741(0x18c)] || _0x34c627[_0x2b8741(0x5e5)][_0x2b8741(0x163)][_0x2b8741(0x81f)];
                        },
                        'uRoughnessFactor': function () {
                            const _0xeb4c55 = _0x515b00;
                            return Cesium[_0xeb4c55(0x225)](_0x8c70c5['_roughnessFactor'], _0x34c627['_PBRMaterialParams']['pbrMetallicRoughness'][_0xeb4c55(0xc9)]);
                        },
                        'uEmissiveFactor': function () {
                            const _0x233eec = _0x515b00;
                            return _0x8c70c5['_emissiveFactor'] || _0x34c627['_PBRMaterialParams']['pbrMetallicRoughness'][_0x233eec(0x4af)];
                        },
                        'uEmissionTexture': function () {
                            const _0x34f330 = _0x515b00;
                            if (_0x50233c(_0x8c70c5[_0x34f330(0x876)]))
                                return _0x8c70c5[_0x34f330(0x876)];
                            var _0xf2c34 = _0x8c70c5[_0x34f330(0x6fd)];
                            return _0xf2c34 > -0x1 && _0x50233c(_0x8c70c5[_0x34f330(0xa49)][_0xf2c34]) ? _0x8c70c5[_0x34f330(0xa49)][_0xf2c34] : _0x34c627[_0x34f330(0x5e5)][_0x34f330(0x163)][_0x34f330(0x876)];
                        },
                        'uMetallicRoughnessTexture': function () {
                            const _0x5ee1b3 = _0x515b00;
                            return _0x50233c(_0x8c70c5[_0x5ee1b3(0x1d7)]) && _0x8c70c5[_0x5ee1b3(0x1d7)] > -0x1 ? _0x50233c(_0x8c70c5['metallicRoughnessTexture']) ? _0x8c70c5[_0x5ee1b3(0xaaf)] : _0x8c70c5[_0x5ee1b3(0xa49)][_0x8c70c5[_0x5ee1b3(0x1d7)]] : _0x34c627[_0x5ee1b3(0x5e5)]['pbrMetallicRoughness'][_0x5ee1b3(0xaaf)];
                        },
                        'uNormalTexture': function () {
                            const _0x408dd2 = _0x515b00;
                            return _0x50233c(_0x8c70c5[_0x408dd2(0x445)]) && _0x8c70c5['_normalTextureIndex'] > -0x1 ? _0x8c70c5['normalTexture'] ? _0x8c70c5[_0x408dd2(0x565)] : _0x8c70c5[_0x408dd2(0xa49)][_0x8c70c5[_0x408dd2(0x445)]] : _0x34c627[_0x408dd2(0x5e5)][_0x408dd2(0x163)][_0x408dd2(0x565)];
                        },
                        'uNormalTextureScale': function () {
                            const _0x7599ff = _0x515b00;
                            return _0x50233c(_0x8c70c5[_0x7599ff(0x71d)]) ? _0x8c70c5[_0x7599ff(0x71d)] : _0x34c627[_0x7599ff(0x5e5)][_0x7599ff(0x163)][_0x7599ff(0x17d)];
                        },
                        'uOcclusionTexture': function () {
                            const _0x5a934e = _0x515b00;
                            return _0x50233c(_0x8c70c5[_0x5a934e(0x5c5)]) && _0x8c70c5[_0x5a934e(0x5c5)] > -0x1 ? _0x8c70c5[_0x5a934e(0x656)] ? _0x8c70c5[_0x5a934e(0x656)] : _0x8c70c5[_0x5a934e(0xa49)][_0x8c70c5[_0x5a934e(0x5c5)]] : _0x34c627['_PBRMaterialParams']['pbrMetallicRoughness'][_0x5a934e(0x656)];
                        },
                        'uIndexOfRefraction': function () {
                            const _0x3c1171 = _0x515b00;
                            return _0x50233c(_0x8c70c5[_0x3c1171(0x844)]) && _0x8c70c5[_0x3c1171(0x844)] > 0x0 ? _0x8c70c5[_0x3c1171(0x844)] : _0x34c627['_PBRMaterialParams']['pbrMetallicRoughness'][_0x3c1171(0x1de)];
                        },
                        'uTransmissionFactor': function () {
                            const _0x4e0295 = _0x515b00;
                            return _0x50233c(_0x8c70c5[_0x4e0295(0x16f)]) && _0x8c70c5[_0x4e0295(0x16f)] > 0x0 ? _0x8c70c5[_0x4e0295(0x16f)] : _0x50233c(_0x34c627[_0x4e0295(0x5e5)][_0x4e0295(0x163)][_0x4e0295(0x795)]) && _0x50233c(_0x34c627[_0x4e0295(0x5e5)][_0x4e0295(0x163)][_0x4e0295(0x795)][_0x4e0295(0x11a)]) ? _0x34c627[_0x4e0295(0x5e5)][_0x4e0295(0x163)][_0x4e0295(0x795)][_0x4e0295(0x11a)] : 0x1;
                        },
                        'uBaseTexture': function () {
                            const _0x4a5299 = _0x515b00;
                            return _0x50233c(_0x8c70c5['_baseColorTextureIndex']) && _0x8c70c5[_0x4a5299(0x1b8)] > -0x1 ? _0x8c70c5[_0x4a5299(0x79f)] : _0x34c627[_0x4a5299(0x5e5)][_0x4a5299(0x163)][_0x4a5299(0x79f)];
                        }
                    };
                }(_0x2fd099, _0x188d36, this);
                this[_0xc3bec(0x5d3)] && (_0x5263c6 = this[_0xc3bec(0x5d3)][_0xc3bec(0xa92)]()(_0x5263c6)),
                    _0x2fd099[_0xc3bec(0x5d3)] && (_0x5263c6 = _0x2fd099['batchTable'][_0xc3bec(0xa92)]()(_0x5263c6)),
                    this['colorCommand']['uniformMap'] = _0x5263c6,
                    this[_0xc3bec(0x76b)] = void 0x0,
                    this[_0xc3bec(0xa46)] = void 0x0,
                    this['vs'] = void 0x0,
                    this['fs'] = void 0x0,
                    this[_0xc3bec(0x84b)] = !0x0;
            }
            ,
            _0x245702['prototype'][_0x324b8e(0x76f)] = function (_0xc275cc) {
                const _0x202608 = _0x324b8e;
                if (!this[_0x202608(0x38e)] || !this[_0x202608(0x66a)] || this['regularEdgeCommand'])
                    return;
                let _0x382fa3 = this['layer'][_0x202608(0x56c)]
                    , _0x53eb3d = this[_0x202608(0x66a)];
                _0x76a51a['createRegularEdgeAttributes'](_0x382fa3, _0x53eb3d['regular']),
                    _0x76a51a[_0x202608(0x419)](_0x382fa3, _0x53eb3d[_0x202608(0x59f)]);
                let _0x5a279d = _0x76a51a['createIndexBuffer'](_0x382fa3);
                this[_0x202608(0x182)] = this[_0x202608(0x90c)](_0x382fa3, this['layer'], _0x53eb3d[_0x202608(0x5f1)], _0x5a279d, !0x0),
                    this[_0x202608(0xa29)] = this[_0x202608(0x90c)](_0x382fa3, this[_0x202608(0xa41)], _0x53eb3d[_0x202608(0x59f)], _0x5a279d, !0x1);
            }
            ;
        let _0xb4e855 = new _0x119597();
        _0x245702[_0x324b8e(0x74f)][_0x324b8e(0x83b)] = function (_0x39b0d5) {
            const _0x3033ce = _0x324b8e;
            this[_0x3033ce(0x932)][_0x3033ce(0x364)](),
                this['material'][_0x3033ce(0x4c7)](_0x39b0d5, this['layer']);
            let _0xb53343 = this[_0x3033ce(0x932)][_0x3033ce(0x755)];
            for (; _0xb53343[_0x3033ce(0x376)];) {
                let _0xa52393 = _0xb53343['peek']()
                    , _0x4fcb29 = _0xa52393[_0x3033ce(0x6ba)]
                    , _0x34d363 = _0xa52393[_0x3033ce(0x9f8)];
                if (_0xb4e855[_0x3033ce(0x414)](_0x39b0d5[_0x3033ce(0x56c)], this, _0x4fcb29, _0x34d363),
                    !_0x39b0d5['jobScheduler'][_0x3033ce(0x62c)](_0xb4e855, Cesium[_0x3033ce(0x398)][_0x3033ce(0x4bf)]))
                    break;
                _0xb53343[_0x3033ce(0xace)]();
            }
            0x0 === _0xb53343[_0x3033ce(0x376)] && this[_0x3033ce(0x932)][_0x3033ce(0x38b)](),
                this[_0x3033ce(0x932)]['batchTable'][_0x3033ce(0x4bc)](_0x39b0d5);
        }
            ,
            _0x245702[_0x324b8e(0x74f)][_0x324b8e(0x4bc)] = function (_0x499ec6, _0x14ac8d) {
                const _0x3d13e6 = _0x324b8e;
                if (!this['ready'])
                    return this[_0x3d13e6(0x3f4)](_0x499ec6),
                        this[_0x3d13e6(0x54b)](),
                        this[_0x3d13e6(0x47f)](_0x499ec6),
                        this[_0x3d13e6(0x250)](_0x499ec6),
                        this[_0x3d13e6(0x29c)](_0x499ec6),
                        this['createWireFrame'](_0x499ec6),
                        void this['initLayerSetting'](_0x14ac8d);
                this[_0x3d13e6(0x6e5)] && (this[_0x3d13e6(0x603)](),
                    this[_0x3d13e6(0x6e5)] = !0x1),
                    this[_0x3d13e6(0x5d3)] && this['batchTable'][_0x3d13e6(0x4bc)](_0x499ec6),
                    this[_0x3d13e6(0x932)]['batchTable'] && this['updateMaterialBatchTable'](_0x499ec6),
                    _0x14ac8d[_0x3d13e6(0x11d)][_0x3d13e6(0x68e)] !== _0x276dd5[_0x3d13e6(0x64a)] && _0x499ec6[_0x3d13e6(0x728)][_0x3d13e6(0x745)](this[_0x3d13e6(0x38e)]),
                    _0x14ac8d[_0x3d13e6(0x11d)]['fillStyle'] !== _0x276dd5[_0x3d13e6(0x55a)] && (this[_0x3d13e6(0x182)] && (_0x499ec6[_0x3d13e6(0x728)][_0x3d13e6(0x745)](this[_0x3d13e6(0x182)]),
                        _0x14ac8d['_addRenderedEdge'](this[_0x3d13e6(0x182)][_0x3d13e6(0x28a)], this['regularEdgeCommand'][_0x3d13e6(0x959)])),
                        this[_0x3d13e6(0xa29)] && (_0x499ec6[_0x3d13e6(0x728)]['push'](this[_0x3d13e6(0xa29)]),
                            _0x14ac8d[_0x3d13e6(0x62e)](this[_0x3d13e6(0xa29)][_0x3d13e6(0x28a)], this[_0x3d13e6(0xa29)][_0x3d13e6(0x959)])));
            }
            ,
            _0x245702[_0x324b8e(0x74f)]['isDestroyed'] = function () {
                return !0x1;
            }
            ,
            _0x245702[_0x324b8e(0x74f)][_0x324b8e(0x4dd)] = function () {
                const _0x318415 = _0x324b8e;
                return this[_0x318415(0x67b)] = this[_0x318415(0x67b)] && !this[_0x318415(0x67b)]['isDestroyed']() && this['shaderProgram']['destroy'](),
                    this[_0x318415(0x99e)] = this[_0x318415(0x99e)] && !this['vertexArray'][_0x318415(0x575)]() && this[_0x318415(0x99e)][_0x318415(0x4dd)](),
                    this[_0x318415(0x932)] = this[_0x318415(0x932)] && !this[_0x318415(0x932)]['isDestroyed']() && this[_0x318415(0x932)][_0x318415(0x4dd)](),
                    this[_0x318415(0x5d3)] = this[_0x318415(0x5d3)] && !this[_0x318415(0x5d3)]['isDestroyed']() && this[_0x318415(0x5d3)][_0x318415(0x4dd)](),
                    this[_0x318415(0x4ad)] = this[_0x318415(0x4ad)] && !this['edgeVA'][_0x318415(0x575)]() && this[_0x318415(0x4ad)]['destroy'](),
                    this[_0x318415(0x2bd)] = this[_0x318415(0x2bd)] && !this['edgeSP'][_0x318415(0x575)]() && this[_0x318415(0x2bd)][_0x318415(0x4dd)](),
                    this[_0x318415(0x38e)] = void 0x0,
                    this[_0x318415(0x76b)] = null,
                    this[_0x318415(0xa46)] = null,
                    this[_0x318415(0x896)] = void 0x0,
                    this[_0x318415(0x49c)] = void 0x0,
                    this[_0x318415(0x813)] = void 0x0,
                    this['vs'] = void 0x0,
                    this['fs'] = void 0x0,
                    Cesium[_0x318415(0x9ef)](this);
            }
            ;
        var _0x241067 = 'in\x20vec4\x20aPosition;\x0ain\x20vec4\x20aColor;\x0auniform\x20float\x20uPointCloudSize;\x0aout\x20float\x20vPixelDistance;\x0a#ifdef\x20COMPRESS_VERTEX\x0a\x20\x20\x20\x20uniform\x20vec4\x20decode_position_min;\x0a\x20\x20\x20\x20uniform\x20float\x20decode_position_normConstant;\x0a#endif\x0a#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20uniform\x20sampler2D\x20uHypsometricTexture;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uMinMaxValue;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uOpacityIntervalFillMode;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uHypLineColor;\x0a\x20\x20\x20\x20uniform\x20vec4\x20uNoValueColor;\x0a\x20\x20\x20\x20uniform\x20float\x20uUseWValue;\x0a\x20\x20\x20\x20uniform\x20float\x20uBottom;\x0a#endif\x0a\x20\x20\x20\x20uniform\x20vec4\x20uFillForeColor;\x0a\x20\x20\x20\x20out\x20vec4\x20vColor;\x0a\x20\x20\x20\x20in\x20vec4\x20vPositionMC;\x0a\x0a#ifdef\x20HYPSOMETRIC\x0a\x0afloat\x20computeWValue(vec4\x20vertexPos){\x0a\x20\x20\x20\x20float\x20realWValue\x20=\x20vertexPos.w;\x0a#ifdef\x20TEXTURE_COORD_ONE_IS_W\x0a\x20\x20\x20\x20realWValue\x20=\x20aTexCoord0.x;\x0a#endif\x0a\x20\x20\x20\x20if(uUseWValue\x20>\x200.1)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20realWValue\x20+\x20uBottom;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20\x0a\x20\x20\x20\x20return\x20vertexPos.z\x20+\x20uBottom;\x0a}\x0a\x0avec4\x20computeContourMapColor(float\x20fValue)\x0a{\x0a\x20\x20\x20\x20float\x20floorValue\x20=\x20uMinMaxValue.x;\x0a\x20\x20\x20\x20float\x20ceilValue\x20=\x20uMinMaxValue.y;\x0a\x20\x20\x20\x20float\x20threshold\x20=\x20clamp(abs(ceilValue\x20-\x20floorValue),\x200.000001,\x2020000.0);\x0a\x20\x20\x20\x20float\x20contourRate\x20=\x20(fValue\x20-\x20floorValue)\x20/\x20threshold;\x0a\x20\x20\x20\x20float\x20finalCoord\x20=\x20clamp(contourRate,\x200.0,\x201.0);\x0a\x20\x20\x20\x20float\x20count\x20=\x20floor(finalCoord\x20*\x2016.0);\x0a\x20\x20\x20\x20float\x20y\x20=\x20(count*2.0\x20+\x201.0)/32.0;\x0a\x20\x20\x20\x20float\x20x\x20=\x20fract(finalCoord*16.0);\x0a\x20\x20\x20\x20if(y\x20>\x201.0)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20x\x20=\x201.0;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20return\x20texture(uHypsometricTexture,\x20vec2(x,\x20y)).rgba;\x0a}\x0avec4\x20getHypsometricColor(vec4\x20oriColor,\x20float\x20fValue)\x0a{\x0a\x20\x20\x20\x20vec4\x20contourMapColor\x20=\x20vec4(0.0);\x0a\x20\x20\x20\x20float\x20finalOpacity\x20=\x20uOpacityIntervalFillMode.x;\x0a\x20\x20\x20\x20float\x20fillMode\x20=\x20uOpacityIntervalFillMode.z;\x0a\x20\x20\x20\x20float\x20minVisibleValue\x20=\x20uMinMaxValue.z;\x0a\x20\x20\x20\x20float\x20maxVisibleValue\x20=\x20uMinMaxValue.w;\x0a\x20\x20\x20\x20if(fValue\x20>\x20maxVisibleValue\x20||\x20fValue\x20<\x20minVisibleValue)\x0a\x20\x20\x20\x20{\x0a\x20\x20\x20\x20\x20\x20\x20\x20return\x20uNoValueColor\x20*\x20oriColor;\x0a\x20\x20\x20\x20}\x0a\x20\x20\x20\x20contourMapColor\x20=\x20computeContourMapColor(fValue);\x0a\x20\x20\x20\x20finalOpacity\x20*=\x20sign(fillMode);\x0a\x20\x20\x20\x20vec4\x20mixColor\x20=\x20mix(vec4(1.0,1.0,1.0,1.0),\x20contourMapColor,\x20finalOpacity);\x0a\x20\x20\x20\x20return\x20mixColor;\x0a}\x0a#endif\x0a\x0avoid\x20main()\x0a{\x0a#ifdef\x20COMPRESS_VERTEX\x0a\x20\x20\x20\x20vec4\x20vertexPos\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20vertexPos\x20=\x20decode_position_min\x20+\x20aPosition\x20*\x20decode_position_normConstant;\x0a#else\x0a\x20\x20\x20\x20vec4\x20vertexPos\x20=\x20aPosition;\x0a#endif\x0a\x20\x20\x20\x20vertexPos.w\x20=\x201.0;\x0a\x20\x20\x20\x20vec4\x20vertexColor\x20=\x20aColor;\x0a\x20\x20\x20\x20vColor\x20=\x20vertexColor\x20*\x20uFillForeColor;\x0a\x20\x20\x20\x20vPositionMC.xyz\x20=\x20vertexPos.xyz;\x0a\x20\x20\x20\x20vPositionMC.w\x20=\x200.0;\x0a\x20\x20\x20\x20gl_Position\x20=\x20czm_modelViewProjection\x20*\x20vertexPos;\x0a#ifdef\x20HYPSOMETRIC\x0a\x20\x20\x20\x20float\x20wValue\x20=\x20computeWValue(vertexPos);\x0a\x20\x20\x20\x20vColor\x20=\x20getHypsometricColor(vColor,\x20wValue);\x0a#endif\x0a\x20\x20\x20\x20vPixelDistance\x20=\x202.0\x20/\x20uPointCloudSize;\x0a\x20\x20\x20\x20gl_PointSize\x20=\x20uPointCloudSize;\x0a}'
            , _0x59431e = _0x324b8e(0x1e1);
        function _0x184273(_0x2980a3) {
            const _0x272a10 = _0x324b8e;
            _0x35de87[_0x272a10(0x479)](this, _0x2980a3),
                this['vs'] = _0x241067,
                this['fs'] = _0x59431e;
        }
        _0x184273['prototype'] = Object[_0x324b8e(0x34c)](_0x35de87[_0x324b8e(0x74f)]),
            _0x184273[_0x324b8e(0x74f)][_0x324b8e(0x124)] = _0x35de87;
        let _0x431287 = new Cesium[(_0x324b8e(0x747))]()
            , _0x5292cf = new Cesium[(_0x324b8e(0x747))]()
            , _0x4a4a21 = new Cesium[(_0x324b8e(0x747))]();
        _0x184273[_0x324b8e(0x74f)][_0x324b8e(0x29c)] = function () {
            const _0x46f57f = _0x324b8e;
            if (Cesium[_0x46f57f(0x14b)](this[_0x46f57f(0x38e)]) || 0x0 !== this[_0x46f57f(0x216)][_0x46f57f(0x376)] || 0x0 !== this['indexBufferToCreate'][_0x46f57f(0x376)] || 0x0 !== this[_0x46f57f(0xad2)][_0x46f57f(0x376)])
                return;
            let _0x5a44b6 = this[_0x46f57f(0xa41)]
                , _0x4d315e = _0x5a44b6['context']
                , _0x236ac7 = this['vertexPackage'];
            this['arrIndexPackage'];
            let _0x41eac3 = _0x236ac7[_0x46f57f(0xaa9)];
            this['vertexArray'] = new Cesium[(_0x46f57f(0x403))]({
                'context': _0x4d315e,
                'attributes': _0x41eac3
            }),
                this[_0x46f57f(0x38e)] = new Cesium[(_0x46f57f(0x39a))]({
                    'primitiveType': Cesium[_0x46f57f(0x635)][_0x46f57f(0x5b1)],
                    'modelMatrix': this[_0x46f57f(0x896)],
                    'boundingVolume': Cesium[_0x46f57f(0xa4a)][_0x46f57f(0x157)](this[_0x46f57f(0x399)]),
                    'vertexArray': this['vertexArray'],
                    'shaderProgram': this[_0x46f57f(0x67b)],
                    'pass': Cesium[_0x46f57f(0x119)][_0x46f57f(0x641)],
                    'renderState': Cesium[_0x46f57f(0x4ca)][_0x46f57f(0x6bf)]({
                        'cull': {
                            'enabled': !0x0
                        },
                        'depthTest': {
                            'enabled': !0x0,
                            'func': Cesium[_0x46f57f(0x83d)][_0x46f57f(0x7fa)]
                        }
                    }),
                    'count': _0x236ac7['verticesCount']
                }),
                this[_0x46f57f(0x38e)][_0x46f57f(0x501)] = function (_0x16e6fa, _0x63e2a2) {
                    const _0x646e67 = _0x46f57f;
                    let _0x3d0b0a = _0x63e2a2[_0x646e67(0x76b)]
                        , _0x1790fc = {
                            'uGeoMatrix': function () {
                                const _0x1303d8 = _0x646e67;
                                return _0x63e2a2[_0x1303d8(0x1f6)];
                            },
                            'uInverseGeoMatrix': function () {
                                const _0x55e770 = _0x646e67;
                                return _0x63e2a2[_0x55e770(0x93b)];
                            },
                            'uClipMode': function () {
                                return _0x16e6fa['_clipMode'];
                            },
                            'uClipPlanes': function () {
                                const _0x11005c = _0x646e67;
                                return _0x16e6fa[_0x11005c(0x132)];
                            },
                            'uUseWValue': function () {
                                return _0x63e2a2['useWValue'];
                            },
                            'uHypsometricTexture': function () {
                                const _0x4b4ce9 = _0x646e67;
                                return _0x16e6fa[_0x4b4ce9(0x2cf)][_0x4b4ce9(0x6ba)];
                            },
                            'uHypLineColor': function () {
                                const _0x4e8921 = _0x646e67;
                                return _0x16e6fa[_0x4e8921(0x2cf)]['setting'][_0x4e8921(0x592)];
                            },
                            'uNoValueColor': function () {
                                const _0x37c14f = _0x646e67;
                                return _0x16e6fa[_0x37c14f(0x2cf)][_0x37c14f(0x27b)]['noValueColor'];
                            },
                            'uMinMaxValue': function () {
                                const _0x560687 = _0x646e67;
                                let _0x2a5672 = _0x16e6fa[_0x560687(0x2cf)][_0x560687(0x27b)];
                                return _0x431287['x'] = _0x2a5672['ColorTableMinKey'],
                                    _0x431287['y'] = _0x2a5672[_0x560687(0x8cc)],
                                    _0x431287['z'] = _0x2a5672[_0x560687(0x53c)],
                                    _0x431287['w'] = _0x2a5672[_0x560687(0x266)],
                                    _0x431287;
                            },
                            'uOpacityIntervalFillMode': function () {
                                const _0x466696 = _0x646e67;
                                let _0x18d09e = _0x16e6fa['_hypsometric'][_0x466696(0x27b)];
                                return _0x5292cf['x'] = _0x18d09e['Opacity'],
                                    _0x5292cf['y'] = _0x18d09e[_0x466696(0x2db)],
                                    _0x5292cf['z'] = _0x18d09e[_0x466696(0x36a)],
                                    _0x5292cf;
                            },
                            'uSwipeRegion': function () {
                                const _0x3a80b0 = _0x646e67
                                    , _0x199c9e = _0x16e6fa[_0x3a80b0(0x56c)];
                                return _0x4a4a21['x'] = _0x16e6fa[_0x3a80b0(0x90b)]['x'] * _0x199c9e['drawingBufferWidth'],
                                    _0x4a4a21['y'] = (0x1 - _0x16e6fa['_swipeRegion']['y']) * _0x199c9e[_0x3a80b0(0x35c)],
                                    _0x4a4a21['z'] = _0x16e6fa[_0x3a80b0(0x90b)]['z'] * _0x199c9e['drawingBufferWidth'],
                                    _0x4a4a21['w'] = (0x1 - _0x16e6fa['_swipeRegion']['w']) * _0x199c9e[_0x3a80b0(0x35c)],
                                    _0x4a4a21;
                            },
                            'uBottom': function () {
                                const _0x58c592 = _0x646e67;
                                return _0x16e6fa[_0x58c592(0x11d)][_0x58c592(0x829)];
                            },
                            'uFillForeColor': function () {
                                const _0x1aca23 = _0x646e67;
                                return _0x16e6fa[_0x1aca23(0x11d)][_0x1aca23(0x93f)];
                            },
                            'uPointCloudSize': function () {
                                const _0x4d1d65 = _0x646e67;
                                return _0x16e6fa[_0x4d1d65(0x11d)][_0x4d1d65(0x824)];
                            }
                        }
                        , _0x4b1a9a = _0x3d0b0a[_0x646e67(0xa19)];
                    return (_0x4b1a9a & _0x5983eb[_0x646e67(0x649)]) === _0x5983eb[_0x646e67(0x649)] && (_0x1790fc[_0x646e67(0x799)] = function () {
                        return _0x3d0b0a['minVerticesValue'];
                    }
                        ,
                        _0x1790fc[_0x646e67(0xa2e)] = function () {
                            const _0x4325f2 = _0x646e67;
                            return _0x3d0b0a[_0x4325f2(0x5c4)];
                        }
                    ),
                        (_0x4b1a9a & _0x5983eb[_0x646e67(0x5e2)]) === _0x5983eb['SVC_Normal'] && (_0x1790fc['normal_rangeConstant'] = function () {
                            const _0x8eb6f9 = _0x646e67;
                            return _0x3d0b0a[_0x8eb6f9(0x83a)];
                        }
                        ),
                        (_0x4b1a9a & _0x5983eb[_0x646e67(0x7e0)]) === _0x5983eb['SVC_TexutreCoord'] && (_0x3d0b0a[_0x646e67(0xa44)][_0x646e67(0x376)] > 0x0 && (_0x1790fc[_0x646e67(0x18e)] = function () {
                            return _0x3d0b0a['minTexCoordValue'][0x0];
                        }
                            ,
                            _0x1790fc[_0x646e67(0x46a)] = function () {
                                const _0x295995 = _0x646e67;
                                return _0x3d0b0a[_0x295995(0xa44)][0x0];
                            }
                        ),
                            _0x3d0b0a[_0x646e67(0xa44)][_0x646e67(0x376)] > 0x1 && (_0x1790fc[_0x646e67(0x6d4)] = function () {
                                const _0x17f07d = _0x646e67;
                                return _0x3d0b0a[_0x17f07d(0x80d)][0x1];
                            }
                                ,
                                _0x1790fc[_0x646e67(0x54f)] = function () {
                                    const _0x5e669f = _0x646e67;
                                    return _0x3d0b0a[_0x5e669f(0xa44)][0x1];
                                }
                            ),
                            _0x3d0b0a[_0x646e67(0xa44)][_0x646e67(0x376)] > 0x2 && (_0x1790fc['decode_texCoord2_min'] = function () {
                                const _0x250e75 = _0x646e67;
                                return _0x3d0b0a[_0x250e75(0x80d)][0x2];
                            }
                                ,
                                _0x1790fc[_0x646e67(0x798)] = function () {
                                    const _0x57f99b = _0x646e67;
                                    return _0x3d0b0a[_0x57f99b(0xa44)][0x2];
                                }
                            ),
                            _0x3d0b0a[_0x646e67(0xa44)][_0x646e67(0x376)] > 0x3 && (_0x1790fc[_0x646e67(0x4ab)] = function () {
                                const _0x3c8ce0 = _0x646e67;
                                return _0x3d0b0a[_0x3c8ce0(0x80d)][0x3];
                            }
                                ,
                                _0x1790fc[_0x646e67(0x160)] = function () {
                                    return _0x3d0b0a['texCoordCompressConstant'][0x3];
                                }
                            ),
                            _0x3d0b0a[_0x646e67(0xa44)][_0x646e67(0x376)] > 0x4 && (_0x1790fc[_0x646e67(0x900)] = function () {
                                const _0x5a0b7e = _0x646e67;
                                return _0x3d0b0a[_0x5a0b7e(0x80d)][0x4];
                            }
                                ,
                                _0x1790fc[_0x646e67(0x2fe)] = function () {
                                    const _0xe0c165 = _0x646e67;
                                    return _0x3d0b0a[_0xe0c165(0xa44)][0x4];
                                }
                            ),
                            _0x3d0b0a[_0x646e67(0xa44)][_0x646e67(0x376)] > 0x5 && (_0x1790fc[_0x646e67(0x15d)] = function () {
                                return _0x3d0b0a['minTexCoordValue'][0x5];
                            }
                                ,
                                _0x1790fc['decode_texCoord5_normConstant'] = function () {
                                    const _0x4ed787 = _0x646e67;
                                    return _0x3d0b0a[_0x4ed787(0xa44)][0x5];
                                }
                            ),
                            _0x3d0b0a[_0x646e67(0xa44)]['length'] > 0x6 && (_0x1790fc[_0x646e67(0x11c)] = function () {
                                const _0x426280 = _0x646e67;
                                return _0x3d0b0a[_0x426280(0x80d)][0x6];
                            }
                                ,
                                _0x1790fc['decode_texCoord6_normConstant'] = function () {
                                    const _0x3e0a7c = _0x646e67;
                                    return _0x3d0b0a[_0x3e0a7c(0xa44)][0x6];
                                }
                            ),
                            _0x3d0b0a[_0x646e67(0xa44)]['length'] > 0x7 && (_0x1790fc[_0x646e67(0x855)] = function () {
                                const _0x26f258 = _0x646e67;
                                return _0x3d0b0a[_0x26f258(0x80d)][0x7];
                            }
                                ,
                                _0x1790fc[_0x646e67(0x41c)] = function () {
                                    return _0x3d0b0a['texCoordCompressConstant'][0x7];
                                }
                            )),
                        _0x1790fc;
                }(_0x5a44b6, this),
                this[_0x46f57f(0x76b)] = void 0x0,
                this['arrIndexPackage'] = void 0x0,
                this['vs'] = void 0x0,
                this['fs'] = void 0x0,
                this['ready'] = !0x0;
        }
            ,
            _0x184273[_0x324b8e(0x74f)][_0x324b8e(0x4bc)] = function (_0x531148, _0x5f1a3f) {
                const _0x587a55 = _0x324b8e;
                if (!this[_0x587a55(0x84b)])
                    return this[_0x587a55(0x47f)](_0x531148),
                        this['createShaderProgram'](_0x531148),
                        void this['createCommand'](_0x531148);
                _0x531148[_0x587a55(0x728)][_0x587a55(0x745)](this[_0x587a55(0x38e)]);
            }
            ,
            _0x184273[_0x324b8e(0x74f)][_0x324b8e(0x575)] = function () {
                return !0x1;
            }
            ,
            _0x184273[_0x324b8e(0x74f)][_0x324b8e(0x4dd)] = function () {
                const _0x4d2bf8 = _0x324b8e;
                return this[_0x4d2bf8(0x67b)] = this['shaderProgram'] && !this[_0x4d2bf8(0x67b)][_0x4d2bf8(0x575)]() && this[_0x4d2bf8(0x67b)][_0x4d2bf8(0x4dd)](),
                    this[_0x4d2bf8(0x99e)] = this[_0x4d2bf8(0x99e)] && !this[_0x4d2bf8(0x99e)][_0x4d2bf8(0x575)]() && this['vertexArray'][_0x4d2bf8(0x4dd)](),
                    this['material'] = this[_0x4d2bf8(0x932)] && !this[_0x4d2bf8(0x932)][_0x4d2bf8(0x575)]() && this[_0x4d2bf8(0x932)][_0x4d2bf8(0x4dd)](),
                    this[_0x4d2bf8(0x38e)] = void 0x0,
                    this[_0x4d2bf8(0x76b)] = null,
                    this[_0x4d2bf8(0xa46)] = null,
                    this[_0x4d2bf8(0x896)] = void 0x0,
                    this['vs'] = void 0x0,
                    this['fs'] = void 0x0,
                    Cesium[_0x4d2bf8(0x9ef)](this);
            }
            ;
        var _0x18e89c = 'in\x20vec4\x20aPosition;\x0ain\x20vec3\x20aNormal;\x0ain\x20vec4\x20aTexCoord0;\x0ain\x20vec4\x20aColor;\x0auniform\x20float\x20uTimeVal;\x0auniform\x20float\x20uScale;\x0auniform\x20float\x20uScroll;\x0auniform\x20vec2\x20uBumpSpeed;\x0auniform\x20mat4\x20uGeoMatrix;\x0a\x0aout\x20vec2\x20vNoiseCoord;\x0aout\x20vec3\x20vProjectionCoord;\x0aout\x20vec3\x20vEyeDir;\x0aout\x20vec3\x20vNormal;\x0ain\x20vec4\x20vColor;\x0ain\x20vec4\x20vPositionMC;\x0aout\x20float\x20fSelected;\x0ain\x20vec3\x20vPositionEC;\x0a\x0avoid\x20main()\x0a{\x0a\x09vec4\x20oPos\x20=\x20czm_modelViewProjection\x20*\x20aPosition;\x0a\x09vPositionMC\x20=\x20uGeoMatrix\x20*\x20aPosition;\x0a\x09vPositionEC\x20=\x20(czm_modelView\x20*\x20vPositionMC).xyz;\x0a\x09mat4\x20scalemat\x20=\x20mat4(0.5,\x200.0,\x200.0,\x200.0,\x0a\x09\x09\x090.0,\x200.5,\x200.0,\x200.0,\x0a\x09\x09\x090.0,\x200.0,\x200.5,\x200.0,\x0a\x09\x09\x090.5,\x200.5,\x200.5,\x201.0);\x0a\x09vec4\x20proj\x20=\x20scalemat\x20*\x20oPos;\x0a\x09vProjectionCoord\x20=\x20proj.xyw;\x0a\x09vNoiseCoord.xy\x20=\x20aTexCoord0.xy\x20*\x20uScale\x20+\x20uBumpSpeed\x20*\x20uTimeVal;\x0a\x09vec4\x20cameraPos\x20=\x20czm_inverseModel\x20*\x20vec4(czm_viewerPositionWC,\x201.0);\x0a\x09vEyeDir\x20=\x20aPosition.xyz\x20-\x20cameraPos.xyz;\x0a\x09vNormal\x20=\x20aNormal.xyz;\x0a\x09gl_Position\x20=\x20oPos;\x0a\x09vec4\x20vertexColor\x20=\x20vec4(1.0);\x0a\x20\x20\x20\x20vertexColor\x20=\x20aColor;\x0a\x20\x20\x20\x20vColor\x20=\x20vertexColor;\x0a}'
            , _0x146b25 = _0x324b8e(0x6fc);
        function _0x5a53c5(_0x30a6f3) {
            const _0x4e781d = _0x324b8e;
            _0x35de87[_0x4e781d(0x479)](this, _0x30a6f3),
                this['vs'] = _0x18e89c,
                this['fs'] = _0x146b25,
                this[_0x4e781d(0x45a)] = -0x1,
                this[_0x4e781d(0x408)] = 0x0;
        }
        _0x5a53c5[_0x324b8e(0x74f)] = Object['create'](_0x35de87['prototype']),
            _0x5a53c5[_0x324b8e(0x74f)]['constructor'] = _0x35de87;
        let _0x3f0999 = new Cesium[(_0x324b8e(0x747))]();
        _0x5a53c5[_0x324b8e(0x74f)]['createCommand'] = function () {
            const _0x1b11a1 = _0x324b8e;
            if (Cesium[_0x1b11a1(0x14b)](this[_0x1b11a1(0x38e)]) || 0x0 !== this[_0x1b11a1(0x216)][_0x1b11a1(0x376)] || 0x0 !== this[_0x1b11a1(0x57b)][_0x1b11a1(0x376)] || 0x0 !== this[_0x1b11a1(0xad2)][_0x1b11a1(0x376)])
                return;
            let _0x2094e1 = this['layer']
                , _0x35d4f4 = _0x2094e1[_0x1b11a1(0x56c)]
                , _0xad8822 = this[_0x1b11a1(0x76b)]
                , _0x182737 = this[_0x1b11a1(0xa46)]
                , _0x41545f = _0xad8822[_0x1b11a1(0xaa9)];
            if (_0x182737[_0x1b11a1(0x376)] < 0x1)
                return;
            let _0xa67a26 = _0x182737[0x0]
                , _0x42f8ca = this[_0x1b11a1(0x932)];
            this[_0x1b11a1(0x99e)] = new Cesium['VertexArray']({
                'context': _0x35d4f4,
                'attributes': _0x41545f,
                'indexBuffer': _0xa67a26[_0x1b11a1(0x118)]
            }),
                this['colorCommand'] = new Cesium[(_0x1b11a1(0x39a))]({
                    'primitiveType': _0xa67a26[_0x1b11a1(0x97f)],
                    'modelMatrix': this['modelMatrix'],
                    'boundingVolume': Cesium[_0x1b11a1(0xa4a)][_0x1b11a1(0x157)](this[_0x1b11a1(0x399)]),
                    'vertexArray': this[_0x1b11a1(0x99e)],
                    'shaderProgram': this[_0x1b11a1(0x67b)],
                    'pass': _0x42f8ca[_0x1b11a1(0x29f)] ? Cesium['Pass'][_0x1b11a1(0x5b6)] : Cesium[_0x1b11a1(0x119)][_0x1b11a1(0x641)],
                    'renderState': _0x42f8ca['bTransparentSorting'] ? getTransparentRenderState() : Cesium[_0x1b11a1(0x4ca)][_0x1b11a1(0x6bf)]({
                        'cull': {
                            'enabled': !0x0
                        },
                        'depthTest': {
                            'enabled': !0x0,
                            'func': Cesium[_0x1b11a1(0x83d)][_0x1b11a1(0x7fa)]
                        },
                        'blending': Cesium[_0x1b11a1(0x586)][_0x1b11a1(0x753)]
                    }),
                    'instanceCount': _0xad8822[_0x1b11a1(0x332)]
                });
            let _0x2ab0c = function (_0x5e8e8f, _0x4c19cd, _0x44b878) {
                return {
                    'uGeoMatrix': function () {
                        return _0x44b878['geoMatrix'];
                    },
                    'uFillForeColor': function () {
                        const _0x19f387 = _0x557c;
                        return _0x4c19cd[_0x19f387(0x11d)][_0x19f387(0x93f)];
                    },
                    'uSelectedColor': function () {
                        const _0x329661 = _0x557c;
                        return _0x4c19cd[_0x329661(0x203)];
                    },
                    'uClipMode': function () {
                        const _0x1443fe = _0x557c;
                        return _0x4c19cd[_0x1443fe(0x96e)];
                    },
                    'uClipPlanes': function () {
                        const _0x1305c1 = _0x557c;
                        return _0x4c19cd[_0x1305c1(0x132)];
                    },
                    'uSwipeRegion': function () {
                        const _0x28a161 = _0x557c
                            , _0x15767c = _0x4c19cd['context'];
                        return _0x3f0999['x'] = _0x4c19cd[_0x28a161(0x90b)]['x'] * _0x15767c[_0x28a161(0x142)],
                            _0x3f0999['y'] = (0x1 - _0x4c19cd[_0x28a161(0x90b)]['y']) * _0x15767c[_0x28a161(0x35c)],
                            _0x3f0999['z'] = _0x4c19cd['_swipeRegion']['z'] * _0x15767c['drawingBufferWidth'],
                            _0x3f0999['w'] = (0x1 - _0x4c19cd[_0x28a161(0x90b)]['w']) * _0x15767c[_0x28a161(0x35c)],
                            _0x3f0999;
                    },
                    'uReflectMap': function () {
                        const _0x377815 = _0x557c;
                        let _0x53ebe3 = _0x4c19cd[_0x377815(0x56c)][_0x377815(0x273)] && _0x4c19cd['context'][_0x377815(0x273)][_0x377815(0x30a)] && _0x4c19cd[_0x377815(0x56c)][_0x377815(0x273)][_0x377815(0x30a)][_0x377815(0x9df)]();
                        return _0x53ebe3 ? _0x53ebe3[_0x377815(0x5eb)](0x0) : _0x4c19cd[_0x377815(0x56c)]['defaultTexture'];
                    },
                    'uNoiseMap': function () {
                        const _0x573306 = _0x557c;
                        return _0x4c19cd[_0x573306(0x56c)][_0x573306(0x998)];
                    },
                    'uTimeVal': function () {
                        const _0x156af6 = _0x557c;
                        let _0x57bb32 = 0.01 * _0x4c19cd['_waterParameters'][_0x156af6(0xa13)];
                        return _0x44b878['waterTime'] = _0x44b878[_0x156af6(0x408)] > 0x1 ? _0x57bb32 : _0x44b878[_0x156af6(0x408)] + _0x57bb32,
                            _0x44b878[_0x156af6(0x408)];
                    },
                    'uScale': function () {
                        const _0x4a9b4a = _0x557c;
                        return _0x4c19cd['_waterParameters'][_0x4a9b4a(0x664)];
                    },
                    'uScroll': function () {
                        const _0x54abda = _0x557c;
                        return _0x4c19cd['_waterParameters'][_0x54abda(0x3e4)];
                    },
                    'uNoise': function () {
                        const _0x158ff3 = _0x557c;
                        return _0x4c19cd[_0x158ff3(0x75a)][_0x158ff3(0x8bf)];
                    },
                    'uBumpSpeed': function () {
                        const _0x4b6121 = _0x557c;
                        return _0x4c19cd['_waterParameters'][_0x4b6121(0x4cf)];
                    },
                    'uFresnelPower': function () {
                        return _0x4c19cd['_waterParameters']['fresnelPower'];
                    },
                    'uMinFresnel': function () {
                        const _0x3b8028 = _0x557c;
                        return _0x4c19cd['_waterParameters'][_0x3b8028(0x11f)];
                    },
                    'uMaxFresnel': function () {
                        const _0x26a469 = _0x557c;
                        return _0x4c19cd[_0x26a469(0x75a)][_0x26a469(0x279)];
                    },
                    'uTintColour': function () {
                        const _0x52f292 = _0x557c;
                        return _0x4c19cd['_waterParameters'][_0x52f292(0x719)];
                    },
                    'uNoiseScale': function () {
                        const _0x2a665f = _0x557c;
                        return _0x4c19cd[_0x2a665f(0x75a)][_0x2a665f(0x259)];
                    },
                    'uWaterColour': function () {
                        const _0x679bd8 = _0x557c;
                        return _0x4c19cd[_0x679bd8(0x75a)][_0x679bd8(0x887)];
                    },
                    'uWaterBrightness': function () {
                        const _0x2b1576 = _0x557c;
                        return _0x4c19cd['_waterParameters'][_0x2b1576(0x1a3)];
                    }
                };
            }(0x0, _0x2094e1, this);
            this[_0x1b11a1(0x38e)][_0x1b11a1(0x501)] = this[_0x1b11a1(0x5d3)][_0x1b11a1(0xa92)]()(_0x2ab0c),
                this[_0x1b11a1(0x76b)] = void 0x0,
                this['arrIndexPackage'] = void 0x0,
                this['vs'] = void 0x0,
                this['fs'] = void 0x0,
                this[_0x1b11a1(0x84b)] = !0x0;
        }
            ,
            _0x5a53c5[_0x324b8e(0x74f)][_0x324b8e(0x4bc)] = function (_0x4ef773, _0x1bfc95) {
                const _0x16c658 = _0x324b8e;
                if (!_0x4ef773[_0x16c658(0xd8)][_0x16c658(0xa21)]) {
                    if (!this[_0x16c658(0x84b)])
                        return this[_0x16c658(0x3f4)](_0x4ef773),
                            this[_0x16c658(0x54b)](),
                            this[_0x16c658(0x47f)](_0x4ef773),
                            this[_0x16c658(0x250)](_0x4ef773),
                            this[_0x16c658(0x29c)](_0x4ef773),
                            this[_0x16c658(0x8c1)](_0x1bfc95),
                            void function (_0x52f732, _0x38b922) {
                                const _0x3c6437 = _0x16c658;
                                let _0x100a48 = {
                                    'boundingVolume': _0x52f732['boundingVolume'],
                                    'distance': _0x38b922['style3D']['bottomAltitude'] + _0x38b922[_0x3c6437(0x75a)][_0x3c6437(0x536)]
                                };
                                _0x52f732[_0x3c6437(0x45a)] = _0x38b922[_0x3c6437(0x46c)](_0x100a48);
                            }(this, _0x1bfc95);
                    this[_0x16c658(0x6e5)] && (this['updateBatchTableAttributes'](),
                        this[_0x16c658(0x6e5)] = !0x1),
                        this['batchTable'][_0x16c658(0x4bc)](_0x4ef773),
                        _0x4ef773[_0x16c658(0x728)][_0x16c658(0x745)](this[_0x16c658(0x38e)]);
                }
            }
            ,
            _0x5a53c5[_0x324b8e(0x74f)][_0x324b8e(0x575)] = function () {
                return !0x1;
            }
            ,
            _0x5a53c5[_0x324b8e(0x74f)][_0x324b8e(0x4dd)] = function () {
                const _0x2b8cae = _0x324b8e;
                return this[_0x2b8cae(0x67b)] = this[_0x2b8cae(0x67b)] && !this[_0x2b8cae(0x67b)][_0x2b8cae(0x575)]() && this[_0x2b8cae(0x67b)][_0x2b8cae(0x4dd)](),
                    this['vertexArray'] = this['vertexArray'] && !this[_0x2b8cae(0x99e)]['isDestroyed']() && this['vertexArray']['destroy'](),
                    this[_0x2b8cae(0x932)] = this[_0x2b8cae(0x932)] && !this[_0x2b8cae(0x932)][_0x2b8cae(0x575)]() && this[_0x2b8cae(0x932)][_0x2b8cae(0x4dd)](),
                    this[_0x2b8cae(0x5d3)] = this['batchTable'] && !this[_0x2b8cae(0x5d3)][_0x2b8cae(0x575)]() && this[_0x2b8cae(0x5d3)]['destroy'](),
                    this[_0x2b8cae(0x45a)] > -0x1 && this[_0x2b8cae(0xa41)][_0x2b8cae(0x4ff)](this['waterIndex']),
                    this[_0x2b8cae(0x38e)] = void 0x0,
                    this[_0x2b8cae(0x76b)] = null,
                    this['arrIndexPackage'] = null,
                    this[_0x2b8cae(0x896)] = void 0x0,
                    this[_0x2b8cae(0x49c)] = void 0x0,
                    this[_0x2b8cae(0x813)] = void 0x0,
                    this['vs'] = void 0x0,
                    this['fs'] = void 0x0,
                    Cesium[_0x2b8cae(0x9ef)](this);
            }
            ;
        let _0x9c966a = {
            'OSGBFile': function (_0x2583e7) {
                return new _0x36840f(_0x2583e7);
            },
            'OSGBCacheFile': function (_0x323bfd) {
                return new _0x245702(_0x323bfd);
            },
            'PointCloudFile': function (_0x11bed9) {
                return new _0x184273(_0x11bed9);
            },
            'OSGBCacheFile_Water': function (_0x32d561) {
                return new _0x5a53c5(_0x32d561);
            }
        };
        function _0x5ba24b() { }
        let _0x92b3e1 = new Cesium[(_0x324b8e(0x85d))]();
        function _0x34fd46(_0x4c754a, _0x813584) {
            const _0x2aa92b = _0x324b8e;
            return _0x4c754a[_0x2aa92b(0x7eb)] > -0x1 ? function (_0xb93861) {
                const _0x1408f5 = _0x2aa92b;
                let _0x38442e = new Cesium[(_0x1408f5(0xa4a))]()
                    , _0xdb5768 = _0xb93861['instanceBounds'];
                if (!Cesium['defined'](_0xdb5768))
                    return _0x38442e;
                let _0x165ecf = new Cesium['Cartesian3'](_0xdb5768[0x0], _0xdb5768[0x1], _0xdb5768[0x2])
                    , _0x10d7fe = new Cesium[(_0x1408f5(0x85d))](_0xdb5768[0x3], _0xdb5768[0x4], _0xdb5768[0x5])
                    , _0x38e788 = new Cesium[(_0x1408f5(0x85d))][(_0x1408f5(0x687))](_0x165ecf, _0x10d7fe, 0.5, _0x92b3e1)
                    , _0x4ba32a = new Cesium[(_0x1408f5(0x85d))]['distance'](_0x38e788, _0x165ecf);
                return _0x38442e[_0x1408f5(0x6f1)] = _0x38e788,
                    _0x38442e[_0x1408f5(0x1cc)] = _0x4ba32a,
                    _0x38442e;
            }(_0x4c754a) : function (_0x13c76d, _0x525b53) {
                const _0x3030c2 = _0x2aa92b;
                let _0xc562f0, _0x359d09, _0x2eebda = new Cesium[(_0x3030c2(0xa4a))](), _0x37accc = new Cesium['Cartesian3'](), _0x1b2364 = _0x13c76d['vertexAttributes'][0x0], _0x5820df = _0x1b2364[_0x3030c2(0x70f)], _0x557545 = Cesium[_0x3030c2(0x14b)](_0x13c76d['compressOptions']) && (_0x13c76d[_0x3030c2(0xa19)] & _0x5983eb[_0x3030c2(0x649)]) === _0x5983eb[_0x3030c2(0x649)], _0x288eee = 0x1;
                _0x557545 ? (_0x288eee = _0x13c76d[_0x3030c2(0x5c4)],
                    _0xc562f0 = new Cesium['Cartesian3'](_0x13c76d[_0x3030c2(0x83c)]['x'], _0x13c76d[_0x3030c2(0x83c)]['y'], _0x13c76d[_0x3030c2(0x83c)]['z']),
                    _0x359d09 = new Uint16Array(_0x1b2364[_0x3030c2(0xa82)]['buffer'], _0x1b2364[_0x3030c2(0xa82)][_0x3030c2(0x52b)], _0x1b2364[_0x3030c2(0xa82)][_0x3030c2(0x1ef)] / 0x2)) : _0x359d09 = new Float32Array(_0x1b2364[_0x3030c2(0xa82)][_0x3030c2(0x38d)], _0x1b2364[_0x3030c2(0xa82)][_0x3030c2(0x52b)], _0x1b2364[_0x3030c2(0xa82)]['byteLength'] / 0x4);
                let _0x2e0de3 = [];
                for (let _0x3ad8ef = 0x0; _0x3ad8ef < _0x13c76d['verticesCount']; _0x3ad8ef++)
                    Cesium[_0x3030c2(0x85d)][_0x3030c2(0x26e)](_0x359d09, _0x5820df * _0x3ad8ef, _0x37accc),
                        _0x557545 && (_0x37accc = Cesium[_0x3030c2(0x85d)][_0x3030c2(0x7d7)](_0x37accc, _0x288eee, _0x37accc),
                            _0x37accc = Cesium[_0x3030c2(0x85d)][_0x3030c2(0x9cb)](_0x37accc, _0xc562f0, _0x37accc)),
                        _0x2e0de3[_0x3030c2(0x745)](Cesium[_0x3030c2(0x85d)][_0x3030c2(0x157)](_0x37accc));
                return Cesium[_0x3030c2(0xa4a)][_0x3030c2(0x751)](_0x2e0de3, _0x2eebda),
                    Cesium['BoundingSphere'][_0x3030c2(0x4f7)](_0x2eebda, _0x525b53, _0x2eebda),
                    _0x2e0de3[_0x3030c2(0x376)] = 0x0,
                    _0x2eebda;
            }(_0x4c754a, _0x813584);
        }
        function _0x51a951(_0x3f6aab, _0x12cef8, _0x221a9c, _0x39b067, _0x2e8fbc) {
            const _0xba6c2c = _0x324b8e;
            let _0x438514 = {}
                , _0x2d9576 = _0x39b067[_0xba6c2c(0x442)];
            for (let _0x47c5ce = 0x0, _0x575ecd = _0x2d9576[_0xba6c2c(0x376)]; _0x47c5ce < _0x575ecd; _0x47c5ce++) {
                let _0x25ce8e, _0x1964d8 = _0x2d9576[_0x47c5ce], _0x2a0968 = _0x1964d8[_0xba6c2c(0x322)], _0x7d9e93 = Cesium[_0xba6c2c(0x5ab)]['multiply'](_0x3f6aab[_0xba6c2c(0x896)], _0x2a0968, new Cesium[(_0xba6c2c(0x5ab))]());
                Cesium[_0xba6c2c(0x14b)](_0x2e8fbc['boundingVolume']) && (_0x25ce8e = new Cesium[(_0xba6c2c(0xa4a))](_0x2e8fbc[_0xba6c2c(0x399)][_0xba6c2c(0x275)][_0xba6c2c(0x6f1)], _0x2e8fbc[_0xba6c2c(0x399)][_0xba6c2c(0x275)][_0xba6c2c(0x1cc)]),
                    Cesium[_0xba6c2c(0xa4a)][_0xba6c2c(0x4f7)](_0x25ce8e, _0x3f6aab[_0xba6c2c(0x896)], _0x25ce8e));
                let _0x504655 = _0x1964d8[_0xba6c2c(0x1ca)];
                for (let _0x1a4361 = 0x0, _0x2b5f15 = _0x504655[_0xba6c2c(0x376)]; _0x1a4361 < _0x2b5f15; _0x1a4361++) {
                    let _0x2b6a86, _0x57bc78 = _0x504655[_0x1a4361], _0x4dab09 = _0x12cef8[_0xba6c2c(0x306)][_0x57bc78], _0x593eb8 = _0x4dab09['vertexPackage'], _0x483b56 = _0x4dab09['arrIndexPackage'], _0x219309 = _0x4dab09[_0xba6c2c(0x49c)];
                    _0x483b56[_0xba6c2c(0x376)] > 0x0 && (_0x2b6a86 = _0x221a9c[_0x483b56[0x0][_0xba6c2c(0xabf)]]);
                    let _0x2d2ffa = Cesium[_0xba6c2c(0x14b)](_0x25ce8e) ? _0x25ce8e : _0x34fd46(_0x593eb8, _0x7d9e93);
                    _0x438514[_0x57bc78] = _0x9c966a[_0x3f6aab[_0xba6c2c(0x3a7)]]({
                        'layer': _0x3f6aab,
                        'vertexPackage': _0x593eb8,
                        'arrIndexPackage': _0x483b56,
                        'pickInfo': _0x219309,
                        'modelMatrix': _0x7d9e93,
                        'geoMatrix': _0x2a0968,
                        'boundingVolume': _0x2d2ffa,
                        'material': _0x2b6a86,
                        'edgeGeometry': _0x4dab09[_0xba6c2c(0x66a)],
                        'geoName': _0x57bc78
                    });
                }
            }
            if (!(Object['keys'](_0x438514)[_0xba6c2c(0x376)] < 0x1)) {
                if (!Cesium[_0xba6c2c(0x14b)](_0x2e8fbc[_0xba6c2c(0x399)])) {
                    let _0x536a87 = [];
                    for (let _0x139b10 in _0x438514)
                        _0x438514[_0xba6c2c(0x704)](_0x139b10) && _0x536a87[_0xba6c2c(0x745)](_0x438514[_0x139b10][_0xba6c2c(0x399)]);
                    _0x2e8fbc[_0xba6c2c(0x399)] = {
                        'sphere': Cesium[_0xba6c2c(0xa4a)]['fromBoundingSpheres'](_0x536a87)
                    };
                }
                _0x2e8fbc[_0xba6c2c(0x917)] = _0x438514;
            }
        }
        _0x5ba24b[_0x324b8e(0x396)] = function (_0x4374eb, _0x2ff7bc, _0x1e232a) {
            const _0x4c032d = _0x324b8e;
            if (!Cesium['defined'](_0x2ff7bc))
                return;
            let _0x1e1768 = function (_0x13f16b, _0x38a375, _0x516f0d) {
                const _0x52fc3e = _0x557c;
                let _0x226bd7 = {}
                    , _0x8a3a4 = _0x38a375[_0x52fc3e(0x19a)][_0x52fc3e(0x932)];
                for (let _0x492d47 = 0x0, _0x1a439e = _0x8a3a4[_0x52fc3e(0x376)]; _0x492d47 < _0x1a439e; _0x492d47++) {
                    let _0x50b6cf = _0x8a3a4[_0x492d47]['material']
                        , _0x3c6152 = _0x50b6cf['id']
                        , _0x103e2e = new _0xec489();
                    _0x226bd7[_0x3c6152] = _0x103e2e;
                    let _0x3324f2 = _0x50b6cf[_0x52fc3e(0x191)];
                    _0x103e2e[_0x52fc3e(0x38f)] = new Cesium[(_0x52fc3e(0x75c))](_0x3324f2['r'], _0x3324f2['g'], _0x3324f2['b'], _0x3324f2['a']);
                    let _0xded216 = _0x50b6cf[_0x52fc3e(0x111)];
                    _0x103e2e[_0x52fc3e(0x77a)] = new Cesium['Color'](_0xded216['r'], _0xded216['g'], _0xded216['b'], _0xded216['a']);
                    let _0x4af7d9 = _0x50b6cf[_0x52fc3e(0x5aa)];
                    _0x103e2e[_0x52fc3e(0x593)] = new Cesium['Color'](_0x4af7d9['r'], _0x4af7d9['g'], _0x4af7d9['b'], _0x4af7d9['a']),
                        _0x103e2e[_0x52fc3e(0x8ae)] = _0x50b6cf[_0x52fc3e(0x8ae)],
                        _0x103e2e[_0x52fc3e(0x29f)] = _0x50b6cf[_0x52fc3e(0x40c)],
                        _0x103e2e[_0x52fc3e(0x61c)] = _0x50b6cf[_0x52fc3e(0x61c)];
                    let _0x7f7430 = _0x50b6cf[_0x52fc3e(0x3fb)]
                        , _0x2ef2ba = _0x7f7430[_0x52fc3e(0x376)];
                    for (let _0x3eadba = 0x0; _0x3eadba < _0x2ef2ba; _0x3eadba++) {
                        let _0x2eee60 = _0x7f7430[_0x3eadba][_0x52fc3e(0x397)]
                            , _0x525e0e = _0x2eee60['id']
                            , _0x28ecb4 = 0x0 === _0x2eee60['addressmode']['u'] ? Cesium[_0x52fc3e(0x600)][_0x52fc3e(0x2c7)] : Cesium[_0x52fc3e(0x600)][_0x52fc3e(0xa76)]
                            , _0x117299 = 0x0 === _0x2eee60[_0x52fc3e(0x7b1)]['v'] ? Cesium['TextureWrap'][_0x52fc3e(0x2c7)] : Cesium[_0x52fc3e(0x600)][_0x52fc3e(0xa76)];
                        _0x103e2e[_0x52fc3e(0xe3)] = Cesium['Matrix4'][_0x52fc3e(0x64f)](_0x2eee60[_0x52fc3e(0x587)]);
                        let _0x6e244a = _0x38a375[_0x52fc3e(0x217)][_0x525e0e];
                        if (Cesium[_0x52fc3e(0x14b)](_0x6e244a) && _0x6e244a[_0x52fc3e(0x3d3)][_0x52fc3e(0x1ef)] > 0x0) {
                            _0x6e244a[_0x52fc3e(0x9c5)] = _0x28ecb4,
                                _0x6e244a[_0x52fc3e(0xa7e)] = _0x117299;
                            let _0x945e6b = _0x516f0d[_0x52fc3e(0xa6d)] + _0x525e0e
                                , _0x10b6c6 = _0x13f16b[_0x52fc3e(0x4e7)][_0x52fc3e(0x8d2)](_0x945e6b);
                            Cesium[_0x52fc3e(0x14b)](_0x10b6c6) || (_0x6e244a['isTexBlock'] = !0x1,
                                _0x10b6c6 = new _0x4dc55e(_0x13f16b, _0x525e0e, _0x6e244a),
                                _0x13f16b[_0x52fc3e(0x4e7)][_0x52fc3e(0xab1)](_0x945e6b, _0x10b6c6)),
                                _0x103e2e['textures'][_0x52fc3e(0x745)](_0x10b6c6);
                        }
                    }
                }
                return _0x226bd7;
            }(_0x4374eb[_0x4c032d(0x56c)], _0x2ff7bc, _0x1e232a)
                , _0x2110af = function (_0x3b442e, _0x287e3c, _0x49e630) {
                    const _0x39ce2a = _0x4c032d;
                    let _0x4a2840 = _0x287e3c['groupNode']
                        , _0x4ddcf8 = [];
                    for (let _0x1b40a5 = 0x0, _0xe350c8 = _0x4a2840['pageLods'][_0x39ce2a(0x376)]; _0x1b40a5 < _0xe350c8; _0x1b40a5++) {
                        let _0x15c816 = {}
                            , _0x5eb930 = _0x4a2840[_0x39ce2a(0x9b7)][_0x1b40a5];
                        _0x15c816[_0x39ce2a(0xaae)] = _0x5eb930[_0x39ce2a(0xaae)],
                            _0x15c816[_0x39ce2a(0x247)] = _0x5eb930[_0x39ce2a(0x1a8)],
                            _0x15c816['rangeList'] = _0x5eb930[_0x39ce2a(0x69a)];
                        let _0x402d83 = _0x5eb930[_0x39ce2a(0x891)][_0x39ce2a(0x6f1)]
                            , _0x2b0f94 = _0x5eb930[_0x39ce2a(0x891)][_0x39ce2a(0x1cc)];
                        '' !== _0x15c816[_0x39ce2a(0x247)] ? _0x15c816[_0x39ce2a(0x399)] = {
                            'sphere': {
                                'center': new Cesium['Cartesian3'](_0x402d83['x'], _0x402d83['y'], _0x402d83['z']),
                                'radius': _0x2b0f94
                            }
                        } : _0x15c816[_0x39ce2a(0x1ed)] = !0x0,
                            _0x51a951(_0x3b442e, _0x287e3c, _0x49e630, _0x5eb930, _0x15c816),
                            Cesium[_0x39ce2a(0x14b)](_0x15c816[_0x39ce2a(0x917)]) && _0x4ddcf8['push'](_0x15c816);
                    }
                    return _0x4ddcf8;
                }(_0x4374eb, _0x2ff7bc, _0x1e1768);
            return _0x2110af;
        }
            ;
        let _0x415e6b = {
            'cache': {},
            'cacheSize': 0x0,
            'freeCache': {},
            'freeQueue': new Cesium[(_0x324b8e(0x953))](),
            'freeCacheSize': 0x0,
            'throttleSize': 0x3200000,
            'getCache': function (_0x46dbfb, _0x2ecf70, _0x3b6a23) {
                const _0x373d60 = _0x324b8e;
                let _0x47bae7 = this[_0x373d60(0x4cb)][_0x46dbfb];
                _0x47bae7 || (_0x47bae7 = this['cache'][_0x46dbfb] = {});
                let _0x1478a1 = _0x47bae7[_0x2ecf70];
                _0x1478a1 || (_0x1478a1 = _0x47bae7[_0x2ecf70] = {});
                let _0x3b9fc5 = _0x1478a1[_0x3b6a23];
                return _0x3b9fc5 || (_0x3b9fc5 = _0x1478a1[_0x3b6a23] = {}),
                    _0x3b9fc5;
            },
            'get': function (_0x30f881, _0x5ad7d3, _0x5e261f, _0x5c5948) {
                const _0x1c81f6 = _0x324b8e;
                let _0x5d383e = this[_0x1c81f6(0x85e)](_0x30f881, _0x5ad7d3, _0x5e261f)[_0x5c5948];
                if (_0x5d383e)
                    return _0x5d383e[_0x1c81f6(0x766)]++,
                        _0x5d383e;
            },
            'create': function (_0x229e9e) {
                const _0x405839 = _0x324b8e;
                let _0x4ab713 = _0x229e9e[_0x405839(0x56c)]
                    , _0x1c8576 = _0x4ab713['id']
                    , _0x18a9eb = _0x229e9e[_0x405839(0x4e2)]
                    , _0x21ec4d = _0x229e9e['rootName']
                    , _0x393bf9 = _0x229e9e['textureId']
                    , _0x57af46 = this[_0x405839(0x85e)](_0x1c8576, _0x18a9eb, _0x21ec4d)
                    , _0x5b6f59 = _0x57af46[_0x393bf9];
                if (_0x5b6f59)
                    return _0x5b6f59[_0x405839(0x766)]++,
                        _0x5b6f59;
                let _0x5d2688 = _0x229e9e[_0x405839(0x8ce)]
                    , _0x4aa0ff = _0x229e9e[_0x405839(0x88d)]
                    , _0x411f58 = _0x229e9e[_0x405839(0x401)]
                    , _0x462689 = _0x229e9e[_0x405839(0xa9d)]
                    , _0x593861 = _0x229e9e['arrayBufferView'];
                return _0x5b6f59 = new _0x4dc55e(_0x4ab713, _0x393bf9, {
                    'context': _0x4ab713,
                    'layerId': _0x18a9eb,
                    'rootName': _0x21ec4d,
                    'textureId': _0x393bf9,
                    'width': _0x5d2688,
                    'height': _0x4aa0ff,
                    'compressType': _0x411f58,
                    'pixelFormat': _0x462689,
                    'internalFormat': _0x229e9e[_0x405839(0x257)],
                    'isTexBlock': !0x0,
                    'arrayBufferView': _0x593861
                }),
                    _0x57af46[_0x393bf9] = _0x5b6f59,
                    _0x5b6f59;
            },
            'del': function (_0x649305) {
                const _0x2233b1 = _0x324b8e;
                if (!_0x649305[_0x2233b1(0x23d)])
                    return;
                let _0x363d75 = this[_0x2233b1(0x85e)](_0x649305['contextId'], _0x649305[_0x2233b1(0x4e2)], _0x649305[_0x2233b1(0xac4)]);
                _0x363d75[_0x649305['textureId']] && 0x0 == --_0x649305[_0x2233b1(0x766)] && (delete _0x363d75[_0x649305[_0x2233b1(0x1fe)]],
                    _0x649305[_0x2233b1(0x4dd)]());
            }
        };
        function _0x3e5148() {
            const _0x1cdcdd = _0x324b8e;
            this['isRoot'] = !0x1,
                this['isLeaf'] = !0x1,
                this['layerId'] = void 0x0,
                this[_0x1cdcdd(0x809)] = void 0x0,
                this[_0x1cdcdd(0x766)] = 0x0,
                this['id'] = void 0x0,
                this['ambientColor'] = new Cesium['Cartesian4'](0x1, 0x1, 0x1, 0x1),
                this['diffuseColor'] = new Cesium[(_0x1cdcdd(0x747))](0x1, 0x1, 0x1, 0x1),
                this[_0x1cdcdd(0x593)] = new Cesium['Cartesian4'](0x0),
                this[_0x1cdcdd(0x8ae)] = 0x32,
                this[_0x1cdcdd(0x29f)] = !0x1,
                this['textures'] = [],
                this[_0x1cdcdd(0x655)] = !0x1,
                this[_0x1cdcdd(0x1da)] = !0x1,
                this[_0x1cdcdd(0xfa)] = !0x1,
                this[_0x1cdcdd(0x285)] = !0x1,
                this['subRequestNames'] = void 0x0,
                this['subRequestNamesBake'] = void 0x0,
                this[_0x1cdcdd(0x740)] = void 0x0,
                this[_0x1cdcdd(0x1d9)] = void 0x0,
                this[_0x1cdcdd(0x374)] = void 0x0,
                this['oriTextureBake'] = void 0x0,
                this[_0x1cdcdd(0x5d3)] = void 0x0,
                this['batchTableBake'] = void 0x0,
                this[_0x1cdcdd(0x3bb)] = void 0x0,
                this[_0x1cdcdd(0x7bf)] = void 0x0,
                this[_0x1cdcdd(0x6b4)] = void 0x0,
                this[_0x1cdcdd(0x645)] = void 0x0,
                this[_0x1cdcdd(0x3fc)] = !0x1,
                this[_0x1cdcdd(0xa81)] = !0x1,
                this[_0x1cdcdd(0x880)] = !0x1,
                this[_0x1cdcdd(0xab2)] = !0x1,
                this['isCrnTexture'] = !0x1,
                this[_0x1cdcdd(0x755)] = new Cesium[(_0x1cdcdd(0x953))]();
        }
        let _0x306807 = {};
        function _0x3e96a1(_0xef2178, _0x19eb9f, _0x1d8e8b) {
            const _0x52f0c7 = _0x324b8e;
            for (let _0x1e9ac0 in _0x1d8e8b)
                if (_0x1d8e8b[_0x52f0c7(0x704)](_0x1e9ac0)) {
                    let _0x362751 = _0x1d8e8b[_0x1e9ac0]
                        , _0x3edc44 = Number(_0x1e9ac0);
                    _0x19eb9f[_0x52f0c7(0x894)](_0x3edc44, 0x0, _0x362751);
                }
            _0x19eb9f[_0x52f0c7(0x4bc)](_0xef2178);
        }
        function _0x5bf3c3(_0x1a849e, _0x2b9edf, _0x5f4f10, _0x15d421, _0x216b25, _0x5065bc) {
            const _0x2d13a6 = _0x324b8e;
            let _0x373406 = _0x216b25[_0x15d421];
            if (!_0x373406)
                return;
            let _0x394599 = _0x415e6b[_0x2d13a6(0xa61)](_0x1a849e, _0x2b9edf, _0x5f4f10, _0x373406);
            for (; _0x373406 && _0x394599 && !_0x394599[_0x2d13a6(0x7d4)];)
                _0x394599[_0x2d13a6(0x766)]--,
                    _0x373406 = _0x216b25[_0x373406],
                    _0x394599 = _0x415e6b['get'](_0x1a849e, _0x2b9edf, _0x5f4f10, _0x373406);
            return _0x5065bc[_0x2d13a6(0x770)] = _0x373406,
                _0x394599;
        }
        function _0x535cf3(_0x34f357) {
            const _0x4923d0 = _0x324b8e;
            let _0x5947e1 = _0x34f357[_0x4923d0(0xa59)]('.');
            return _0x34f357[_0x4923d0(0x7be)](0x0, _0x5947e1);
        }
        function _0x2755eb() {
            const _0x4b7dd1 = _0x324b8e;
            this[_0x4b7dd1(0x4cb)] = {};
        }
        function _0x438ab0() {
            let _0x26ee45, _0x1b0fe7;
            const _0x52c350 = new Promise(function (_0x357135, _0x4c324d) {
                _0x26ee45 = _0x357135,
                    _0x1b0fe7 = _0x4c324d;
            }
            );
            return {
                'resolve': _0x26ee45,
                'reject': _0x1b0fe7,
                'promise': _0x52c350
            };
        }
        function _0x12b721() {
            const _0x4952af = _0x324b8e;
            this[_0x4952af(0x793)] = {},
                this[_0x4952af(0x4cb)] = {},
                this[_0x4952af(0x11e)] = new Cesium[(_0x4952af(0x194))](),
                this[_0x4952af(0x8ec)] = [],
                this[_0x4952af(0x5f8)] = {},
                this[_0x4952af(0x1b1)] = {},
                this[_0x4952af(0x713)] = {},
                this[_0x4952af(0xab9)] = {};
        }
        _0x3e5148['prototype'][_0x324b8e(0x2b8)] = function (_0x3a11dd, _0x1e6f17, _0x29380d, _0xe3cb79, _0x2a9d07, _0x5ffdd4, _0x3cbbf4, _0x50a9f6) {
            const _0x1ca167 = _0x324b8e;
            if (this[_0x1ca167(0x1da)])
                return;
            this['textureParameterBake'] = {
                'context': _0x3a11dd,
                'layer': _0x1e6f17,
                'isRoot': _0x29380d,
                'rootName': _0xe3cb79,
                'curTextureName': _0x2a9d07,
                'textureInfo': _0x5ffdd4,
                'rootBatchIdMap': _0x3cbbf4,
                'ancestorMap': _0x50a9f6
            },
                this['createdBaker'] = !0x0,
                this[_0x1ca167(0x285)] = _0x29380d;
            let _0x402210 = _0x5ffdd4[_0x1ca167(0x336)]
                , _0x57550a = PixelFormat[_0x1ca167(0x7f8)]
                , _0xb4f238 = _0x415e6b[_0x1ca167(0x34c)]({
                    'context': _0x3a11dd,
                    'layerId': _0x1e6f17['id'],
                    'rootName': _0xe3cb79,
                    'textureId': _0x5ffdd4['id'],
                    'width': _0x5ffdd4[_0x1ca167(0x8ce)],
                    'height': _0x5ffdd4['height'],
                    'compressType': _0x5ffdd4[_0x1ca167(0x401)],
                    'pixelFormat': _0x5ffdd4[_0x1ca167(0x238)],
                    'internalFormat': _0x57550a,
                    'arrayBufferView': _0x402210
                });
            _0xb4f238[_0x1ca167(0x7d4)] = _0x29380d;
            let _0x3ebb4d = _0x5ffdd4[_0x1ca167(0xacf)][_0x1ca167(0x376)]
                , _0xbafd66 = _0x3cbbf4[_0x5ffdd4[_0x1ca167(0x988)]];
            this[_0x1ca167(0x37b)][_0x1ca167(0x745)](_0xb4f238);
            let _0x8115af = [{
                'functionName': _0x1ca167(0x533),
                'componentDatatype': ComponentDatatype['FLOAT'],
                'componentsPerAttribute': 0x4
            }]
                , _0x3ed906 = defined(_0xbafd66) ? Object[_0x1ca167(0x698)](_0xbafd66)[_0x1ca167(0x376)] : _0x3ebb4d;
            this['batchTableBake'] = new BatchTable(_0x3a11dd, _0x8115af, _0x3ed906),
                this[_0x1ca167(0x4d3)][_0x1ca167(0x563)] = '_2';
            let _0x1b6531 = _0x306807[_0x1e6f17[_0x1ca167(0x770)]];
            defined(_0x1b6531) || (_0x1b6531 = _0x306807[_0x1e6f17[_0x1ca167(0x770)]] = {});
            let _0x110da4 = _0x1b6531[_0xe3cb79];
            defined(_0x110da4) || (_0x110da4 = _0x1b6531[_0xe3cb79] = {});
            let _0x158b48 = _0x110da4[_0x2a9d07];
            defined(_0x158b48) || (_0x158b48 = _0x110da4[_0x2a9d07] = {});
            let _0x36d952 = _0x5ffdd4['subTexInfos'];
            for (let _0xc573fa = 0x0; _0xc573fa < _0x3ebb4d; _0xc573fa++) {
                let _0x5ec573 = _0x36d952[_0xc573fa]
                    , _0x5f5dc9 = _0x5ec573[_0x1ca167(0x2d0)][_0x1ca167(0x89c)]('_')[0x0]
                    , _0x2cfcc4 = _0x5ec573[_0x1ca167(0x852)]
                    , _0x9d7a82 = _0x5ec573[_0x1ca167(0x2fc)]
                    , _0x3f3981 = _0x5ec573[_0x1ca167(0x8ce)]
                    , _0x4702c5 = _0x5ec573['height']
                    , _0x36d02c = new Cartesian4(_0x2cfcc4, _0x9d7a82, _0x3f3981, _0x4702c5);
                _0x158b48[_0x5f5dc9] = _0x36d02c;
            }
            if (!_0x29380d) {
                this[_0x1ca167(0x558)] = [];
                for (let _0x39c41e = 0x0; _0x39c41e < _0x5ffdd4[_0x1ca167(0x6ec)][_0x1ca167(0x376)]; _0x39c41e++) {
                    let _0x5b4f32 = _0x5ffdd4['requestNames'][_0x39c41e]
                        , _0xa4b4e7 = _0x535cf3(_0x5b4f32);
                    if (_0x1ca167(0x2d2) === _0xa4b4e7[_0x1ca167(0x89c)]('_')[0x0]) {
                        let _0x474ae8 = _0x5b4f32['split']('#')
                            , _0x2be8c1 = _0x535cf3(_0x474ae8[0x0]);
                        if (_0x474ae8[_0x1ca167(0x376)] > 0x1) {
                            let _0x1a9661 = _0x474ae8[0x1]
                                , _0x3d1a56 = _0x1a9661[_0x1ca167(0x376)];
                            for (let _0x43796c = 0x0; _0x43796c < _0x3d1a56; _0x43796c += 0x3) {
                                let _0x1fc754 = _0x2be8c1 + '_' + _0x1a9661[_0x1ca167(0x475)](_0x43796c, _0x43796c + 0x3);
                                this[_0x1ca167(0x558)][_0x1ca167(0x745)](_0x1fc754);
                            }
                        }
                    } else
                        this['subRequestNamesBake'][_0x1ca167(0x745)](_0xa4b4e7);
                }
            }
            return this['oriTextureBake'] = _0xb4f238,
                _0xb4f238;
        }
            ,
            _0x3e5148[_0x324b8e(0x74f)][_0x324b8e(0x364)] = function () {
                const _0x13fd8a = _0x324b8e;
                if (this[_0x13fd8a(0x3fc)] || !this[_0x13fd8a(0x6b4)])
                    return;
                this[_0x13fd8a(0x3fc)] = !0x0;
                let _0x557e23 = this[_0x13fd8a(0x6b4)][_0x13fd8a(0x56c)]
                    , _0x2bc27a = this['textureParameter'][_0x13fd8a(0xa41)]
                    , _0x260a18 = this[_0x13fd8a(0x6b4)][_0x13fd8a(0x916)]
                    , _0x4f42a3 = this[_0x13fd8a(0x6b4)][_0x13fd8a(0xac4)]
                    , _0x3662ca = this['textureParameter'][_0x13fd8a(0x6af)]
                    , _0x324e11 = this[_0x13fd8a(0x6b4)]['textureInfo']
                    , _0x495025 = this[_0x13fd8a(0x6b4)][_0x13fd8a(0x3c6)]
                    , _0x40f9c2 = this[_0x13fd8a(0x6b4)][_0x13fd8a(0x9ec)];
                this['textureParameter'] = void 0x0;
                let _0x509505 = {}
                    , _0x2e28bb = _0x495025[_0x324e11[_0x13fd8a(0x988)]]
                    , _0x431f24 = _0x260a18 ? void 0x0 : _0x5bf3c3(_0x557e23['id'], _0x2bc27a['id'], _0x4f42a3, _0x3662ca, _0x40f9c2, _0x509505)
                    , _0x342fd7 = _0x306807[_0x2bc27a['name']];
                _0x342fd7 || (_0x342fd7 = _0x306807[_0x2bc27a['name']] = {});
                let _0x439efd = _0x342fd7[_0x4f42a3];
                _0x439efd || (_0x439efd = _0x342fd7[_0x4f42a3] = {});
                let _0xe52ebf = _0x439efd[_0x3662ca];
                _0xe52ebf || (_0xe52ebf = _0x439efd[_0x3662ca] = {});
                let _0x32d429 = _0x260a18 ? void 0x0 : _0x509505['name'] ? _0x439efd[_0x509505[_0x13fd8a(0x770)]] : void 0x0
                    , _0x37054e = {}
                    , _0x3bb433 = _0x324e11['subTexInfos']
                    , _0x3114f9 = []
                    , _0x13a802 = _0x324e11[_0x13fd8a(0xacf)]['length'];
                for (let _0x3ff17e = 0x0; _0x3ff17e < _0x13a802; _0x3ff17e++) {
                    let _0x5e0797 = _0x3bb433[_0x3ff17e]
                        , _0x2553ec = _0x5e0797[_0x13fd8a(0x2d0)][_0x13fd8a(0x89c)]('_')[0x0]
                        , _0x47e450 = _0x5e0797[_0x13fd8a(0x852)]
                        , _0x1c4b11 = _0x5e0797['offsetY']
                        , _0x1ca45f = _0x5e0797[_0x13fd8a(0x8ce)]
                        , _0x586435 = _0x5e0797['height']
                        , _0x2ec422 = new Cesium[(_0x13fd8a(0x747))](_0x47e450, _0x1c4b11, _0x1ca45f, _0x586435)
                        , _0x1f2ab8 = _0x2e28bb ? _0x2e28bb[_0x2553ec] : _0x3ff17e
                        , _0x62e66a = _0x260a18 ? void 0x0 : _0x32d429 ? _0x32d429[_0x2553ec] : void 0x0
                        , _0x1ef9f9 = _0x62e66a || _0x2ec422;
                    this[_0x13fd8a(0x5d3)][_0x13fd8a(0x894)](_0x1f2ab8, 0x0, _0x1ef9f9),
                        _0x37054e[_0x1f2ab8] = _0x2ec422,
                        _0xe52ebf[_0x2553ec] = _0x2ec422,
                        _0x3114f9['push'](_0x5e0797[_0x13fd8a(0x2d0)]);
                }
                this[_0x13fd8a(0xacf)] = _0x3bb433,
                    this['subTextureNames'] = _0x3114f9,
                    this['subBatchValues'] = _0x37054e,
                    this[_0x13fd8a(0x3bb)] = _0x431f24;
            }
            ,
            _0x3e5148[_0x324b8e(0x74f)][_0x324b8e(0x615)] = function () {
                const _0x5c129a = _0x324b8e;
                if (this[_0x5c129a(0xa81)] || !defined(this[_0x5c129a(0x645)]))
                    return;
                this[_0x5c129a(0xa81)] = !0x0;
                let _0x3609cb = this[_0x5c129a(0x645)][_0x5c129a(0x56c)]
                    , _0x4109a2 = this['textureParameterBake']['layer']
                    , _0xc3a111 = this[_0x5c129a(0x645)]['isRoot']
                    , _0x1d0705 = this[_0x5c129a(0x645)][_0x5c129a(0xac4)]
                    , _0x3109e5 = this[_0x5c129a(0x645)][_0x5c129a(0x6af)]
                    , _0x19469d = this[_0x5c129a(0x645)]['textureInfo']
                    , _0x284f78 = this[_0x5c129a(0x645)]['rootBatchIdMap']
                    , _0x5032ab = this[_0x5c129a(0x645)][_0x5c129a(0x9ec)];
                this[_0x5c129a(0x645)] = void 0x0;
                let _0x3bcd74 = {}
                    , _0x1e49ce = _0x284f78[_0x19469d[_0x5c129a(0x988)]]
                    , _0x148a45 = _0xc3a111 ? void 0x0 : _0x5bf3c3(_0x3609cb['id'], _0x4109a2['id'], _0x1d0705, _0x3109e5, _0x5032ab, _0x3bcd74)
                    , _0x4aa405 = _0x306807[_0x4109a2['name']];
                defined(_0x4aa405) || (_0x4aa405 = _0x306807[_0x4109a2['name']] = {});
                let _0x340174 = _0x4aa405[_0x1d0705];
                defined(_0x340174) || (_0x340174 = _0x4aa405[_0x1d0705] = {});
                let _0x26b7ba = _0x340174[_0x3109e5];
                defined(_0x26b7ba) || (_0x26b7ba = _0x340174[_0x3109e5] = {});
                let _0x269e0e = _0xc3a111 ? void 0x0 : defined(_0x3bcd74['name']) ? _0x340174[_0x3bcd74[_0x5c129a(0x770)]] : void 0x0
                    , _0x4bae53 = {}
                    , _0x3990b0 = _0x19469d[_0x5c129a(0xacf)]
                    , _0x99adb5 = []
                    , _0x50e207 = _0x19469d[_0x5c129a(0xacf)][_0x5c129a(0x376)];
                for (let _0x5c6da2 = 0x0; _0x5c6da2 < _0x50e207; _0x5c6da2++) {
                    let _0x5cd551 = _0x3990b0[_0x5c6da2]
                        , _0x4018ca = _0x5cd551[_0x5c129a(0x2d0)][_0x5c129a(0x89c)]('_')[0x0]
                        , _0xcf1daf = _0x5cd551[_0x5c129a(0x852)]
                        , _0xd93662 = _0x5cd551['offsetY']
                        , _0x371e17 = _0x5cd551[_0x5c129a(0x8ce)]
                        , _0x23f544 = _0x5cd551[_0x5c129a(0x88d)]
                        , _0x68e88a = new Cartesian4(_0xcf1daf, _0xd93662, _0x371e17, _0x23f544)
                        , _0x39a51d = defined(_0x1e49ce) ? _0x1e49ce[_0x4018ca] : _0x5c6da2
                        , _0x1665c7 = _0xc3a111 ? void 0x0 : defined(_0x269e0e) ? _0x269e0e[_0x4018ca] : void 0x0
                        , _0x9bb5ce = defined(_0x1665c7) ? _0x1665c7 : _0x68e88a;
                    this['batchTableBake'][_0x5c129a(0x894)](_0x39a51d, 0x0, _0x9bb5ce),
                        _0x4bae53[_0x39a51d] = _0x68e88a,
                        _0x26b7ba[_0x4018ca] = _0x68e88a,
                        _0x99adb5[_0x5c129a(0x745)](_0x5cd551[_0x5c129a(0x2d0)]);
                }
                this[_0x5c129a(0x524)] = _0x3990b0,
                    this[_0x5c129a(0x1d9)] = _0x99adb5,
                    this[_0x5c129a(0x8ee)] = _0x4bae53,
                    this['_ancestorTextureBake'] = _0x148a45;
            }
            ,
            _0x3e5148[_0x324b8e(0x74f)]['createTexture'] = function (_0x2b8fdb, _0x2a650d, _0x18ee91, _0x6fdbf4, _0x5498d5) {
                const _0x50de96 = _0x324b8e;
                if (this['created'])
                    return;
                let _0x1c0674 = _0x2b8fdb[_0x50de96(0x56c)]
                    , _0x576e7e = _0x18ee91['id']
                    , _0x1a9327 = _0x5498d5['rootBatchIdMap']
                    , _0x2a1c45 = _0x5498d5[_0x50de96(0x9ec)];
                this[_0x50de96(0x41e)] = _0x18ee91[_0x50de96(0x401)] === _0xbd1c5c[_0x50de96(0x30f)],
                    this[_0x50de96(0x6b4)] = {
                        'context': _0x1c0674,
                        'layer': _0x2b8fdb,
                        'isRoot': _0x2a650d[_0x50de96(0x9b9)],
                        'rootName': _0x2a650d[_0x50de96(0xac4)],
                        'curTextureName': _0x576e7e,
                        'textureInfo': _0x18ee91,
                        'rootBatchIdMap': _0x1a9327,
                        'ancestorMap': _0x2a1c45
                    },
                    this[_0x50de96(0x916)] = _0x2a650d[_0x50de96(0x9b9)],
                    this[_0x50de96(0x655)] = !0x0,
                    this[_0x50de96(0xfa)] = _0x2a650d[_0x50de96(0x9b9)];
                let _0x2d1d9f = _0x18ee91[_0x50de96(0x336)]
                    , _0x324d4d = Cesium[_0x50de96(0x480)][_0x50de96(0x7f8)]
                    , _0x307a11 = _0x415e6b['create']({
                        'context': _0x1c0674,
                        'layerId': _0x2b8fdb['id'],
                        'rootName': _0x2a650d[_0x50de96(0xac4)],
                        'textureId': _0x18ee91['id'],
                        'width': _0x18ee91[_0x50de96(0x8ce)],
                        'height': _0x18ee91['height'],
                        'compressType': _0x18ee91[_0x50de96(0x401)],
                        'supportCompressType': _0x2b8fdb['_supportCompressType'],
                        'pixelFormat': _0x18ee91['format'],
                        'internalFormat': _0x324d4d,
                        'arrayBufferView': _0x2d1d9f
                    });
                _0x307a11['renderable'] = _0x2a650d[_0x50de96(0x9b9)];
                let _0x11be6a = _0x18ee91['subTexInfos'][_0x50de96(0x376)]
                    , _0x1d3194 = _0x1a9327[_0x18ee91['rootTextureName']];
                this[_0x50de96(0x37b)][_0x50de96(0x745)](_0x307a11);
                let _0x3d84d3 = [{
                    'functionName': 'atlas_batchTable_xywh',
                    'componentDatatype': Cesium[_0x50de96(0xa57)][_0x50de96(0x2d5)],
                    'componentsPerAttribute': 0x4
                }]
                    , _0x114a7f = _0x1d3194 ? Object[_0x50de96(0x698)](_0x1d3194)[_0x50de96(0x376)] : _0x11be6a;
                this['batchTable'] = new Cesium['BatchTable'](_0x1c0674, _0x3d84d3, _0x114a7f);
                let _0x274ee5 = _0x306807[_0x2b8fdb[_0x50de96(0x770)]];
                _0x274ee5 || (_0x274ee5 = _0x306807[_0x2b8fdb[_0x50de96(0x770)]] = {});
                let _0x5c3546 = _0x274ee5[_0x2a650d[_0x50de96(0xac4)]];
                _0x5c3546 || (_0x5c3546 = _0x274ee5[_0x2a650d[_0x50de96(0xac4)]] = {});
                let _0x1e404f = _0x5c3546[_0x576e7e];
                _0x1e404f || (_0x1e404f = _0x5c3546[_0x576e7e] = {});
                let _0x3b16b6 = _0x18ee91['subTexInfos'];
                for (let _0x259f7c = 0x0; _0x259f7c < _0x11be6a; _0x259f7c++) {
                    let _0x7f4830 = _0x3b16b6[_0x259f7c]
                        , _0xf7694d = _0x7f4830[_0x50de96(0x2d0)][_0x50de96(0x89c)]('_')[0x0]
                        , _0x86861d = _0x7f4830['offsetX']
                        , _0x26bdce = _0x7f4830[_0x50de96(0x2fc)]
                        , _0x4ece59 = _0x7f4830[_0x50de96(0x8ce)]
                        , _0x179861 = _0x7f4830['height']
                        , _0x45bec0 = new Cesium[(_0x50de96(0x747))](_0x86861d, _0x26bdce, _0x4ece59, _0x179861);
                    _0x1e404f[_0xf7694d] = _0x45bec0;
                }
                if (!_0x2a650d['isRootTile']) {
                    this[_0x50de96(0x33d)] = [];
                    for (let _0x1d9934 = 0x0; _0x1d9934 < _0x18ee91['requestNames'][_0x50de96(0x376)]; _0x1d9934++) {
                        let _0x319a32 = _0x18ee91[_0x50de96(0x6ec)][_0x1d9934]
                            , _0x1bdfd6 = _0x535cf3(_0x319a32);
                        if (_0x50de96(0x2d2) === _0x1bdfd6[_0x50de96(0x89c)]('_')[0x0]) {
                            let _0x3284e6 = _0x319a32[_0x50de96(0x89c)]('#')
                                , _0x58b5cd = _0x535cf3(_0x3284e6[0x0]);
                            if (_0x3284e6[_0x50de96(0x376)] > 0x1) {
                                let _0xbef6bf = _0x3284e6[0x1]
                                    , _0x4931c6 = _0xbef6bf['length'];
                                for (let _0x101051 = 0x0; _0x101051 < _0x4931c6; _0x101051 += 0x3) {
                                    let _0x510b19 = _0x58b5cd + '_' + _0xbef6bf[_0x50de96(0x475)](_0x101051, _0x101051 + 0x3);
                                    this[_0x50de96(0x33d)][_0x50de96(0x745)](_0x510b19);
                                }
                            }
                        } else
                            this['subRequestNames'][_0x50de96(0x745)](_0x1bdfd6);
                    }
                }
                return this[_0x50de96(0x885)] = !(_0x2a650d['isRootTile'] || 0x1 === _0x18ee91[_0x50de96(0x6ec)][_0x50de96(0x376)] && _0x18ee91[_0x50de96(0x6ec)][0x0] === _0x576e7e),
                    this[_0x50de96(0x7bf)] = _0x307a11,
                    _0x307a11;
            }
            ,
            _0x3e5148[_0x324b8e(0x74f)]['requestSubTextures'] = function (_0x25c901, _0x3a2a69) {
                const _0x395bde = _0x324b8e;
                if (this[_0x395bde(0xfa)])
                    return;
                if (!this[_0x395bde(0x33d)])
                    return;
                _0x3a2a69['context'];
                let _0x3a978c = this[_0x395bde(0x33d)]
                    , _0xa10ee4 = this['subTexInfos']
                    , _0x58e144 = this[_0x395bde(0x740)]
                    , _0x4fa733 = this['subBatchValues']
                    , _0x5ca5cd = this[_0x395bde(0x7bf)]
                    , _0x400a66 = []
                    , _0x420d81 = this[_0x395bde(0x809)][_0x395bde(0xa39)][_0x395bde(0xa62)][_0x395bde(0x475)](0x0, this['tile']['contentResource'][_0x395bde(0xa62)][_0x395bde(0x832)]('/') + 0x1)
                    , _0x21a91f = _0x3a2a69[_0x395bde(0x6d5)]
                    , _0x2c2e0c = this[_0x395bde(0x755)];
                for (let _0x1686b6 = 0x0, _0x34369e = _0x3a978c['length']; _0x1686b6 < _0x34369e; _0x1686b6++) {
                    let _0x4798de = _0x3a978c[_0x1686b6]
                        , _0x4b99b9 = _0x21a91f[_0x395bde(0xa61)](_0x3a2a69['id'], _0x420d81, _0x4798de, this, this[_0x395bde(0x809)]);
                    if (!_0x4b99b9)
                        continue;
                    let _0x53af6b = _0x4b99b9[_0x395bde(0x346)];
                    _0x400a66[_0x395bde(0x745)](_0x1686b6);
                    for (let _0x5b9ce6 in _0x53af6b)
                        if (_0x53af6b[_0x395bde(0x704)](_0x5b9ce6)) {
                            let _0x33314d = _0x53af6b[_0x5b9ce6]
                                , _0x50223b = _0x58e144['indexOf'](_0x5b9ce6);
                            if (_0x50223b < 0x0 && this['isLeaf'])
                                continue;
                            let _0x49bf97 = 0x0
                                , _0x340add = 0x0
                                , _0x1113a5 = _0x33314d[_0x395bde(0x8ce)]
                                , _0x593021 = _0x33314d[_0x395bde(0x88d)];
                            if (_0x50223b >= 0x0) {
                                let _0x3890f1 = _0xa10ee4[_0x50223b];
                                _0x49bf97 = _0x3890f1[_0x395bde(0x852)],
                                    _0x340add = _0x3890f1[_0x395bde(0x2fc)];
                            }
                            this[_0x395bde(0x885)] ? _0x2c2e0c[_0x395bde(0x2a8)]({
                                'texture': _0x5ca5cd,
                                'subTextureInfo': {
                                    'xOffset': _0x49bf97,
                                    'yOffset': _0x340add,
                                    'width': _0x1113a5,
                                    'height': _0x593021,
                                    'arrayBufferView': _0x33314d[_0x395bde(0x3d3)]
                                }
                            }) : _0x5ca5cd[_0x395bde(0x3d3)] = _0x33314d[_0x395bde(0x3d3)];
                        }
                }
                if (_0x400a66[_0x395bde(0x376)] === _0x3a978c['length'])
                    _0x3a978c[_0x395bde(0x376)] = 0x0;
                else {
                    let _0x4a4d98 = 0x0;
                    for (let _0x53d59e = 0x0, _0x4c307b = _0x400a66[_0x395bde(0x376)]; _0x53d59e < _0x4c307b; _0x53d59e++)
                        _0x3a978c[_0x395bde(0x646)](_0x400a66[_0x53d59e] - _0x4a4d98, 0x1),
                            _0x4a4d98++;
                }
                0x0 === _0x3a978c[_0x395bde(0x376)] && (this[_0x395bde(0x880)] = !0x0,
                    this[_0x395bde(0x885)] || _0x5ca5cd['init'](),
                    _0x3e96a1(_0x25c901, this[_0x395bde(0x5d3)], _0x4fa733),
                    this[_0x395bde(0xfa)] = !0x0,
                    this[_0x395bde(0x33d)] = void 0x0,
                    this['subTextureNames'] = void 0x0,
                    this['subBatchValues'] = void 0x0,
                    this[_0x395bde(0xacf)] = void 0x0);
            }
            ,
            _0x3e5148[_0x324b8e(0x74f)]['requestBakeSubTextures'] = function (_0x5ba1b6, _0x8951db, _0x3856b0, _0x34d0b3) {
                const _0x5415bf = _0x324b8e;
                if (this['subRequestedBaker'])
                    return;
                if (!defined(this['subRequestNamesBake']))
                    return;
                let _0xe36df0 = this['subRequestNamesBake']
                    , _0x177095 = this['_subTexInfosBake']
                    , _0x4cda8a = this[_0x5415bf(0x1d9)]
                    , _0x29105d = this['_subBatchValuesBake']
                    , _0x4301e5 = this[_0x5415bf(0x9ab)]
                    , _0x3788d5 = []
                    , _0x181c0c = _0x3856b0[_0x5415bf(0x659)]
                    , _0xc1e4f1 = _0x3856b0['subTextureManager'];
                for (let _0x5b2809 = 0x0, _0x1715ed = _0xe36df0[_0x5415bf(0x376)]; _0x5b2809 < _0x1715ed; _0x5b2809++) {
                    let _0x2581f4 = _0xe36df0[_0x5b2809]
                        , _0x5140d3 = _0xc1e4f1[_0x5415bf(0xa61)](_0x3856b0[_0x5415bf(0x201)], _0x181c0c, _0x2581f4, this);
                    if (!_0x5140d3)
                        continue;
                    let _0x539141 = _0x5140d3['result'];
                    _0x3788d5[_0x5415bf(0x745)](_0x5b2809);
                    for (let _0x262178 in _0x539141)
                        if (_0x539141['hasOwnProperty'](_0x262178)) {
                            let _0x4d3baa = _0x539141[_0x262178]
                                , _0x17d55e = _0x4cda8a[_0x5415bf(0xa59)](_0x262178);
                            if (_0x17d55e < 0x0 && this[_0x5415bf(0x885)])
                                continue;
                            let _0x29bd44 = 0x0
                                , _0x4059c0 = 0x0
                                , _0x382ce0 = _0x4d3baa[_0x5415bf(0x8ce)]
                                , _0x4216ae = _0x4d3baa[_0x5415bf(0x88d)];
                            if (_0x17d55e >= 0x0) {
                                let _0xa1f9d6 = _0x177095[_0x17d55e];
                                _0x29bd44 = _0xa1f9d6['offsetX'],
                                    _0x4059c0 = _0xa1f9d6[_0x5415bf(0x2fc)];
                            }
                            _0x34d0b3[_0x5415bf(0x2a8)]({
                                'texture': _0x4301e5,
                                'subTextureInfo': {
                                    'xOffset': _0x29bd44,
                                    'yOffset': _0x4059c0,
                                    'width': _0x382ce0,
                                    'height': _0x4216ae,
                                    'arrayBufferView': _0x4d3baa[_0x5415bf(0x3d3)]
                                }
                            });
                        }
                }
                if (_0x3788d5[_0x5415bf(0x376)] === _0xe36df0[_0x5415bf(0x376)])
                    _0xe36df0['length'] = 0x0;
                else {
                    let _0x482011 = 0x0;
                    for (let _0x18ec97 = 0x0, _0x50983c = _0x3788d5[_0x5415bf(0x376)]; _0x18ec97 < _0x50983c; _0x18ec97++)
                        _0xe36df0['splice'](_0x3788d5[_0x18ec97] - _0x482011, 0x1),
                            _0x482011++;
                }
                0x0 === _0xe36df0[_0x5415bf(0x376)] && (this[_0x5415bf(0xab2)] = !0x0,
                    this[_0x5415bf(0x885)] || _0x4301e5['init'](),
                    this['subRequestedBaker'] = !0x0,
                    this['subRequestNamesBake'] = void 0x0,
                    this[_0x5415bf(0x1d9)] = void 0x0,
                    this[_0x5415bf(0x8ee)] = void 0x0,
                    this['_subTexInfosBake'] = void 0x0,
                    _0x3e96a1(_0x5ba1b6, this[_0x5415bf(0x4d3)], _0x29105d));
            }
            ,
            _0x3e5148[_0x324b8e(0x74f)][_0x324b8e(0x38b)] = function () {
                const _0x5e2baf = _0x324b8e;
                if (!this[_0x5e2baf(0x880)])
                    return;
                this[_0x5e2baf(0x880)] = !0x1;
                let _0x1240fc = this['oriTexture'];
                _0x1240fc['renderable'] = !0x0,
                    this[_0x5e2baf(0x3bb)] && this['ancestorTexture']['textureId'] !== _0x1240fc[_0x5e2baf(0x1fe)] && _0x415e6b['del'](this[_0x5e2baf(0x3bb)]),
                    this['textures'][0x0] = _0x1240fc,
                    this[_0x5e2baf(0x7bf)] = void 0x0,
                    this['ancestorTexture'] = void 0x0;
            }
            ,
            _0x3e5148[_0x324b8e(0x74f)][_0x324b8e(0x653)] = function () {
                const _0x3c1415 = _0x324b8e;
                if (!this[_0x3c1415(0xab2)])
                    return;
                this[_0x3c1415(0xab2)] = !0x1;
                let _0x34bba9 = this['oriTextureBake'];
                _0x34bba9[_0x3c1415(0x7d4)] = !0x0,
                    defined(this[_0x3c1415(0x10e)]) && this[_0x3c1415(0x10e)][_0x3c1415(0x1fe)] !== _0x34bba9[_0x3c1415(0x1fe)] && _0x415e6b[_0x3c1415(0x3a6)](this[_0x3c1415(0x10e)]),
                    this[_0x3c1415(0x37b)][0x1] = _0x34bba9,
                    this[_0x3c1415(0x9ab)] = void 0x0,
                    this[_0x3c1415(0x10e)] = void 0x0;
            }
            ,
            _0x3e5148['prototype'][_0x324b8e(0x575)] = function () {
                return !0x1;
            }
            ,
            _0x3e5148[_0x324b8e(0x74f)][_0x324b8e(0x4dd)] = function () {
                const _0x2cc3bc = _0x324b8e;
                if (--this['refCount'] > 0x0)
                    return;
                let _0x3fe1a9 = this['tile']['layer'];
                delete _0x3fe1a9[_0x2cc3bc(0x3f1)][_0x2cc3bc(0x4cb)][this['id']],
                    this[_0x2cc3bc(0x38f)] = null,
                    this[_0x2cc3bc(0x77a)] = null,
                    this[_0x2cc3bc(0x593)] = null;
                for (let _0x54712f = 0x0, _0x19e3e6 = this[_0x2cc3bc(0x37b)][_0x2cc3bc(0x376)]; _0x54712f < _0x19e3e6; _0x54712f++) {
                    let _0x56bd50 = this['textures'][_0x54712f];
                    _0x415e6b['del'](_0x56bd50);
                }
                if (this[_0x2cc3bc(0x37b)][_0x2cc3bc(0x376)] = 0x0,
                    this[_0x2cc3bc(0x5d3)] = this['batchTable'] && this[_0x2cc3bc(0x5d3)]['destroy'](),
                    this[_0x2cc3bc(0x4d3)] = this[_0x2cc3bc(0x4d3)] && this[_0x2cc3bc(0x4d3)][_0x2cc3bc(0x4dd)](),
                    this['_subTexInfos'] = void 0x0,
                    this[_0x2cc3bc(0x740)] = void 0x0,
                    this[_0x2cc3bc(0x374)] = void 0x0,
                    this[_0x2cc3bc(0x1d9)] = void 0x0,
                    this['_subTexInfosBake'] = void 0x0,
                    Cesium[_0x2cc3bc(0x14b)](this[_0x2cc3bc(0x3bb)]) && this[_0x2cc3bc(0x3bb)][_0x2cc3bc(0x1fe)] !== this[_0x2cc3bc(0x7bf)][_0x2cc3bc(0x1fe)] && _0x415e6b[_0x2cc3bc(0x3a6)](this['ancestorTexture']),
                    this[_0x2cc3bc(0x7bf)] = void 0x0,
                    this[_0x2cc3bc(0x3bb)] = void 0x0,
                    this[_0x2cc3bc(0x809)] = void 0x0,
                    this[_0x2cc3bc(0x6b4)] = void 0x0,
                    this[_0x2cc3bc(0x9ab)] = void 0x0,
                    Cesium[_0x2cc3bc(0x14b)](this[_0x2cc3bc(0x33d)])) {
                    for (let _0x4bce1e = 0x0, _0xc82cee = this['subRequestNames'][_0x2cc3bc(0x376)]; _0x4bce1e < _0xc82cee; _0x4bce1e++) {
                        let _0x2aba06 = this[_0x2cc3bc(0x33d)][_0x4bce1e]
                            , _0x26b9c6 = _0x2aba06[_0x2cc3bc(0x89c)]('.')[0x0]
                            , _0x2c0185 = _0x2aba06[_0x2cc3bc(0xa59)](_0x2cc3bc(0x26c));
                        _0x26b9c6 = _0x2c0185 > -0x1 ? _0x26b9c6 + _0x2aba06['substring'](_0x2c0185) : _0x26b9c6,
                            _0x3fe1a9[_0x2cc3bc(0x6d5)]['del'](_0x3fe1a9['id'], _0x26b9c6);
                    }
                    this['subRequestNames'] = void 0x0;
                }
                if (Cesium[_0x2cc3bc(0x14b)](this[_0x2cc3bc(0x558)])) {
                    for (i = 0x0,
                        j = this[_0x2cc3bc(0x558)][_0x2cc3bc(0x376)]; i < j; i++) {
                        let _0x47ed05 = this[_0x2cc3bc(0x558)][i]
                            , _0x20af94 = _0x47ed05[_0x2cc3bc(0x89c)]('.')[0x0]
                            , _0x25b9c4 = _0x47ed05[_0x2cc3bc(0xa59)](_0x2cc3bc(0x26c));
                        _0x20af94 = _0x25b9c4 > -0x1 ? _0x20af94 + _0x47ed05[_0x2cc3bc(0x475)](_0x25b9c4) : _0x20af94,
                            _0x3fe1a9[_0x2cc3bc(0x2b5)][_0x2cc3bc(0x3a6)](_0x3fe1a9['id'], _0x20af94);
                    }
                    this['subRequestNames'] = void 0x0;
                }
                return Cesium[_0x2cc3bc(0x9ef)](this);
            }
            ,
            _0x2755eb[_0x324b8e(0x74f)]['create'] = function (_0x1f0614) {
                const _0x275364 = _0x324b8e;
                let _0x43d619 = this[_0x275364(0x4cb)][_0x1f0614];
                return _0x43d619 ? _0x43d619[_0x275364(0x766)]++ : (_0x43d619 = new _0x3e5148(),
                    this[_0x275364(0x4cb)][_0x1f0614] = _0x43d619),
                    _0x43d619;
            }
            ,
            _0x2755eb[_0x324b8e(0x74f)]['free'] = function (_0x5b1e3d) {
                const _0x136012 = _0x324b8e;
                let _0x1cddf4 = this[_0x136012(0x4cb)][_0x5b1e3d];
                _0x1cddf4 && 0x0 == --_0x1cddf4['refCount'] && (delete this[_0x136012(0x4cb)][_0x5b1e3d],
                    _0x1cddf4[_0x136012(0x4dd)]());
            }
            ;
        const _0x1233a3 = 0x0
            , _0x11e51e = 0x1
            , _0x3b2e2b = 0x2
            , _0x500d8c = 0x4
            , _0x262d34 = 0x5;
        let _0x26afda = 0x0;
        _0x12b721['prototype'][_0x324b8e(0x4c1)] = function (_0x5c99f8, _0x321ac1, _0x4e825a, _0x47a8e7, _0x29c23f) {
            const _0x354812 = _0x324b8e;
            let _0x396ff1 = _0x5c99f8 + '_' + _0x4e825a
                , _0x58807f = _0x321ac1 + _0x4e825a + _0x354812(0x3db)
                , _0x13857f = new Cesium['Request']({
                    'url': _0x58807f,
                    'throttle': !0x0,
                    'throttleByServer': !0x0,
                    'priorityFunction': function () {
                        const _0xd0286d = _0x354812;
                        return _0x47a8e7[_0xd0286d(0x6e0)];
                    }
                });
            _0x13857f[_0x354812(0x196)] = _0x4e825a,
                _0x13857f[_0x354812(0x26d)] = _0x29c23f[_0x354812(0x809)][_0x354812(0xa41)][_0x354812(0x770)],
                _0x13857f[_0x354812(0x4c5)] = _0x396ff1,
                this['pendingRequests'][_0x354812(0x745)](_0x13857f);
        }
            ;
        let _0x497a1b = function (_0x58aba8, _0xc83714) {
            return _0x58aba8['priority'] - _0xc83714['priority'];
        };
        function _0x2e034a() { }
        _0x12b721[_0x324b8e(0x74f)][_0x324b8e(0x85b)] = function () {
            const _0x1e0aa0 = _0x324b8e;
            if (!(this[_0x1e0aa0(0x8ec)][_0x1e0aa0(0x376)] < 0x1)) {
                this[_0x1e0aa0(0x8ec)]['sort'](_0x497a1b),
                    this['startPackRequest']();
                for (let _0x39657c = 0x0, _0x312b00 = this[_0x1e0aa0(0x8ec)]['length']; _0x39657c < _0x312b00; _0x39657c++) {
                    let _0x1943f5 = this['pendingRequests'][_0x39657c];
                    this[_0x1e0aa0(0x993)](_0x1943f5);
                }
                this[_0x1e0aa0(0x8ec)][_0x1e0aa0(0x376)] = 0x0;
            }
        }
            ,
            _0x12b721[_0x324b8e(0x74f)][_0x324b8e(0x121)] = function () {
                const _0x4d1397 = _0x324b8e;
                let _0x28fd62 = function (_0x45f38b) {
                    const _0x4d1fd4 = _0x557c;
                    let _0xdbefaf = []
                        , _0x2d44c0 = {}
                        , _0x64638b = 0x0;
                    for (let _0x35252a = 0x0, _0x5383e0 = _0x45f38b[_0x4d1fd4(0x376)]; _0x35252a < _0x5383e0; _0x35252a++) {
                        let _0x2980ac = _0x45f38b[_0x35252a];
                        if (_0x2980ac[_0x4d1fd4(0xacb)])
                            continue;
                        let _0x22c398 = _0x2980ac[_0x4d1fd4(0x196)];
                        _0x2d44c0[_0x22c398] || (_0x2d44c0[_0x22c398] = !0x0,
                            _0xdbefaf[_0x4d1fd4(0x745)](_0x22c398),
                            _0x2980ac[_0x4d1fd4(0x5ef)] = _0x64638b++);
                    }
                    return _0xdbefaf;
                }(this[_0x4d1397(0x8ec)])[_0x4d1397(0x13f)](';')
                    , _0x25ee32 = this['pendingRequests'][0x0][_0x4d1397(0xa62)]
                    , _0x41b87d = new Cesium[(_0x4d1397(0x9c9))]({
                        'url': _0x25ee32,
                        'queryParameters': {
                            'extratiles': _0x28fd62
                        }
                    })
                    , _0x18d850 = _0x438ab0()
                    , _0x59a663 = _0x41b87d[_0x4d1397(0x5e8)]();
                if (_0x59a663) {
                    for (let _0x1dfb72 = 0x0, _0x1ca15b = this[_0x4d1397(0x8ec)][_0x4d1397(0x376)]; _0x1dfb72 < _0x1ca15b; _0x1dfb72++) {
                        this['pendingRequests'][_0x1dfb72][_0x4d1397(0x4ea)] = _0x18d850;
                    }
                    _0x59a663[_0x4d1397(0x685)](function (_0x1dc4af) {
                        const _0x4f597a = _0x4d1397;
                        _0x18d850[_0x4f597a(0x1d5)](_0x1dc4af);
                    }, _0x320e9d => {
                        const _0xc59cad = _0x4d1397;
                        _0x18d850[_0xc59cad(0x7aa)](error);
                    }
                    );
                }
            }
            ,
            _0x12b721[_0x324b8e(0x74f)][_0x324b8e(0x993)] = function (_0x4b801f) {
                const _0x30964a = _0x324b8e;
                let _0x401551 = _0x4b801f[_0x30964a(0x4c5)]
                    , _0x2d1ca5 = _0x4b801f[_0x30964a(0x4ea)][_0x30964a(0x150)];
                this['state'][_0x401551] = _0x11e51e;
                let _0x1348f0 = this;
                _0x2d1ca5['then'](function (_0x9e9ca4) {
                    const _0x23430e = _0x30964a;
                    if (!Cesium[_0x23430e(0x14b)](_0x1348f0[_0x23430e(0x793)][_0x401551]))
                        return;
                    _0x1348f0[_0x23430e(0x793)][_0x401551] = _0x3b2e2b;
                    let _0x43c43d = function (_0x4c1904, _0xbaca0f) {
                        const _0x168123 = _0x23430e;
                        let _0x26c0a8 = new DataView(_0x4c1904)
                            , _0x2e1f2a = 0x0
                            , _0x3d5c64 = _0x26c0a8[_0x168123(0x69d)](_0x2e1f2a, !0x0);
                        if (_0xbaca0f > _0x3d5c64 - 0x1 || _0x3d5c64 > 0x100)
                            return;
                        _0x2e1f2a += 0x4;
                        let _0x35133e, _0x59f40a, _0x5e7439 = [];
                        for (_0x35133e = 0x0; _0x35133e < _0x3d5c64; _0x35133e++)
                            _0x59f40a = _0x26c0a8[_0x168123(0x69d)](_0x2e1f2a, !0x0),
                                _0x5e7439['push'](_0x59f40a),
                                _0x2e1f2a += 0x4;
                        for (_0x35133e = 0x0; _0x35133e < _0x3d5c64; _0x35133e++) {
                            if (_0x59f40a = _0x5e7439[_0x35133e],
                                _0x35133e === _0xbaca0f) {
                                if (0x0 === _0x59f40a)
                                    return;
                                return new Uint8Array(_0x4c1904)[_0x168123(0x3be)](_0x2e1f2a, _0x2e1f2a + _0x59f40a)[_0x168123(0x38d)];
                            }
                            _0x2e1f2a += _0x59f40a;
                        }
                    }(_0x9e9ca4, _0x4b801f['quadKeyIndex']);
                    if (!_0x43c43d)
                        return void (_0x1348f0[_0x23430e(0x793)][_0x401551] = _0x262d34);
                    let _0x286a9b = new Uint8Array(_0x43c43d)
                        , _0x386c52 = new DataView(_0x43c43d)
                        , _0x40ae47 = 0x0
                        , _0x1a3391 = _0x386c52[_0x23430e(0x69d)](_0x40ae47, !0x0);
                    _0x40ae47 += Uint32Array[_0x23430e(0x739)];
                    let _0x121129 = {};
                    for (let _0x54563f = 0x0; _0x54563f < _0x1a3391; _0x54563f++) {
                        let _0x3c4839 = _0x386c52['getUint32'](_0x40ae47, !0x0);
                        _0x40ae47 += Uint32Array[_0x23430e(0x739)];
                        let _0x2c4acd = Cesium[_0x23430e(0x178)](_0x286a9b, _0x40ae47, _0x3c4839);
                        _0x40ae47 += _0x3c4839,
                            _0x386c52['getUint32'](_0x40ae47, !0x0),
                            _0x40ae47 += Uint32Array[_0x23430e(0x739)];
                        let _0x532115 = _0x386c52[_0x23430e(0x69d)](_0x40ae47, !0x0);
                        _0x40ae47 += Uint32Array['BYTES_PER_ELEMENT'];
                        let _0x2f1c36 = new Uint8Array(_0x43c43d, _0x40ae47, _0x532115)
                            , _0x3ced4d = _0x35205d['inflate'](_0x2f1c36)[_0x23430e(0x38d)];
                        _0x40ae47 += _0x532115;
                        let _0x1cecb3 = new DataView(_0x3ced4d)
                            , _0x4a8967 = 0x0;
                        _0x1cecb3[_0x23430e(0x69d)](_0x4a8967, !0x0),
                            _0x4a8967 += Uint32Array[_0x23430e(0x739)];
                        let _0x1a58f4 = _0x1cecb3[_0x23430e(0x69d)](_0x4a8967, !0x0);
                        _0x4a8967 += Uint32Array['BYTES_PER_ELEMENT'];
                        let _0x47ccce = _0x1cecb3[_0x23430e(0x69d)](_0x4a8967, !0x0);
                        _0x4a8967 += Uint32Array[_0x23430e(0x739)],
                            _0x1cecb3['getUint32'](_0x4a8967, !0x0),
                            _0x4a8967 += Uint32Array['BYTES_PER_ELEMENT'];
                        let _0x4f4ae4 = _0x1cecb3[_0x23430e(0x69d)](_0x4a8967, !0x0);
                        _0x4a8967 += Uint32Array[_0x23430e(0x739)];
                        let _0x2693e0 = new Uint8Array(_0x3ced4d, _0x4a8967, _0x4f4ae4);
                        _0x121129[_0x2c4acd] = {
                            'width': _0x1a58f4,
                            'height': _0x47ccce,
                            'arrayBufferView': _0x2693e0
                        };
                    }
                    let _0x1917b4 = {
                        'keyWord': _0x401551,
                        'result': _0x121129,
                        'byteLength': _0x43c43d[_0x23430e(0x1ef)]
                    }
                        , _0x2ec995 = _0x1348f0[_0x23430e(0x11e)][_0x23430e(0x9cb)](_0x1917b4);
                    _0x1348f0['cache'][_0x401551] = _0x2ec995,
                        _0x1348f0['state'][_0x401551] = _0x500d8c,
                        delete _0x1348f0[_0x23430e(0x793)][_0x401551],
                        _0x26afda += _0x43c43d['byteLength'];
                    let _0x232f89 = _0x1348f0[_0x23430e(0x11e)][_0x23430e(0x508)];
                    for (; _0x26afda > 0xc800000;) {
                        let _0x86798e = _0x232f89
                            , _0x49f801 = _0x232f89[_0x23430e(0x202)]['keyWord']
                            , _0x36d870 = _0x1348f0['cache'][_0x49f801]['item'];
                        _0x26afda -= _0x36d870['byteLength'],
                            delete _0x1348f0[_0x23430e(0x4cb)][_0x49f801],
                            _0x232f89 = _0x232f89['next'],
                            _0x1348f0[_0x23430e(0x11e)][_0x23430e(0x77c)](_0x86798e);
                    }
                }, function (_0x2bfe67) {
                    _0x1348f0['state'][_0x401551] = _0x2bfe67 ? _0x262d34 : _0x1233a3;
                });
            }
            ,
            _0x12b721[_0x324b8e(0x74f)][_0x324b8e(0xa61)] = function (_0x44a5a5, _0x1d5354, _0x52e17a, _0xadfc8b) {
                const _0x4c9999 = _0x324b8e;
                let _0x5f926e = _0x44a5a5 + '_' + _0x52e17a
                    , _0x213148 = this['cache'][_0x5f926e];
                if (_0x213148)
                    return this[_0x4c9999(0x11e)][_0x4c9999(0x646)](this[_0x4c9999(0x11e)][_0x4c9999(0x8a4)], _0x213148),
                        _0x213148[_0x4c9999(0x202)];
                let _0x2d3594 = this['state'][_0x5f926e];
                Cesium['defined'](_0x2d3594) || (_0x2d3594 = this['state'][_0x5f926e] = _0x1233a3),
                    _0x2d3594 === _0x1233a3 && this[_0x4c9999(0x4c1)](_0x44a5a5, _0x1d5354, _0x52e17a, _0xadfc8b[_0x4c9999(0x809)], _0xadfc8b);
            }
            ,
            _0x12b721[_0x324b8e(0x74f)][_0x324b8e(0x3a6)] = function (_0x1b2c8a, _0xf7594) {
                const _0x95dab2 = _0x324b8e;
                let _0x2709a4 = _0x1b2c8a + '_' + _0xf7594;
                delete this[_0x95dab2(0x793)][_0x2709a4];
            }
            ,
            _0x12b721[_0x324b8e(0x43a)] = void 0x0,
            _0x12b721[_0x324b8e(0x550)] = function () {
                const _0x1ac1ab = _0x324b8e;
                return _0x12b721['_singleInstance'] || (_0x12b721[_0x1ac1ab(0x43a)] = new _0x12b721()),
                    _0x12b721['_singleInstance'];
            }
            ;
        let _0x4685e0 = new Cesium[(_0x324b8e(0x85d))]();
        function _0x44d026(_0x24bdd8, _0x3ea512) {
            return _0x24bdd8['instanceIndex'] > -0x1 ? function (_0x2ff9f3) {
                const _0x5b109d = _0x557c;
                let _0x307c44 = new Cesium['BoundingSphere']()
                    , _0x3e3d4b = _0x2ff9f3[_0x5b109d(0x197)];
                if (!Cesium['defined'](_0x3e3d4b))
                    return _0x307c44;
                let _0x5557ec = new Cesium[(_0x5b109d(0x85d))](_0x3e3d4b[0x0], _0x3e3d4b[0x1], _0x3e3d4b[0x2])
                    , _0x49a366 = new Cesium[(_0x5b109d(0x95c))](_0x3e3d4b[0x3], _0x3e3d4b[0x4], _0x3e3d4b[0x5])
                    , _0x40da0a = new Cesium['Cartesian3']['lerp'](_0x5557ec, _0x49a366, 0.5, _0x4685e0)
                    , _0x1e2666 = new Cesium[(_0x5b109d(0x85d))][(_0x5b109d(0xaa5))](_0x40da0a, _0x5557ec);
                return _0x307c44['center'] = _0x40da0a,
                    _0x307c44['radius'] = _0x1e2666,
                    _0x307c44;
            }(_0x24bdd8) : function (_0x4b3ebd, _0x3774c0) {
                const _0x56bca3 = _0x557c;
                let _0x1743b6, _0x42f88d, _0x18de4e = new Cesium[(_0x56bca3(0xa4a))](), _0x5b13d0 = new Cesium[(_0x56bca3(0x85d))](), _0x40e227 = _0x4b3ebd[_0x56bca3(0xaa9)][0x0], _0x3ecf7c = _0x40e227[_0x56bca3(0x70f)], _0x30043a = Cesium[_0x56bca3(0x14b)](_0x4b3ebd[_0x56bca3(0xa19)]) && (_0x4b3ebd['compressOptions'] & _0x5983eb[_0x56bca3(0x649)]) === _0x5983eb['SVC_Vertex'], _0x5022ab = 0x1;
                _0x30043a ? (_0x5022ab = _0x4b3ebd['vertCompressConstant'],
                    _0x1743b6 = new Cesium[(_0x56bca3(0x85d))](_0x4b3ebd[_0x56bca3(0x83c)]['x'], _0x4b3ebd['minVerticesValue']['y'], _0x4b3ebd[_0x56bca3(0x83c)]['z']),
                    _0x42f88d = new Uint16Array(_0x40e227['typedArray'][_0x56bca3(0x38d)], _0x40e227[_0x56bca3(0xa82)][_0x56bca3(0x52b)], _0x40e227[_0x56bca3(0xa82)][_0x56bca3(0x1ef)] / 0x2)) : _0x42f88d = new Float32Array(_0x40e227[_0x56bca3(0xa82)][_0x56bca3(0x38d)], _0x40e227['typedArray'][_0x56bca3(0x52b)], _0x40e227['typedArray'][_0x56bca3(0x1ef)] / 0x4);
                let _0xa115e6 = [];
                for (let _0x18e25c = 0x0; _0x18e25c < _0x4b3ebd['verticesCount']; _0x18e25c++)
                    Cesium[_0x56bca3(0x85d)][_0x56bca3(0x26e)](_0x42f88d, _0x3ecf7c * _0x18e25c, _0x5b13d0),
                        _0x30043a && (_0x5b13d0 = Cesium[_0x56bca3(0x85d)]['multiplyByScalar'](_0x5b13d0, _0x5022ab, _0x5b13d0),
                            _0x5b13d0 = Cesium[_0x56bca3(0x85d)][_0x56bca3(0x9cb)](_0x5b13d0, _0x1743b6, _0x5b13d0)),
                        _0xa115e6[_0x56bca3(0x745)](Cesium['Cartesian3'][_0x56bca3(0x157)](_0x5b13d0));
                return Cesium[_0x56bca3(0xa4a)][_0x56bca3(0x751)](_0xa115e6, _0x18de4e),
                    Cesium[_0x56bca3(0xa4a)]['transform'](_0x18de4e, _0x3774c0, _0x18de4e),
                    _0xa115e6[_0x56bca3(0x376)] = 0x0,
                    _0x18de4e;
            }(_0x24bdd8, _0x3ea512);
        }
        function _0x281c89(_0x570152, _0x1bf9c5, _0x27e923, _0x1691a3) {
            const _0x3b01a1 = _0x324b8e;
            let _0x3e4596 = {}
                , _0x23d8f0 = _0x27e923[_0x3b01a1(0x442)];
            for (let _0x135696 = 0x0, _0x133188 = _0x23d8f0[_0x3b01a1(0x376)]; _0x135696 < _0x133188; _0x135696++) {
                let _0x58386d, _0x127ee7 = _0x23d8f0[_0x135696], _0x3cfc0a = _0x127ee7[_0x3b01a1(0x322)], _0x52cce3 = Cesium[_0x3b01a1(0x5ab)][_0x3b01a1(0x3ee)](_0x570152[_0x3b01a1(0x896)], _0x3cfc0a, new Cesium[(_0x3b01a1(0x5ab))]());
                Cesium[_0x3b01a1(0x14b)](_0x1691a3[_0x3b01a1(0x399)]) && (_0x58386d = new Cesium[(_0x3b01a1(0xa4a))](_0x1691a3[_0x3b01a1(0x399)][_0x3b01a1(0x275)][_0x3b01a1(0x6f1)], _0x1691a3[_0x3b01a1(0x399)][_0x3b01a1(0x275)]['radius']),
                    Cesium[_0x3b01a1(0xa4a)][_0x3b01a1(0x4f7)](_0x58386d, _0x570152['modelMatrix'], _0x58386d));
                let _0x449cae = _0x127ee7['skeletonNames'];
                for (let _0xf016f3 = 0x0, _0x419467 = _0x449cae[_0x3b01a1(0x376)]; _0xf016f3 < _0x419467; _0xf016f3++) {
                    let _0x216ee8, _0x526c15 = _0x449cae[_0xf016f3], _0x1511cf = _0x1bf9c5[_0x3b01a1(0x306)][_0x526c15], _0x34c41b = _0x1511cf[_0x3b01a1(0x76b)], _0x5345d8 = _0x1511cf['arrIndexPackage'], _0x4d78dc = _0x1511cf[_0x3b01a1(0x49c)];
                    _0x5345d8['length'] > 0x0 && (_0x216ee8 = _0x570152[_0x3b01a1(0x3f1)][_0x3b01a1(0x34c)](_0x5345d8[0x0][_0x3b01a1(0xabf)]));
                    let _0x32614c = Cesium[_0x3b01a1(0x14b)](_0x58386d) ? _0x58386d : _0x44d026(_0x34c41b, _0x52cce3);
                    _0x3e4596[_0x526c15] = _0x9c966a[_0x570152[_0x3b01a1(0x3a7)]]({
                        'layer': _0x570152,
                        'vertexPackage': _0x34c41b,
                        'arrIndexPackage': _0x5345d8,
                        'pickInfo': _0x4d78dc,
                        'modelMatrix': _0x52cce3,
                        'geoMatrix': _0x3cfc0a,
                        'boundingVolume': _0x32614c,
                        'material': _0x216ee8,
                        'edgeGeometry': _0x1511cf[_0x3b01a1(0x66a)],
                        'geoName': _0x526c15
                    });
                }
            }
            if (!(Object[_0x3b01a1(0x698)](_0x3e4596)[_0x3b01a1(0x376)] < 0x1)) {
                if (!Cesium[_0x3b01a1(0x14b)](_0x1691a3[_0x3b01a1(0x399)])) {
                    let _0x44dce6 = [];
                    for (let _0x466bcf in _0x3e4596)
                        _0x3e4596['hasOwnProperty'](_0x466bcf) && _0x44dce6[_0x3b01a1(0x745)](_0x3e4596[_0x466bcf][_0x3b01a1(0x399)]);
                    let _0x500b32 = Cesium['BoundingSphere'][_0x3b01a1(0x8e3)](_0x44dce6);
                    _0x1691a3['boundingVolume'] = {
                        'sphere': _0x500b32
                    };
                }
                _0x1691a3[_0x3b01a1(0x917)] = _0x3e4596;
            }
        }
        _0x2e034a[_0x324b8e(0x396)] = function (_0x4ad141, _0x4c4048, _0x35bb3d) {
            const _0x264e6a = _0x324b8e;
            if (!Cesium[_0x264e6a(0x14b)](_0x35bb3d))
                return;
            !function (_0x30f9c6, _0xec6804, _0x2f6661) {
                const _0x5a7904 = _0x264e6a;
                _0x30f9c6[_0x5a7904(0x56c)];
                let _0x2f7ca1 = _0x30f9c6['_materialManager'];
                _0x2f7ca1 || (_0x2f7ca1 = _0x30f9c6['_materialManager'] = new _0x2755eb()),
                    _0x30f9c6[_0x5a7904(0x6d5)],
                    _0x30f9c6['_subTextureManager'] || (_0x30f9c6[_0x5a7904(0x6d5)] = _0x12b721[_0x5a7904(0x550)]());
                let _0x117296 = _0xec6804[_0x5a7904(0x19a)][_0x5a7904(0x932)];
                for (let _0x4a3664 = 0x0, _0x3f066d = _0x117296[_0x5a7904(0x376)]; _0x4a3664 < _0x3f066d; _0x4a3664++) {
                    let _0x53a2f2 = _0x117296[_0x4a3664][_0x5a7904(0x932)]
                        , _0x51b310 = _0x53a2f2['id']
                        , _0x2c610b = _0x2f7ca1['create'](_0x51b310);
                    _0x2c610b[_0x5a7904(0x4e2)] = _0x30f9c6['id'],
                        _0x2c610b[_0x5a7904(0x809)] = _0x2f6661;
                    let _0x3247c1 = _0x53a2f2[_0x5a7904(0x191)];
                    _0x2c610b[_0x5a7904(0x38f)] = new Cesium[(_0x5a7904(0x75c))](_0x3247c1['r'], _0x3247c1['g'], _0x3247c1['b'], _0x3247c1['a']);
                    let _0x1731cb = _0x53a2f2['diffuse'];
                    _0x2c610b[_0x5a7904(0x77a)] = new Cesium[(_0x5a7904(0x75c))](_0x1731cb['r'], _0x1731cb['g'], _0x1731cb['b'], _0x1731cb['a']);
                    let _0x522ba9 = _0x53a2f2[_0x5a7904(0x5aa)];
                    _0x2c610b[_0x5a7904(0x593)] = new Cesium[(_0x5a7904(0x75c))](_0x522ba9['r'], _0x522ba9['g'], _0x522ba9['b'], _0x522ba9['a']),
                        _0x2c610b[_0x5a7904(0x8ae)] = _0x53a2f2['shininess'],
                        _0x2c610b[_0x5a7904(0x29f)] = _0x53a2f2[_0x5a7904(0x40c)],
                        _0x2c610b['id'] = _0x51b310;
                    let _0x597650 = _0x53a2f2['textureunitstates'];
                    _0x597650[_0x5a7904(0x376)];
                    for (let _0x3c6a7d = 0x0; _0x3c6a7d < 0x1; _0x3c6a7d++) {
                        let _0x5accff = _0x597650[_0x3c6a7d][_0x5a7904(0x397)]
                            , _0xa14391 = _0x5accff['id']
                            , _0x3c56dc = 0x0 === _0x5accff[_0x5a7904(0x7b1)]['u'] ? Cesium['TextureWrap'][_0x5a7904(0x2c7)] : Cesium[_0x5a7904(0x600)][_0x5a7904(0xa76)]
                            , _0x467f21 = 0x0 === _0x5accff[_0x5a7904(0x7b1)]['v'] ? Cesium[_0x5a7904(0x600)][_0x5a7904(0x2c7)] : Cesium[_0x5a7904(0x600)][_0x5a7904(0xa76)];
                        _0x2c610b[_0x5a7904(0xe3)] = Cesium[_0x5a7904(0x5ab)]['unpack'](_0x5accff['texmodmatrix']);
                        let _0x4b2d19 = _0xec6804[_0x5a7904(0x217)][_0xa14391];
                        _0x4b2d19 && (_0x4b2d19[_0x5a7904(0x9c5)] = _0x3c56dc,
                            _0x4b2d19['wrapT'] = _0x467f21,
                            _0x2c610b[_0x5a7904(0x8fe)](_0x30f9c6, _0x2f6661, _0x4b2d19, _0x3c6a7d, _0xec6804));
                    }
                }
            }(_0x4ad141, _0x35bb3d, _0x4c4048);
            let _0x49a276 = function (_0x1a1117, _0x3c07d4) {
                const _0x2d39ee = _0x264e6a;
                let _0x5528df = _0x3c07d4[_0x2d39ee(0x5ea)]
                    , _0x1e563d = [];
                for (let _0x517b9d = 0x0, _0x1b818d = _0x5528df[_0x2d39ee(0x9b7)][_0x2d39ee(0x376)]; _0x517b9d < _0x1b818d; _0x517b9d++) {
                    let _0x4b91f8 = {}
                        , _0x429c7f = _0x5528df[_0x2d39ee(0x9b7)][_0x517b9d];
                    _0x4b91f8[_0x2d39ee(0xaae)] = _0x429c7f['rangeMode'],
                        _0x4b91f8['rangeDataList'] = _0x429c7f[_0x2d39ee(0x1a8)],
                        _0x4b91f8[_0x2d39ee(0x69a)] = _0x429c7f[_0x2d39ee(0x69a)];
                    let _0x5758d1 = _0x429c7f['boundingSphere'][_0x2d39ee(0x6f1)]
                        , _0x1b08c0 = _0x429c7f[_0x2d39ee(0x891)][_0x2d39ee(0x1cc)];
                    '' !== _0x4b91f8['rangeDataList'] ? _0x4b91f8[_0x2d39ee(0x399)] = {
                        'sphere': {
                            'center': new Cesium['Cartesian3'](_0x5758d1['x'], _0x5758d1['y'], _0x5758d1['z']),
                            'radius': _0x1b08c0
                        }
                    } : _0x4b91f8[_0x2d39ee(0x1ed)] = !0x0,
                        _0x281c89(_0x1a1117, _0x3c07d4, _0x429c7f, _0x4b91f8),
                        Cesium[_0x2d39ee(0x14b)](_0x4b91f8['geoMap']) && _0x1e563d[_0x2d39ee(0x745)](_0x4b91f8);
                }
                return _0x1e563d;
            }(_0x4ad141, _0x35bb3d);
            return _0x49a276;
        }
            ;
        const _0x1a7f0d = Cesium[_0x324b8e(0x14b)];
        function _0x5e463c(_0x1e6300, _0x41a4cb, _0x1d3744, _0x280520, _0x1a13c2, _0x424568) {
            const _0x1275c9 = _0x324b8e;
            this[_0x1275c9(0xa41)] = _0x1e6300,
                this[_0x1275c9(0x5b0)] = _0x41a4cb;
            let _0x2edcf5 = _0x280520[_0x1275c9(0x3ed)](/\\/g, '/');
            this[_0x1275c9(0x248)] = Cesium[_0x1275c9(0x13b)](_0x280520),
                this[_0x1275c9(0x170)] = function (_0x2166ed, _0x2ac29e) {
                    const _0x5c1cb0 = _0x1275c9;
                    _0x2166ed = _0x2166ed[_0x5c1cb0(0x3ed)](/\+/g, '%2B');
                    let _0x4825c3 = _0x2ac29e[_0x5c1cb0(0x311)];
                    if (!(_0x2ac29e['_basePath'][_0x5c1cb0(0xa59)](_0x5c1cb0(0x36c)) > -0x1))
                        return _0x2166ed;
                    let _0x3dc90f = _0x4825c3[_0x5c1cb0(0x3ed)](/(.*realspace)/, '')
                        , _0x49fe14 = _0x4825c3[_0x5c1cb0(0x3ed)](/\/rest\/realspace/g, '')[_0x5c1cb0(0x3ed)](_0x3dc90f, '');
                    return _0x49fe14 += '/rest/realspace' + _0x3dc90f + _0x5c1cb0(0x91a) + _0x2166ed[_0x5c1cb0(0x3ed)](/^\.*/, '')[_0x5c1cb0(0x3ed)](/^\//, '')[_0x5c1cb0(0x3ed)](/\/$/, ''),
                        _0x1a7f0d(_0x5cb66c[_0x5c1cb0(0x25e)]) && (_0x49fe14 = _0x1a7f0d(_0x5cb66c[_0x5c1cb0(0x25e)][_0x5c1cb0(0x697)][_0x4825c3]) ? _0x5cb66c['addTokenWithKey'](_0x4825c3, _0x49fe14) : _0x5cb66c[_0x5c1cb0(0x474)](_0x49fe14)),
                        _0x49fe14;
                }(_0x2edcf5, _0x1e6300),
                this[_0x1275c9(0xa6d)] = _0x280520,
                this[_0x1275c9(0x1ed)] = 0x0 === _0x1a13c2,
                this['isRootTile'] = !0x1,
                this[_0x1275c9(0x399)] = this[_0x1275c9(0x9a2)](_0x1d3744, _0x1e6300[_0x1275c9(0x896)]);
            let _0x279240 = Cesium[_0x1275c9(0x9c9)][_0x1275c9(0x260)](_0x1e6300[_0x1275c9(0x50e)]);
            if (Cesium[_0x1275c9(0x14b)](_0x41a4cb))
                this[_0x1275c9(0x3aa)] = _0x41a4cb['baseUri'];
            else {
                let _0x299d3f = new Cesium['Resource'](_0x2edcf5);
                this[_0x1275c9(0x3aa)] = _0x299d3f[_0x1275c9(0x5da)]();
            }
            this[_0x1275c9(0xa39)] = _0x279240['getDerivedResource']({
                'url': this[_0x1275c9(0x170)]
            }),
                this[_0x1275c9(0x863)] = Cesium[_0x1275c9(0x109)]['getServerKey'](this[_0x1275c9(0xa39)][_0x1275c9(0x73a)]()),
                this['request'] = void 0x0,
                this[_0x1275c9(0x4a1)] = void 0x0,
                this[_0x1275c9(0x6e0)] = 0x0,
                this[_0x1275c9(0x8cd)] = 0x0,
                this[_0x1275c9(0x574)] = 0x0,
                this['depth'] = _0x41a4cb ? _0x41a4cb[_0x1275c9(0xa0b)] + 0x1 : 0x0,
                this[_0x1275c9(0x9c4)] = 0x0,
                this[_0x1275c9(0x64d)] = !0x1,
                this[_0x1275c9(0xabe)] = [],
                this[_0x1275c9(0x6a2)] = [],
                this[_0x1275c9(0x85a)] = [],
                this[_0x1275c9(0x823)] = Cesium['defaultValue'](_0x1a13c2, 0x10),
                this['lodRangeMode'] = Cesium[_0x1275c9(0x225)](_0x424568, _0x12f753[_0x1275c9(0x2af)]),
                this[_0x1275c9(0x430)] = this[_0x1275c9(0x1ed)] ? _0x343dab['READY'] : _0x343dab[_0x1275c9(0x293)],
                this[_0x1275c9(0x8d6)] = 0x0,
                this[_0x1275c9(0x5a7)] = 0x0,
                this['processFrame'] = 0x0,
                this[_0x1275c9(0x4df)] = 0x0,
                this[_0x1275c9(0x605)] = 0x0,
                this[_0x1275c9(0x82e)] = 0x0,
                this['priority'] = 0x0,
                this[_0x1275c9(0x93c)] = this,
                this[_0x1275c9(0x819)] = !0x1,
                this[_0x1275c9(0x3b2)] = !0x1,
                this['selected'] = !0x1,
                this[_0x1275c9(0x7d9)] = !0x0,
                this[_0x1275c9(0x676)] = 0x0,
                this[_0x1275c9(0x549)] = !0x1,
                this[_0x1275c9(0xac4)] = _0x41a4cb ? _0x41a4cb[_0x1275c9(0xac4)] : this[_0x1275c9(0xa6d)],
                this[_0x1275c9(0x3a0)] = '',
                this[_0x1275c9(0x204)] = !0x1,
                this[_0x1275c9(0xad6)] = !0x1,
                this[_0x1275c9(0x3c6)] = {},
                this['ancestorMap'] = {};
        }
        Object['defineProperties'](_0x5e463c[_0x324b8e(0x74f)], {
            'renderable': {
                'get': function () {
                    const _0x74111e = _0x324b8e;
                    if (this[_0x74111e(0x549)])
                        return this[_0x74111e(0x549)];
                    let _0x5863a1 = this[_0x74111e(0x6a2)]
                        , _0x7c623d = _0x5863a1['length'];
                    if (0x0 === _0x7c623d)
                        return !0x1;
                    for (let _0x5f5048 = 0x0; _0x5f5048 < _0x7c623d; _0x5f5048++) {
                        let _0x56b04a = _0x5863a1[_0x5f5048];
                        for (let _0x517222 = 0x0, _0x51b1f0 = _0x56b04a['length']; _0x517222 < _0x51b1f0; _0x517222++) {
                            if (!_0x56b04a[_0x517222]['ready'])
                                return !0x1;
                        }
                    }
                    return this[_0x74111e(0x549)] = !0x0,
                        !0x0;
                }
            }
        });
        let _0x3f0dfc = new Cesium[(_0x324b8e(0x85d))]();
        function _0x1ec1cf(_0x26eae6, _0x16ae39) {
            return _0x26eae6['boundingVolume'];
        }
        _0x5e463c['prototype']['createBoundingVolume'] = function (_0x2cecc8, _0x54edb7) {
            const _0x595a8c = _0x324b8e;
            return Cesium['defined'](_0x2cecc8[_0x595a8c(0x275)]) ? function (_0x4a1e7d, _0x4cb864) {
                const _0x60ae24 = _0x595a8c;
                let _0x15d7f5 = Cesium[_0x60ae24(0x85d)][_0x60ae24(0x157)](_0x4a1e7d[_0x60ae24(0x6f1)])
                    , _0x38edac = _0x4a1e7d[_0x60ae24(0x1cc)];
                _0x15d7f5 = Cesium[_0x60ae24(0x5ab)][_0x60ae24(0x5d5)](_0x4cb864, _0x15d7f5, _0x15d7f5);
                let _0x5c2e5e = Cesium['Matrix4'][_0x60ae24(0x236)](_0x4cb864, _0x3f0dfc);
                return _0x38edac *= Cesium['Cartesian3'][_0x60ae24(0x53e)](_0x5c2e5e),
                    new Cesium[(_0x60ae24(0xa31))](_0x15d7f5, _0x38edac);
            }(_0x2cecc8['sphere'], _0x54edb7) : Cesium[_0x595a8c(0x14b)](_0x2cecc8[_0x595a8c(0xad9)]) ? function (_0x447302, _0x49dd68) {
                const _0x20b93a = _0x595a8c;
                let _0x554d27 = new Cesium[(_0x20b93a(0x85d))](_0x447302[_0x20b93a(0x412)]['x'], _0x447302[_0x20b93a(0x412)]['y'], _0x447302['min']['z']);
                Cesium['Matrix4']['multiplyByPoint'](_0x49dd68, _0x554d27, _0x554d27);
                let _0x2c1788 = new Cesium['Cartesian3'](_0x447302[_0x20b93a(0x212)]['x'], _0x447302[_0x20b93a(0x212)]['y'], _0x447302[_0x20b93a(0x212)]['z']);
                Cesium[_0x20b93a(0x5ab)]['multiplyByPoint'](_0x49dd68, _0x2c1788, _0x2c1788);
                let _0x42adbe = Cesium[_0x20b93a(0xa4a)][_0x20b93a(0x455)](_0x554d27, _0x2c1788, new Cesium[(_0x20b93a(0xa4a))]())
                    , _0x1f529f = _0x42adbe[_0x20b93a(0x6f1)]
                    , _0x38aa81 = _0x42adbe['radius']
                    , _0x129b52 = Cesium['Matrix4'][_0x20b93a(0x236)](_0x49dd68, _0x3f0dfc);
                return _0x38aa81 *= Cesium['Cartesian3'][_0x20b93a(0x53e)](_0x129b52),
                    new Cesium[(_0x20b93a(0xa31))](_0x1f529f, _0x38aa81);
            }(_0x2cecc8[_0x595a8c(0xad9)], _0x54edb7) : void 0x0;
        }
            ,
            _0x5e463c['prototype'][_0x324b8e(0x529)] = function () {
                const _0x48054f = _0x324b8e;
                return 0x0 !== this[_0x48054f(0xabe)]['length'] && !this[_0x48054f(0x1ed)] && (!Cesium['defined'](this[_0x48054f(0x823)]) || this[_0x48054f(0x574)] > this[_0x48054f(0x823)]);
            }
            ,
            _0x5e463c['prototype']['getPixel'] = function (_0x3f8a6b) {
                const _0x4267af = _0x324b8e;
                let _0x3c7004 = this[_0x4267af(0x399)]
                    , _0x1126a6 = _0x3c7004[_0x4267af(0x1cc)]
                    , _0x3b82b4 = _0x3c7004[_0x4267af(0x6f1)]
                    , _0x4fd1ba = Cesium[_0x4267af(0x85d)][_0x4267af(0xaa5)](_0x3f8a6b['camera']['positionWC'], _0x3b82b4)
                    , _0x171d7e = _0x3f8a6b[_0x4267af(0x56c)][_0x4267af(0x35c)]
                    , _0x17dd95 = 0.5 * _0x3f8a6b['camera'][_0x4267af(0x791)][_0x4267af(0x42c)];
                return 0.5 * _0x171d7e / Math[_0x4267af(0x33a)](_0x17dd95) * _0x1126a6 / _0x4fd1ba;
            }
            ,
            _0x5e463c[_0x324b8e(0x74f)][_0x324b8e(0x41d)] = function (_0x4ca171) {
                const _0x213f59 = _0x324b8e;
                return _0x1ec1cf(this)[_0x213f59(0x6e0)](_0x4ca171);
            }
            ;
        let _0x59af8d = new Cesium[(_0x324b8e(0x85d))]();
        _0x5e463c['prototype'][_0x324b8e(0x983)] = function (_0x1d9858) {
            const _0x5008cb = _0x324b8e
                , _0x5c2576 = _0x1ec1cf(this)
                , _0x1b0591 = Cesium[_0x5008cb(0x85d)][_0x5008cb(0x7bd)](_0x5c2576[_0x5008cb(0x6f1)], _0x1d9858['camera'][_0x5008cb(0x6ee)], _0x59af8d);
            return Cesium[_0x5008cb(0x85d)][_0x5008cb(0x908)](_0x1d9858[_0x5008cb(0xd8)][_0x5008cb(0x47c)], _0x1b0591);
        }
            ,
            _0x5e463c[_0x324b8e(0x74f)][_0x324b8e(0x644)] = function (_0x13f064, _0x3aa91c) {
                const _0x1641be = _0x324b8e;
                let _0x5bb692 = _0x1ec1cf(this);
                return _0x13f064[_0x1641be(0x848)][_0x1641be(0x5b3)](_0x5bb692, _0x3aa91c);
            }
            ;
        let _0x36e08e = new Cesium['Cartesian3']();
        function _0x36c0a3(_0x36ac9a, _0x543b14) {
            const _0x431af1 = _0x324b8e;
            let _0x2ccec9 = _0x36ac9a[_0x431af1(0xa41)]
                , _0x11d41e = _0x543b14[_0x431af1(0x376)]
                , _0x3237ae = Number['MAX_VALUE']
                , _0x5c871c = 0x0
                , _0x3d2f61 = _0x12f753[_0x431af1(0x2af)];
            for (let _0x49f1c3 = 0x0; _0x49f1c3 < _0x11d41e; _0x49f1c3++) {
                let _0x3ddd91 = _0x543b14[_0x49f1c3]
                    , _0x31a163 = _0x3ddd91[_0x431af1(0x399)]
                    , _0x154901 = _0x3ddd91[_0x431af1(0x247)];
                _0x154901 = _0x36ac9a[_0x431af1(0x3aa)] + _0x154901;
                let _0x26b2d2 = _0x3ddd91[_0x431af1(0x69a)]
                    , _0x471749 = _0x3ddd91[_0x431af1(0xaae)]
                    , _0xb0579 = _0x3ddd91[_0x431af1(0x917)];
                if (0x0 !== _0x26b2d2) {
                    let _0x433a45 = new _0x5e463c(_0x2ccec9, _0x36ac9a, _0x31a163, _0x154901, _0x26b2d2, _0x471749);
                    _0x433a45[_0x431af1(0x676)] = _0x49f1c3,
                        _0x36ac9a[_0x431af1(0xabe)][_0x431af1(0x745)](_0x433a45),
                        _0x2ccec9['_cache'][_0x431af1(0x9cb)](_0x433a45);
                }
                _0x36ac9a[_0x431af1(0x6a2)][_0x49f1c3] = [],
                    _0x36ac9a['rosRenderFlag'][_0x49f1c3] = !0x0;
                for (let _0x1e484c in _0xb0579)
                    _0xb0579[_0x431af1(0x704)](_0x1e484c) && _0x36ac9a[_0x431af1(0x6a2)][_0x49f1c3]['push'](_0xb0579[_0x1e484c]);
                _0x3237ae = Math[_0x431af1(0x412)](_0x3237ae, _0x26b2d2),
                    _0x5c871c = Math['max'](_0x5c871c, _0x26b2d2),
                    _0x3d2f61 = _0x471749;
            }
            _0x36ac9a[_0x431af1(0x9b9)] && (_0x36ac9a['lodRangeData'] = _0x3d2f61 === _0x12f753[_0x431af1(0x2af)] ? _0x3237ae / 0x2 : 0x2 * _0x5c871c,
                _0x36ac9a['lodRangeMode'] = _0x3d2f61);
        }
        function _0x13430e(_0x4cabbf, _0xb3a3b1, _0x470c4c) {
            const _0x2831dc = _0x324b8e;
            if (_0x4cabbf[_0x2831dc(0x25d)][_0x2831dc(0x9cb)](_0xb3a3b1),
                _0x4cabbf[_0x2831dc(0xac2)])
                return function (_0x4b84fd, _0x3aaa98, _0x455c9d) {
                    const _0x1bb1c4 = _0x2831dc;
                    let _0x37ae0a = _0x3aaa98[_0x455c9d[_0x1bb1c4(0xa6d)]];
                    if (!_0x37ae0a)
                        return;
                    _0x455c9d[_0x1bb1c4(0x3a0)] = _0x455c9d[_0x1bb1c4(0xa6d)],
                        _0x455c9d[_0x1bb1c4(0x204)] = !0x0,
                        _0x36c0a3(_0x455c9d, _0x2e034a['parse'](_0x4b84fd, _0x455c9d, _0x37ae0a));
                    let _0x1e1f5a = [_0x455c9d];
                    for (; _0x1e1f5a[_0x1bb1c4(0x376)];) {
                        let _0x4dbdc3 = _0x1e1f5a[_0x1bb1c4(0x6c4)]()
                            , _0x274ae6 = _0x4dbdc3['children'];
                        for (let _0x51056b = 0x0, _0xd18d1c = _0x274ae6[_0x1bb1c4(0x376)]; _0x51056b < _0xd18d1c; _0x51056b++) {
                            let _0x3c79c9 = _0x274ae6[_0x51056b];
                            if ('' === _0x3c79c9['fileName'])
                                continue;
                            _0x3c79c9[_0x1bb1c4(0x3c6)] = _0x37ae0a[_0x1bb1c4(0x3c6)],
                                _0x3c79c9[_0x1bb1c4(0x9ec)] = _0x37ae0a[_0x1bb1c4(0x9ec)];
                            let _0x3d2533 = _0x3aaa98[_0x3c79c9[_0x1bb1c4(0xa6d)]];
                            _0x3d2533 ? (_0x3c79c9['contentState'] = _0x343dab[_0x1bb1c4(0x716)],
                                _0x3c79c9[_0x1bb1c4(0x3a0)] = _0x4dbdc3[_0x1bb1c4(0x3a0)],
                                _0x3c79c9[_0x1bb1c4(0xad6)] = !0x0,
                                _0x36c0a3(_0x3c79c9, _0x2e034a['parse'](_0x4b84fd, _0x3c79c9, _0x3d2533)),
                                _0x1e1f5a[_0x1bb1c4(0x745)](_0x3c79c9)) : (_0x3c79c9[_0x1bb1c4(0x204)] = !0x0,
                                    _0x3c79c9[_0x1bb1c4(0x3a0)] = _0x3c79c9[_0x1bb1c4(0xa6d)]);
                        }
                    }
                }(_0x4cabbf, _0x4d28e[_0x2831dc(0x470)](_0x470c4c, _0xb3a3b1), _0xb3a3b1),
                    _0xb3a3b1[_0x2831dc(0x4df)] = 0x0,
                    _0xb3a3b1[_0x2831dc(0x430)] = _0x343dab[_0x2831dc(0x716)],
                    void _0xb3a3b1[_0x2831dc(0x78e)][_0x2831dc(0x1d5)](!0x0);
            let _0x455667;
            if (_0x2831dc(0x341) === _0xb3a3b1['fileExtension'] ? _0x455667 = _0x235026[_0x2831dc(0x470)](_0x470c4c) : _0x2831dc(0x591) === _0xb3a3b1[_0x2831dc(0x248)] && (_0x455667 = _0x2ec6cd[_0x2831dc(0x470)](_0x470c4c)),
                !_0x455667)
                return _0xb3a3b1['contentState'] = _0x343dab[_0x2831dc(0x67d)],
                    void _0xb3a3b1[_0x2831dc(0x78e)]['reject']();
            _0x36c0a3(_0xb3a3b1, _0x5ba24b[_0x2831dc(0x396)](_0x4cabbf, _0x455667, _0xb3a3b1)),
                _0xb3a3b1['selectedFrame'] = 0x0,
                _0xb3a3b1[_0x2831dc(0x430)] = _0x343dab[_0x2831dc(0x716)],
                _0xb3a3b1[_0x2831dc(0x78e)] && _0xb3a3b1[_0x2831dc(0x78e)][_0x2831dc(0x1d5)](_0x455667);
        }
        function _0x3454a7(_0xe95d8e, _0x1654a1, _0x572879) {
            const _0x58995a = _0x324b8e;
            return Math[_0x58995a(0x212)](Cesium[_0x58995a(0x16d)][_0x58995a(0x7bc)](_0xe95d8e, _0x1654a1, _0x572879) - Cesium[_0x58995a(0x16d)][_0x58995a(0x6b6)], 0x0);
        }
        function _0x1c0106(_0x120ca8, _0x42f778, _0xb50413) {
            const _0x5d7154 = _0x324b8e;
            let _0xf19783 = _0x120ca8 * Math[_0x5d7154(0x857)](0xa, _0x42f778);
            return parseInt(_0xf19783) * Math[_0x5d7154(0x857)](0xa, _0xb50413);
        }
        function _0x50c548() {
            this['_stack'] = [];
        }
        function _0x396a11(_0x2b8783, _0xad856f) {
            const _0x31b8df = _0x324b8e;
            return 0x0 === _0xad856f[_0x31b8df(0x6e0)] && 0x0 === _0x2b8783[_0x31b8df(0x6e0)] ? _0xad856f[_0x31b8df(0x8cd)] - _0x2b8783[_0x31b8df(0x8cd)] : _0xad856f[_0x31b8df(0x6e0)] - _0x2b8783[_0x31b8df(0x6e0)];
        }
        function _0x1172ba(_0x246c9d, _0x564b41, _0x3d15a5, _0x59bf68) {
            const _0x472828 = _0x324b8e;
            let _0xdc172d, _0x232a0d = _0x564b41['children'], _0x524560 = _0x232a0d[_0x472828(0x376)];
            for (_0xdc172d = 0x0; _0xdc172d < _0x524560; ++_0xdc172d)
                _0xe30afc(_0x59bf68, _0x246c9d, _0x232a0d[_0xdc172d]);
            _0x232a0d[_0x472828(0x55e)](_0x396a11);
            let _0x3ed197 = !0x0
                , _0x500afd = !0x1
                , _0x124e55 = -0x1
                , _0x323935 = Number[_0x472828(0x19b)];
            for (_0xdc172d = 0x0; _0xdc172d < _0x524560; ++_0xdc172d) {
                let _0x584963 = _0x232a0d[_0xdc172d];
                if (_0x584963[_0x472828(0x82e)] < _0x323935 && (_0x124e55 = _0xdc172d,
                    _0x323935 = _0x584963[_0x472828(0x82e)]),
                    _0x584963[_0x472828(0x64d)]) {
                    _0x3d15a5[_0x472828(0x745)](_0x584963),
                        _0x500afd = !0x0;
                    let _0x240e75 = _0x584963[_0x472828(0x7d4)];
                    _0x564b41[_0x472828(0x88b)](_0x584963[_0x472828(0x676)], !_0x240e75),
                        _0x3ed197 = _0x3ed197 && _0x240e75;
                } else
                    _0x37b67e(_0x246c9d, _0x584963, _0x59bf68);
            }
            if (_0x500afd || (_0x3ed197 = !0x1),
                -0x1 !== _0x124e55) {
                let _0x47deca = _0x232a0d[_0x124e55];
                _0x47deca['wasMinPriorityChild'] = !0x0;
                let _0x31033e = (_0x564b41[_0x472828(0x819)] || _0x564b41[_0x472828(0x9b9)]) && _0x323935 <= _0x564b41[_0x472828(0x93c)][_0x472828(0x82e)] ? _0x564b41[_0x472828(0x93c)] : _0x564b41;
                for (_0x31033e[_0x472828(0x82e)] = Math[_0x472828(0x412)](_0x47deca[_0x472828(0x82e)], _0x31033e[_0x472828(0x82e)]),
                    _0x31033e[_0x472828(0x6e0)] = Math[_0x472828(0x412)](_0x47deca[_0x472828(0x6e0)], _0x31033e[_0x472828(0x6e0)]),
                    _0xdc172d = 0x0; _0xdc172d < _0x524560; ++_0xdc172d) {
                    _0x232a0d[_0xdc172d][_0x472828(0x93c)] = _0x31033e;
                }
            }
            return _0x3ed197;
        }
        function _0x2f5175(_0x1ed405, _0x2c8517, _0x441fa7) {
            const _0x18e12e = _0x324b8e;
            _0x2c8517[_0x18e12e(0x4df)] !== _0x441fa7[_0x18e12e(0x3fe)] && _0x2c8517[_0x18e12e(0x7d4)] && (_0x1ed405[_0x18e12e(0x35b)][_0x18e12e(0x745)](_0x2c8517),
                _0x2c8517['selectedFrame'] = _0x441fa7[_0x18e12e(0x3fe)]);
        }
        function _0x29b282(_0x483ceb, _0x99a9f2, _0x53bd4e) {
            const _0x21f2b1 = _0x324b8e;
            _0x99a9f2[_0x21f2b1(0x5a7)] !== _0x53bd4e[_0x21f2b1(0x3fe)] && _0x99a9f2['contentState'] === _0x343dab[_0x21f2b1(0x293)] && (_0x483ceb[_0x21f2b1(0x270)][_0x21f2b1(0x745)](_0x99a9f2),
                _0x99a9f2[_0x21f2b1(0x5a7)] = _0x53bd4e[_0x21f2b1(0x3fe)]);
        }
        function _0xb986fd(_0x1252c8, _0x3deb0a, _0x1ea6ef) {
            const _0x1475fe = _0x324b8e;
            _0x3deb0a[_0x1475fe(0x32a)] === _0x1ea6ef[_0x1475fe(0x3fe)] || _0x3deb0a[_0x1475fe(0x430)] !== _0x343dab[_0x1475fe(0x716)] || _0x3deb0a[_0x1475fe(0x7d4)] || (_0x3deb0a[_0x1475fe(0x32a)] = _0x1ea6ef[_0x1475fe(0x3fe)],
                _0x1252c8[_0x1475fe(0x6c9)][_0x1475fe(0x745)](_0x3deb0a));
        }
        function _0x37b67e(_0x131f02, _0x36b8f9, _0x6b5877) {
            const _0x3fa1c5 = _0x324b8e;
            _0x36b8f9['touchedFrame'] !== _0x6b5877['frameNumber'] && (_0x131f02[_0x3fa1c5(0x25d)][_0x3fa1c5(0x681)](_0x36b8f9),
                _0x36b8f9[_0x3fa1c5(0x8d6)] = _0x6b5877[_0x3fa1c5(0x3fe)]);
        }
        function _0xe30afc(_0x39baf9, _0x3579ca, _0x143b3b) {
            const _0x2000c1 = _0x324b8e;
            !function (_0x1c4999, _0x2d8e80, _0x3a9a4d) {
                !function (_0x596dcc, _0x2dc2af, _0x5b5c07) {
                    const _0x52944a = _0x557c;
                    _0x2dc2af[_0x52944a(0x605)] !== _0x5b5c07[_0x52944a(0x3fe)] && (_0x2dc2af['updatedVisibilityFrame'] = _0x5b5c07[_0x52944a(0x3fe)],
                        _0x2dc2af[_0x52944a(0x870)](_0x5b5c07, _0x596dcc));
                }(_0x2d8e80, _0x3a9a4d, _0x1c4999);
            }(_0x39baf9, _0x3579ca, _0x143b3b),
                _0x143b3b[_0x2000c1(0x819)] = !0x1,
                _0x143b3b[_0x2000c1(0x93c)] = _0x143b3b,
                function (_0x250bed, _0x4da610) {
                    const _0x2e69b9 = _0x2000c1;
                    _0x250bed[_0x2e69b9(0x76a)]['distance'] = Math['max'](_0x4da610[_0x2e69b9(0x6e0)], _0x250bed[_0x2e69b9(0x76a)][_0x2e69b9(0xaa5)]),
                        _0x250bed['_minimumPriority']['distance'] = Math[_0x2e69b9(0x412)](_0x4da610[_0x2e69b9(0x6e0)], _0x250bed[_0x2e69b9(0x991)][_0x2e69b9(0xaa5)]),
                        _0x250bed[_0x2e69b9(0x76a)]['depth'] = Math['max'](_0x4da610['depth'], _0x250bed[_0x2e69b9(0x76a)][_0x2e69b9(0xa0b)]),
                        _0x250bed['_minimumPriority'][_0x2e69b9(0xa0b)] = Math['min'](_0x4da610[_0x2e69b9(0xa0b)], _0x250bed[_0x2e69b9(0x991)][_0x2e69b9(0xa0b)]),
                        _0x250bed['_maximumPriority'][_0x2e69b9(0x82e)] = Math[_0x2e69b9(0x212)](_0x4da610[_0x2e69b9(0x82e)], _0x250bed['_maximumPriority']['foveatedFactor']),
                        _0x250bed[_0x2e69b9(0x991)][_0x2e69b9(0x82e)] = Math['min'](_0x4da610[_0x2e69b9(0x82e)], _0x250bed[_0x2e69b9(0x991)][_0x2e69b9(0x82e)]),
                        _0x250bed[_0x2e69b9(0x76a)][_0x2e69b9(0x574)] = Math[_0x2e69b9(0x212)](_0x4da610['pixel'], _0x250bed[_0x2e69b9(0x76a)]['pixel']),
                        _0x250bed[_0x2e69b9(0x991)][_0x2e69b9(0x574)] = Math['min'](_0x4da610[_0x2e69b9(0x574)], _0x250bed[_0x2e69b9(0x991)][_0x2e69b9(0x574)]);
                }(_0x3579ca, _0x143b3b),
                _0x143b3b['shouldSelect'] = !0x1,
                _0x143b3b[_0x2000c1(0x790)] = !0x1,
                _0x143b3b['resetRosRenderFlag']();
        }
        function _0x4f3ea8(_0x51e30c, _0x4d271e) {
            const _0x564d44 = _0x324b8e;
            return 0x0 !== _0x4d271e['children'][_0x564d44(0x376)] && (_0x4d271e[_0x564d44(0x1a7)] === _0x12f753['Pixel'] ? _0x4d271e['pixel'] / _0x51e30c[_0x564d44(0x9cf)] > _0x4d271e[_0x564d44(0x823)] : _0x4d271e['distanceToCamera'] * _0x51e30c[_0x564d44(0x9cf)] < _0x4d271e[_0x564d44(0x823)]);
        }
        function _0x484875() {
            const _0x40d7ec = _0x324b8e;
            this['_list'] = new Cesium[(_0x40d7ec(0x194))](),
                this[_0x40d7ec(0x7ee)] = this[_0x40d7ec(0x60f)]['add'](),
                this[_0x40d7ec(0x55f)] = !0x1;
        }
        _0x5e463c[_0x324b8e(0x74f)]['updateVisibility'] = function (_0x5c1ffa, _0x200421) {
            const _0x5ef013 = _0x324b8e;
            let _0x4c2b6f = this[_0x5ef013(0x5b0)]
                , _0x49428e = Cesium[_0x5ef013(0x14b)](_0x4c2b6f) ? _0x4c2b6f[_0x5ef013(0x9c4)] : Cesium[_0x5ef013(0x3a8)][_0x5ef013(0x200)];
            this[_0x5ef013(0x6e0)] = this[_0x5ef013(0x41d)](_0x5c1ffa),
                this[_0x5ef013(0x8cd)] = this['distanceToTileCenter'](_0x5c1ffa),
                this[_0x5ef013(0x574)] = this[_0x5ef013(0x355)](_0x5c1ffa),
                this['visibilityPlaneMask'] = this[_0x5ef013(0x644)](_0x5c1ffa, _0x49428e),
                this['visible'] = this['visibilityPlaneMask'] !== Cesium['CullingVolume']['MASK_OUTSIDE'] && this[_0x5ef013(0x6e0)] >= _0x200421[_0x5ef013(0x934)] && this[_0x5ef013(0x6e0)] <= _0x200421[_0x5ef013(0xa40)],
                this['priorityDeferred'] = function (_0x441e69, _0x5a0b6c) {
                    const _0x5b4d2c = _0x5ef013;
                    let _0x4728e5 = _0x5a0b6c[_0x5b4d2c(0xd8)]
                        , _0x23e414 = _0x441e69[_0x5b4d2c(0x399)]
                        , _0x21a516 = _0x23e414[_0x5b4d2c(0x1cc)]
                        , _0x3f38ca = Cesium[_0x5b4d2c(0x85d)][_0x5b4d2c(0x7d7)](_0x4728e5[_0x5b4d2c(0x47c)], _0x441e69[_0x5b4d2c(0x8cd)], _0x36e08e)
                        , _0x209289 = Cesium[_0x5b4d2c(0x85d)][_0x5b4d2c(0x9cb)](_0x4728e5[_0x5b4d2c(0x6ee)], _0x3f38ca, _0x36e08e)
                        , _0x516167 = Cesium[_0x5b4d2c(0x85d)][_0x5b4d2c(0x7bd)](_0x209289, _0x23e414[_0x5b4d2c(0x6f1)], _0x36e08e);
                    if (Cesium[_0x5b4d2c(0x85d)][_0x5b4d2c(0x451)](_0x516167) > _0x21a516) {
                        let _0x1618ce = Cesium[_0x5b4d2c(0x85d)][_0x5b4d2c(0x7bc)](_0x516167, _0x36e08e)
                            , _0x21571b = Cesium[_0x5b4d2c(0x85d)][_0x5b4d2c(0x7d7)](_0x1618ce, _0x21a516, _0x36e08e)
                            , _0x5c038b = Cesium[_0x5b4d2c(0x85d)]['add'](_0x23e414[_0x5b4d2c(0x6f1)], _0x21571b, _0x36e08e)
                            , _0x38d369 = Cesium[_0x5b4d2c(0x85d)]['subtract'](_0x5c038b, _0x4728e5['positionWC'], _0x36e08e)
                            , _0x2610c2 = Cesium[_0x5b4d2c(0x85d)]['normalize'](_0x38d369, _0x36e08e);
                        _0x441e69['foveatedFactor'] = 0x1 - Math[_0x5b4d2c(0xa8b)](Cesium['Cartesian3'][_0x5b4d2c(0x908)](_0x4728e5[_0x5b4d2c(0x47c)], _0x2610c2));
                    } else
                        _0x441e69['foveatedFactor'] = 0x0;
                }(this, _0x5c1ffa);
        }
            ,
            _0x5e463c['prototype']['requestContent'] = function (_0x374aa5) {
                const _0x33acbd = _0x324b8e;
                let _0x416a4c = this
                    , _0x1d3282 = this[_0x33acbd(0xa41)];
                if (_0x1d3282[_0x33acbd(0xac2)] && _0x1d3282['_blockCache'][_0x33acbd(0x924)](_0x1d3282['id'], this[_0x33acbd(0x3a0)])) {
                    let _0x428534 = _0x1d3282[_0x33acbd(0x709)][_0x33acbd(0xa61)](_0x1d3282['id'], this[_0x33acbd(0x3a0)]);
                    return this[_0x33acbd(0x78e)] = _0x438ab0(),
                        _0x13430e(_0x1d3282, this, _0x428534),
                        !0x0;
                }
                let _0x32a81a = this['contentResource']['clone']()
                    , _0x5018ba = /({.*?})/g;
                if (Cesium[_0x33acbd(0x14b)](_0x374aa5[_0x33acbd(0x7c8)])) {
                    let _0x4fe3dc = _0x374aa5[_0x33acbd(0x7c8)]
                        , _0xaab8d5 = _0x4fe3dc['length']
                        , _0x230b51 = _0x4fe3dc[parseInt(Math[_0x33acbd(0x117)]() * _0xaab8d5)];
                    _0x32a81a[_0x33acbd(0xa62)] = _0x32a81a[_0x33acbd(0xa62)][_0x33acbd(0x3ed)](_0x5018ba, function (_0x27fd14, _0x1b2f32) {
                        const _0x44a2e3 = _0x33acbd;
                        return _0x44a2e3(0x55c) === _0x1b2f32 ? _0x230b51 : _0x27fd14;
                    });
                }
                let _0x2de507 = new Cesium[(_0x33acbd(0x660))]({
                    'throttle': !0x0,
                    'throttleByServer': !0x0,
                    'type': Cesium['RequestType'][_0x33acbd(0x9b3)],
                    'priorityFunction': (_0x2fc2bd = this,
                        function () {
                            const _0x4a8a54 = _0x33acbd;
                            return _0x2fc2bd[_0x4a8a54(0x578)];
                        }
                    ),
                    'serverKey': this[_0x33acbd(0x863)]
                });
                var _0x2fc2bd;
                this[_0x33acbd(0x993)] = _0x2de507,
                    _0x32a81a['request'] = _0x2de507;
                let _0x29e81b = _0x32a81a['fetchArrayBuffer']();
                if (!Cesium[_0x33acbd(0x14b)](_0x29e81b))
                    return !0x1;
                this[_0x33acbd(0x430)] = _0x343dab['LOADING'],
                    this['contentReadyPromise'] = _0x438ab0();
                let _0x1a41ea = function (_0x3de698) {
                    return function (_0x219338) {
                        const _0xe48a34 = _0x557c;
                        _0x3de698['contentState'] = _0x343dab[_0xe48a34(0x67d)],
                            _0x3de698[_0xe48a34(0x78e)][_0xe48a34(0x7aa)](_0x219338);
                    }
                        ;
                }(this);
                return _0x29e81b['then'](function (_0x156d12) {
                    _0x416a4c['isDestroyed']() ? _0x1a41ea() : _0x13430e(_0x1d3282, _0x416a4c, _0x156d12);
                }, _0x4d8bd2 => {
                    const _0x2be379 = _0x33acbd;
                    _0x2de507['state'] !== Cesium['RequestState']['CANCELLED'] ? _0x1a41ea(_0x4d8bd2) : _0x416a4c['contentState'] = _0x343dab[_0x2be379(0x293)];
                }
                ),
                    !0x0;
            }
            ,
            _0x5e463c[_0x324b8e(0x74f)]['updatePriority'] = function (_0x44ff56, _0x4911b5) {
                const _0xf52107 = _0x324b8e;
                let _0x5f0c73 = _0x44ff56[_0xf52107(0x991)]
                    , _0x3ae79f = _0x44ff56['_maximumPriority']
                    , _0x5f0af8 = 0x4
                    , _0x391b14 = _0x1c0106(_0x3454a7(this[_0xf52107(0x82e)], _0x5f0c73[_0xf52107(0x82e)], _0x3ae79f[_0xf52107(0x82e)]), 0x4, _0x5f0af8);
                _0x5f0af8 = 0x8;
                let _0x344a35 = _0x1c0106(0x1 - _0x3454a7(this[_0xf52107(0x574)], _0x5f0c73[_0xf52107(0x574)], _0x3ae79f[_0xf52107(0x574)]), 0x4, _0x5f0af8);
                _0x5f0af8 = 0x0;
                let _0x291dd6 = _0x1c0106(_0x3454a7(this[_0xf52107(0x6e0)], _0x5f0c73[_0xf52107(0xaa5)], _0x3ae79f[_0xf52107(0xaa5)]), 0x4, _0x5f0af8);
                this[_0xf52107(0x578)] = _0x391b14 + _0x344a35 + _0x291dd6;
            }
            ,
            _0x5e463c[_0x324b8e(0x74f)]['setRosRenderFlag'] = function (_0x12753a, _0x4870f3) {
                const _0x1515d7 = _0x324b8e;
                this[_0x1515d7(0x85a)][_0x12753a] = _0x4870f3;
            }
            ,
            _0x5e463c[_0x324b8e(0x74f)][_0x324b8e(0x1fb)] = function () {
                const _0x513add = _0x324b8e;
                for (let _0xf9e38f = 0x0, _0x26b893 = this['rosRenderFlag'][_0x513add(0x376)]; _0xf9e38f < _0x26b893; _0xf9e38f++)
                    this[_0x513add(0x85a)][_0xf9e38f] = !0x0;
            }
            ,
            _0x5e463c['prototype'][_0x324b8e(0x4bc)] = function (_0x38eec1, _0x21be17) {
                const _0x316198 = _0x324b8e;
                for (let _0x3e762a = 0x0, _0x33317c = this['renderEntities'][_0x316198(0x376)]; _0x3e762a < _0x33317c; _0x3e762a++)
                    if (this[_0x316198(0x85a)][_0x3e762a]) {
                        let _0x1c3f3b = this[_0x316198(0x6a2)][_0x3e762a];
                        for (let _0x3b0967 = 0x0, _0x15ce2b = _0x1c3f3b[_0x316198(0x376)]; _0x3b0967 < _0x15ce2b; _0x3b0967++)
                            _0x1c3f3b[_0x3b0967][_0x316198(0x4bc)](_0x38eec1, _0x21be17);
                    }
            }
            ,
            _0x5e463c[_0x324b8e(0x74f)][_0x324b8e(0x4c2)] = function () {
                const _0x5c07ce = _0x324b8e;
                this[_0x5c07ce(0x430)] = _0x343dab['UNLOADED'],
                    this[_0x5c07ce(0x993)] = void 0x0,
                    this['cacheNode'] = void 0x0,
                    this['priorityHolder'] = void 0x0,
                    this[_0x5c07ce(0x78e)] = void 0x0,
                    this['priorityHolder'] = void 0x0;
                for (let _0x25183f = 0x0, _0xde77ca = this[_0x5c07ce(0x6a2)][_0x5c07ce(0x376)]; _0x25183f < _0xde77ca; _0x25183f++) {
                    let _0x2e05cc = this[_0x5c07ce(0x6a2)][_0x25183f];
                    for (let _0x25e831 = 0x0, _0x27343d = _0x2e05cc[_0x5c07ce(0x376)]; _0x25e831 < _0x27343d; _0x25e831++)
                        _0x2e05cc[_0x25e831][_0x5c07ce(0x4dd)]();
                }
                this[_0x5c07ce(0x6a2)][_0x5c07ce(0x376)] = 0x0,
                    this[_0x5c07ce(0x85a)]['length'] = 0x0,
                    this[_0x5c07ce(0xabe)]['length'] = 0x0,
                    this[_0x5c07ce(0x549)] = !0x1;
            }
            ,
            _0x5e463c['prototype'][_0x324b8e(0x575)] = function () {
                return !0x1;
            }
            ,
            _0x5e463c[_0x324b8e(0x74f)][_0x324b8e(0x4dd)] = function () {
                const _0x105426 = _0x324b8e;
                return this[_0x105426(0x4c2)](),
                    Cesium['destroyObject'](this);
            }
            ,
            _0x50c548[_0x324b8e(0x74f)][_0x324b8e(0x22a)] = function (_0x4e5c1e, _0x26703a) {
                let _0x5161c2 = this['_stack'];
                !function (_0x287cb3, _0x250166, _0x4fb7a9) {
                    const _0x1f6be9 = _0x557c;
                    _0x250166['length'] = 0x0;
                    for (let _0xd3d3ac = 0x0, _0x4d7331 = _0x287cb3[_0x1f6be9(0x5f3)][_0x1f6be9(0x376)]; _0xd3d3ac < _0x4d7331; _0xd3d3ac++) {
                        let _0x4cfed0 = _0x287cb3['_rootTiles'][_0xd3d3ac];
                        _0xe30afc(_0x4fb7a9, _0x287cb3, _0x4cfed0),
                            _0x4cfed0[_0x1f6be9(0x64d)] && _0x250166[_0x1f6be9(0x745)](_0x4cfed0);
                    }
                }(_0x4e5c1e, _0x5161c2, _0x26703a),
                    function (_0x4fed2d, _0x5b21a2, _0x3cd8ad) {
                        const _0x3213d8 = _0x557c;
                        for (; _0x5b21a2[_0x3213d8(0x376)];) {
                            let _0x45ad97 = _0x5b21a2[_0x3213d8(0x6c4)]();
                            _0x45ad97[_0x3213d8(0x5b0)];
                            let _0x596644 = !0x1;
                            _0x4f3ea8(_0x4fed2d, _0x45ad97) && (_0x596644 = _0x1172ba(_0x4fed2d, _0x45ad97, _0x5b21a2, _0x3cd8ad));
                            let _0x43c9d4 = !_0x596644;
                            _0x29b282(_0x4fed2d, _0x45ad97, _0x3cd8ad),
                                _0xb986fd(_0x4fed2d, _0x45ad97, _0x3cd8ad),
                                _0x43c9d4 && _0x2f5175(_0x4fed2d, _0x45ad97, _0x3cd8ad),
                                _0x37b67e(_0x4fed2d, _0x45ad97, _0x3cd8ad);
                        }
                    }(_0x4e5c1e, _0x5161c2, _0x26703a),
                    function (_0x495f54, _0x279878) {
                        const _0x510297 = _0x557c;
                        let _0x36f63d = _0x495f54[_0x510297(0x270)]
                            , _0x59ec62 = _0x36f63d[_0x510297(0x376)];
                        for (let _0x11591d = 0x0; _0x11591d < _0x59ec62; ++_0x11591d)
                            _0x36f63d[_0x11591d][_0x510297(0x249)](_0x495f54, _0x279878);
                    }(_0x4e5c1e, _0x26703a);
            }
            ,
            _0x484875[_0x324b8e(0x74f)][_0x324b8e(0x161)] = function () {
                const _0x58d66b = _0x324b8e;
                this[_0x58d66b(0x60f)]['splice'](this['_list'][_0x58d66b(0x8a4)], this[_0x58d66b(0x7ee)]);
            }
            ,
            _0x484875['prototype'][_0x324b8e(0x681)] = function (_0x3ec95d) {
                const _0x56a180 = _0x324b8e;
                let _0x1c5a18 = _0x3ec95d[_0x56a180(0x4a1)];
                Cesium[_0x56a180(0x14b)](_0x1c5a18) && this['_list'][_0x56a180(0x646)](this['_sentinel'], _0x1c5a18);
            }
            ,
            _0x484875[_0x324b8e(0x74f)][_0x324b8e(0x9cb)] = function (_0x27807b) {
                const _0x166dd0 = _0x324b8e;
                Cesium['defined'](_0x27807b[_0x166dd0(0x4a1)]) || (_0x27807b[_0x166dd0(0x4a1)] = this[_0x166dd0(0x60f)]['add'](_0x27807b));
            }
            ,
            _0x484875['prototype']['unloadTile'] = function (_0x3347f1, _0x418c30, _0x6ddc15) {
                const _0x4ca7d2 = _0x324b8e;
                let _0x9dc9d8 = _0x418c30[_0x4ca7d2(0x4a1)];
                Cesium[_0x4ca7d2(0x14b)](_0x9dc9d8) && (this[_0x4ca7d2(0x60f)][_0x4ca7d2(0x77c)](_0x9dc9d8),
                    _0x418c30[_0x4ca7d2(0x4a1)] = void 0x0,
                    _0x6ddc15(_0x3347f1, _0x418c30));
            }
            ,
            _0x484875['prototype']['unloadBlockTile'] = function (_0x58740e, _0x3965ff, _0x3f522b) {
                const _0x5ef9cd = _0x324b8e;
                let _0x186a69 = [_0x3965ff]
                    , _0x20b327 = [_0x3965ff];
                for (; _0x186a69[_0x5ef9cd(0x376)];) {
                    let _0x2d84b7 = _0x186a69[_0x5ef9cd(0x6c4)]();
                    for (let _0x40313e = 0x0, _0x2d48ff = _0x2d84b7[_0x5ef9cd(0xabe)][_0x5ef9cd(0x376)]; _0x40313e < _0x2d48ff; _0x40313e++) {
                        let _0x5521e5 = _0x2d84b7[_0x5ef9cd(0xabe)][_0x40313e];
                        _0x5521e5[_0x5ef9cd(0x204)] || (_0x186a69[_0x5ef9cd(0x745)](_0x5521e5),
                            _0x20b327[_0x5ef9cd(0x745)](_0x5521e5));
                    }
                }
                for (let _0x3fb332 = 0x0, _0x4a4814 = _0x20b327[_0x5ef9cd(0x376)]; _0x3fb332 < _0x4a4814; _0x3fb332++) {
                    let _0x496ccc = _0x20b327[_0x3fb332];
                    this[_0x5ef9cd(0xef)](_0x58740e, _0x496ccc, _0x3f522b);
                }
            }
            ,
            _0x484875[_0x324b8e(0x74f)][_0x324b8e(0x292)] = function (_0x306a35, _0x7a7935) {
                const _0x3a6d6b = _0x324b8e;
                let _0x3a915d = this['_trimTiles'];
                this[_0x3a6d6b(0x55f)] = !0x1;
                let _0xeb89f7 = this[_0x3a6d6b(0x60f)]
                    , _0x5c7f44 = 0x400 * _0x306a35[_0x3a6d6b(0x9fb)] * 0x400
                    , _0x33f6ec = this['_sentinel']
                    , _0x53e636 = _0xeb89f7[_0x3a6d6b(0x508)];
                for (; _0x53e636 && _0x53e636 !== _0x33f6ec && (_0x306a35[_0x3a6d6b(0x1fc)] > _0x5c7f44 || _0x3a915d);) {
                    let _0x54afc6 = _0x53e636[_0x3a6d6b(0x202)];
                    _0x53e636 = _0x53e636[_0x3a6d6b(0x96c)],
                        this['unloadTile'](_0x306a35, _0x54afc6, _0x7a7935);
                }
            }
            ,
            _0x484875[_0x324b8e(0x74f)][_0x324b8e(0x40b)] = function (_0xe42e3d, _0x413c7f) {
                const _0x4a8e23 = _0x324b8e;
                let _0x2756f6 = this[_0x4a8e23(0x55f)];
                this[_0x4a8e23(0x55f)] = !0x1;
                let _0x2ca4fd = this[_0x4a8e23(0x60f)]
                    , _0x3501a6 = 0x400 * _0xe42e3d[_0x4a8e23(0x9fb)] * 0x400
                    , _0x4f03fa = this[_0x4a8e23(0x7ee)]
                    , _0x33c3f8 = _0x2ca4fd['head'];
                for (; _0x33c3f8 && _0x33c3f8 !== _0x4f03fa && (_0xe42e3d['totalMemoryUsageInBytes'] > _0x3501a6 || _0x2756f6);) {
                    let _0x5dac17 = _0x33c3f8[_0x4a8e23(0x202)];
                    _0x33c3f8 = _0x33c3f8['next'],
                        _0x5dac17[_0x4a8e23(0x204)] && this[_0x4a8e23(0x861)](_0xe42e3d, _0x5dac17, _0x413c7f);
                }
            }
            ,
            _0x484875[_0x324b8e(0x74f)][_0x324b8e(0xac7)] = function () {
                const _0x12cedc = _0x324b8e;
                this[_0x12cedc(0x55f)] = !0x0;
            }
            ;
        var _0x522d4d = Object[_0x324b8e(0x3e6)]({
            'CLIP_NOTHING': 0x0,
            'CLIP_BEHIND_ANY_PLANE': 0x1,
            'CLIP_BEHIND_ALL_PLANE': 0x2,
            'ONLY_KEEP_LINE': 0x3
        })
            , _0x353b85 = Object[_0x324b8e(0x3e6)]({
                'DisplayMode': {
                    'NONE': 0x0,
                    'FACE': 0x1,
                    'LINE': 0x2,
                    'FACE_AND_LINE': 0x3
                },
                'AnalysisRegionMode': {
                    'ARM_NONE': 0x0,
                    'ARM_ALL': 0x1,
                    'ARM_REGION': 0x2
                },
                'FilterMode': {
                    'LINEAR': 0x0,
                    'NEAREST': 0x1
                }
            });
        function _0x380337(_0xdccece) {
            const _0x50c35d = _0x324b8e;
            this['setting'] = void 0x0,
                this['texture'] = void 0x0,
                this[_0x50c35d(0x318)] = void 0x0,
                this[_0x50c35d(0xa6e)] = void 0x0,
                this[_0x50c35d(0x39d)] = new Cesium[(_0x50c35d(0x747))](),
                this['isUseHypColorTable'] = !0x1,
                this[_0x50c35d(0xa69)] = !0x1,
                this['regionUpdate'] = !0x1,
                this[_0x50c35d(0x8c5)] = _0x353b85[_0x50c35d(0x3ea)][_0x50c35d(0x528)],
                this[_0x50c35d(0x65b)] = _0xdccece[_0x50c35d(0x65b)],
                this['minInstensity'] = _0xdccece[_0x50c35d(0x1db)],
                this[_0x50c35d(0x4d2)] = _0xdccece[_0x50c35d(0x4d2)],
                this[_0x50c35d(0x54d)] = _0xdccece[_0x50c35d(0x54d)],
                this[_0x50c35d(0x2a9)] = _0xdccece[_0x50c35d(0x2a9)],
                this['minCategory'] = _0xdccece[_0x50c35d(0x67c)],
                this[_0x50c35d(0x4e6)] = !0x0;
        }
        function _0x38371e() {
            const _0x2ef78b = _0x324b8e;
            this[_0x2ef78b(0x140)] = 0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
                this[_0x2ef78b(0x231)] = -0xfffffffffffff800000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000,
                this[_0x2ef78b(0x642)] = 0x0,
                this[_0x2ef78b(0x693)] = 0x0,
                this[_0x2ef78b(0x4d6)] = 0x1,
                this[_0x2ef78b(0x4f9)] = !0x1,
                this[_0x2ef78b(0x49e)] = [],
                this[_0x2ef78b(0x434)] = 0x64,
                this['_updatePolygon'] = !0x0,
                this[_0x2ef78b(0x2f9)] = new Cesium[(_0x2ef78b(0x75c))](0x0, 0x1, 0x1, 0x1),
                this[_0x2ef78b(0x804)] = _0x353b85[_0x2ef78b(0x36a)][_0x2ef78b(0x6ff)],
                this[_0x2ef78b(0x672)] = void 0x0,
                this[_0x2ef78b(0x296)] = '',
                this[_0x2ef78b(0x7c4)] = !0x1,
                this['_emissionTexCoordSpeed'] = new Cesium[(_0x2ef78b(0xab7))](0x0, 0x0),
                this[_0x2ef78b(0x494)] = new Cesium['Cartesian2'](0x32, 0x32),
                this[_0x2ef78b(0x999)] = [],
                this[_0x2ef78b(0x2bc)] = 0x0,
                this[_0x2ef78b(0x4a4)] = new Cesium[(_0x2ef78b(0x75c))](0x1, 0x1, 0x1, 0x1),
                this[_0x2ef78b(0x159)] = _0x353b85[_0x2ef78b(0x2e5)][_0x2ef78b(0x58a)],
                this[_0x2ef78b(0x28f)] = Number['MAX_VALUE'],
                this[_0x2ef78b(0x9ae)] = 0x0,
                this[_0x2ef78b(0x597)] = 0x0,
                this[_0x2ef78b(0x331)] = Number[_0x2ef78b(0x19b)];
        }
        _0x380337[_0x324b8e(0x74f)][_0x324b8e(0x575)] = function () {
            return !0x1;
        }
            ,
            _0x380337[_0x324b8e(0x74f)]['destroy'] = function () {
                const _0x586488 = _0x324b8e;
                this[_0x586488(0x27b)] = void 0x0,
                    this[_0x586488(0x6ba)] = this[_0x586488(0x6ba)] && !this[_0x586488(0x6ba)][_0x586488(0x575)]() && this[_0x586488(0x6ba)]['destroy'](),
                    this[_0x586488(0x318)] = this[_0x586488(0x318)] && !this[_0x586488(0x318)][_0x586488(0x575)]() && this['renderTexture'][_0x586488(0x4dd)]();
            }
            ,
            Object[_0x324b8e(0xa38)](_0x38371e[_0x324b8e(0x74f)], {
                'MinVisibleValue': {
                    'get': function () {
                        const _0x3ea2cd = _0x324b8e;
                        return this[_0x3ea2cd(0x231)];
                    },
                    'set': function (_0x268583) {
                        const _0x221fe0 = _0x324b8e;
                        this[_0x221fe0(0x231)] = _0x268583;
                    }
                },
                'MaxVisibleValue': {
                    'get': function () {
                        const _0xeef932 = _0x324b8e;
                        return this[_0xeef932(0x140)];
                    },
                    'set': function (_0x15edf1) {
                        const _0x20045a = _0x324b8e;
                        this[_0x20045a(0x140)] = _0x15edf1;
                    }
                },
                'ColorTableMaxKey': {
                    'get': function () {
                        const _0x48fbce = _0x324b8e;
                        return this[_0x48fbce(0x693)];
                    },
                    'set': function (_0x40fd96) {
                        const _0x3d40f2 = _0x324b8e;
                        this[_0x3d40f2(0x693)] = _0x40fd96;
                    }
                },
                'ColorTableMinKey': {
                    'get': function () {
                        const _0x249d6b = _0x324b8e;
                        return this[_0x249d6b(0x642)];
                    },
                    'set': function (_0x5cff18) {
                        const _0x20cfc8 = _0x324b8e;
                        this[_0x20cfc8(0x642)] = _0x5cff18;
                    }
                },
                'ColorTable': {
                    'get': function () {
                        return this['_dictColorTable'];
                    },
                    'set': function (_0x1a65a4) {
                        const _0x7de897 = _0x324b8e;
                        if (!Cesium['defined'](_0x1a65a4))
                            return void (Cesium['defined'](this[_0x7de897(0x672)]) && (this[_0x7de897(0x672)][_0x7de897(0x4dd)](),
                                this[_0x7de897(0x672)] = null));
                        this[_0x7de897(0x672)] = _0x1a65a4,
                            this[_0x7de897(0x4f9)] = !0x0;
                        let _0x252a1f = this[_0x7de897(0x672)][_0x7de897(0xaa6)]();
                        if (_0x252a1f < 0x1)
                            return;
                        let _0x285948 = 0x0
                            , _0x5ac84f = 0x0
                            , _0x2ebe49 = this[_0x7de897(0x672)][_0x7de897(0x7f5)](0x0);
                        Cesium[_0x7de897(0x14b)](_0x2ebe49) && Cesium['defined'](_0x2ebe49[_0x7de897(0x9a0)]) && (_0x285948 = parseFloat(_0x2ebe49['altitude'])),
                            _0x2ebe49 = this['_dictColorTable'][_0x7de897(0x7f5)](_0x252a1f - 0x1),
                            Cesium['defined'](_0x2ebe49) && Cesium[_0x7de897(0x14b)](_0x2ebe49[_0x7de897(0x9a0)]) && (_0x5ac84f = parseFloat(_0x2ebe49[_0x7de897(0x9a0)])),
                            this[_0x7de897(0x693)] = Math[_0x7de897(0x212)](_0x285948, _0x5ac84f),
                            this['_floor'] = Math[_0x7de897(0x412)](_0x285948, _0x5ac84f);
                    }
                },
                'Opacity': {
                    'get': function () {
                        const _0x2c30a2 = _0x324b8e;
                        return this[_0x2c30a2(0x4d6)];
                    },
                    'set': function (_0x18c478) {
                        const _0x2316f3 = _0x324b8e;
                        this[_0x2316f3(0x4d6)] = _0x18c478;
                    }
                },
                'CoverageArea': {
                    'get': function () {
                        return this['_coverageArea'];
                    },
                    'set': function (_0xf5de43) {
                        const _0x296df8 = _0x324b8e;
                        if (this[_0x296df8(0x7ea)] = !0x0,
                            this[_0x296df8(0x49e)]['length'] = 0x0,
                            Cesium[_0x296df8(0x14b)](_0xf5de43)) {
                            for (let _0xc4e21f = 0x0; _0xc4e21f < _0xf5de43['length']; _0xc4e21f++)
                                this[_0x296df8(0x49e)][_0xc4e21f] = _0xf5de43[_0xc4e21f];
                        }
                    }
                },
                'DisplayMode': {
                    'get': function () {
                        return this['_displayMode'];
                    },
                    'set': function (_0x10eca2) {
                        const _0x3e6ffb = _0x324b8e;
                        this[_0x3e6ffb(0x804)] = _0x10eca2;
                    }
                },
                'LineColor': {
                    'get': function () {
                        return this['_lineColor'];
                    },
                    'set': function (_0x470655) {
                        const _0x51b723 = _0x324b8e;
                        Cesium[_0x51b723(0x75c)][_0x51b723(0x157)](_0x470655, this['_lineColor']);
                    }
                },
                'LineInterval': {
                    'get': function () {
                        const _0x276960 = _0x324b8e;
                        return this[_0x276960(0x434)];
                    },
                    'set': function (_0xb3dab) {
                        const _0x2b836e = _0x324b8e;
                        this[_0x2b836e(0x434)] = _0xb3dab;
                    }
                },
                'UpdateColorDictTable': {
                    'get': function () {
                        return this['_updateColorDictTable'];
                    },
                    'set': function (_0x4aa192) {
                        this['_updateColorDictTable'] = _0x4aa192;
                    }
                },
                'UpdatePolygonRegion': {
                    'get': function () {
                        return this['_updatePolygon'];
                    },
                    'set': function (_0x3e3db4) {
                        const _0x104a61 = _0x324b8e;
                        this[_0x104a61(0x7ea)] = _0x3e3db4;
                    }
                },
                'emissionTextureUrl': {
                    'get': function () {
                        const _0x1cadf6 = _0x324b8e;
                        return this[_0x1cadf6(0x296)];
                    },
                    'set': function (_0x1947fb) {
                        const _0x408be7 = _0x324b8e;
                        this[_0x408be7(0x296)] = _0x1947fb,
                            this[_0x408be7(0x999)] = [],
                            this[_0x408be7(0x999)]['push']({
                                'url': _0x1947fb,
                                'USpeed': this['_emissionTexCoordSpeed']['x'],
                                'VSpeed': this[_0x408be7(0x3ab)]['y'],
                                'UTiling': this[_0x408be7(0x494)]['x'],
                                'VTiling': this[_0x408be7(0x494)]['y']
                            }),
                            this[_0x408be7(0x7c4)] = !0x0,
                            this[_0x408be7(0x2bc)] = 0x0;
                    }
                },
                'emissionTexCoordUSpeed': {
                    'get': function () {
                        const _0x481f16 = _0x324b8e;
                        return this[_0x481f16(0x3ab)]['x'];
                    },
                    'set': function (_0x19aa2b) {
                        const _0x581fa2 = _0x324b8e;
                        Cesium[_0x581fa2(0x14b)](this[_0x581fa2(0x999)]) && this[_0x581fa2(0x999)][_0x581fa2(0x376)] > 0x0 && (this[_0x581fa2(0x999)][0x0][_0x581fa2(0x144)] = _0x19aa2b),
                            this[_0x581fa2(0x3ab)]['x'] = _0x19aa2b;
                    }
                },
                'emissionTexCoordVSpeed': {
                    'get': function () {
                        const _0x44e7b9 = _0x324b8e;
                        return this[_0x44e7b9(0x3ab)]['y'];
                    },
                    'set': function (_0x170342) {
                        const _0x6afb56 = _0x324b8e;
                        Cesium[_0x6afb56(0x14b)](this[_0x6afb56(0x999)]) && this['_emissionTextureArray']['length'] > 0x0 && (this[_0x6afb56(0x999)][0x0][_0x6afb56(0x7d6)] = _0x170342),
                            this[_0x6afb56(0x3ab)]['y'] = _0x170342;
                    }
                },
                'emissionTexCoordScale': {
                    'get': function () {
                        const _0x76fcf4 = _0x324b8e;
                        return this[_0x76fcf4(0x494)];
                    },
                    'set': function (_0x829adc) {
                        const _0x19a239 = _0x324b8e;
                        Cesium[_0x19a239(0x14b)](this[_0x19a239(0x999)]) && this[_0x19a239(0x999)]['length'] > 0x0 && (this[_0x19a239(0x999)][0x0][_0x19a239(0x2c0)] = _0x829adc['x'],
                            this[_0x19a239(0x999)][0x0][_0x19a239(0x2fb)] = _0x829adc['y']),
                            this['_emissionTexCoordScale'] = _0x829adc;
                    }
                },
                'emissionTextureArray': {
                    'get': function () {
                        return this['_emissionTextureArray'];
                    },
                    'set': function (_0x507557) {
                        const _0x2472c8 = _0x324b8e;
                        this[_0x2472c8(0x999)] = _0x507557,
                            this['_emissionTextureChanged'] = !0x0,
                            this[_0x2472c8(0x2bc)] = 0x0;
                    }
                },
                'noValueColor': {
                    'get': function () {
                        return this['_noValueColor'];
                    },
                    'set': function (_0x475b2f) {
                        const _0x27b41b = _0x324b8e;
                        Cesium['defined'](_0x475b2f) && (this[_0x27b41b(0x4a4)] = Cesium[_0x27b41b(0x75c)][_0x27b41b(0x157)](_0x475b2f, this[_0x27b41b(0x4a4)]));
                    }
                },
                'filterMode': {
                    'get': function () {
                        const _0x52e871 = _0x324b8e;
                        return this[_0x52e871(0x159)];
                    },
                    'set': function (_0x56d826) {
                        const _0x234c0f = _0x324b8e;
                        this[_0x234c0f(0x159)] = _0x56d826;
                    }
                },
                'visibleDistanceMax': {
                    'get': function () {
                        return this['_visibleDistanceMax'];
                    },
                    'set': function (_0x148b81) {
                        const _0x457491 = _0x324b8e;
                        this[_0x457491(0x28f)] = _0x148b81;
                    }
                },
                'visibleDistanceMin': {
                    'get': function () {
                        const _0x8e37f3 = _0x324b8e;
                        return this[_0x8e37f3(0x9ae)];
                    },
                    'set': function (_0x56545) {
                        const _0x2d235b = _0x324b8e;
                        this[_0x2d235b(0x9ae)] = _0x56545;
                    }
                },
                'minVisibleAltitude': {
                    'get': function () {
                        const _0x408a8c = _0x324b8e;
                        return this[_0x408a8c(0x597)];
                    },
                    'set': function (_0x3e9694) {
                        const _0x3ef5ea = _0x324b8e;
                        this[_0x3ef5ea(0x597)] = _0x3e9694;
                    }
                },
                'maxVisibleAltitude': {
                    'get': function () {
                        return this['_maxVisibleAltitude'];
                    },
                    'set': function (_0x27a114) {
                        this['_maxVisibleAltitude'] = _0x27a114;
                    }
                }
            }),
            _0x38371e[_0x324b8e(0x157)] = function (_0x552611, _0xd2b2c8) {
                const _0x5425b3 = _0x324b8e;
                if (_0x552611) {
                    _0xd2b2c8 || (_0xd2b2c8 = new _0x38371e()),
                        _0xd2b2c8['_maxVisibleValue'] = _0x552611[_0x5425b3(0x140)],
                        _0xd2b2c8['_minVisibleValue'] = _0x552611[_0x5425b3(0x231)],
                        _0xd2b2c8[_0x5425b3(0x642)] = _0x552611[_0x5425b3(0x642)],
                        _0xd2b2c8[_0x5425b3(0x693)] = _0x552611[_0x5425b3(0x693)],
                        _0xd2b2c8[_0x5425b3(0x4d6)] = _0x552611[_0x5425b3(0x4d6)],
                        _0xd2b2c8[_0x5425b3(0x4f9)] = _0x552611[_0x5425b3(0x4f9)],
                        _0xd2b2c8[_0x5425b3(0x434)] = _0x552611[_0x5425b3(0x434)],
                        _0xd2b2c8[_0x5425b3(0x7ea)] = _0x552611[_0x5425b3(0x7ea)],
                        _0xd2b2c8[_0x5425b3(0x804)] = _0x552611[_0x5425b3(0x804)],
                        _0xd2b2c8[_0x5425b3(0x2f9)] = Cesium['Color']['clone'](_0x552611[_0x5425b3(0x2f9)], _0xd2b2c8[_0x5425b3(0x2f9)]),
                        _0xd2b2c8[_0x5425b3(0x672)] = _0x552611[_0x5425b3(0x672)],
                        _0xd2b2c8[_0x5425b3(0x3ab)] = Cesium[_0x5425b3(0xab7)][_0x5425b3(0x157)](_0x552611[_0x5425b3(0x3ab)], _0xd2b2c8['_emissionTexCoordSpeed']),
                        _0xd2b2c8[_0x5425b3(0x494)] = Cesium[_0x5425b3(0xab7)][_0x5425b3(0x157)](_0x552611['_emissionTexCoordScale'], _0xd2b2c8['_emissionTexCoordScale']),
                        _0xd2b2c8[_0x5425b3(0x296)] = _0x552611[_0x5425b3(0x296)],
                        _0xd2b2c8[_0x5425b3(0x999)] = _0x552611[_0x5425b3(0x999)],
                        _0xd2b2c8[_0x5425b3(0x2bc)] = _0x552611[_0x5425b3(0x2bc)],
                        _0xd2b2c8[_0x5425b3(0x4a4)] = Cesium[_0x5425b3(0x75c)][_0x5425b3(0x157)](_0x552611[_0x5425b3(0x4a4)], _0xd2b2c8[_0x5425b3(0x4a4)]),
                        _0xd2b2c8[_0x5425b3(0x49e)][_0x5425b3(0x376)] = 0x0;
                    for (let _0x1d60d5 = 0x0; _0x1d60d5 < _0x552611['_coverageArea']['length']; _0x1d60d5++)
                        _0xd2b2c8[_0x5425b3(0x49e)][_0x1d60d5] = _0x552611[_0x5425b3(0x49e)][_0x1d60d5];
                    return _0xd2b2c8[_0x5425b3(0x159)] = _0x552611['_textureFilterMode'],
                        _0xd2b2c8[_0x5425b3(0x28f)] = _0x552611[_0x5425b3(0x28f)],
                        _0xd2b2c8['_visibleDistanceMin'] = _0x552611[_0x5425b3(0x9ae)],
                        _0xd2b2c8[_0x5425b3(0x331)] = _0x552611[_0x5425b3(0x331)],
                        _0xd2b2c8[_0x5425b3(0x597)] = _0x552611[_0x5425b3(0x597)],
                        _0xd2b2c8;
                }
            }
            ;
        let _0x2289a5 = [];
        _0x38371e[_0x324b8e(0x74f)][_0x324b8e(0x866)] = function () {
            const _0x2433a8 = _0x324b8e;
            let _0x1ae87e = this[_0x2433a8(0x5a2)];
            if (!_0x1ae87e)
                return _0x2289a5;
            let _0x46f4b8, _0x228f92 = this['_emissionTextureArray'][_0x2433a8(0x376)];
            if (_0x2289a5[_0x2433a8(0x376)] != _0x228f92) {
                for (_0x2289a5 = [],
                    _0x46f4b8 = 0x0; _0x46f4b8 < _0x228f92; _0x46f4b8++)
                    _0x2289a5[_0x2433a8(0x745)](new Cartesian4());
            }
            for (_0x46f4b8 = 0x0; _0x46f4b8 < _0x228f92; _0x46f4b8++) {
                let _0x122451 = this['_emissionTextureArray'][_0x46f4b8]
                    , _0x3523fe = _0x1ae87e[_0x2433a8(0x860)][_0x122451[_0x2433a8(0x812)]];
                _0x3523fe && (_0x2289a5[_0x46f4b8]['x'] = _0x3523fe['x'],
                    _0x2289a5[_0x46f4b8]['y'] = _0x3523fe['y'],
                    _0x2289a5[_0x46f4b8]['z'] = _0x3523fe['x'] + _0x3523fe[_0x2433a8(0x8ce)],
                    _0x2289a5[_0x46f4b8]['w'] = _0x3523fe['y'] + _0x3523fe[_0x2433a8(0x88d)]);
            }
            return _0x2289a5;
        }
            ;
        let _0xed97df = [];
        function _0x191bb7() {
            const _0x49314e = _0x324b8e;
            this[_0x49314e(0x233)] = 0x400,
                this[_0x49314e(0x710)] = 0x400,
                this[_0x49314e(0x39d)] = new Cesium[(_0x49314e(0x747))](),
                this[_0x49314e(0x6ba)] = void 0x0,
                this[_0x49314e(0x423)] = void 0x0,
                this[_0x49314e(0x2ca)] = new Cesium['AssociativeArray'](),
                this[_0x49314e(0x2ff)] = !0x1,
                this['flattening'] = !0x1;
        }
        _0x38371e[_0x324b8e(0x74f)][_0x324b8e(0x96f)] = function () {
            const _0x1cd095 = _0x324b8e;
            if (!this[_0x1cd095(0x999)])
                return _0xed97df;
            let _0x1cb6b6, _0x2a5f27 = this['_emissionTextureArray'][_0x1cd095(0x376)];
            if (_0xed97df[_0x1cd095(0x376)] != _0x2a5f27) {
                for (_0xed97df = [],
                    _0x1cb6b6 = 0x0; _0x1cb6b6 < _0x2a5f27; _0x1cb6b6++)
                    _0xed97df[_0x1cd095(0x745)](new Cartesian4());
            }
            let _0x40b7f3 = performance[_0x1cd095(0x97b)]() / 0x3e8;
            for (_0x1cb6b6 = 0x0; _0x1cb6b6 < _0x2a5f27; _0x1cb6b6++) {
                let _0x163d06 = this[_0x1cd095(0x999)][_0x1cb6b6];
                _0xed97df[_0x1cb6b6]['x'] = _0x163d06[_0x1cd095(0x2c0)],
                    _0xed97df[_0x1cb6b6]['y'] = _0x163d06[_0x1cd095(0x2fb)],
                    _0xed97df[_0x1cb6b6]['z'] = _0x163d06[_0x1cd095(0x144)] * _0x40b7f3,
                    _0xed97df[_0x1cb6b6]['w'] = _0x163d06['VSpeed'] * _0x40b7f3;
            }
            return _0xed97df;
        }
            ,
            _0x38371e[_0x324b8e(0x74f)][_0x324b8e(0x4dd)] = function () {
                const _0x3442af = _0x324b8e;
                this[_0x3442af(0x49e)][_0x3442af(0x376)] = 0x0,
                    this[_0x3442af(0x672)] = this['_dictColorTable'] && this[_0x3442af(0x672)][_0x3442af(0x4dd)]();
            }
            ,
            _0x191bb7['prototype']['isDestroyed'] = function () {
                return !0x1;
            }
            ,
            _0x191bb7['prototype'][_0x324b8e(0x4dd)] = function () {
                const _0x3468f0 = _0x324b8e;
                this[_0x3468f0(0x6ba)] = this[_0x3468f0(0x6ba)] && this['texture']['destroy'](),
                    this[_0x3468f0(0x423)] = this[_0x3468f0(0x423)] && this[_0x3468f0(0x423)][_0x3468f0(0x4dd)](),
                    this['regions'][_0x3468f0(0x307)]();
            }
            ;
        var _0x124bb9 = _0x324b8e(0x9c3)
            , _0xaa0d2c = '\x0a#ifdef\x20Mode_Height\x0avarying\x20float\x20vHeight;\x0avec4\x20packValue(float\x20value)\x0a{\x0a\x20\x20\x20\x20float\x20SHIFT_LEFT8\x20=\x20256.0;\x0a\x09float\x20SHIFT_RIGHT8\x20=\x201.0\x20/\x20256.0;\x0a\x09vec4\x20result;\x0a\x09result.a\x20=\x20255.0;\x0a\x09float\x20fPos\x20=\x20abs(value\x20+\x209000.0)\x20*\x20SHIFT_RIGHT8;\x0a\x09result.b\x20=\x20(fPos\x20-\x20floor(fPos))\x20*\x20SHIFT_LEFT8;\x0a\x09fPos\x20=\x20floor(fPos)\x20*\x20SHIFT_RIGHT8;\x0a\x09result.g\x20=\x20(fPos\x20-\x20floor(fPos))\x20*\x20SHIFT_LEFT8;\x0a\x09result.r\x20=\x20floor(fPos);\x0a\x09result\x20/=\x20255.0;\x0a\x09return\x20result;\x0a}\x0a#endif\x0a\x0avoid\x20main()\x0a{\x0a\x20\x20\x20out_FragColor\x20=\x20vec4(1.0);\x0a#ifdef\x20Mode_Height\x0a\x20\x20\x20out_FragColor\x20=\x20packValue(vHeight);\x0a#endif\x0a}';
        function _0x187845() {
            const _0xd31e68 = _0x324b8e;
            this[_0xd31e68(0x39d)] = new Cesium[(_0xd31e68(0x747))](Number['MAX_VALUE'], Number[_0xd31e68(0x19b)], -Number[_0xd31e68(0x19b)], -Number['MAX_VALUE']),
                this['command'] = void 0x0,
                this[_0xd31e68(0x114)] = void 0x0,
                this['heightBuffer'] = void 0x0,
                this[_0xd31e68(0x5a9)] = void 0x0;
        }
        let _0x719c27 = new Cesium[(_0x324b8e(0x85d))]();
        function _0x2301e9() {
            const _0x3c65e4 = _0x324b8e;
            this[_0x3c65e4(0x25d)] = {},
                this[_0x3c65e4(0xac5)] = new Cesium[(_0x3c65e4(0x953))]();
        }
        _0x187845[_0x324b8e(0x74f)][_0x324b8e(0xa3d)] = function (_0x316091, _0x3d6f0b) {
            const _0x47b1fe = _0x324b8e;
            let _0x3512f8 = _0x316091[_0x47b1fe(0x2da)][_0x47b1fe(0x15e)][_0x47b1fe(0x347)];
            for (let _0x1f7d89 = 0x0, _0x52769a = _0x3512f8[_0x47b1fe(0x376)]; _0x1f7d89 < _0x52769a; _0x1f7d89 += 0x3)
                _0x719c27['x'] = _0x3512f8[_0x1f7d89],
                    _0x719c27['y'] = _0x3512f8[_0x1f7d89 + 0x1],
                    _0x719c27['z'] = _0x3512f8[_0x1f7d89 + 0x2],
                    Cesium[_0x47b1fe(0x5ab)]['multiplyByPoint'](_0x3d6f0b, _0x719c27, _0x719c27),
                    _0x3512f8[_0x1f7d89] = _0x719c27['x'],
                    _0x3512f8[_0x1f7d89 + 0x1] = _0x719c27['y'],
                    _0x3512f8[_0x1f7d89 + 0x2] = _0x719c27['z'];
            this[_0x47b1fe(0x114)] = _0x316091;
        }
            ,
            _0x187845[_0x324b8e(0x74f)][_0x324b8e(0x27a)] = function (_0x49ebdd) {
                const _0x42aa99 = _0x324b8e;
                let _0x39b87d = _0x49ebdd[_0x42aa99(0x2da)][_0x42aa99(0x15e)][_0x42aa99(0x347)]
                    , _0x3e402c = this[_0x42aa99(0x39d)];
                for (let _0x4be6b0 = 0x0, _0x1aabb3 = _0x39b87d['length']; _0x4be6b0 < _0x1aabb3; _0x4be6b0 += 0x3) {
                    let _0x260c3c = _0x39b87d[_0x4be6b0]
                        , _0x407573 = _0x39b87d[_0x4be6b0 + 0x1];
                    _0x3e402c['x'] = Math[_0x42aa99(0x412)](_0x260c3c, _0x3e402c['x']),
                        _0x3e402c['y'] = Math[_0x42aa99(0x412)](_0x407573, _0x3e402c['y']),
                        _0x3e402c['z'] = Math['max'](_0x260c3c, _0x3e402c['z']),
                        _0x3e402c['w'] = Math['max'](_0x407573, _0x3e402c['w']);
                }
            }
            ,
            _0x187845['prototype']['createCommand'] = function (_0x16a991, _0x17bd25) {
                const _0x2f1343 = _0x324b8e;
                if (this[_0x2f1343(0xa80)])
                    return;
                let _0x4c4da6 = _0x17bd25['getColorTexture'](0x0)
                    , _0x3f16b1 = new Cesium[(_0x2f1343(0x39a))]({
                        'primitiveType': Cesium[_0x2f1343(0x635)]['TRIANGLES']
                    })
                    , _0x48cf0a = {
                        'position': 0x0
                    };
                _0x3f16b1[_0x2f1343(0x99e)] = Cesium[_0x2f1343(0x403)][_0x2f1343(0x20c)]({
                    'context': _0x16a991,
                    'geometry': this[_0x2f1343(0x114)],
                    'attributeLocations': _0x48cf0a,
                    'bufferUsage': Cesium[_0x2f1343(0x3c3)][_0x2f1343(0x64e)],
                    'interleave': !0x0
                });
                let _0x1d92aa = new Cesium[(_0x2f1343(0x966))]({
                    'sources': [_0x124bb9]
                })
                    , _0x863480 = new Cesium['ShaderSource']({
                        'sources': [_0xaa0d2c]
                    });
                _0x1d92aa[_0x2f1343(0x9e5)][_0x2f1343(0x745)](_0x2f1343(0x2f7)),
                    _0x863480['defines'][_0x2f1343(0x745)](_0x2f1343(0x2f7)),
                    _0x3f16b1['shaderProgram'] = Cesium['ShaderProgram'][_0x2f1343(0x6bf)]({
                        'context': _0x16a991,
                        'vertexShaderSource': _0x1d92aa,
                        'fragmentShaderSource': _0x863480,
                        'attributeLocations': _0x48cf0a
                    }),
                    _0x3f16b1[_0x2f1343(0x882)] = _0x17bd25,
                    _0x3f16b1['renderState'] = Cesium[_0x2f1343(0x4ca)][_0x2f1343(0x6bf)]({
                        'viewport': new Cesium[(_0x2f1343(0x4d0))](0x0, 0x0, _0x4c4da6[_0x2f1343(0x8ce)], _0x4c4da6[_0x2f1343(0x88d)])
                    }),
                    this[_0x2f1343(0xa80)] = _0x3f16b1;
            }
            ,
            _0x187845['prototype']['destroy'] = function () {
                const _0x46a122 = _0x324b8e;
                this[_0x46a122(0x7f0)] && (this[_0x46a122(0x7f0)][_0x46a122(0x99e)] = this[_0x46a122(0x7f0)][_0x46a122(0x99e)] && !this[_0x46a122(0x7f0)]['vertexArray'][_0x46a122(0x575)]() && this[_0x46a122(0x7f0)][_0x46a122(0x99e)][_0x46a122(0x4dd)](),
                    this[_0x46a122(0x7f0)][_0x46a122(0x67b)] = this[_0x46a122(0x7f0)]['shaderProgram'] && !this[_0x46a122(0x7f0)][_0x46a122(0x67b)][_0x46a122(0x575)]() && this[_0x46a122(0x7f0)][_0x46a122(0x67b)][_0x46a122(0x4dd)](),
                    this[_0x46a122(0x7f0)] = null),
                    this['colorBuffer'] = this[_0x46a122(0x5a9)] && this[_0x46a122(0x5a9)][_0x46a122(0x4dd)](),
                    this['heightBuffer'] = this['heightBuffer'] && this['heightBuffer'][_0x46a122(0x4dd)](),
                    this[_0x46a122(0x114)] = null,
                    this[_0x46a122(0x39d)] = null;
            }
            ;
        let _0x2b1143 = 0x0;
        _0x2301e9[_0x324b8e(0x74f)][_0x324b8e(0x414)] = function (_0x21fc65, _0x50528d, _0x57c7ff) {
            const _0x486a44 = _0x324b8e;
            let _0x5bfaa0 = _0x21fc65 + '_' + _0x50528d;
            if (!this[_0x486a44(0x25d)][_0x5bfaa0])
                for (this[_0x486a44(0x25d)][_0x5bfaa0] = {
                    'id': _0x5bfaa0,
                    'buffer': _0x57c7ff
                },
                    this[_0x486a44(0xac5)]['enqueue'](_0x5bfaa0),
                    _0x2b1143 += _0x57c7ff['byteLength']; _0x2b1143 > 0x6400000;) {
                    let _0x706e5c = this[_0x486a44(0xac5)]['dequeue']()
                        , _0x7683cb = this['_cache'][_0x706e5c];
                    _0x2b1143 -= _0x7683cb['buffer'][_0x486a44(0x1ef)],
                        delete this[_0x486a44(0x25d)][_0x706e5c];
                }
        }
            ,
            _0x2301e9[_0x324b8e(0x74f)][_0x324b8e(0xa61)] = function (_0x1ac0f0, _0x31cc4c) {
                const _0x2dfc4c = _0x324b8e;
                let _0x2d137b = _0x1ac0f0 + '_' + _0x31cc4c
                    , _0x7a57d1 = this[_0x2dfc4c(0x25d)][_0x2d137b];
                if (_0x7a57d1)
                    return _0x7a57d1[_0x2dfc4c(0x38d)];
            }
            ,
            _0x2301e9['prototype'][_0x324b8e(0x924)] = function (_0x52d245, _0x106da3) {
                const _0x13ada1 = _0x324b8e;
                let _0x49c625 = _0x52d245 + '_' + _0x106da3;
                return Cesium[_0x13ada1(0x14b)](this['_cache'][_0x49c625]);
            }
            ,
            _0x2301e9[_0x324b8e(0x43a)] = void 0x0,
            _0x2301e9[_0x324b8e(0x550)] = function () {
                const _0x3d7ecb = _0x324b8e;
                return _0x2301e9[_0x3d7ecb(0x43a)] || (_0x2301e9['_singleInstance'] = new _0x2301e9()),
                    _0x2301e9['_singleInstance'];
            }
            ;
        var _0x3444d0 = new Cesium[(_0x324b8e(0x5ab))](0x0, 0x0, 0x1, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x1, 0x0, 0x0, 0x0, 0x0, 0x0, 0x1);
        function _0x2dd123(_0x1287ed) {
            const _0x3673f5 = _0x324b8e;
            _0x1287ed = Cesium[_0x3673f5(0x225)](_0x1287ed, Cesium[_0x3673f5(0x225)][_0x3673f5(0x8bc)]),
                Cesium[_0x3673f5(0x636)][_0x3673f5(0x14b)](_0x3673f5(0x2d4), _0x1287ed[_0x3673f5(0x56c)]),
                Cesium[_0x3673f5(0x636)][_0x3673f5(0x14b)](_0x3673f5(0x8dd), _0x1287ed['rss']),
                this['id'] = Cesium[_0x3673f5(0x96a)](),
                this[_0x3673f5(0x770)] = _0x1287ed[_0x3673f5(0x770)],
                this[_0x3673f5(0x56c)] = _0x1287ed['context'],
                this['_isS3MB'] = Cesium[_0x3673f5(0x225)](_0x1287ed[_0x3673f5(0x7e8)], !0x0),
                this[_0x3673f5(0xac2)] = Cesium[_0x3673f5(0x225)](_0x1287ed[_0x3673f5(0x146)], !0x1),
                this['_url'] = void 0x0,
                this[_0x3673f5(0x311)] = void 0x0,
                this['_baseResource'] = void 0x0,
                this['modelMatrix'] = new Cesium[(_0x3673f5(0x5ab))](),
                this[_0x3673f5(0xa97)] = new Cesium['Matrix4'](),
                this['fileType'] = void 0x0,
                this[_0x3673f5(0x9c2)] = void 0x0,
                this[_0x3673f5(0x69f)] = void 0x0,
                this[_0x3673f5(0x5f3)] = [],
                this[_0x3673f5(0x87d)] = new _0x50c548(),
                this[_0x3673f5(0x270)] = [],
                this[_0x3673f5(0x6c9)] = [],
                this[_0x3673f5(0x35b)] = [],
                this['_cache'] = new _0x484875(),
                this[_0x3673f5(0x18a)] = -0x1,
                this[_0x3673f5(0xa6a)] = 0x0,
                this['_maximumPriority'] = {
                    'foveatedFactor': -Number['MAX_VALUE'],
                    'depth': -Number[_0x3673f5(0x19b)],
                    'distance': -Number['MAX_VALUE'],
                    'pixel': -Number[_0x3673f5(0x19b)]
                },
                this[_0x3673f5(0x991)] = {
                    'foveatedFactor': Number[_0x3673f5(0x19b)],
                    'depth': Number[_0x3673f5(0x19b)],
                    'distance': Number[_0x3673f5(0x19b)],
                    'pixel': Number[_0x3673f5(0x19b)]
                },
                this[_0x3673f5(0x3e8)] = _0x438ab0(),
                this[_0x3673f5(0x3d4)] = Cesium['defaultValue'](_0x1287ed[_0x3673f5(0x9ce)], !0x0),
                this[_0x3673f5(0x15c)] = !0x1,
                this[_0x3673f5(0x817)] = Cesium[_0x3673f5(0x225)](_0x1287ed[_0x3673f5(0xa00)], Cesium['SceneMode'][_0x3673f5(0x9cc)]),
                this['_selections'] = [],
                this[_0x3673f5(0x8cf)] = new Cesium[(_0x3673f5(0x75c))](0.7, 0.7, 0x1, 0x1),
                this[_0x3673f5(0x1e5)] = new Cesium[(_0x3673f5(0x869))](),
                this['_objsVisibleList'] = new Cesium['AssociativeArray'](),
                this[_0x3673f5(0x6f6)] = new Cesium[(_0x3673f5(0x869))](),
                this[_0x3673f5(0xa0a)] = {},
                this[_0x3673f5(0x35f)] = {},
                this[_0x3673f5(0x384)] = !0x1,
                this['_clipMode'] = _0x522d4d[_0x3673f5(0xa66)],
                this[_0x3673f5(0x314)] = !0x1,
                this[_0x3673f5(0x151)] = !0x1,
                this[_0x3673f5(0x132)] = [new Cesium[(_0x3673f5(0x747))](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x3673f5(0x747))](0x0, 0x0, 0x0, 0x0), new Cesium['Cartesian4'](0x0, 0x0, 0x0, 0x0), new Cesium['Cartesian4'](0x0, 0x0, 0x0, 0x0), new Cesium['Cartesian4'](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x3673f5(0x747))](0x0, 0x0, 0x0, 0x0)],
                this[_0x3673f5(0x7a8)] = [new Cesium[(_0x3673f5(0x747))](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x3673f5(0x747))](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x3673f5(0x747))](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x3673f5(0x747))](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x3673f5(0x747))](0x0, 0x0, 0x0, 0x0), new Cesium[(_0x3673f5(0x747))](0x0, 0x0, 0x0, 0x0)],
                this[_0x3673f5(0x2cf)] = new _0x380337({}),
                this[_0x3673f5(0x460)] = new _0x191bb7(),
                this[_0x3673f5(0x909)] = 0x0,
                this['_maxCategory'] = 0x0,
                this['_minHeight'] = 0x0,
                this[_0x3673f5(0x12b)] = 0x0,
                this[_0x3673f5(0x90b)] = new Cesium[(_0x3673f5(0x747))](0x0, 0x0, 0x1, 0x1),
                this['_swipeEnabled'] = !0x1,
                this[_0x3673f5(0x5d1)] = Cesium['defaultValue'](_0x1287ed[_0x3673f5(0x1a9)], 0x1),
                this[_0x3673f5(0xf3)] = Cesium[_0x3673f5(0x225)](_0x1287ed[_0x3673f5(0xa17)], 0x1),
                this[_0x3673f5(0x4b5)] = Cesium[_0x3673f5(0x225)](_0x1287ed['hue'], 0x0),
                this['_saturation'] = Cesium['defaultValue'](_0x1287ed['saturation'], 0x1),
                this[_0x3673f5(0xaa0)] = Cesium[_0x3673f5(0x225)](_0x1287ed[_0x3673f5(0x6e1)], 0x1),
                this[_0x3673f5(0x28f)] = Cesium['defaultValue'](_0x1287ed[_0x3673f5(0x854)], Number[_0x3673f5(0x19b)]),
                this[_0x3673f5(0x9ae)] = Cesium[_0x3673f5(0x225)](_0x1287ed['minVisibleDistance'], 0x0),
                this['_minVisibleAltitude'] = Cesium[_0x3673f5(0x225)](_0x1287ed['minVisibleAltitude'], 0x0),
                this[_0x3673f5(0x331)] = Cesium[_0x3673f5(0x225)](_0x1287ed[_0x3673f5(0x18d)], Number[_0x3673f5(0x19b)]),
                this[_0x3673f5(0xa3b)] = Cesium[_0x3673f5(0x225)](_0x1287ed[_0x3673f5(0x9cf)], 0x1),
                this['_visible'] = Cesium[_0x3673f5(0x225)](_0x1287ed[_0x3673f5(0x72c)], !0x0),
                this[_0x3673f5(0x654)] = Cesium[_0x3673f5(0x225)](_0x1287ed[_0x3673f5(0x11d)], new _0x49debc()),
                this[_0x3673f5(0xa3a)] = !0x1,
                this['_polygonOffsetConfig'] = _0x1287ed[_0x3673f5(0x4a9)],
                this[_0x3673f5(0x1ff)] = 0xfff,
                this[_0x3673f5(0x75a)] = void 0x0,
                this[_0x3673f5(0x2f5)] = void 0x0,
                this[_0x3673f5(0x52f)] = 0x0,
                this[_0x3673f5(0x7de)] = 0x0,
                this[_0x3673f5(0x3b5)] = 0x0,
                this[_0x3673f5(0x709)] = _0x2301e9['getSingleInstance'](),
                this[_0x3673f5(0x3f1)] = void 0x0,
                this[_0x3673f5(0x6d5)] = void 0x0,
                this[_0x3673f5(0x10f)] = Cesium[_0x3673f5(0x225)](_0x1287ed[_0x3673f5(0x9a8)], {}),
                this[_0x3673f5(0x35a)](_0x1287ed[_0x3673f5(0xa62)]),
                this['_PBRMaterialParams'] = {
                    'pbrMetallicRoughness': {
                        'metallicFactor': 0x0,
                        'roughnessFactor': 0x0,
                        'baseColor': new Cesium[(_0x3673f5(0x747))](0x1, 0x1, 0x1, 0x1),
                        'baseColorTextureIndex': -0x1,
                        'emissiveFactor': Cesium[_0x3673f5(0x85d)]['ZERO'],
                        'emissiveTextureIndex': -0x1,
                        'occlusionTextureIndex': -0x1,
                        'normalTextureIndex': -0x1,
                        'normalTexture': void 0x0,
                        'baseColorTexture': void 0x0
                    }
                };
        }
        function _0x5624de(_0x15252c) {
            const _0x28842a = _0x324b8e;
            let _0xa7068a = {}
                , _0xc23d59 = _0x15252c['firstChild'];
            _0xa7068a[_0x28842a(0x5a6)] = _0x5aff14[_0x28842a(0x1cf)](_0xc23d59, _0x28842a(0x9ee)),
                _0xa7068a[_0x28842a(0x3a7)] = _0x5aff14[_0x28842a(0x1cf)](_0xc23d59, _0x28842a(0x6c2));
            let _0x1eed7f = _0x5aff14[_0x28842a(0x2fd)](_0xc23d59, _0x28842a(0x422));
            _0xa7068a[_0x28842a(0x536)] = _0x5aff14[_0x28842a(0x9c7)](_0x1eed7f, _0x28842a(0x62d));
            let _0x5ef01c = _0x5aff14[_0x28842a(0x8a7)](_0x1eed7f, 'GpuProgramParameters');
            _0xa7068a[_0x28842a(0x63b)] = [];
            for (let _0x127b03 = 0x0, _0x204624 = _0x5ef01c[_0x28842a(0x376)]; _0x127b03 < _0x204624; _0x127b03++) {
                let _0x23dc5c = {
                    'gpuConstants': [],
                    'atuoConstants': []
                }
                    , _0x5a687b = _0x5ef01c[_0x127b03]
                    , _0x28ded1 = _0x5aff14['queryFirstNode'](_0x5a687b, _0x28842a(0xab4));
                if (_0x28ded1) {
                    let _0x3e7f7c = _0x5aff14[_0x28842a(0x8a7)](_0x28ded1, _0x28842a(0x786));
                    for (let _0x3827c6 = 0x0, _0x2e13b9 = _0x3e7f7c[_0x28842a(0x376)]; _0x3827c6 < _0x2e13b9; _0x3827c6++) {
                        let _0x50c111 = {}
                            , _0x5def0f = _0x3e7f7c[_0x3827c6];
                        _0x50c111[_0x28842a(0x737)] = _0x5aff14[_0x28842a(0x9c7)](_0x5def0f, _0x28842a(0x3d0)),
                            _0x50c111['index'] = _0x5aff14[_0x28842a(0x9c7)](_0x5def0f, _0x28842a(0x8b6)),
                            _0x50c111[_0x28842a(0x770)] = _0x5aff14[_0x28842a(0x1cf)](_0x5def0f, _0x28842a(0xaa8)),
                            _0x50c111[_0x28842a(0x7c1)] = _0x5aff14[_0x28842a(0x9c7)](_0x5def0f, 'ArraySize'),
                            _0x50c111[_0x28842a(0x7ab)] = _0x5aff14[_0x28842a(0x9c7)](_0x5def0f, _0x28842a(0x104));
                        let _0x35ba0e = _0x5aff14[_0x28842a(0x2fd)](_0x5def0f, 'ArrayFloat');
                        if (_0x50c111[_0x28842a(0x471)] = [],
                            _0x35ba0e) {
                            let _0x4d77fd = _0x5aff14['queryNodes'](_0x35ba0e, 'Float')
                                , _0x408072 = 0x0;
                            for (; _0x408072 < _0x50c111['arraySize'];) {
                                let _0x2c0d1b = parseFloat(_0x4d77fd[_0x408072][_0x28842a(0x133)]);
                                _0x50c111[_0x28842a(0x471)][_0x28842a(0x745)](_0x2c0d1b),
                                    _0x408072++;
                            }
                        }
                        _0x23dc5c[_0x28842a(0x7f4)][_0x28842a(0x745)](_0x50c111);
                    }
                }
                let _0x1fa9be = _0x5aff14['queryFirstNode'](_0x5a687b, 'AutoConstants');
                if (_0x1fa9be) {
                    let _0x507c02 = _0x5aff14[_0x28842a(0x8a7)](_0x1fa9be, _0x28842a(0x86b));
                    for (let _0x7e487f = 0x0, _0x21e507 = _0x507c02[_0x28842a(0x376)]; _0x7e487f < _0x21e507; _0x7e487f++) {
                        let _0x3d235a = {}
                            , _0x7b7347 = _0x507c02[_0x7e487f];
                        _0x3d235a[_0x28842a(0x78d)] = _0x5aff14[_0x28842a(0x9c7)](_0x7b7347, _0x28842a(0x223)),
                            _0x3d235a['name'] = _0x5aff14[_0x28842a(0x1cf)](_0x7b7347, 'Name'),
                            _0x3d235a[_0x28842a(0x23c)] = _0x5aff14[_0x28842a(0x9c7)](_0x7b7347, _0x28842a(0x936)),
                            _0x3d235a['elementCount'] = _0x5aff14[_0x28842a(0x9c7)](_0x7b7347, _0x28842a(0x215)),
                            _0x3d235a[_0x28842a(0xa3c)] = _0x5aff14[_0x28842a(0x9c7)](_0x7b7347, _0x28842a(0x98a)),
                            _0x3d235a[_0x28842a(0x8a6)] = _0x5aff14[_0x28842a(0x9c7)](_0x7b7347, 'FData'),
                            _0x3d235a[_0x28842a(0x52c)] = _0x5aff14[_0x28842a(0xaad)](_0x7b7347, _0x28842a(0x4a5)),
                            _0x23dc5c[_0x28842a(0x875)]['push'](_0x3d235a);
                    }
                }
                _0xa7068a[_0x28842a(0x63b)][_0x28842a(0x745)](_0x23dc5c);
            }
            return _0xa7068a;
        }
        function _0x4dc886(_0x362add, _0x8a591e) {
            const _0x2fee3d = _0x324b8e;
            let _0x4466cc = _0x8a591e[_0x2fee3d(0x311)];
            if (!(_0x8a591e['_basePath'][_0x2fee3d(0xa59)](_0x2fee3d(0x36c)) > -0x1))
                return _0x362add;
            let _0x39ba9c = _0x4466cc[_0x2fee3d(0x3ed)](/(.*realspace)/, '');
            return _0x4466cc[_0x2fee3d(0x3ed)](/\/rest\/realspace/g, '')[_0x2fee3d(0x3ed)](_0x39ba9c, '') + '/rest/realspace' + _0x39ba9c + _0x2fee3d(0x91a) + _0x362add['replace'](/^\.*/, '')[_0x2fee3d(0x3ed)](/^\//, '')['replace'](/\/$/, '');
        }
        function _0x36f28a(_0x3dfe0c, _0x1378b2) {
            const _0x3715bb = _0x324b8e;
            return _0x3dfe0c['priority'] - _0x1378b2[_0x3715bb(0x578)];
        }
        function _0x2bd1e7(_0x662f58, _0x1b66a9) {
            const _0x34538b = _0x324b8e;
            _0x1b66a9[_0x34538b(0x4c2)]();
        }
        function _0x57a769(_0x22d749) {
            const _0x480705 = _0x324b8e;
            _0x22d749['_isS3MBlock'] ? _0x22d749[_0x480705(0x25d)][_0x480705(0x40b)](_0x22d749, _0x2bd1e7) : _0x22d749['_cache'][_0x480705(0x292)](_0x22d749, _0x2bd1e7);
        }
        function _0x571ad8(_0x1f6c47, _0x35d9c2, _0x5a7680) {
            const _0x2b5fe2 = _0x324b8e;
            let _0x541fae = new Cesium['Cartesian3']()
                , _0x32cf36 = new Cesium[(_0x2b5fe2(0x85d))]();
            Cesium[_0x2b5fe2(0x85d)][_0x2b5fe2(0x7bd)](_0x35d9c2, _0x1f6c47, _0x541fae),
                Cesium[_0x2b5fe2(0x85d)][_0x2b5fe2(0x7bd)](_0x5a7680, _0x1f6c47, _0x32cf36);
            let _0x12293b = new Cesium[(_0x2b5fe2(0x85d))]();
            Cesium[_0x2b5fe2(0x85d)][_0x2b5fe2(0x695)](_0x541fae, _0x32cf36, _0x12293b),
                Cesium['Cartesian3']['normalize'](_0x12293b, _0x12293b);
            let _0x218fb7 = -Cesium[_0x2b5fe2(0x85d)][_0x2b5fe2(0x908)](_0x12293b, _0x1f6c47);
            return new Cesium[(_0x2b5fe2(0x747))](_0x12293b['x'], _0x12293b['y'], _0x12293b['z'], _0x218fb7);
        }
        function _0x4c9434(_0x51e82e, _0x4860e6) {
            _0x51e82e['clip'](_0x4860e6);
        }
        function _0x8b8ee5(_0x5cfb4f) {
            const _0x5ab5e1 = _0x324b8e;
            var _0x449d91 = new Cesium[(_0x5ab5e1(0x5bd))]()
                , _0x13163e = _0x449d91[_0x5ab5e1(0x5d7)]
                , _0x4d5177 = new Cesium[(_0x5ab5e1(0x85d))]()
                , _0xa631a1 = new Cesium[(_0x5ab5e1(0x975))]();
            return _0x13163e[_0x5ab5e1(0x66c)](_0x5cfb4f, _0xa631a1),
                _0x449d91[_0x5ab5e1(0x856)](_0xa631a1, _0x4d5177),
                Cesium['Cartesian3'][_0x5ab5e1(0x7c5)](_0x4d5177['z'], _0x4d5177['x'], _0x4d5177['y']);
        }
        function _0x43ded1(_0x13f87e, _0x5c7b82) {
            const _0x4dd634 = _0x324b8e;
            _0x13f87e[_0x4dd634(0xac9)](_0x5c7b82[_0x4dd634(0x99b)], _0x5c7b82);
        }
        function _0x357aa7(_0x11468e, _0x56f215) {
            const _0x439597 = _0x324b8e;
            _0x11468e[_0x439597(0x73b)](_0x56f215['ids'], _0x56f215);
        }
        function _0x1b5a0f(_0x1a260b, _0x26280a) {
            const _0x419928 = _0x324b8e;
            _0x1a260b[_0x419928(0x99d)](_0x26280a[_0x419928(0x72c)]);
        }
        function _0x393652(_0x33c8f1, _0x5207a3) {
            const _0x16373d = _0x324b8e;
            _0x33c8f1[_0x16373d(0x4eb)](_0x5207a3);
        }
        function _0x4ab877(_0x306a47, _0x3d2a20) {
            const _0x42c7a7 = _0x324b8e;
            _0x306a47[_0x42c7a7(0x560)](_0x3d2a20);
        }
        function _0x174988(_0x20e4a2, _0x86ef92) {
            const _0x4b6733 = _0x324b8e;
            _0x20e4a2[_0x4b6733(0x990)](_0x86ef92);
        }
        Object[_0x324b8e(0xa38)](_0x2dd123['prototype'], {
            'ready': {
                'get': function () {
                    const _0x42d52f = _0x324b8e;
                    return _0x42d52f(0x18f) === this[_0x42d52f(0x3a7)] ? void 0x0 !== this[_0x42d52f(0x75a)] && this['_rootTiles'][_0x42d52f(0x376)] > 0x0 : this[_0x42d52f(0x5f3)][_0x42d52f(0x376)] > 0x0;
                }
            },
            'readyPromise': {
                'get': function () {
                    const _0x9a1896 = _0x324b8e;
                    return this[_0x9a1896(0x3e8)];
                }
            },
            'visible': {
                'get': function () {
                    return this['_visible'];
                },
                'set': function (_0x43d3a8) {
                    const _0x4b361d = _0x324b8e;
                    this[_0x4b361d(0x166)] = _0x43d3a8;
                }
            },
            'show': {
                'get': function () {
                    const _0x160951 = _0x324b8e;
                    return this[_0x160951(0x166)];
                },
                'set': function (_0x29bcf3) {
                    this['_visible'] = _0x29bcf3;
                }
            },
            'style3D': {
                'get': function () {
                    const _0x3fc52b = _0x324b8e;
                    return this[_0x3fc52b(0x654)];
                }
            },
            'rectangle': {
                'get': function () {
                    const _0x12f7d6 = _0x324b8e;
                    return this[_0x12f7d6(0x69f)];
                }
            },
            'totalMemoryUsageInBytes': {
                'get': function () {
                    const _0xad5bc4 = _0x324b8e;
                    return this[_0xad5bc4(0xa6a)];
                },
                'set': function (_0x2b2eb9) {
                    const _0x1a676f = _0x324b8e;
                    this[_0x1a676f(0xa6a)] = _0x2b2eb9;
                }
            },
            'maximumMemoryUsage': {
                'get': function () {
                    return this['_maximumMemoryUsage'];
                },
                'set': function (_0x85f81a) {
                    this['_maximumMemoryUsage'] = _0x85f81a;
                }
            },
            'lodRangeScale': {
                'get': function () {
                    const _0x1752b9 = _0x324b8e;
                    return this[_0x1752b9(0xa3b)];
                },
                'set': function (_0x452661) {
                    const _0x551c73 = _0x324b8e;
                    Cesium['Check'][_0x551c73(0x8d8)]['number']('set\x20layer\x20lod\x20range\x20scale', _0x452661),
                        this[_0x551c73(0xa3b)] = _0x452661;
                }
            },
            'selectedColor': {
                'get': function () {
                    const _0x378f31 = _0x324b8e;
                    return this[_0x378f31(0x8cf)];
                },
                'set': function (_0x3e957f) {
                    const _0x3abb7e = _0x324b8e;
                    Cesium['Color'][_0x3abb7e(0x157)](_0x3e957f, this[_0x3abb7e(0x8cf)]);
                }
            },
            'dataMinValue': {
                'get': function () {
                    const _0x48f986 = _0x324b8e;
                    return Cesium[_0x48f986(0x225)](this[_0x48f986(0x909)], this[_0x48f986(0x94d)]);
                }
            },
            'dataMaxValue': {
                'get': function () {
                    const _0x5d65f9 = _0x324b8e;
                    return Cesium[_0x5d65f9(0x225)](this[_0x5d65f9(0x99a)], this[_0x5d65f9(0x12b)]);
                }
            },
            'swipeRegion': {
                'get': function () {
                    const _0xcafa24 = _0x324b8e;
                    return new Cesium[(_0xcafa24(0x4d0))](this[_0xcafa24(0x90b)]['x'], this[_0xcafa24(0x90b)]['y'], this[_0xcafa24(0x90b)]['z'] - this[_0xcafa24(0x90b)]['x'], this['_swipeRegion']['w'] - this[_0xcafa24(0x90b)]['y']);
                },
                'set': function (_0x2c0971) {
                    const _0x33fb1d = _0x324b8e;
                    if (_0x2c0971) {
                        if (!(_0x2c0971 instanceof Cesium[_0x33fb1d(0x4d0)]))
                            throw new Cesium[(_0x33fb1d(0x335))](_0x33fb1d(0x48a));
                        Cesium[_0x33fb1d(0x747)][_0x33fb1d(0x7c5)](_0x2c0971['x'], _0x2c0971['y'], _0x2c0971['x'] + _0x2c0971[_0x33fb1d(0x8ce)], _0x2c0971['y'] + _0x2c0971[_0x33fb1d(0x88d)], this[_0x33fb1d(0x90b)]);
                    }
                }
            },
            'swipeEnabled': {
                'get': function () {
                    const _0x184277 = _0x324b8e;
                    return this[_0x184277(0x814)];
                },
                'set': function (_0x29b669) {
                    const _0x22083e = _0x324b8e;
                    _0x29b669 !== this[_0x22083e(0x814)] && (_0x29b669 || Cesium[_0x22083e(0x747)][_0x22083e(0x7c5)](0x0, 0x0, 0x1, 0x1, this[_0x22083e(0x90b)]),
                        this['_swipeEnabled'] = _0x29b669,
                        this[_0x22083e(0x537)]({
                            'enable': _0x29b669
                        }, _0x174988));
                }
            },
            'visibleDistanceMax': {
                'get': function () {
                    const _0x12d941 = _0x324b8e;
                    return this[_0x12d941(0x28f)];
                },
                'set': function (_0x3610c2) {
                    const _0x1c1532 = _0x324b8e;
                    Cesium['Check'][_0x1c1532(0x8d8)][_0x1c1532(0x305)]('max\x20visible\x20distance', _0x3610c2),
                        this[_0x1c1532(0x28f)] = _0x3610c2;
                }
            },
            'visibleDistanceMin': {
                'get': function () {
                    const _0x2329aa = _0x324b8e;
                    return this[_0x2329aa(0x9ae)];
                },
                'set': function (_0x112196) {
                    const _0x24d5a8 = _0x324b8e;
                    Cesium[_0x24d5a8(0x636)][_0x24d5a8(0x8d8)][_0x24d5a8(0x305)]('min\x20visible\x20distance', _0x112196),
                        this[_0x24d5a8(0x9ae)] = _0x112196;
                }
            },
            'minVisibleAltitude': {
                'get': function () {
                    const _0x1e8c13 = _0x324b8e;
                    return this[_0x1e8c13(0x597)];
                },
                'set': function (_0x4e043a) {
                    const _0x380b25 = _0x324b8e;
                    Cesium[_0x380b25(0x636)][_0x380b25(0x8d8)][_0x380b25(0x305)]('min\x20visible\x20altitude', _0x4e043a),
                        this[_0x380b25(0x597)] = _0x4e043a;
                }
            },
            'maxVisibleAltitude': {
                'get': function () {
                    const _0x4025af = _0x324b8e;
                    return this[_0x4025af(0x331)];
                },
                'set': function (_0x48bc17) {
                    const _0x41ce2c = _0x324b8e;
                    Cesium[_0x41ce2c(0x636)]['typeOf'][_0x41ce2c(0x305)](_0x41ce2c(0xf2), _0x48bc17),
                        this['_maxVisibleAltitude'] = _0x48bc17;
                }
            },
            'hypsometricSetting': {
                'get': function () {
                    const _0x20b009 = _0x324b8e;
                    return {
                        'hypsometricSetting': this[_0x20b009(0x2cf)][_0x20b009(0x27b)],
                        'analysisMode': this[_0x20b009(0x2cf)][_0x20b009(0x8c5)]
                    };
                },
                'set': function (_0x13c456) {
                    const _0x4d9d69 = _0x324b8e;
                    let _0x2236eb = this[_0x4d9d69(0x2cf)];
                    if (!_0x13c456 || !_0x13c456[_0x4d9d69(0x3cc)])
                        return _0x2236eb[_0x4d9d69(0x48d)] = !0x1,
                            _0x2236eb[_0x4d9d69(0x27b)] = _0x2236eb[_0x4d9d69(0x27b)] && _0x2236eb[_0x4d9d69(0x27b)][_0x4d9d69(0x4dd)](),
                            void this[_0x4d9d69(0x537)]({
                                'enable': !0x1
                            }, _0x4ab877);
                    _0x2236eb['region'] = _0x2236eb[_0x4d9d69(0xa6e)] && _0x2236eb['region']['destroy'](),
                        _0x2236eb[_0x4d9d69(0x318)] || (_0x2236eb[_0x4d9d69(0x318)] = new Cesium[(_0x4d9d69(0x130))]({
                            'context': this['context'],
                            'width': 0x400,
                            'height': 0x400,
                            'pixelFormat': Cesium[_0x4d9d69(0x480)][_0x4d9d69(0x71c)]
                        })),
                        _0x2236eb[_0x4d9d69(0x6ba)] || (_0x2236eb[_0x4d9d69(0x6ba)] = new Cesium[(_0x4d9d69(0x130))]({
                            'context': this[_0x4d9d69(0x56c)],
                            'width': 0x400,
                            'height': 0x40,
                            'pixelFormat': Cesium['PixelFormat'][_0x4d9d69(0x71c)],
                            'flipY': !0x1
                        })),
                        _0x2236eb[_0x4d9d69(0x8c5)] = Cesium[_0x4d9d69(0x225)](_0x13c456['analysisMode'], _0x2236eb['analysisMode']),
                        _0x2236eb['setting'] = _0x38371e[_0x4d9d69(0x157)](_0x13c456[_0x4d9d69(0x3cc)], _0x2236eb[_0x4d9d69(0x27b)]),
                        _0x2236eb['setting']['ColorTable'] && (_0x2236eb['setting'][_0x4d9d69(0x12c)][_0x4d9d69(0x626)](),
                            this[_0x4d9d69(0x2cf)][_0x4d9d69(0x6ba)] && this[_0x4d9d69(0x2cf)][_0x4d9d69(0x6ba)][_0x4d9d69(0x6a9)]({
                                'width': 0x400,
                                'height': 0x40,
                                'arrayBufferView': _0x2236eb['setting'][_0x4d9d69(0x12c)][_0x4d9d69(0x8fc)]
                            })),
                        _0x2236eb['isUseHypColorTable'] = _0x2236eb['analysisMode'] !== _0x353b85[_0x4d9d69(0x3ea)][_0x4d9d69(0x528)],
                        this['_tranverseRenderEntity']({
                            'enable': _0x2236eb[_0x4d9d69(0x48d)]
                        }, _0x4ab877);
                }
            },
            'selectEnabled': {
                'get': function () {
                    const _0x45414a = _0x324b8e;
                    return this[_0x45414a(0x3d4)];
                },
                'set': function (_0x2372c9) {
                    const _0x3f08b0 = _0x324b8e;
                    Cesium[_0x3f08b0(0x636)]['defined'](_0x3f08b0(0x3da), _0x2372c9),
                        Cesium[_0x3f08b0(0x636)][_0x3f08b0(0x8d8)][_0x3f08b0(0x136)](_0x3f08b0(0x3da), _0x2372c9),
                        this[_0x3f08b0(0x3d4)] = _0x2372c9;
                }
            },
            'subdomains': {
                'get': function () {
                    const _0x3d7dcf = _0x324b8e;
                    return this[_0x3d7dcf(0x10f)][_0x3d7dcf(0x7c8)];
                },
                'set': function (_0x4f985f) {
                    const _0x4e68ef = _0x324b8e;
                    if (defined(_0x4f985f) && !defined(_0x4f985f[_0x4e68ef(0x376)]))
                        throw new DeveloperError(_0x4e68ef(0x66d));
                    this[_0x4e68ef(0x10f)][_0x4e68ef(0x7c8)] = _0x4f985f;
                }
            }
        }),
            _0x2dd123['prototype'][_0x324b8e(0x35a)] = function (_0x253214) {
                const _0x1e2eb8 = _0x324b8e;
                let _0x98dae9 = this;
                Promise[_0x1e2eb8(0x1d5)](_0x253214)[_0x1e2eb8(0x685)](function (_0x4c52f3) {
                    const _0xe9d419 = _0x1e2eb8;
                    let _0x13b524, _0x5ebf2d = Cesium[_0xe9d419(0x9c9)]['createIfNeeded'](_0x4c52f3);
                    _0x13b524 = _0x5ebf2d[_0xe9d419(0x5da)](!0x0);
                    let _0x5b6f07 = new _0x5b7673(_0x13b524);
                    return _0x5b6f07['query'] = void 0x0,
                        _0x13b524 = _0x5b6f07[_0xe9d419(0x362)](),
                        _0x98dae9[_0xe9d419(0x2f3)] = _0x5ebf2d[_0xe9d419(0xa62)],
                        _0x98dae9[_0xe9d419(0x311)] = _0x13b524,
                        _0x98dae9[_0xe9d419(0x50e)] = _0x5ebf2d,
                        Cesium['defined'](_0x98dae9['_subdomainConfig'][_0xe9d419(0x7c8)]) && (_0x98dae9[_0xe9d419(0x311)] = _0x98dae9[_0xe9d419(0x10f)][_0xe9d419(0x29b)]),
                        _0x98dae9['_isS3MB'] || _0x98dae9[_0xe9d419(0xac2)] ? _0x5ebf2d['fetchJson']() : _0x5ebf2d[_0xe9d419(0x992)]();
                })['then'](function (_0x90cd12) {
                    const _0x3036d3 = _0x1e2eb8;
                    if (_0x98dae9['_isS3MB'] || _0x98dae9[_0x3036d3(0xac2)]) {
                        let _0x2bb707 = _0x90cd12[_0x3036d3(0x759)];
                        _0x98dae9[_0x3036d3(0x3a7)] = _0x2bb707[_0x3036d3(0x112)];
                        let _0x17f3b4 = _0x90cd12['position']['x']
                            , _0x517876 = _0x90cd12['position']['y']
                            , _0x45e65a = _0x90cd12[_0x3036d3(0x15e)]['z']
                            , _0x52eb4d = _0x90cd12[_0x3036d3(0x15e)][_0x3036d3(0x557)];
                        if (_0x98dae9[_0x3036d3(0x735)] = _0x17f3b4,
                            _0x98dae9['lat'] = _0x517876,
                            _0x98dae9[_0x3036d3(0x88d)] = _0x45e65a,
                            _0x98dae9[_0x3036d3(0x817)] === Cesium[_0x3036d3(0x6b8)]['SCENE3D'])
                            _0x98dae9[_0x3036d3(0x9c2)] = Cesium[_0x3036d3(0x85d)][_0x3036d3(0xa08)](_0x17f3b4, _0x517876, _0x45e65a),
                                _0x98dae9[_0x3036d3(0x896)] = Cesium[_0x3036d3(0x1a1)]['eastNorthUpToFixedFrame'](_0x98dae9['_position']),
                                _0x98dae9['invModelMatrix'] = Cesium[_0x3036d3(0x5ab)][_0x3036d3(0x20e)](_0x98dae9[_0x3036d3(0x896)], _0x98dae9[_0x3036d3(0xa97)]);
                        else {
                            if (_0x17f3b4 > 0xb4 || _0x17f3b4 < -0xb4 || _0x517876 > 0xb4 || _0x517876 < -0xb4 || _0x3036d3(0x47e) === _0x52eb4d) {
                                let _0xceae3f = _0x17f3b4
                                    , _0xb3c22b = _0x517876;
                                _0x98dae9[_0x3036d3(0x9c2)] = new Cesium['Cartesian3'](_0xceae3f, _0xb3c22b, _0x45e65a);
                            } else {
                                let _0x3274e9 = new Cesium['GeographicProjection']()
                                    , _0x268340 = Cesium['Cartesian3'][_0x3036d3(0xa08)](_0x17f3b4, _0x517876, _0x45e65a)
                                    , _0x5f44bc = _0x3274e9[_0x3036d3(0x5d7)][_0x3036d3(0x66c)](_0x268340);
                                _0x98dae9[_0x3036d3(0x9c2)] = _0x3274e9[_0x3036d3(0x856)](_0x5f44bc);
                            }
                            Cesium[_0x3036d3(0x5ab)][_0x3036d3(0x8a9)](_0x98dae9[_0x3036d3(0x9c2)], _0x98dae9[_0x3036d3(0x896)]),
                                Cesium[_0x3036d3(0x5ab)]['multiply'](_0x3444d0, _0x98dae9[_0x3036d3(0x896)], _0x98dae9['modelMatrix']),
                                _0x98dae9[_0x3036d3(0xa97)] = Cesium[_0x3036d3(0x5ab)][_0x3036d3(0x20e)](_0x98dae9[_0x3036d3(0x896)], _0x98dae9['invModelMatrix']);
                        }
                        if (Cesium[_0x3036d3(0x14b)](_0x90cd12[_0x3036d3(0x169)])) {
                            let _0x4dd253 = _0x90cd12[_0x3036d3(0x169)][_0x3036d3(0x4b6)]
                                , _0x5bcc40 = _0x90cd12[_0x3036d3(0x169)][_0x3036d3(0x129)]
                                , _0x244f7d = _0x90cd12[_0x3036d3(0x169)][_0x3036d3(0x3e2)]
                                , _0x173fee = _0x90cd12['geoBounds'][_0x3036d3(0x7e2)];
                            _0x4dd253 > 0xb4 || _0x173fee > 0xb4 || _0x244f7d > 0xb4 || _0x5bcc40 > 0xb4 ? (_0x4dd253 /= 0x615299,
                                _0x173fee /= 0x615299,
                                _0x244f7d /= 0x615299,
                                _0x5bcc40 /= 0x615299,
                                _0x98dae9['_rectangle'] = new Cesium[(_0x3036d3(0x57c))](_0x4dd253, _0x173fee, _0x244f7d, _0x5bcc40)) : _0x98dae9[_0x3036d3(0x69f)] = Cesium[_0x3036d3(0x57c)][_0x3036d3(0xa08)](_0x4dd253, _0x173fee, _0x244f7d, _0x5bcc40);
                        }
                        if (_0x90cd12[_0x3036d3(0x892)] && (_0x98dae9['_minHeight'] = _0x90cd12[_0x3036d3(0x892)]['min'],
                            _0x98dae9[_0x3036d3(0x12b)] = _0x90cd12[_0x3036d3(0x892)][_0x3036d3(0x212)]),
                            _0x90cd12[_0x3036d3(0x337)]) {
                            let _0x37802f = _0x90cd12[_0x3036d3(0x337)][_0x3036d3(0x244)];
                            _0x98dae9[_0x3036d3(0x956)] = _0x37802f[_0x3036d3(0x412)],
                                _0x98dae9[_0x3036d3(0x9e0)] = _0x37802f[_0x3036d3(0x212)];
                        }
                        (_0x2bb707[_0x3036d3(0x704)](_0x3036d3(0x684)) && (_0x98dae9['_isTransparencyOptimization'] = _0x3036d3(0xa15) === _0x2bb707[_0x3036d3(0x684)]),
                            _0x90cd12[_0x3036d3(0x730)][_0x3036d3(0x376)] > 0x0) && ('s3mblock' === Cesium['getExtensionFromUri'](_0x90cd12['tiles'][0x0][_0x3036d3(0xa62)]) && (_0x98dae9[_0x3036d3(0xac2)] = !0x0));
                        for (let _0xae6895 = 0x0, _0x2ccf1c = _0x90cd12['tiles'][_0x3036d3(0x376)]; _0xae6895 < _0x2ccf1c; _0xae6895++) {
                            let _0x1f8a7a = _0x90cd12[_0x3036d3(0x730)][_0xae6895][_0x3036d3(0xa62)]
                                , _0x426f05 = {
                                    'box': _0x90cd12['tiles'][_0xae6895][_0x3036d3(0x7d0)]
                                }
                                , _0x29a3c5 = new _0x5e463c(_0x98dae9, void 0x0, _0x426f05, _0x1f8a7a);
                            _0x29a3c5['isRootTile'] = !0x0,
                                _0x29a3c5[_0x3036d3(0x3a0)] = _0x1f8a7a,
                                _0x98dae9[_0x3036d3(0x25d)]['add'](_0x29a3c5),
                                _0x98dae9[_0x3036d3(0x5f3)][_0x3036d3(0x745)](_0x29a3c5);
                        }
                        !function (_0x306ff8, _0x5b5f8a) {
                            const _0x228526 = _0x3036d3;
                            let _0x125a30 = _0x5b5f8a[_0x228526(0x759)];
                            if (!_0x125a30 || !_0x125a30[_0x228526(0x48b)])
                                return;
                            let _0x25065b = _0x125a30['attachFiles']
                                , _0x6ec55e = [];
                            _0x306ff8[_0x228526(0x311)];
                            for (let _0x72a001 = 0x0, _0x72f5fa = _0x25065b[_0x228526(0x376)]; _0x72a001 < _0x72f5fa; _0x72a001++) {
                                let _0x29748d = _0x25065b[_0x72a001][_0x228526(0x7af)];
                                if (_0x29748d[_0x228526(0xa59)](_0x228526(0x405)) > 0x0) {
                                    let _0x32a1ae = _0x4dc886(_0x29748d, _0x306ff8)
                                        , _0x48d034 = _0x306ff8[_0x228526(0x50e)][_0x228526(0x139)]({
                                            'url': _0x32a1ae
                                        });
                                    _0x6ec55e['push'](_0x48d034['fetchXML']());
                                }
                            }
                            _0x6ec55e[_0x228526(0x376)] && Promise[_0x228526(0x738)](_0x6ec55e)[_0x228526(0x685)](_0x5b2681 => {
                                const _0x5ebcfd = _0x228526;
                                let _0x52d726 = [];
                                for (let _0xfd88f2 = 0x0, _0x31ce54 = _0x5b2681['length']; _0xfd88f2 < _0x31ce54; _0xfd88f2++) {
                                    let _0x3d3cba = _0x5b2681[_0xfd88f2];
                                    if (!_0x3d3cba)
                                        break;
                                    let _0xb90f7e = _0x5624de(_0x3d3cba);
                                    _0x52d726[_0x5ebcfd(0x745)](_0xb90f7e);
                                }
                                _0x306ff8[_0x5ebcfd(0x2f5)] = new Cesium[(_0x5ebcfd(0x869))](),
                                    _0x306ff8[_0x5ebcfd(0x75a)] = {};
                                let _0x334252 = _0x52d726[0x0];
                                _0x306ff8['_waterParameters'][_0x5ebcfd(0x536)] = _0x334252[_0x5ebcfd(0x536)];
                                for (let _0x593daf = 0x0; _0x593daf < _0x334252['gpuProgramParameters']['length']; _0x593daf++) {
                                    let _0x405b8b = _0x334252[_0x5ebcfd(0x63b)][_0x593daf];
                                    for (let _0x3ef26c = 0x0; _0x3ef26c < _0x405b8b[_0x5ebcfd(0x875)][_0x5ebcfd(0x376)]; _0x3ef26c++) {
                                        let _0x46bf51 = _0x405b8b['atuoConstants'][_0x3ef26c];
                                        if (_0x5ebcfd(0xa13) === _0x46bf51[_0x5ebcfd(0x770)]) {
                                            _0x306ff8[_0x5ebcfd(0x75a)][_0x46bf51['name']] = _0x46bf51[_0x5ebcfd(0x8a6)];
                                            break;
                                        }
                                    }
                                    for (let _0x2d0743 = 0x0; _0x2d0743 < _0x405b8b['gpuConstants'][_0x5ebcfd(0x376)]; _0x2d0743++) {
                                        let _0x401cb2 = _0x405b8b['gpuConstants'][_0x2d0743]
                                            , _0x374561 = null;
                                        switch (_0x401cb2[_0x5ebcfd(0x7c1)]) {
                                            case 0x1:
                                                _0x374561 = _0x401cb2[_0x5ebcfd(0x471)][0x0];
                                                break;
                                            case 0x2:
                                                _0x374561 = new Cesium['Cartesian2'](),
                                                    Cesium['Cartesian2'][_0x5ebcfd(0x64f)](_0x401cb2[_0x5ebcfd(0x471)], 0x0, _0x374561);
                                                break;
                                            case 0x3:
                                                _0x374561 = new Cesium[(_0x5ebcfd(0x85d))](),
                                                    Cesium['Cartesian3'][_0x5ebcfd(0x64f)](_0x401cb2[_0x5ebcfd(0x471)], 0x0, _0x374561);
                                                break;
                                            case 0x4:
                                                _0x374561 = new Cesium[(_0x5ebcfd(0x747))](),
                                                    Cesium[_0x5ebcfd(0x747)][_0x5ebcfd(0x64f)](_0x401cb2[_0x5ebcfd(0x471)], 0x0, _0x374561);
                                        }
                                        _0x374561 && (_0x306ff8[_0x5ebcfd(0x75a)][_0x401cb2[_0x5ebcfd(0x770)]] = _0x374561);
                                    }
                                }
                                _0x306ff8[_0x5ebcfd(0x3a7)] += _0x5ebcfd(0x30d);
                            }
                            )['catch'](_0x2dbe36 => {
                                const _0x31e1b2 = _0x228526;
                                console[_0x31e1b2(0x9d4)](_0x2dbe36);
                            }
                            );
                        }(_0x98dae9, _0x90cd12);
                    } else {
                        let _0x1a686a = _0x90cd12['firstChild']
                            , _0x52f961 = _0x1a686a[_0x3036d3(0x365)];
                        _0x98dae9[_0x3036d3(0x3a7)] = _0x5aff14[_0x3036d3(0x1cf)](_0x1a686a, _0x3036d3(0x6c2), _0x52f961);
                        let _0x40d583 = _0x5aff14['queryFirstNode'](_0x1a686a, _0x3036d3(0xaa2), _0x52f961)
                            , _0xa2ef81 = _0x5aff14[_0x3036d3(0x9c7)](_0x40d583, 'X', _0x52f961)
                            , _0x249a0a = _0x5aff14[_0x3036d3(0x9c7)](_0x40d583, 'Y', _0x52f961)
                            , _0x2e57e2 = _0x5aff14[_0x3036d3(0x9c7)](_0x40d583, 'Z', _0x52f961);
                        _0x98dae9['lon'] = _0xa2ef81,
                            _0x98dae9[_0x3036d3(0x141)] = _0x249a0a,
                            _0x98dae9[_0x3036d3(0x88d)] = _0x2e57e2,
                            _0x98dae9[_0x3036d3(0x9c2)] = Cesium[_0x3036d3(0x85d)]['fromDegrees'](_0xa2ef81, _0x249a0a, _0x2e57e2),
                            _0x98dae9[_0x3036d3(0x896)] = Cesium[_0x3036d3(0x1a1)][_0x3036d3(0x580)](_0x98dae9['_position']),
                            _0x98dae9[_0x3036d3(0xa97)] = Cesium[_0x3036d3(0x5ab)][_0x3036d3(0x20e)](_0x98dae9[_0x3036d3(0x896)], _0x98dae9[_0x3036d3(0xa97)]);
                        let _0xf57aed = _0x5aff14[_0x3036d3(0x2fd)](_0x1a686a, _0x3036d3(0x6f3), _0x52f961)
                            , _0x3e133a = _0x5aff14[_0x3036d3(0x2fd)](_0x1a686a, _0x3036d3(0x387), _0x52f961);
                        if (_0xf57aed) {
                            let _0x3711a2 = _0x5aff14[_0x3036d3(0x9c7)](_0xf57aed, _0x3036d3(0x742), _0x52f961)
                                , _0x3ebecb = _0x5aff14[_0x3036d3(0x9c7)](_0xf57aed, 'Top', _0x52f961)
                                , _0x57d297 = _0x5aff14['queryNumericValue'](_0xf57aed, _0x3036d3(0xd0), _0x52f961)
                                , _0x495472 = _0x5aff14[_0x3036d3(0x9c7)](_0xf57aed, 'Bottom', _0x52f961);
                            _0x98dae9['_rectangle'] = Cesium[_0x3036d3(0x57c)][_0x3036d3(0xa08)](_0x3711a2, _0x495472, _0x57d297, _0x3ebecb);
                        } else {
                            if (_0x3e133a) {
                                let _0x3efc5a = _0x5aff14[_0x3036d3(0x9c7)](_0x3e133a, _0x3036d3(0x921), _0x52f961)
                                    , _0x5bf42f = _0x5aff14['queryNumericValue'](_0x3e133a, _0x3036d3(0x2e4), _0x52f961);
                                _0x5aff14[_0x3036d3(0x9c7)](_0x3e133a, 'MinZ', _0x52f961);
                                let _0x12d1c5 = _0x5aff14[_0x3036d3(0x9c7)](_0x3e133a, _0x3036d3(0x572), _0x52f961)
                                    , _0xf7f649 = _0x5aff14['queryNumericValue'](_0x3e133a, _0x3036d3(0x6d8), _0x52f961);
                                _0x5aff14['queryNumericValue'](_0x3e133a, _0x3036d3(0x74b), _0x52f961),
                                    _0x3efc5a = 0xb4 * Math[_0x3036d3(0xa8b)](_0x3efc5a) / (0x615299 * Math['PI']),
                                    _0x5bf42f = 0xb4 * Math[_0x3036d3(0xa8b)](_0x5bf42f) / (0x615299 * Math['PI']),
                                    _0x12d1c5 = 0xb4 * Math['abs'](_0x12d1c5) / (0x615299 * Math['PI']),
                                    _0xf7f649 = 0xb4 * Math['abs'](_0xf7f649) / (0x615299 * Math['PI']),
                                    _0x98dae9[_0x3036d3(0x69f)] = Cesium['Rectangle'][_0x3036d3(0xa08)](_0xa2ef81 - _0x3efc5a, _0x249a0a - _0x5bf42f, _0xa2ef81 + _0x12d1c5, _0x249a0a + _0xf7f649);
                            }
                        }
                        let _0x39c319 = _0x5aff14['queryFirstNode'](_0x1a686a, 'HeightRange', _0x52f961);
                        _0x39c319 && (_0x98dae9['_minHeight'] = _0x5aff14[_0x3036d3(0x9c7)](_0x39c319, _0x3036d3(0x607), _0x52f961),
                            _0x98dae9[_0x3036d3(0x12b)] = _0x5aff14[_0x3036d3(0x9c7)](_0x39c319, _0x3036d3(0x167), _0x52f961));
                        let _0x2e65e1 = _0x5aff14['queryFirstNode'](_0x1a686a, _0x3036d3(0x16e), _0x52f961);
                        _0x2e65e1 && (_0x98dae9[_0x3036d3(0x9e0)] = _0x5aff14[_0x3036d3(0x9c7)](_0x2e65e1, _0x3036d3(0x46e), _0x52f961),
                            _0x98dae9[_0x3036d3(0x956)] = _0x5aff14[_0x3036d3(0x9c7)](_0x2e65e1, _0x3036d3(0x392), _0x52f961));
                        let _0x4ef239 = _0x5aff14[_0x3036d3(0x2fd)](_0x1a686a, _0x3036d3(0x51b), _0x52f961);
                        _0x98dae9['_isTransparencyOptimization'] = _0x5aff14[_0x3036d3(0xaad)](_0x4ef239, _0x3036d3(0x14f), _0x52f961);
                        let _0x41291e = /\\+/g
                            , _0x122370 = _0x5aff14[_0x3036d3(0x2fd)](_0x1a686a, _0x3036d3(0x79c), _0x52f961)
                            , _0x56bc81 = _0x5aff14[_0x3036d3(0x8a7)](_0x122370, _0x3036d3(0x834), _0x52f961);
                        if (_0x56bc81['length'] > 0x0)
                            for (let _0x407aa7 = 0x0, _0x36283d = _0x56bc81[_0x3036d3(0x376)]; _0x407aa7 < _0x36283d; _0x407aa7++) {
                                let _0x11c544 = _0x56bc81[_0x407aa7]
                                    , _0x4b19ed = _0x5aff14[_0x3036d3(0x1cf)](_0x11c544, 'FileName', _0x52f961);
                                _0x4b19ed = _0x4b19ed[_0x3036d3(0x3ed)](_0x41291e, '/'),
                                    _0x4b19ed = _0x4b19ed[_0x3036d3(0x3ed)](/(\.osgb)/gi, _0x3036d3(0x8eb));
                                let _0x24e4f6 = _0x5aff14[_0x3036d3(0x2fd)](_0x11c544, _0x3036d3(0xa4a), _0x52f961)
                                    , _0x3bcafd = {
                                        'sphere': {
                                            'center': {
                                                'x': 0x0,
                                                'y': 0x0,
                                                'z': 0x0
                                            },
                                            'radius': 0x615299
                                        }
                                    };
                                _0x24e4f6 && _0x24e4f6['childNodes']['length'] && (_0x3bcafd = {
                                    'sphere': {
                                        'center': {
                                            'x': _0x5aff14[_0x3036d3(0x9c7)](_0x24e4f6, 'CenterX', _0x52f961),
                                            'y': _0x5aff14['queryNumericValue'](_0x24e4f6, 'CenterY', _0x52f961),
                                            'z': _0x5aff14[_0x3036d3(0x9c7)](_0x24e4f6, _0x3036d3(0x6bb), _0x52f961)
                                        },
                                        'radius': _0x5aff14[_0x3036d3(0x9c7)](_0x24e4f6, _0x3036d3(0x31f), _0x52f961)
                                    }
                                });
                                let _0x6e276 = new _0x5e463c(_0x98dae9, void 0x0, _0x3bcafd, _0x4b19ed);
                                _0x6e276['isRootTile'] = !0x0,
                                    _0x98dae9[_0x3036d3(0x25d)][_0x3036d3(0x9cb)](_0x6e276),
                                    _0x98dae9['_rootTiles'][_0x3036d3(0x745)](_0x6e276);
                            }
                        else {
                            let _0x3c9b29 = _0x5aff14[_0x3036d3(0x8a7)](_0x122370, 'FileName', _0x52f961);
                            for (let _0x3b26c0 = 0x0, _0x19a3a6 = _0x3c9b29[_0x3036d3(0x376)]; _0x3b26c0 < _0x19a3a6; _0x3b26c0++) {
                                let _0x38ab7c = _0x3c9b29[_0x3b26c0][_0x3036d3(0x133)];
                                _0x38ab7c = _0x38ab7c[_0x3036d3(0x3ed)](_0x41291e, '/'),
                                    _0x38ab7c = _0x38ab7c[_0x3036d3(0x3ed)](/(\.osgb)/gi, _0x3036d3(0x8eb));
                                let _0x57f420 = new _0x5e463c(_0x98dae9, void 0x0, {
                                    'sphere': {
                                        'center': {
                                            'x': 0x0,
                                            'y': 0x0,
                                            'z': 0x0
                                        },
                                        'radius': 0x615299
                                    }
                                }, _0x38ab7c);
                                _0x57f420['isRootTile'] = !0x0,
                                    _0x98dae9[_0x3036d3(0x25d)][_0x3036d3(0x9cb)](_0x57f420),
                                    _0x98dae9[_0x3036d3(0x5f3)]['push'](_0x57f420);
                            }
                        }
                    }
                    _0x98dae9['_readyPromise'][_0x3036d3(0x1d5)](_0x98dae9);
                }, _0x11e6f3 => {
                    const _0x4ca8b5 = _0x1e2eb8;
                    _0x98dae9[_0x4ca8b5(0x3e8)][_0x4ca8b5(0x7aa)](_0x11e6f3);
                }
                );
            }
            ,
            _0x2dd123['prototype'][_0x324b8e(0x352)] = function () {
                const _0x33aa7d = _0x324b8e;
                this[_0x33aa7d(0x6d0)][_0x33aa7d(0x376)] < 0x1 || (this[_0x33aa7d(0x7b2)](this['_selections'], _0x1645f2[_0x33aa7d(0x462)]),
                    this[_0x33aa7d(0x6d0)]['length'] = 0x0);
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)]['setLodRangeScale'] = function (_0x19eb5a) {
                const _0x562b6b = _0x324b8e;
                this[_0x562b6b(0xa3b)] = _0x19eb5a;
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0xa5f)] = function (_0x3cf108) {
                const _0x130137 = _0x324b8e;
                Cesium[_0x130137(0x636)]['defined'](_0x130137(0x283), _0x3cf108),
                    this[_0x130137(0x3d4)] && (Array[_0x130137(0x43e)](_0x3cf108) || (_0x3cf108 = [_0x3cf108]),
                        this[_0x130137(0x15c)] || this[_0x130137(0x352)](),
                        this[_0x130137(0x6d0)] = this[_0x130137(0x6d0)][_0x130137(0x5f5)](_0x3cf108),
                        this[_0x130137(0x58e)](_0x3cf108, _0x1645f2[_0x130137(0x462)]));
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)]['getSelection'] = function () {
                const _0x3a8165 = _0x324b8e;
                return [][_0x3a8165(0x5f5)](this[_0x3a8165(0x6d0)]);
            }
            ,
            _0x2dd123['prototype'][_0x324b8e(0x2e0)] = function (_0x4d449a, _0x225892) {
                const _0x493f52 = _0x324b8e;
                Cesium['Check'][_0x493f52(0x14b)](_0x493f52(0x44e), _0x4d449a),
                    Cesium['Check'][_0x493f52(0x14b)]('setObjsColor\x20color', _0x225892),
                    Cesium[_0x493f52(0x636)][_0x493f52(0x8d8)][_0x493f52(0x3f0)](_0x493f52(0x490), _0x225892),
                    Array[_0x493f52(0x43e)](_0x4d449a) || (_0x4d449a = [_0x4d449a]);
                let _0x13a4a4 = {};
                for (let _0xa04047 = 0x0, _0x2202d0 = _0x4d449a[_0x493f52(0x376)]; _0xa04047 < _0x2202d0; _0xa04047++) {
                    let _0xa541c9 = _0x4d449a[_0xa04047] + '';
                    Cesium[_0x493f52(0x14b)](_0xa541c9) && (this[_0x493f52(0x35f)][_0xa541c9] = _0x225892,
                        _0x13a4a4[_0xa541c9] = _0x225892);
                }
                this['_updateObjsColor'](_0x13a4a4);
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0x946)] = function (_0x4c5800) {
                const _0x3b0426 = _0x324b8e;
                Cesium['Check'][_0x3b0426(0x14b)](_0x3b0426(0x4b1), _0x4c5800),
                    Array[_0x3b0426(0x43e)](_0x4c5800) || (_0x4c5800 = [_0x4c5800]);
                let _0x9dd63 = {};
                for (let _0x294952 = 0x0, _0x3e78b7 = _0x4c5800['length']; _0x294952 < _0x3e78b7; _0x294952++) {
                    let _0x326e87 = _0x4c5800[_0x294952];
                    Cesium['defined'](this['_objsColorList'][_0x326e87]) && (_0x9dd63[_0x326e87] = Cesium['Color'][_0x3b0426(0x5cb)],
                        delete this[_0x3b0426(0x35f)][_0x326e87]);
                }
                this[_0x3b0426(0x7b2)](_0x4c5800, _0x1645f2[_0x3b0426(0x3b6)]),
                    this['_updateObjsColor'](_0x9dd63);
            }
            ,
            _0x2dd123['prototype']['setOnlyObjsVisible'] = function (_0x2492fb, _0x1bb090) {
                const _0x578445 = _0x324b8e;
                if (Cesium['Check'][_0x578445(0x14b)](_0x578445(0x830), _0x2492fb),
                    Cesium[_0x578445(0x636)]['typeOf']['bool']('setOnlyObjsVisible\x20isVisible', _0x1bb090),
                    Array['isArray'](_0x2492fb) || (_0x2492fb = [_0x2492fb]),
                    0x0 === _0x2492fb[_0x578445(0x376)]) {
                    this['_allObjsHide'] = _0x1bb090,
                        this[_0x578445(0xa09)][_0x578445(0x307)]();
                    let _0x36b124 = Object[_0x578445(0x698)](this[_0x578445(0x6f6)][_0x578445(0x17f)]);
                    return this[_0x578445(0x7b2)](_0x36b124, _0x1645f2['HIDE']),
                        this[_0x578445(0x6f6)][_0x578445(0x307)](),
                        void this[_0x578445(0x6d3)](!_0x1bb090);
                }
                let _0x527eed = this[_0x578445(0xa09)]
                    , _0x1cc506 = this[_0x578445(0x6f6)];
                this[_0x578445(0xa0a)],
                    _0x1bb090 ? (_0x2492fb[_0x578445(0xa64)](function (_0x1065dd) {
                        const _0x362ffa = _0x578445;
                        _0x527eed[_0x362ffa(0x414)](_0x1065dd, !0x0),
                            _0x1cc506[_0x362ffa(0x77c)](_0x1065dd);
                    }),
                        this[_0x578445(0x7b2)](_0x2492fb, _0x1645f2['HIDE'])) : (_0x2492fb[_0x578445(0xa64)](function (_0x528315) {
                            const _0x1e0966 = _0x578445;
                            _0x527eed[_0x1e0966(0x77c)](_0x528315),
                                _0x1cc506[_0x1e0966(0x414)](_0x528315, !0x0);
                        }),
                            this[_0x578445(0x58e)](_0x2492fb, _0x1645f2[_0x578445(0x2be)]));
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0x52a)] = function (_0x557af9, _0x5cfb8a) {
                const _0x5594ea = _0x324b8e;
                0x0 !== _0x557af9['length'] ? (this['setOnlyObjsVisible']([], _0x5cfb8a),
                    this[_0x5594ea(0x60e)](_0x557af9, _0x5cfb8a)) : this[_0x5594ea(0x60e)]([], _0x5cfb8a);
            }
            ,
            _0x2dd123['prototype'][_0x324b8e(0x14a)] = function (_0x3fe3d4, _0x15b43a, _0x4e0483, _0x5c15bf) {
                const _0x3745b0 = _0x324b8e;
                this['_sceneMode'] === Cesium[_0x3745b0(0x6b8)]['COLUMBUS_VIEW'] && (_0x3fe3d4 = _0x8b8ee5(_0x3fe3d4),
                    _0x15b43a = _0x8b8ee5(_0x15b43a),
                    _0x4e0483 = _0x8b8ee5(_0x4e0483)),
                    this[_0x3745b0(0x7a8)][0x0] = _0x571ad8(_0x3fe3d4, _0x15b43a, _0x4e0483),
                    this['_clipMode'] = _0x522d4d['CLIP_BEHIND_ALL_PLANE'],
                    this['_enableClipPlane'] = !0x0,
                    this[_0x3745b0(0x314)] || this[_0x3745b0(0x537)]({
                        'enable': !0x0
                    }, _0x4c9434),
                    this[_0x3745b0(0x314)] = !0x0;
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0xa03)] = function (_0x123dff) {
                const _0x37cbe5 = _0x324b8e;
                if (!((_0x123dff = _0x123dff || {})[_0x37cbe5(0x86d)] && _0x123dff['position'] || _0x123dff[_0x37cbe5(0x8c9)] && _0x123dff[_0x37cbe5(0x760)]))
                    throw new Cesium[(_0x37cbe5(0x335))](_0x37cbe5(0x173));
                if (this[_0x37cbe5(0x96e)] = _0x522d4d['CLIP_BEHIND_ALL_PLANE'],
                    Cesium[_0x37cbe5(0x14b)](_0x123dff[_0x37cbe5(0x7f6)]))
                    switch (_0x123dff[_0x37cbe5(0x7f6)]) {
                        case _0x37cbe5(0xa28):
                            this[_0x37cbe5(0x96e)] = _0x522d4d['CLIP_BEHIND_ANY_PLANE'];
                            break;
                        case _0x37cbe5(0x7ef):
                            this[_0x37cbe5(0x96e)] = _0x522d4d['CLIP_BEHIND_ALL_PLANE'];
                            break;
                        case _0x37cbe5(0x8b8):
                            this[_0x37cbe5(0x96e)] = _0x522d4d['ONLY_KEEP_LINE'];
                    }
                if (_0x123dff[_0x37cbe5(0x86d)]) {
                    let _0x4e3380, _0x2bcbda, _0x237ebb, _0x1e5feb = new Cesium[(_0x37cbe5(0x5ab))](), _0x451da6 = _0x123dff[_0x37cbe5(0x15e)];
                    _0x4e3380 = _0x123dff[_0x37cbe5(0x97a)] || 0x0,
                        _0x2bcbda = _0x123dff['pitch'] || 0x0,
                        _0x237ebb = _0x123dff['roll'] || 0x0;
                    let _0x32c80a, _0x17bbdb, _0x59e4b5, _0x1cf3df = new Cesium['HeadingPitchRoll'](_0x4e3380, _0x2bcbda, _0x237ebb);
                    if (this['_sceneMode'] === Cesium['SceneMode'][_0x37cbe5(0x9cc)])
                        _0x1e5feb = Cesium['Transforms']['headingPitchRollToFixedFrame'](_0x451da6, _0x1cf3df, Cesium[_0x37cbe5(0x8f3)][_0x37cbe5(0x47b)]);
                    else {
                        _0x1cf3df = new Cesium['HeadingPitchRoll'](_0x2bcbda, -_0x237ebb, -_0x4e3380);
                        let _0x3dfa4f = _0x8b8ee5(_0x451da6);
                        Cesium['Matrix4'][_0x37cbe5(0x34a)](Cesium['Matrix4'][_0x37cbe5(0x157)](Cesium[_0x37cbe5(0x5ab)][_0x37cbe5(0x57f)]), _0x3dfa4f, _0x1e5feb);
                        let _0x291be4 = Cesium[_0x37cbe5(0x120)][_0x37cbe5(0x7c7)](_0x1cf3df);
                        Cesium[_0x37cbe5(0x5ab)]['multiplyByMatrix3'](_0x1e5feb, _0x291be4, _0x1e5feb);
                    }
                    this[_0x37cbe5(0x817)] === Cesium[_0x37cbe5(0x6b8)]['SCENE3D'] ? (_0x32c80a = 0.5 * _0x123dff['dimensions']['x'],
                        _0x17bbdb = 0.5 * _0x123dff[_0x37cbe5(0x86d)]['y'],
                        _0x59e4b5 = 0.5 * _0x123dff[_0x37cbe5(0x86d)]['z']) : (_0x32c80a = 0.5 * _0x123dff[_0x37cbe5(0x86d)]['z'],
                            _0x17bbdb = 0.5 * _0x123dff[_0x37cbe5(0x86d)]['x'],
                            _0x59e4b5 = 0.5 * _0x123dff['dimensions']['y']);
                    let _0x3015c5 = [];
                    _0x3015c5[0x0] = new Cesium[(_0x37cbe5(0x747))](-_0x32c80a, _0x17bbdb, _0x59e4b5, 0x1),
                        _0x3015c5[0x1] = new Cesium[(_0x37cbe5(0x747))](_0x32c80a, _0x17bbdb, _0x59e4b5, 0x1),
                        _0x3015c5[0x2] = new Cesium[(_0x37cbe5(0x747))](_0x32c80a, -_0x17bbdb, _0x59e4b5, 0x1),
                        _0x3015c5[0x3] = new Cesium['Cartesian4'](-_0x32c80a, -_0x17bbdb, _0x59e4b5, 0x1),
                        _0x3015c5[0x4] = new Cesium['Cartesian4'](-_0x32c80a, _0x17bbdb, -_0x59e4b5, 0x1),
                        _0x3015c5[0x5] = new Cesium['Cartesian4'](_0x32c80a, _0x17bbdb, -_0x59e4b5, 0x1),
                        _0x3015c5[0x6] = new Cesium[(_0x37cbe5(0x747))](_0x32c80a, -_0x17bbdb, -_0x59e4b5, 0x1),
                        _0x3015c5[0x7] = new Cesium[(_0x37cbe5(0x747))](-_0x32c80a, -_0x17bbdb, -_0x59e4b5, 0x1);
                    for (let _0x350569 = 0x0; _0x350569 < 0x8; _0x350569++)
                        Cesium['Matrix4'][_0x37cbe5(0xa2d)](_0x1e5feb, _0x3015c5[_0x350569], _0x3015c5[_0x350569]);
                    this[_0x37cbe5(0x7a8)][0x0] = Cesium['Cartesian4'][_0x37cbe5(0x157)](_0x571ad8(_0x3015c5[0x0], _0x3015c5[0x1], _0x3015c5[0x2])),
                        this[_0x37cbe5(0x7a8)][0x1] = Cesium[_0x37cbe5(0x747)]['clone'](_0x571ad8(_0x3015c5[0x0], _0x3015c5[0x4], _0x3015c5[0x1])),
                        this[_0x37cbe5(0x7a8)][0x2] = Cesium[_0x37cbe5(0x747)][_0x37cbe5(0x157)](_0x571ad8(_0x3015c5[0x0], _0x3015c5[0x3], _0x3015c5[0x4])),
                        this['_oriClipPlane'][0x3] = Cesium[_0x37cbe5(0x747)][_0x37cbe5(0x157)](_0x571ad8(_0x3015c5[0x6], _0x3015c5[0x2], _0x3015c5[0x5])),
                        this[_0x37cbe5(0x7a8)][0x4] = Cesium[_0x37cbe5(0x747)][_0x37cbe5(0x157)](_0x571ad8(_0x3015c5[0x6], _0x3015c5[0x7], _0x3015c5[0x2])),
                        this['_oriClipPlane'][0x5] = Cesium[_0x37cbe5(0x747)][_0x37cbe5(0x157)](_0x571ad8(_0x3015c5[0x6], _0x3015c5[0x5], _0x3015c5[0x7]));
                } else
                    for (let _0x49b965 = 0x0; _0x49b965 < _0x123dff['planePos'][_0x37cbe5(0x376)]; _0x49b965++) {
                        let _0x3cc28e = _0x123dff[_0x37cbe5(0x8c9)][_0x49b965]
                            , _0x5444c6 = _0x123dff[_0x37cbe5(0x760)][_0x49b965];
                        this[_0x37cbe5(0x7a8)][_0x49b965]['x'] = _0x5444c6['x'],
                            this[_0x37cbe5(0x7a8)][_0x49b965]['y'] = _0x5444c6['y'],
                            this[_0x37cbe5(0x7a8)][_0x49b965]['z'] = _0x5444c6['z'],
                            this[_0x37cbe5(0x7a8)][_0x49b965]['w'] = -Cesium[_0x37cbe5(0x85d)][_0x37cbe5(0x908)](_0x3cc28e, _0x5444c6);
                    }
                this['_enableClip'] || this['_tranverseRenderEntity']({
                    'enable': !0x0
                }, _0x4c9434),
                    this['_enableClip'] = !0x0;
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0x473)] = function () {
                const _0x514788 = _0x324b8e;
                this[_0x514788(0x314)] = !0x1,
                    this[_0x514788(0x151)] = !0x1,
                    this[_0x514788(0x537)]({
                        'enable': !0x1
                    }, _0x4c9434);
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)]['_tranverseRenderEntity'] = function (_0x39e242, _0x3168b4) {
                const _0x1ebeec = _0x324b8e;
                let _0x13f162 = [];
                for (let _0x26520b = 0x0, _0x47a68e = this[_0x1ebeec(0x5f3)][_0x1ebeec(0x376)]; _0x26520b < _0x47a68e; _0x26520b++) {
                    let _0x38a0c7 = this[_0x1ebeec(0x5f3)][_0x26520b];
                    _0x13f162[_0x1ebeec(0x745)](_0x38a0c7);
                }
                for (; _0x13f162[_0x1ebeec(0x376)];) {
                    let _0x36d229 = _0x13f162[_0x1ebeec(0x6c4)]();
                    for (let _0x1f89a9 = 0x0, _0x18b35f = _0x36d229[_0x1ebeec(0x6a2)][_0x1ebeec(0x376)]; _0x1f89a9 < _0x18b35f; _0x1f89a9++) {
                        const _0x14ccae = _0x36d229[_0x1ebeec(0x6a2)][_0x1f89a9];
                        for (let _0x49f6b0 = 0x0, _0xb9ddc2 = _0x14ccae['length']; _0x49f6b0 < _0xb9ddc2; _0x49f6b0++)
                            _0x14ccae[_0x49f6b0][_0x1ebeec(0x84b)] && _0x3168b4(_0x14ccae[_0x49f6b0], _0x39e242);
                    }
                    for (let _0x40924a = 0x0, _0x2fd417 = _0x36d229[_0x1ebeec(0xabe)][_0x1ebeec(0x376)]; _0x40924a < _0x2fd417; _0x40924a++)
                        _0x13f162[_0x1ebeec(0x745)](_0x36d229[_0x1ebeec(0xabe)][_0x40924a]);
                }
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0x60d)] = function (_0x4c6c94) {
                const _0xf20e76 = _0x324b8e;
                this[_0xf20e76(0x537)]({
                    'ids': _0x4c6c94
                }, _0x43ded1);
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0x962)] = function (_0x32a438) {
                const _0x2f64e2 = _0x324b8e;
                this[_0x2f64e2(0x537)]({
                    'ids': _0x32a438
                }, _0x357aa7);
            }
            ,
            _0x2dd123['prototype'][_0x324b8e(0x6d3)] = function (_0x24ffb6) {
                const _0x545098 = _0x324b8e;
                this[_0x545098(0x537)]({
                    'isVisible': _0x24ffb6
                }, _0x1b5a0f);
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0x58e)] = function (_0x4e6e1d, _0x4231ee) {
                const _0x3c703a = _0x324b8e;
                Cesium[_0x3c703a(0x636)][_0x3c703a(0x14b)](_0x3c703a(0x5a1), _0x4e6e1d),
                    Cesium[_0x3c703a(0x636)][_0x3c703a(0x14b)](_0x3c703a(0x6b7), _0x4231ee),
                    Array[_0x3c703a(0x43e)](_0x4e6e1d) || (_0x4e6e1d = [_0x4e6e1d]);
                let _0x1b5338, _0x37d2c6 = new Cesium[(_0x3c703a(0x869))]();
                for (let _0x3d9a22 = 0x0, _0x9e2076 = _0x4e6e1d[_0x3c703a(0x376)]; _0x3d9a22 < _0x9e2076; _0x3d9a22++) {
                    if (_0x1b5338 = _0x4e6e1d[_0x3d9a22],
                        !Cesium[_0x3c703a(0x14b)](_0x1b5338))
                        continue;
                    let _0x2443db = Cesium[_0x3c703a(0x225)](this['_objsOperationList'][_0x3c703a(0xa61)](_0x1b5338), 0x0);
                    _0x2443db !== _0x4231ee && (_0x2443db |= _0x4231ee,
                        this[_0x3c703a(0x1e5)][_0x3c703a(0x414)](_0x1b5338, _0x2443db),
                        _0x37d2c6[_0x3c703a(0x414)](_0x1b5338, _0x2443db));
                }
                _0x37d2c6[_0x3c703a(0x376)] > 0x0 && this[_0x3c703a(0x60d)](_0x37d2c6);
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0x7b2)] = function (_0x40c29f, _0x12a937) {
                const _0x25893d = _0x324b8e;
                Cesium[_0x25893d(0x636)][_0x25893d(0x14b)]('set\x20Objs\x20Operation\x20ids', _0x40c29f),
                    Array['isArray'](_0x40c29f) || (_0x40c29f = [_0x40c29f]);
                let _0xcc4934, _0x243040 = _0x1645f2[_0x25893d(0x61d)] ^ _0x12a937, _0x91e80 = new Cesium['AssociativeArray']();
                for (let _0x1108c8 = 0x0, _0x4cd183 = _0x40c29f[_0x25893d(0x376)]; _0x1108c8 < _0x4cd183; _0x1108c8++) {
                    _0xcc4934 = _0x40c29f[_0x1108c8];
                    let _0x55e02e = this['_objsOperationList'][_0x25893d(0xa61)](_0xcc4934);
                    Cesium['defined'](_0x55e02e) && (_0x55e02e &= _0x243040,
                        _0x55e02e === _0x1645f2[_0x25893d(0x4d5)] ? this['_objsOperationList']['remove'](_0xcc4934) : this['_objsOperationList'][_0x25893d(0x414)](_0xcc4934, _0x55e02e),
                        _0x91e80[_0x25893d(0x414)](_0xcc4934, _0x55e02e));
                }
                _0x91e80[_0x25893d(0x376)] > 0x0 && this[_0x25893d(0x60d)](_0x91e80);
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)]['_createRasterRegion'] = function (_0xe87479) {
                const _0x3d8a2c = _0x324b8e;
                let _0x4a83d5 = Cesium[_0x3d8a2c(0x85d)][_0x3d8a2c(0x6c0)](_0xe87479)
                    , _0x26c8d4 = new Cesium[(_0x3d8a2c(0x3bc))]({
                        'polygonHierarchy': {
                            'positions': _0x4a83d5
                        },
                        'perPositionHeight': !0x0
                    })
                    , _0x336214 = Cesium[_0x3d8a2c(0x3bc)][_0x3d8a2c(0x70a)](_0x26c8d4)
                    , _0x1ad59b = new _0x187845();
                return _0x1ad59b[_0x3d8a2c(0xa3d)](_0x336214, this[_0x3d8a2c(0xa97)]),
                    _0x1ad59b[_0x3d8a2c(0x27a)](_0x336214),
                    _0x1ad59b;
            }
            ,
            _0x2dd123['prototype'][_0x324b8e(0xaca)] = function (_0x48e6be) {
                const _0x5a603d = _0x324b8e;
                let _0x37bec6 = _0x48e6be[_0x5a603d(0x770)]
                    , _0x2fe572 = _0x48e6be['position'];
                if (!_0x37bec6 || !_0x2fe572)
                    return;
                let _0x19f02a = this[_0x5a603d(0x460)]
                    , _0x915af0 = _0x19f02a[_0x5a603d(0x2ca)];
                if (_0x915af0['contains'](_0x37bec6))
                    return;
                _0x19f02a[_0x5a603d(0x6ba)] || (_0x19f02a['texture'] = new Cesium['Texture']({
                    'context': this[_0x5a603d(0x56c)],
                    'width': _0x19f02a[_0x5a603d(0x233)],
                    'height': _0x19f02a[_0x5a603d(0x710)],
                    'pixelFormat': Cesium[_0x5a603d(0x480)][_0x5a603d(0x71c)]
                }));
                let _0x1911e7 = this[_0x5a603d(0x699)](_0x2fe572);
                _0x915af0[_0x5a603d(0x414)](_0x37bec6, _0x1911e7),
                    _0x19f02a[_0x5a603d(0x2ff)] = !0x0,
                    0x1 === _0x915af0[_0x5a603d(0x347)]['length'] && this['_tranverseRenderEntity']({
                        'enable': !0x0
                    }, _0x393652);
            }
            ,
            _0x2dd123['prototype'][_0x324b8e(0x858)] = function (_0x15e4eb) {
                const _0x5b29f5 = _0x324b8e;
                let _0x537ee0 = this[_0x5b29f5(0x460)];
                if (!_0x537ee0[_0x5b29f5(0x2ff)])
                    return;
                _0x537ee0['isUpdate'] = !0x1;
                let _0x255e6f = _0x537ee0[_0x5b29f5(0x2ca)]
                    , _0xd8da62 = _0x255e6f['values'][_0x5b29f5(0x376)];
                _0x537ee0[_0x5b29f5(0x552)] = _0xd8da62 > 0x0,
                    _0x537ee0[_0x5b29f5(0x39d)] = function (_0x1e8a30) {
                        const _0x269725 = _0x5b29f5;
                        let _0x233470 = new Cesium[(_0x269725(0x747))](Number['MAX_VALUE'], Number[_0x269725(0x19b)], -Number['MAX_VALUE'], -Number[_0x269725(0x19b)]);
                        for (let _0x18c7ab = 0x0; _0x18c7ab < _0x1e8a30[_0x269725(0x376)]; _0x18c7ab++) {
                            const _0x648dd = _0x1e8a30[_0x18c7ab][_0x269725(0x39d)];
                            _0x233470['x'] = Math[_0x269725(0x412)](_0x648dd['x'], _0x233470['x']),
                                _0x233470['y'] = Math[_0x269725(0x412)](_0x648dd['y'], _0x233470['y']),
                                _0x233470['z'] = Math[_0x269725(0x212)](_0x648dd['z'], _0x233470['z']),
                                _0x233470['w'] = Math['max'](_0x648dd['w'], _0x233470['w']);
                        }
                        return _0x233470;
                    }(_0x255e6f[_0x5b29f5(0x347)]);
                let _0x538ef3 = new Cesium[(_0x5b29f5(0x4e4))]({
                    'color': new Cesium['Color'](0x1, 0x1, 0x1, 0x1),
                    'depth': 0x1
                });
                _0x537ee0['texture'] || (_0x537ee0[_0x5b29f5(0x6ba)] = new Cesium['Texture']({
                    'context': this['context'],
                    'width': _0x537ee0[_0x5b29f5(0x233)],
                    'height': _0x537ee0[_0x5b29f5(0x710)],
                    'pixelFormat': Cesium[_0x5b29f5(0x480)][_0x5b29f5(0x71c)]
                })),
                    _0x537ee0[_0x5b29f5(0x423)] || (_0x537ee0[_0x5b29f5(0x423)] = new Cesium[(_0x5b29f5(0x31d))]({
                        'context': this[_0x5b29f5(0x56c)],
                        'colorTextures': [_0x537ee0[_0x5b29f5(0x6ba)]],
                        'destroyAttachments': !0x1
                    })),
                    _0x538ef3[_0x5b29f5(0x882)] = _0x537ee0[_0x5b29f5(0x423)],
                    _0x538ef3['renderState'] = Cesium['RenderState'][_0x5b29f5(0x6bf)](),
                    _0x538ef3[_0x5b29f5(0x62c)](this[_0x5b29f5(0x56c)]);
                for (let _0x128808 = 0x0; _0x128808 < _0xd8da62; _0x128808++) {
                    let _0x251b5f = _0x255e6f[_0x5b29f5(0x347)][_0x128808];
                    _0x251b5f['createCommand'](this['context'], _0x537ee0['fbo']),
                        _0x251b5f[_0x5b29f5(0xa80)]['uniformMap'] = {
                            'uRect': function () {
                                const _0x48559f = _0x5b29f5;
                                return _0x537ee0[_0x48559f(0x39d)];
                            }
                        },
                        _0x251b5f[_0x5b29f5(0xa80)][_0x5b29f5(0x62c)](this[_0x5b29f5(0x56c)]);
                }
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0x11b)] = function (_0x11bc31, _0x2fc078) {
                const _0x18b5a8 = _0x324b8e;
                if (_0x11bc31 > 0x8)
                    throw new Cesium[(_0x18b5a8(0x335))](_0x18b5a8(0x482));
                this[_0x18b5a8(0x1ff)] = _0x2fc078 ? 0x1 << _0x11bc31 | this[_0x18b5a8(0x1ff)] : ~(0x1 << _0x11bc31) & this[_0x18b5a8(0x1ff)];
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0x874)] = function (_0x36b3ee) {
                const _0x582a31 = _0x324b8e;
                if (_0x36b3ee > 0x8)
                    throw new Cesium[(_0x582a31(0x335))](_0x582a31(0x6b5));
                return 0x1 << _0x36b3ee & this[_0x582a31(0x1ff)];
            }
            ,
            _0x2dd123['prototype'][_0x324b8e(0x98c)] = function () {
                const _0x3e65ee = _0x324b8e;
                0x0 !== this[_0x3e65ee(0x3b5)] ? (this[_0x3e65ee(0x52f)] = this[_0x3e65ee(0x7de)] / this[_0x3e65ee(0x3b5)] * 0x28,
                    this['_edgeCurrentTotalLength'] = 0x0,
                    this[_0x3e65ee(0x3b5)] = 0x0) : this[_0x3e65ee(0x7de)] = 0x0;
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0x62e)] = function (_0xfdf076, _0x214110) {
                const _0x265460 = _0x324b8e;
                this[_0x265460(0x7de)] += _0xfdf076,
                    this[_0x265460(0x3b5)] += _0x214110;
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0x46c)] = function (_0x181278) {
                const _0x3e7672 = _0x324b8e;
                let _0x4c776c = this['_waterPlanes'][_0x3e7672(0x376)];
                return this[_0x3e7672(0x2f5)][_0x3e7672(0x414)](_0x4c776c, _0x181278),
                    _0x4c776c;
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)]['removeWaterPlane'] = function (_0x37801e) {
                const _0xe2afca = _0x324b8e;
                this[_0xe2afca(0x2f5)]['remove'](_0x37801e);
            }
            ,
            _0x2dd123['prototype'][_0x324b8e(0x45d)] = function (_0x58fca0) {
                const _0x20777b = _0x324b8e;
                this[_0x20777b(0x84b)] && _0x58fca0[_0x20777b(0x8db)] && (this[_0x20777b(0x25d)]['reset'](),
                    this[_0x20777b(0x270)][_0x20777b(0x376)] = 0x0,
                    this[_0x20777b(0x6c9)][_0x20777b(0x376)] = 0x0,
                    this['_selectedTiles']['length'] = 0x0,
                    Cesium[_0x20777b(0x14b)](_0x58fca0['brdfLutGenerator']) && _0x58fca0['brdfLutGenerator'][_0x20777b(0x4bc)](_0x58fca0),
                    function (_0x31776a, _0x2b23d3) {
                        const _0x515e4c = _0x20777b;
                        if (!_0x31776a[_0x515e4c(0x2f5)])
                            return;
                        let _0xeed882 = _0x31776a[_0x515e4c(0x2f5)];
                        void 0x0 === _0x2b23d3[_0x515e4c(0xacd)] && (_0x2b23d3[_0x515e4c(0xacd)] = 0x615299),
                            void 0x0 === _0x2b23d3[_0x515e4c(0x513)] && (_0x2b23d3[_0x515e4c(0x513)] = 0x0);
                        let _0x3ef320 = _0x2b23d3[_0x515e4c(0xd8)]['positionWC'];
                        for (let _0x3c87b in _0xeed882[_0x515e4c(0x17f)])
                            if (_0xeed882['_hash'][_0x515e4c(0x704)](_0x3c87b)) {
                                let _0x458787 = _0xeed882[_0x515e4c(0xa61)](_0x3c87b)
                                    , _0x3723d9 = _0x458787[_0x515e4c(0x399)];
                                if (_0x2b23d3['cullingVolume']['computeVisibility'](_0x3723d9) === Cesium[_0x515e4c(0xa4d)]['OUTSIDE'])
                                    continue;
                                let _0x188bc3 = Cesium[_0x515e4c(0x85d)][_0x515e4c(0xaa5)](_0x3723d9[_0x515e4c(0x6f1)], _0x3ef320) - _0x3723d9['radius'];
                                _0x188bc3 = _0x188bc3 < 0.01 ? 0.01 : _0x188bc3,
                                    _0x188bc3 < _0x2b23d3[_0x515e4c(0xacd)] && (_0x2b23d3[_0x515e4c(0xacd)] = _0x188bc3,
                                        _0x2b23d3[_0x515e4c(0x513)] = _0x458787['distance']);
                            }
                    }(this, _0x58fca0));
            }
            ;
        let _0x455838 = new Cesium[(_0x324b8e(0x5ab))]();
        function _0x232244(_0xe416b4, _0x2f2376) {
            const _0x3dbeca = _0x324b8e;
            var _0x38d229 = _0x2f2376
                , _0xb5e4ec = _0x38d229[_0x3dbeca(0x5e5)][_0x3dbeca(0x3aa)];
            _0x38d229[_0x3dbeca(0x5e5)] = _0xe416b4[_0x3dbeca(0x932)],
                _0x38d229['_PBRMaterialParams'][_0x3dbeca(0x3aa)] = _0xb5e4ec,
                _0x38d229[_0x3dbeca(0x7a5)](_0x38d229[_0x3dbeca(0x5e5)], _0xb5e4ec);
            var _0x6f4249 = _0x38d229[_0x3dbeca(0x5e5)][_0x3dbeca(0x163)]
                , _0x58921f = _0x38d229['_PBRMaterialParams'][_0x3dbeca(0x3fb)];
            if (Cesium[_0x3dbeca(0x14b)](_0x6f4249['volume']) && (_0x38d229[_0x3dbeca(0x5e5)][_0x3dbeca(0x163)][_0x3dbeca(0x795)] = {
                'thickness': 0x1,
                'tintColor': Cesium[_0x3dbeca(0x747)]['fromElements'](0x1, 0x1, 0x1, 0x1),
                'diffusionDistance': Cesium[_0x3dbeca(0x747)][_0x3dbeca(0x7c5)](0x1, 0x1, 0x1, 0x1),
                'transmissionFactor': 0x1
            }),
                Cesium[_0x3dbeca(0x14b)](_0x6f4249[_0x3dbeca(0x969)]) && (_0x38d229[_0x3dbeca(0x5e5)][_0x3dbeca(0x163)][_0x3dbeca(0x969)] = {
                    'clearcoatFactor': 0x0,
                    'clearcoatRoughnessFactor': 0x0
                }),
                Cesium[_0x3dbeca(0x14b)](_0x6f4249[_0x3dbeca(0xa2a)]) && -0x1 !== _0x6f4249[_0x3dbeca(0xa2a)]['snowNormalTextureIndex']) {
                var _0x301442 = _0xb5e4ec + _0x58921f[_0x6f4249[_0x3dbeca(0xa2a)][_0x3dbeca(0x301)]][_0x3dbeca(0x397)]['url'];
                _0x38d229[_0x3dbeca(0x5e5)][_0x3dbeca(0x315)]++,
                    _0x4fe893(_0x38d229[_0x3dbeca(0x56c)], _0x301442, _0x38d229[_0x3dbeca(0x5e5)], _0x38d229['_PBRMaterialParams'][_0x3dbeca(0x163)][_0x3dbeca(0xa2a)], _0x3dbeca(0x488));
            }
            Cesium['defined'](_0x6f4249['snowEffect']) && -0x1 !== _0x6f4249[_0x3dbeca(0xa2a)][_0x3dbeca(0x91c)] && (_0x301442 = _0xb5e4ec + _0x58921f[_0x6f4249['snowEffect'][_0x3dbeca(0x91c)]][_0x3dbeca(0x397)][_0x3dbeca(0xa62)],
                (_0x38d229['_PBRMaterialParams'][_0x3dbeca(0x315)]++,
                    _0x4fe893(_0x38d229[_0x3dbeca(0x56c)], _0x301442, _0x38d229['_PBRMaterialParams'], _0x38d229[_0x3dbeca(0x5e5)]['pbrMetallicRoughness'][_0x3dbeca(0xa2a)], _0x3dbeca(0x380)))),
                Cesium[_0x3dbeca(0x14b)](_0x6f4249[_0x3dbeca(0x9f5)]) && -0x1 !== _0x6f4249[_0x3dbeca(0x9f5)][_0x3dbeca(0x5e1)] && (_0x301442 = _0xb5e4ec + _0x58921f[_0x6f4249['rainEffect'][_0x3dbeca(0x5e1)]][_0x3dbeca(0x397)]['url'],
                    (_0x38d229[_0x3dbeca(0x5e5)][_0x3dbeca(0x315)]++,
                        _0x4fe893(_0x38d229[_0x3dbeca(0x56c)], _0x301442, _0x38d229[_0x3dbeca(0x5e5)], _0x38d229['_PBRMaterialParams'][_0x3dbeca(0x163)][_0x3dbeca(0x9f5)], _0x3dbeca(0x189))));
        }
        function _0x54a3ec(_0x6d57e5, _0x2f91b2) {
            const _0x2f9b5f = _0x324b8e;
            _0x6d57e5[_0x2f9b5f(0x522)](_0x2f91b2);
        }
        function _0x4fe893(_0x11b18a, _0x1c5ab9, _0x36ffff, _0x3920d2, _0x52dddf) {
            const _0x34b823 = _0x324b8e;
            var _0x4cd102 = Cesium['Resource']['createIfNeeded'](_0x1c5ab9)[_0x34b823(0x53b)]()[_0x34b823(0x685)](function (_0x58ba2b) {
                const _0x47256d = _0x34b823;
                var _0x247d78 = new Cesium['Texture']({
                    'context': _0x11b18a,
                    'source': _0x58ba2b,
                    'sampler': new Cesium[(_0x47256d(0x87c))]({
                        'wrapS': Cesium[_0x47256d(0x600)][_0x47256d(0x2c7)],
                        'wrapT': Cesium[_0x47256d(0x600)]['REPEAT'],
                        'minificationFilter': Cesium['TextureMinificationFilter'][_0x47256d(0x300)],
                        'magnificationFilter': Cesium[_0x47256d(0x4d7)]['LINEAR']
                    })
                });
                !Cesium[_0x47256d(0x16d)][_0x47256d(0x614)](_0x247d78[_0x47256d(0x8ce)]) || !Cesium['Math'][_0x47256d(0x614)](_0x247d78[_0x47256d(0x88d)]) || _0x247d78[_0x47256d(0x2d7)](Cesium[_0x47256d(0xa7b)][_0x47256d(0x439)]),
                    _0x3920d2[_0x52dddf] = _0x247d78,
                    _0x36ffff[_0x47256d(0x351)]++;
            }, _0x55b235 => {
                const _0x16dbdc = _0x34b823;
                console[_0x16dbdc(0x9dc)](_0x55b235),
                    _0x36ffff['pendingTextureCount']--;
            }
            );
            _0x3920d2[_0x52dddf] = _0x4cd102;
        }
        _0x2dd123['prototype'][_0x324b8e(0x764)] = function (_0x56a585) {
            const _0x31f581 = _0x324b8e;
            this[_0x31f581(0x84b)] && (_0x57a769(this),
                this[_0x31f581(0x858)](_0x56a585),
                this[_0x31f581(0x98c)](),
                this['_subTextureManager'] && this[_0x31f581(0x6d5)]['processRequests'](this['id']));
        }
            ,
            _0x2dd123[_0x324b8e(0x74f)]['update'] = function (_0xf92130) {
                const _0x740bd1 = _0x324b8e;
                this[_0x740bd1(0x84b)] && function (_0x4b0466, _0x445d23) {
                    const _0x3b416c = _0x740bd1;
                    let _0x3868de = _0x445d23[_0x3b416c(0xd8)];
                    return !(_0x3868de[_0x3b416c(0x70d)][_0x3b416c(0x88d)] < _0x4b0466['_minVisibleAltitude'] || _0x3868de[_0x3b416c(0x70d)]['height'] > _0x4b0466[_0x3b416c(0x331)]) && !!_0x4b0466[_0x3b416c(0x874)](_0x445d23[_0x3b416c(0x100)]) && _0x4b0466[_0x3b416c(0x64d)];
                }(this, _0xf92130) && (!_0xf92130[_0x740bd1(0xa4c)][_0x740bd1(0x821)] || this[_0x740bd1(0x3d4)]) && (this[_0x740bd1(0x5e5)][_0x740bd1(0xdf)] && this['_updatePBRMaterial'](),
                    this[_0x740bd1(0x87d)]['schedule'](this, _0xf92130),
                    function (_0x14f12c) {
                        const _0x203ac7 = _0x740bd1;
                        let _0xb4655a = _0x14f12c[_0x203ac7(0x270)]
                            , _0x3b8748 = _0xb4655a[_0x203ac7(0x376)];
                        _0xb4655a[_0x203ac7(0x55e)](_0x36f28a);
                        for (let _0x2a5e0a = 0x0; _0x2a5e0a < _0x3b8748; ++_0x2a5e0a)
                            _0xb4655a[_0x2a5e0a][_0x203ac7(0x9a7)](_0x14f12c['_subdomainConfig']);
                    }(this),
                    function (_0x5dc0ba, _0x1bd008) {
                        const _0x96e24 = _0x740bd1;
                        let _0x2d0111 = _0x5dc0ba['_processTiles']
                            , _0x4e8b66 = _0x2d0111[_0x96e24(0x376)];
                        for (let _0x12688a = 0x0; _0x12688a < _0x4e8b66; ++_0x12688a)
                            _0x2d0111[_0x12688a][_0x96e24(0x4bc)](_0x1bd008, _0x5dc0ba);
                    }(this, _0xf92130),
                    function (_0x5d2346, _0x500011) {
                        const _0x308b4e = _0x740bd1;
                        let _0x55fa0b = _0x5d2346[_0x308b4e(0x35b)]
                            , _0xdc066e = _0x55fa0b[_0x308b4e(0x376)];
                        for (let _0x13700b = 0x0; _0x13700b < _0xdc066e; _0x13700b++)
                            _0x55fa0b[_0x13700b][_0x308b4e(0x4bc)](_0x500011, _0x5d2346);
                    }(this, _0xf92130),
                    function (_0x30f08d, _0xd5da96) {
                        const _0x127096 = _0x740bd1;
                        if (_0x30f08d[_0x127096(0x314)]) {
                            let _0x2e214d = _0xd5da96['camera'][_0x127096(0x234)];
                            Cesium['Matrix4'][_0x127096(0x3ae)](_0x2e214d, _0x455838);
                            for (let _0x50b7ba = 0x0; _0x50b7ba < 0x6; _0x50b7ba++)
                                Cesium[_0x127096(0x5ab)][_0x127096(0xa2d)](_0x455838, _0x30f08d['_oriClipPlane'][_0x50b7ba], _0x30f08d['_clipPlane'][_0x50b7ba]);
                        }
                    }(this, _0xf92130),
                    this[_0x740bd1(0x654)][_0x740bd1(0x5fe)] && (!function (_0x2a5c0f) {
                        const _0x27e662 = _0x740bd1;
                        var _0x4e4879 = 0x0;
                        Cesium[_0x27e662(0x14b)](_0x2a5c0f[_0x27e662(0x11d)]) && (_0x4e4879 = _0x2a5c0f['style3D'][_0x27e662(0x829)]);
                        var _0x454065 = _0x2a5c0f[_0x27e662(0x88d)] + _0x4e4879
                            , _0x44d1a1 = _0x2a5c0f[_0x27e662(0x735)]
                            , _0x39356b = _0x2a5c0f[_0x27e662(0x141)];
                        if (_0x2a5c0f[_0x27e662(0x817)] === Cesium[_0x27e662(0x6b8)][_0x27e662(0x9cc)])
                            _0x2a5c0f['_position'] = Cesium[_0x27e662(0x85d)][_0x27e662(0xa08)](_0x44d1a1, _0x39356b, _0x454065),
                                _0x2a5c0f[_0x27e662(0x896)] = Cesium[_0x27e662(0x1a1)][_0x27e662(0x580)](_0x2a5c0f[_0x27e662(0x9c2)]),
                                _0x2a5c0f['invModelMatrix'] = Cesium[_0x27e662(0x5ab)][_0x27e662(0x20e)](_0x2a5c0f[_0x27e662(0x896)], _0x2a5c0f[_0x27e662(0xa97)]);
                        else {
                            if (_0x44d1a1 > 0xb4 || _0x44d1a1 < -0xb4 || _0x39356b > 0xb4 || _0x39356b < -0xb4) {
                                let _0x120188 = _0x44d1a1
                                    , _0x27b5db = _0x39356b;
                                _0x2a5c0f[_0x27e662(0x9c2)] = new Cesium[(_0x27e662(0x85d))](_0x120188, _0x27b5db, _0x454065);
                            } else {
                                let _0x2d0401 = new Cesium[(_0x27e662(0x5bd))]()
                                    , _0x44a727 = Cesium[_0x27e662(0x85d)][_0x27e662(0xa08)](_0x44d1a1, _0x39356b, _0x454065)
                                    , _0x377951 = _0x2d0401[_0x27e662(0x5d7)][_0x27e662(0x66c)](_0x44a727);
                                _0x2a5c0f[_0x27e662(0x9c2)] = _0x2d0401[_0x27e662(0x856)](_0x377951);
                            }
                            Cesium[_0x27e662(0x5ab)][_0x27e662(0x8a9)](_0x2a5c0f[_0x27e662(0x9c2)], _0x2a5c0f[_0x27e662(0x896)]),
                                Cesium[_0x27e662(0x5ab)][_0x27e662(0x3ee)](_0x3444d0, _0x2a5c0f[_0x27e662(0x896)], _0x2a5c0f['modelMatrix']),
                                _0x2a5c0f[_0x27e662(0xa97)] = Cesium[_0x27e662(0x5ab)]['inverse'](_0x2a5c0f[_0x27e662(0x896)], _0x2a5c0f['invModelMatrix']);
                        }
                    }(this),
                        this[_0x740bd1(0x654)]['_dirty'] = !0x1),
                    this[_0x740bd1(0x1c0)] = _0xf92130);
            }
            ,
            _0x2dd123['prototype'][_0x324b8e(0x1e3)] = function (_0x494969) {
                const _0x4e08eb = _0x324b8e;
                var _0x342829 = this
                    , _0x2ef84d = _0x4e08eb(0x937) == typeof _0x494969;
                if (_0x342829[_0x4e08eb(0x5e5)][_0x4e08eb(0x3aa)] = _0x2ef84d ? Cesium[_0x4e08eb(0x5da)](_0x494969) : '',
                    _0x2ef84d)
                    Cesium[_0x4e08eb(0x9c9)][_0x4e08eb(0x260)](_0x494969)['fetchJson'](_0x494969)['then'](function (_0x2b434e) {
                        _0x232244(_0x2b434e, _0x342829);
                    });
                else
                    _0x232244(_0x494969, _0x342829);
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0x4fd)] = function () {
                const _0x1f35b1 = _0x324b8e;
                if (Cesium[_0x1f35b1(0x14b)](this[_0x1f35b1(0x5e5)]) && Cesium[_0x1f35b1(0x14b)](this[_0x1f35b1(0x5e5)][_0x1f35b1(0x315)]) && this[_0x1f35b1(0x5e5)][_0x1f35b1(0x315)] === this[_0x1f35b1(0x5e5)][_0x1f35b1(0x351)]) {
                    var _0xcdfb97 = {
                        'enable': !0x0
                    };
                    _0xcdfb97[_0x1f35b1(0xa41)] = this,
                        this[_0x1f35b1(0x537)](_0xcdfb97, _0x54a3ec),
                        this['_PBRMaterialParams'][_0x1f35b1(0xdf)] = !0x1;
                }
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)]['removePBRMaterial'] = function () {
                const _0x14531f = _0x324b8e;
                var _0x322094 = this[_0x14531f(0x5e5)][_0x14531f(0x163)];
                for (var _0x3a143f in _0x322094)
                    _0x322094['hasOwnProperty'](_0x3a143f) && _0x322094[_0x3a143f] instanceof Cesium[_0x14531f(0x130)] && _0x322094[_0x3a143f][_0x14531f(0x4dd)]();
                this[_0x14531f(0x5e5)] = {
                    'pbrMetallicRoughness': {
                        'metallicFactor': 0x0,
                        'roughnessFactor': 0x0,
                        'baseColor': new Cartesian4(0x1, 0x1, 0x1, 0x1),
                        'baseColorTextureIndex': -0x1,
                        'emissiveFactor': Cartesian3[_0x14531f(0x889)],
                        'emissiveTextureIndex': -0x1,
                        'occlusionTextureIndex': -0x1,
                        'metallicRoughnessTextureIndex': -0x1,
                        'normalTextureIndex': -0x1,
                        'normalTexture': void 0x0,
                        'baseColorTexture': void 0x0,
                        'intensityScale': 0x1,
                        'snowEffect': void 0x0,
                        'rainEffect': void 0x0,
                        'volume': void 0x0,
                        'clearcoat': void 0x0,
                        'anisotropy': void 0x0
                    },
                    'loadingTexture': void 0x0
                };
                var _0x165884 = {
                    'enable': !0x0
                };
                _0x165884[_0x14531f(0xa41)] = this,
                    this[_0x14531f(0x537)](_0x165884, _0x54a3ec);
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)]['_loadMaterialTexture'] = function (_0x44bd13, _0x57b0ab) {
                const _0x4f40a2 = _0x324b8e;
                _0x44bd13[_0x4f40a2(0xdf)] = !0x0;
                var _0x31a665 = _0x44bd13[_0x4f40a2(0x163)]
                    , _0x576c09 = _0x44bd13[_0x4f40a2(0x3fb)]
                    , _0x3c5e5d = _0x31a665[_0x4f40a2(0x940)];
                Cesium[_0x4f40a2(0x14b)](_0x44bd13[_0x4f40a2(0x315)]) || (_0x44bd13[_0x4f40a2(0x315)] = 0x0),
                    Cesium[_0x4f40a2(0x14b)](_0x44bd13[_0x4f40a2(0x351)]) || (_0x44bd13[_0x4f40a2(0x351)] = 0x0);
                var _0xbe9370 = this[_0x4f40a2(0x56c)]
                    , _0x2fa175 = Cesium[_0x4f40a2(0x14b)](_0x57b0ab) ? _0x57b0ab : this[_0x4f40a2(0x659)] + this[_0x4f40a2(0x3dc)];
                _0x3c5e5d > -0x1 && !Cesium[_0x4f40a2(0x14b)](_0x31a665['baseColorTexture']) && (_0x4fe893(_0xbe9370, _0x2fa175 + _0x576c09[_0x3c5e5d][_0x4f40a2(0x397)][_0x4f40a2(0xa62)], _0x44bd13, _0x44bd13[_0x4f40a2(0x163)], _0x4f40a2(0x79f)),
                    _0x44bd13['pendingTextureCount']++);
                var _0x4f5977 = _0x31a665[_0x4f40a2(0x9e8)];
                _0x4f5977 > -0x1 && !Cesium[_0x4f40a2(0x14b)](_0x31a665['emissiveTexture']) && (_0x4fe893(_0xbe9370, _0x2fa175 + _0x576c09[_0x4f5977][_0x4f40a2(0x397)][_0x4f40a2(0xa62)], _0x44bd13, _0x44bd13[_0x4f40a2(0x163)], 'emissiveTexture'),
                    _0x44bd13[_0x4f40a2(0x315)]++);
                var _0x44eaa2 = _0x31a665[_0x4f40a2(0x463)];
                _0x44eaa2 > -0x1 && !Cesium[_0x4f40a2(0x14b)](_0x31a665[_0x4f40a2(0x565)]) && (_0x4fe893(_0xbe9370, _0x2fa175 + _0x576c09[_0x44eaa2][_0x4f40a2(0x397)]['url'], _0x44bd13, _0x44bd13['pbrMetallicRoughness'], 'normalTexture'),
                    _0x44bd13[_0x4f40a2(0x315)]++);
                var _0x1b314c = _0x31a665[_0x4f40a2(0x828)];
                _0x1b314c > -0x1 && !Cesium[_0x4f40a2(0x14b)](_0x31a665[_0x4f40a2(0xaaf)]) && (_0x4fe893(_0xbe9370, _0x2fa175 + _0x576c09[_0x1b314c]['textureunitstate'][_0x4f40a2(0xa62)], _0x44bd13, _0x44bd13[_0x4f40a2(0x163)], _0x4f40a2(0xaaf)),
                    _0x44bd13['pendingTextureCount']++);
                var _0x49882c = _0x31a665[_0x4f40a2(0xa8d)];
                _0x49882c > -0x1 && !Cesium['defined'](_0x31a665[_0x4f40a2(0x656)]) && (_0x4fe893(_0xbe9370, _0x2fa175 + _0x576c09[_0x49882c][_0x4f40a2(0x397)][_0x4f40a2(0xa62)], _0x44bd13, _0x44bd13[_0x4f40a2(0x163)], _0x4f40a2(0x656)),
                    _0x44bd13['pendingTextureCount']++);
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0x575)] = function () {
                return !0x1;
            }
            ,
            _0x2dd123[_0x324b8e(0x74f)][_0x324b8e(0x4dd)] = function () {
                const _0x5b4523 = _0x324b8e;
                return this[_0x5b4523(0x25d)][_0x5b4523(0x161)](),
                    _0x57a769(this),
                    this[_0x5b4523(0x5f3)][_0x5b4523(0x376)] = 0x0,
                    this[_0x5b4523(0x270)]['length'] = 0x0,
                    this[_0x5b4523(0x6c9)][_0x5b4523(0x376)] = 0x0,
                    this['_selectedTiles'][_0x5b4523(0x376)] = 0x0,
                    this[_0x5b4523(0x6d0)][_0x5b4523(0x376)] = 0x0,
                    this[_0x5b4523(0x1e5)][_0x5b4523(0x307)](),
                    this[_0x5b4523(0xa09)]['removeAll'](),
                    this[_0x5b4523(0x6f6)][_0x5b4523(0x307)](),
                    this['_objsVisibleMap'] = {},
                    this['_objsColorList'] = {},
                    this[_0x5b4523(0x2cf)]['destroy'](),
                    this[_0x5b4523(0x460)][_0x5b4523(0x4dd)](),
                    Cesium[_0x5b4523(0x9ef)](this);
            }
            ;
        var _0x13b83f = function (_0x2acfd1) {
            const _0x46345f = _0x324b8e;
            var _0x2aaa98, _0xc3d5a = /^-?(?:\d+(?:\.\d*)?|\.\d+)(?:e[+-]?\d+)?$/i, _0x3df263 = 'function' == typeof Symbol && _0x46345f(0x5ad) == typeof Symbol[_0x46345f(0x9f0)], _0x1ec26a = Math[_0x46345f(0x826)], _0x3f8614 = Math[_0x46345f(0x432)], _0x3fed3d = _0x46345f(0x980), _0x4f08bb = _0x3fed3d + _0x46345f(0x168), _0x258fca = 0x5af3107a4000, _0x219a55 = 0xe, _0x484004 = 0x1fffffffffffff, _0x5b5bd0 = [0x1, 0xa, 0x64, 0x3e8, 0x2710, 0x186a0, 0xf4240, 0x989680, 0x5f5e100, 0x3b9aca00, 0x2540be400, 0x174876e800, 0xe8d4a51000, 0x9184e72a000], _0x196338 = 0x989680, _0x59c0bd = 0x3b9aca00;
            function _0x478f38(_0x31bbe0) {
                var _0x162a59 = 0x0 | _0x31bbe0;
                return _0x31bbe0 > 0x0 || _0x31bbe0 === _0x162a59 ? _0x162a59 : _0x162a59 - 0x1;
            }
            function _0x3d90a2(_0x12ed5c) {
                const _0xcf7fbe = _0x46345f;
                for (var _0xb6e936, _0x7b3c58, _0x1bc494 = 0x1, _0x28aec0 = _0x12ed5c[_0xcf7fbe(0x376)], _0x465c71 = _0x12ed5c[0x0] + ''; _0x1bc494 < _0x28aec0;) {
                    for (_0xb6e936 = _0x12ed5c[_0x1bc494++] + '',
                        _0x7b3c58 = _0x219a55 - _0xb6e936[_0xcf7fbe(0x376)]; _0x7b3c58--; _0xb6e936 = '0' + _0xb6e936)
                        ;
                    _0x465c71 += _0xb6e936;
                }
                for (_0x28aec0 = _0x465c71['length']; 0x30 === _0x465c71['charCodeAt'](--_0x28aec0);)
                    ;
                return _0x465c71[_0xcf7fbe(0x3be)](0x0, _0x28aec0 + 0x1 || 0x1);
            }
            function _0x1f187d(_0x6dae60, _0x3b1cfc) {
                const _0x48030c = _0x46345f;
                var _0x4446f7, _0x2285f6, _0x5a0628 = _0x6dae60['c'], _0xbf82c = _0x3b1cfc['c'], _0x3d2e97 = _0x6dae60['s'], _0x37902f = _0x3b1cfc['s'], _0x4384bb = _0x6dae60['e'], _0x5494ac = _0x3b1cfc['e'];
                if (!_0x3d2e97 || !_0x37902f)
                    return null;
                if (_0x4446f7 = _0x5a0628 && !_0x5a0628[0x0],
                    _0x2285f6 = _0xbf82c && !_0xbf82c[0x0],
                    _0x4446f7 || _0x2285f6)
                    return _0x4446f7 ? _0x2285f6 ? 0x0 : -_0x37902f : _0x3d2e97;
                if (_0x3d2e97 != _0x37902f)
                    return _0x3d2e97;
                if (_0x4446f7 = _0x3d2e97 < 0x0,
                    _0x2285f6 = _0x4384bb == _0x5494ac,
                    !_0x5a0628 || !_0xbf82c)
                    return _0x2285f6 ? 0x0 : !_0x5a0628 ^ _0x4446f7 ? 0x1 : -0x1;
                if (!_0x2285f6)
                    return _0x4384bb > _0x5494ac ^ _0x4446f7 ? 0x1 : -0x1;
                for (_0x37902f = (_0x4384bb = _0x5a0628[_0x48030c(0x376)]) < (_0x5494ac = _0xbf82c[_0x48030c(0x376)]) ? _0x4384bb : _0x5494ac,
                    _0x3d2e97 = 0x0; _0x3d2e97 < _0x37902f; _0x3d2e97++)
                    if (_0x5a0628[_0x3d2e97] != _0xbf82c[_0x3d2e97])
                        return _0x5a0628[_0x3d2e97] > _0xbf82c[_0x3d2e97] ^ _0x4446f7 ? 0x1 : -0x1;
                return _0x4384bb == _0x5494ac ? 0x0 : _0x4384bb > _0x5494ac ^ _0x4446f7 ? 0x1 : -0x1;
            }
            function _0x471250(_0xf4d630, _0x2e6340, _0x1918a0, _0x3af813) {
                const _0x1d4dca = _0x46345f;
                if (_0xf4d630 < _0x2e6340 || _0xf4d630 > _0x1918a0 || _0xf4d630 !== _0x3f8614(_0xf4d630))
                    throw Error(_0x3fed3d + (_0x3af813 || _0x1d4dca(0x554)) + (_0x1d4dca(0x305) == typeof _0xf4d630 ? _0xf4d630 < _0x2e6340 || _0xf4d630 > _0x1918a0 ? '\x20out\x20of\x20range:\x20' : '\x20not\x20an\x20integer:\x20' : _0x1d4dca(0x1a2)) + String(_0xf4d630));
            }
            function _0x1ec0ee(_0x349a96) {
                const _0x2412d2 = _0x46345f;
                var _0x1ed29b = _0x349a96['c'][_0x2412d2(0x376)] - 0x1;
                return _0x478f38(_0x349a96['e'] / _0x219a55) == _0x1ed29b && _0x349a96['c'][_0x1ed29b] % 0x2 != 0x0;
            }
            function _0x374392(_0x53f747, _0x35f12a) {
                const _0x3f44e6 = _0x46345f;
                return (_0x53f747[_0x3f44e6(0x376)] > 0x1 ? _0x53f747[_0x3f44e6(0x8c3)](0x0) + '.' + _0x53f747['slice'](0x1) : _0x53f747) + (_0x35f12a < 0x0 ? 'e' : 'e+') + _0x35f12a;
            }
            function _0x5b4d91(_0x5a3430, _0x346c6d, _0x4bcf9d) {
                const _0x42970a = _0x46345f;
                var _0x512816, _0x5f503b;
                if (_0x346c6d < 0x0) {
                    for (_0x5f503b = _0x4bcf9d + '.'; ++_0x346c6d; _0x5f503b += _0x4bcf9d)
                        ;
                    _0x5a3430 = _0x5f503b + _0x5a3430;
                } else {
                    if (++_0x346c6d > (_0x512816 = _0x5a3430[_0x42970a(0x376)])) {
                        for (_0x5f503b = _0x4bcf9d,
                            _0x346c6d -= _0x512816; --_0x346c6d; _0x5f503b += _0x4bcf9d)
                            ;
                        _0x5a3430 += _0x5f503b;
                    } else
                        _0x346c6d < _0x512816 && (_0x5a3430 = _0x5a3430['slice'](0x0, _0x346c6d) + '.' + _0x5a3430['slice'](_0x346c6d));
                }
                return _0x5a3430;
            }
            return _0x2aaa98 = function _0x3ea501(_0x5ba828) {
                const _0x1c4772 = _0x46345f;
                var _0x1ee497, _0x4f0f92, _0xa43002, _0x2b1adf, _0x5aaead, _0x312457, _0x18935f, _0x4adee7, _0x5af0cc, _0x5ca770, _0x431f05 = _0x4a8493['prototype'] = {
                    'constructor': _0x4a8493,
                    'toString': null,
                    'valueOf': null
                }, _0x233822 = new _0x4a8493(0x1), _0x35dac8 = 0x14, _0x295829 = 0x4, _0x449fb6 = -0x7, _0x4fad4b = 0x15, _0x57ff41 = -0x989680, _0x1816d5 = 0x989680, _0x1f3ae5 = !0x1, _0x32ffcf = 0x1, _0x563664 = 0x0, _0x18984f = {
                    'prefix': '',
                    'groupSize': 0x3,
                    'secondaryGroupSize': 0x0,
                    'groupSeparator': ',',
                    'decimalSeparator': '.',
                    'fractionGroupSize': 0x0,
                    'fractionGroupSeparator': '\u00a0',
                    'suffix': ''
                }, _0x4bfd1 = '0123456789abcdefghijklmnopqrstuvwxyz';
                function _0x4a8493(_0x5a0cc0, _0x2d8481) {
                    const _0x11b7e9 = _0x557c;
                    var _0x187c2c, _0x162e85, _0x4aca92, _0x1ae7cc, _0x4640fd, _0x49fdc1, _0x134fce, _0x2a3a62, _0x4738d2 = this;
                    if (!(_0x4738d2 instanceof _0x4a8493))
                        return new _0x4a8493(_0x5a0cc0, _0x2d8481);
                    if (null == _0x2d8481) {
                        if (_0x5a0cc0 && !0x0 === _0x5a0cc0[_0x11b7e9(0x6b1)])
                            return _0x4738d2['s'] = _0x5a0cc0['s'],
                                void (!_0x5a0cc0['c'] || _0x5a0cc0['e'] > _0x1816d5 ? _0x4738d2['c'] = _0x4738d2['e'] = null : _0x5a0cc0['e'] < _0x57ff41 ? _0x4738d2['c'] = [_0x4738d2['e'] = 0x0] : (_0x4738d2['e'] = _0x5a0cc0['e'],
                                    _0x4738d2['c'] = _0x5a0cc0['c'][_0x11b7e9(0x3be)]()));
                        if ((_0x49fdc1 = _0x11b7e9(0x305) == typeof _0x5a0cc0) && 0x0 * _0x5a0cc0 == 0x0) {
                            if (_0x4738d2['s'] = 0x1 / _0x5a0cc0 < 0x0 ? (_0x5a0cc0 = -_0x5a0cc0,
                                -0x1) : 0x1,
                                _0x5a0cc0 === ~~_0x5a0cc0) {
                                for (_0x1ae7cc = 0x0,
                                    _0x4640fd = _0x5a0cc0; _0x4640fd >= 0xa; _0x4640fd /= 0xa,
                                    _0x1ae7cc++)
                                    ;
                                return void (_0x1ae7cc > _0x1816d5 ? _0x4738d2['c'] = _0x4738d2['e'] = null : (_0x4738d2['e'] = _0x1ae7cc,
                                    _0x4738d2['c'] = [_0x5a0cc0]));
                            }
                            _0x2a3a62 = String(_0x5a0cc0);
                        } else {
                            if (!_0xc3d5a[_0x11b7e9(0x6ae)](_0x2a3a62 = String(_0x5a0cc0)))
                                return _0xa43002(_0x4738d2, _0x2a3a62, _0x49fdc1);
                            _0x4738d2['s'] = 0x2d == _0x2a3a62[_0x11b7e9(0x8cb)](0x0) ? (_0x2a3a62 = _0x2a3a62[_0x11b7e9(0x3be)](0x1),
                                -0x1) : 0x1;
                        }
                        (_0x1ae7cc = _0x2a3a62[_0x11b7e9(0xa59)]('.')) > -0x1 && (_0x2a3a62 = _0x2a3a62['replace']('.', '')),
                            (_0x4640fd = _0x2a3a62[_0x11b7e9(0x7f7)](/e/i)) > 0x0 ? (_0x1ae7cc < 0x0 && (_0x1ae7cc = _0x4640fd),
                                _0x1ae7cc += +_0x2a3a62[_0x11b7e9(0x3be)](_0x4640fd + 0x1),
                                _0x2a3a62 = _0x2a3a62['substring'](0x0, _0x4640fd)) : _0x1ae7cc < 0x0 && (_0x1ae7cc = _0x2a3a62[_0x11b7e9(0x376)]);
                    } else {
                        if (_0x471250(_0x2d8481, 0x2, _0x4bfd1[_0x11b7e9(0x376)], _0x11b7e9(0x507)),
                            0xa == _0x2d8481)
                            return _0x467a6a(_0x4738d2 = new _0x4a8493(_0x5a0cc0), _0x35dac8 + _0x4738d2['e'] + 0x1, _0x295829);
                        if (_0x2a3a62 = String(_0x5a0cc0),
                            _0x49fdc1 = _0x11b7e9(0x305) == typeof _0x5a0cc0) {
                            if (0x0 * _0x5a0cc0 != 0x0)
                                return _0xa43002(_0x4738d2, _0x2a3a62, _0x49fdc1, _0x2d8481);
                            if (_0x4738d2['s'] = 0x1 / _0x5a0cc0 < 0x0 ? (_0x2a3a62 = _0x2a3a62[_0x11b7e9(0x3be)](0x1),
                                -0x1) : 0x1,
                                _0x4a8493[_0x11b7e9(0x388)] && _0x2a3a62[_0x11b7e9(0x3ed)](/^0\.0*|\./, '')[_0x11b7e9(0x376)] > 0xf)
                                throw Error(_0x4f08bb + _0x5a0cc0);
                        } else
                            _0x4738d2['s'] = 0x2d === _0x2a3a62[_0x11b7e9(0x8cb)](0x0) ? (_0x2a3a62 = _0x2a3a62[_0x11b7e9(0x3be)](0x1),
                                -0x1) : 0x1;
                        for (_0x187c2c = _0x4bfd1[_0x11b7e9(0x3be)](0x0, _0x2d8481),
                            _0x1ae7cc = _0x4640fd = 0x0,
                            _0x134fce = _0x2a3a62[_0x11b7e9(0x376)]; _0x4640fd < _0x134fce; _0x4640fd++)
                            if (_0x187c2c[_0x11b7e9(0xa59)](_0x162e85 = _0x2a3a62[_0x11b7e9(0x8c3)](_0x4640fd)) < 0x0) {
                                if ('.' == _0x162e85) {
                                    if (_0x4640fd > _0x1ae7cc) {
                                        _0x1ae7cc = _0x134fce;
                                        continue;
                                    }
                                } else {
                                    if (!_0x4aca92 && (_0x2a3a62 == _0x2a3a62['toUpperCase']() && (_0x2a3a62 = _0x2a3a62[_0x11b7e9(0xa2b)]()) || _0x2a3a62 == _0x2a3a62['toLowerCase']() && (_0x2a3a62 = _0x2a3a62[_0x11b7e9(0x744)]()))) {
                                        _0x4aca92 = !0x0,
                                            _0x4640fd = -0x1,
                                            _0x1ae7cc = 0x0;
                                        continue;
                                    }
                                }
                                return _0xa43002(_0x4738d2, String(_0x5a0cc0), _0x49fdc1, _0x2d8481);
                            }
                        _0x49fdc1 = !0x1,
                            (_0x1ae7cc = (_0x2a3a62 = _0x4f0f92(_0x2a3a62, _0x2d8481, 0xa, _0x4738d2['s']))[_0x11b7e9(0xa59)]('.')) > -0x1 ? _0x2a3a62 = _0x2a3a62[_0x11b7e9(0x3ed)]('.', '') : _0x1ae7cc = _0x2a3a62[_0x11b7e9(0x376)];
                    }
                    for (_0x4640fd = 0x0; 0x30 === _0x2a3a62[_0x11b7e9(0x8cb)](_0x4640fd); _0x4640fd++)
                        ;
                    for (_0x134fce = _0x2a3a62[_0x11b7e9(0x376)]; 0x30 === _0x2a3a62[_0x11b7e9(0x8cb)](--_0x134fce);)
                        ;
                    if (_0x2a3a62 = _0x2a3a62[_0x11b7e9(0x3be)](_0x4640fd, ++_0x134fce)) {
                        if (_0x134fce -= _0x4640fd,
                            _0x49fdc1 && _0x4a8493[_0x11b7e9(0x388)] && _0x134fce > 0xf && (_0x5a0cc0 > _0x484004 || _0x5a0cc0 !== _0x3f8614(_0x5a0cc0)))
                            throw Error(_0x4f08bb + _0x4738d2['s'] * _0x5a0cc0);
                        if ((_0x1ae7cc = _0x1ae7cc - _0x4640fd - 0x1) > _0x1816d5)
                            _0x4738d2['c'] = _0x4738d2['e'] = null;
                        else {
                            if (_0x1ae7cc < _0x57ff41)
                                _0x4738d2['c'] = [_0x4738d2['e'] = 0x0];
                            else {
                                if (_0x4738d2['e'] = _0x1ae7cc,
                                    _0x4738d2['c'] = [],
                                    _0x4640fd = (_0x1ae7cc + 0x1) % _0x219a55,
                                    _0x1ae7cc < 0x0 && (_0x4640fd += _0x219a55),
                                    _0x4640fd < _0x134fce) {
                                    for (_0x4640fd && _0x4738d2['c'][_0x11b7e9(0x745)](+_0x2a3a62[_0x11b7e9(0x3be)](0x0, _0x4640fd)),
                                        _0x134fce -= _0x219a55; _0x4640fd < _0x134fce;)
                                        _0x4738d2['c'][_0x11b7e9(0x745)](+_0x2a3a62[_0x11b7e9(0x3be)](_0x4640fd, _0x4640fd += _0x219a55));
                                    _0x4640fd = _0x219a55 - (_0x2a3a62 = _0x2a3a62[_0x11b7e9(0x3be)](_0x4640fd))[_0x11b7e9(0x376)];
                                } else
                                    _0x4640fd -= _0x134fce;
                                for (; _0x4640fd--; _0x2a3a62 += '0')
                                    ;
                                _0x4738d2['c'][_0x11b7e9(0x745)](+_0x2a3a62);
                            }
                        }
                    } else
                        _0x4738d2['c'] = [_0x4738d2['e'] = 0x0];
                }
                function _0x314533(_0x46d821, _0x10f2f0, _0x2a3389, _0x734630) {
                    const _0x4b1a8c = _0x557c;
                    var _0x5772ed, _0x1255da, _0x4b2d84, _0x23de92, _0x23a984;
                    if (null == _0x2a3389 ? _0x2a3389 = _0x295829 : _0x471250(_0x2a3389, 0x0, 0x8),
                        !_0x46d821['c'])
                        return _0x46d821[_0x4b1a8c(0x362)]();
                    if (_0x5772ed = _0x46d821['c'][0x0],
                        _0x4b2d84 = _0x46d821['e'],
                        null == _0x10f2f0)
                        _0x23a984 = _0x3d90a2(_0x46d821['c']),
                            _0x23a984 = 0x1 == _0x734630 || 0x2 == _0x734630 && (_0x4b2d84 <= _0x449fb6 || _0x4b2d84 >= _0x4fad4b) ? _0x374392(_0x23a984, _0x4b2d84) : _0x5b4d91(_0x23a984, _0x4b2d84, '0');
                    else {
                        if (_0x1255da = (_0x46d821 = _0x467a6a(new _0x4a8493(_0x46d821), _0x10f2f0, _0x2a3389))['e'],
                            _0x23de92 = (_0x23a984 = _0x3d90a2(_0x46d821['c']))[_0x4b1a8c(0x376)],
                            0x1 == _0x734630 || 0x2 == _0x734630 && (_0x10f2f0 <= _0x1255da || _0x1255da <= _0x449fb6)) {
                            for (; _0x23de92 < _0x10f2f0; _0x23a984 += '0',
                                _0x23de92++)
                                ;
                            _0x23a984 = _0x374392(_0x23a984, _0x1255da);
                        } else {
                            if (_0x10f2f0 -= _0x4b2d84,
                                _0x23a984 = _0x5b4d91(_0x23a984, _0x1255da, '0'),
                                _0x1255da + 0x1 > _0x23de92) {
                                if (--_0x10f2f0 > 0x0) {
                                    for (_0x23a984 += '.'; _0x10f2f0--; _0x23a984 += '0')
                                        ;
                                }
                            } else {
                                if ((_0x10f2f0 += _0x1255da - _0x23de92) > 0x0) {
                                    for (_0x1255da + 0x1 == _0x23de92 && (_0x23a984 += '.'); _0x10f2f0--; _0x23a984 += '0')
                                        ;
                                }
                            }
                        }
                    }
                    return _0x46d821['s'] < 0x0 && _0x5772ed ? '-' + _0x23a984 : _0x23a984;
                }
                function _0x51dce7(_0x427c64, _0x19566a) {
                    const _0x240924 = _0x557c;
                    for (var _0x1607af, _0x13b09b = 0x1, _0x380d53 = new _0x4a8493(_0x427c64[0x0]); _0x13b09b < _0x427c64[_0x240924(0x376)]; _0x13b09b++) {
                        if (!(_0x1607af = new _0x4a8493(_0x427c64[_0x13b09b]))['s']) {
                            _0x380d53 = _0x1607af;
                            break;
                        }
                        _0x19566a[_0x240924(0x479)](_0x380d53, _0x1607af) && (_0x380d53 = _0x1607af);
                    }
                    return _0x380d53;
                }
                function _0x164390(_0x2e9816, _0x1663b5, _0x7036bf) {
                    const _0x3b0cbe = _0x557c;
                    for (var _0xf024c6 = 0x1, _0x58f0a7 = _0x1663b5[_0x3b0cbe(0x376)]; !_0x1663b5[--_0x58f0a7]; _0x1663b5[_0x3b0cbe(0x6c4)]())
                        ;
                    for (_0x58f0a7 = _0x1663b5[0x0]; _0x58f0a7 >= 0xa; _0x58f0a7 /= 0xa,
                        _0xf024c6++)
                        ;
                    return (_0x7036bf = _0xf024c6 + _0x7036bf * _0x219a55 - 0x1) > _0x1816d5 ? _0x2e9816['c'] = _0x2e9816['e'] = null : _0x7036bf < _0x57ff41 ? _0x2e9816['c'] = [_0x2e9816['e'] = 0x0] : (_0x2e9816['e'] = _0x7036bf,
                        _0x2e9816['c'] = _0x1663b5),
                        _0x2e9816;
                }
                function _0x467a6a(_0xf49275, _0x19f25a, _0x4ce16f, _0x16f1d1) {
                    const _0x1d889b = _0x557c;
                    var _0x1d7f38, _0xf0f651, _0x270c26, _0x23f49b, _0x124009, _0x12b2ec, _0x2f3ece, _0x7e4eb4 = _0xf49275['c'], _0x29d77 = _0x5b5bd0;
                    if (_0x7e4eb4) {
                        _0x5e7582: {
                            for (_0x1d7f38 = 0x1,
                                _0x23f49b = _0x7e4eb4[0x0]; _0x23f49b >= 0xa; _0x23f49b /= 0xa,
                                _0x1d7f38++)
                                ;
                            if ((_0xf0f651 = _0x19f25a - _0x1d7f38) < 0x0)
                                _0xf0f651 += _0x219a55,
                                    _0x270c26 = _0x19f25a,
                                    _0x2f3ece = (_0x124009 = _0x7e4eb4[_0x12b2ec = 0x0]) / _0x29d77[_0x1d7f38 - _0x270c26 - 0x1] % 0xa | 0x0;
                            else {
                                if ((_0x12b2ec = _0x1ec26a((_0xf0f651 + 0x1) / _0x219a55)) >= _0x7e4eb4['length']) {
                                    if (!_0x16f1d1)
                                        break _0x5e7582;
                                    for (; _0x7e4eb4[_0x1d889b(0x376)] <= _0x12b2ec; _0x7e4eb4[_0x1d889b(0x745)](0x0))
                                        ;
                                    _0x124009 = _0x2f3ece = 0x0,
                                        _0x1d7f38 = 0x1,
                                        _0x270c26 = (_0xf0f651 %= _0x219a55) - _0x219a55 + 0x1;
                                } else {
                                    for (_0x124009 = _0x23f49b = _0x7e4eb4[_0x12b2ec],
                                        _0x1d7f38 = 0x1; _0x23f49b >= 0xa; _0x23f49b /= 0xa,
                                        _0x1d7f38++)
                                        ;
                                    _0x2f3ece = (_0x270c26 = (_0xf0f651 %= _0x219a55) - _0x219a55 + _0x1d7f38) < 0x0 ? 0x0 : _0x124009 / _0x29d77[_0x1d7f38 - _0x270c26 - 0x1] % 0xa | 0x0;
                                }
                            }
                            if (_0x16f1d1 = _0x16f1d1 || _0x19f25a < 0x0 || null != _0x7e4eb4[_0x12b2ec + 0x1] || (_0x270c26 < 0x0 ? _0x124009 : _0x124009 % _0x29d77[_0x1d7f38 - _0x270c26 - 0x1]),
                                _0x16f1d1 = _0x4ce16f < 0x4 ? (_0x2f3ece || _0x16f1d1) && (0x0 == _0x4ce16f || _0x4ce16f == (_0xf49275['s'] < 0x0 ? 0x3 : 0x2)) : _0x2f3ece > 0x5 || 0x5 == _0x2f3ece && (0x4 == _0x4ce16f || _0x16f1d1 || 0x6 == _0x4ce16f && (_0xf0f651 > 0x0 ? _0x270c26 > 0x0 ? _0x124009 / _0x29d77[_0x1d7f38 - _0x270c26] : 0x0 : _0x7e4eb4[_0x12b2ec - 0x1]) % 0xa & 0x1 || _0x4ce16f == (_0xf49275['s'] < 0x0 ? 0x8 : 0x7)),
                                _0x19f25a < 0x1 || !_0x7e4eb4[0x0])
                                return _0x7e4eb4[_0x1d889b(0x376)] = 0x0,
                                    _0x16f1d1 ? (_0x19f25a -= _0xf49275['e'] + 0x1,
                                        _0x7e4eb4[0x0] = _0x29d77[(_0x219a55 - _0x19f25a % _0x219a55) % _0x219a55],
                                        _0xf49275['e'] = -_0x19f25a || 0x0) : _0x7e4eb4[0x0] = _0xf49275['e'] = 0x0,
                                    _0xf49275;
                            if (0x0 == _0xf0f651 ? (_0x7e4eb4[_0x1d889b(0x376)] = _0x12b2ec,
                                _0x23f49b = 0x1,
                                _0x12b2ec--) : (_0x7e4eb4['length'] = _0x12b2ec + 0x1,
                                    _0x23f49b = _0x29d77[_0x219a55 - _0xf0f651],
                                    _0x7e4eb4[_0x12b2ec] = _0x270c26 > 0x0 ? _0x3f8614(_0x124009 / _0x29d77[_0x1d7f38 - _0x270c26] % _0x29d77[_0x270c26]) * _0x23f49b : 0x0),
                                _0x16f1d1)
                                for (; ;) {
                                    if (0x0 == _0x12b2ec) {
                                        for (_0xf0f651 = 0x1,
                                            _0x270c26 = _0x7e4eb4[0x0]; _0x270c26 >= 0xa; _0x270c26 /= 0xa,
                                            _0xf0f651++)
                                            ;
                                        for (_0x270c26 = _0x7e4eb4[0x0] += _0x23f49b,
                                            _0x23f49b = 0x1; _0x270c26 >= 0xa; _0x270c26 /= 0xa,
                                            _0x23f49b++)
                                            ;
                                        _0xf0f651 != _0x23f49b && (_0xf49275['e']++,
                                            _0x7e4eb4[0x0] == _0x258fca && (_0x7e4eb4[0x0] = 0x1));
                                        break;
                                    }
                                    if (_0x7e4eb4[_0x12b2ec] += _0x23f49b,
                                        _0x7e4eb4[_0x12b2ec] != _0x258fca)
                                        break;
                                    _0x7e4eb4[_0x12b2ec--] = 0x0,
                                        _0x23f49b = 0x1;
                                }
                            for (_0xf0f651 = _0x7e4eb4[_0x1d889b(0x376)]; 0x0 === _0x7e4eb4[--_0xf0f651]; _0x7e4eb4[_0x1d889b(0x6c4)]())
                                ;
                        }
                        _0xf49275['e'] > _0x1816d5 ? _0xf49275['c'] = _0xf49275['e'] = null : _0xf49275['e'] < _0x57ff41 && (_0xf49275['c'] = [_0xf49275['e'] = 0x0]);
                    }
                    return _0xf49275;
                }
                function _0x175d72(_0x5f4c1a) {
                    const _0x2bf09d = _0x557c;
                    var _0x11bb92, _0x4d429f = _0x5f4c1a['e'];
                    return null === _0x4d429f ? _0x5f4c1a[_0x2bf09d(0x362)]() : (_0x11bb92 = _0x3d90a2(_0x5f4c1a['c']),
                        _0x11bb92 = _0x4d429f <= _0x449fb6 || _0x4d429f >= _0x4fad4b ? _0x374392(_0x11bb92, _0x4d429f) : _0x5b4d91(_0x11bb92, _0x4d429f, '0'),
                        _0x5f4c1a['s'] < 0x0 ? '-' + _0x11bb92 : _0x11bb92);
                }
                return _0x4a8493[_0x1c4772(0x157)] = _0x3ea501,
                    _0x4a8493['ROUND_UP'] = 0x0,
                    _0x4a8493['ROUND_DOWN'] = 0x1,
                    _0x4a8493[_0x1c4772(0x4db)] = 0x2,
                    _0x4a8493[_0x1c4772(0x5cc)] = 0x3,
                    _0x4a8493[_0x1c4772(0x30c)] = 0x4,
                    _0x4a8493[_0x1c4772(0x981)] = 0x5,
                    _0x4a8493[_0x1c4772(0x531)] = 0x6,
                    _0x4a8493[_0x1c4772(0x2d8)] = 0x7,
                    _0x4a8493[_0x1c4772(0x853)] = 0x8,
                    _0x4a8493[_0x1c4772(0x345)] = 0x9,
                    _0x4a8493[_0x1c4772(0x33c)] = _0x4a8493[_0x1c4772(0x414)] = function (_0x1cbb69) {
                        const _0x53326f = _0x1c4772;
                        var _0x509cf2, _0x11949e;
                        if (null != _0x1cbb69) {
                            if (_0x53326f(0x3f0) != typeof _0x1cbb69)
                                throw Error(_0x3fed3d + _0x53326f(0x2ad) + _0x1cbb69);
                            if (_0x1cbb69[_0x53326f(0x704)](_0x509cf2 = _0x53326f(0x24f)) && (_0x471250(_0x11949e = _0x1cbb69[_0x509cf2], 0x0, _0x59c0bd, _0x509cf2),
                                _0x35dac8 = _0x11949e),
                                _0x1cbb69[_0x53326f(0x704)](_0x509cf2 = 'ROUNDING_MODE') && (_0x471250(_0x11949e = _0x1cbb69[_0x509cf2], 0x0, 0x8, _0x509cf2),
                                    _0x295829 = _0x11949e),
                                _0x1cbb69[_0x53326f(0x704)](_0x509cf2 = _0x53326f(0xa5d)) && ((_0x11949e = _0x1cbb69[_0x509cf2]) && _0x11949e[_0x53326f(0x6c4)] ? (_0x471250(_0x11949e[0x0], -_0x59c0bd, 0x0, _0x509cf2),
                                    _0x471250(_0x11949e[0x1], 0x0, _0x59c0bd, _0x509cf2),
                                    _0x449fb6 = _0x11949e[0x0],
                                    _0x4fad4b = _0x11949e[0x1]) : (_0x471250(_0x11949e, -_0x59c0bd, _0x59c0bd, _0x509cf2),
                                        _0x449fb6 = -(_0x4fad4b = _0x11949e < 0x0 ? -_0x11949e : _0x11949e))),
                                _0x1cbb69['hasOwnProperty'](_0x509cf2 = 'RANGE')) {
                                if ((_0x11949e = _0x1cbb69[_0x509cf2]) && _0x11949e[_0x53326f(0x6c4)])
                                    _0x471250(_0x11949e[0x0], -_0x59c0bd, -0x1, _0x509cf2),
                                        _0x471250(_0x11949e[0x1], 0x1, _0x59c0bd, _0x509cf2),
                                        _0x57ff41 = _0x11949e[0x0],
                                        _0x1816d5 = _0x11949e[0x1];
                                else {
                                    if (_0x471250(_0x11949e, -_0x59c0bd, _0x59c0bd, _0x509cf2),
                                        !_0x11949e)
                                        throw Error(_0x3fed3d + _0x509cf2 + _0x53326f(0xdc) + _0x11949e);
                                    _0x57ff41 = -(_0x1816d5 = _0x11949e < 0x0 ? -_0x11949e : _0x11949e);
                                }
                            }
                            if (_0x1cbb69[_0x53326f(0x704)](_0x509cf2 = _0x53326f(0x1a4))) {
                                if ((_0x11949e = _0x1cbb69[_0x509cf2]) !== !!_0x11949e)
                                    throw Error(_0x3fed3d + _0x509cf2 + _0x53326f(0x37f) + _0x11949e);
                                if (_0x11949e) {
                                    if (_0x53326f(0x8a8) == typeof crypto || !crypto || !crypto['getRandomValues'] && !crypto[_0x53326f(0x78b)])
                                        throw _0x1f3ae5 = !_0x11949e,
                                        Error(_0x3fed3d + _0x53326f(0x410));
                                    _0x1f3ae5 = _0x11949e;
                                } else
                                    _0x1f3ae5 = _0x11949e;
                            }
                            if (_0x1cbb69[_0x53326f(0x704)](_0x509cf2 = _0x53326f(0x4bd)) && (_0x471250(_0x11949e = _0x1cbb69[_0x509cf2], 0x0, 0x9, _0x509cf2),
                                _0x32ffcf = _0x11949e),
                                _0x1cbb69['hasOwnProperty'](_0x509cf2 = 'POW_PRECISION') && (_0x471250(_0x11949e = _0x1cbb69[_0x509cf2], 0x0, _0x59c0bd, _0x509cf2),
                                    _0x563664 = _0x11949e),
                                _0x1cbb69[_0x53326f(0x704)](_0x509cf2 = _0x53326f(0x4d1))) {
                                if (_0x53326f(0x3f0) != typeof (_0x11949e = _0x1cbb69[_0x509cf2]))
                                    throw Error(_0x3fed3d + _0x509cf2 + '\x20not\x20an\x20object:\x20' + _0x11949e);
                                _0x18984f = _0x11949e;
                            }
                            if (_0x1cbb69[_0x53326f(0x704)](_0x509cf2 = _0x53326f(0x7b8))) {
                                if (_0x53326f(0x937) != typeof (_0x11949e = _0x1cbb69[_0x509cf2]) || /^.$|[+-.\s]|(.).*\1/['test'](_0x11949e))
                                    throw Error(_0x3fed3d + _0x509cf2 + _0x53326f(0x5f9) + _0x11949e);
                                _0x4bfd1 = _0x11949e;
                            }
                        }
                        return {
                            'DECIMAL_PLACES': _0x35dac8,
                            'ROUNDING_MODE': _0x295829,
                            'EXPONENTIAL_AT': [_0x449fb6, _0x4fad4b],
                            'RANGE': [_0x57ff41, _0x1816d5],
                            'CRYPTO': _0x1f3ae5,
                            'MODULO_MODE': _0x32ffcf,
                            'POW_PRECISION': _0x563664,
                            'FORMAT': _0x18984f,
                            'ALPHABET': _0x4bfd1
                        };
                    }
                    ,
                    _0x4a8493['isBigNumber'] = function (_0xa84c0f) {
                        const _0x514f35 = _0x1c4772;
                        if (!_0xa84c0f || !0x0 !== _0xa84c0f['_isBigNumber'])
                            return !0x1;
                        if (!_0x4a8493[_0x514f35(0x388)])
                            return !0x0;
                        var _0x506ef2, _0x583659, _0x12f44d = _0xa84c0f['c'], _0x1dda22 = _0xa84c0f['e'], _0x5f0458 = _0xa84c0f['s'];
                        _0x2f7d04: if (_0x514f35(0x9e7) == {}[_0x514f35(0x362)][_0x514f35(0x479)](_0x12f44d)) {
                            if ((0x1 === _0x5f0458 || -0x1 === _0x5f0458) && _0x1dda22 >= -_0x59c0bd && _0x1dda22 <= _0x59c0bd && _0x1dda22 === _0x3f8614(_0x1dda22)) {
                                if (0x0 === _0x12f44d[0x0]) {
                                    if (0x0 === _0x1dda22 && 0x1 === _0x12f44d[_0x514f35(0x376)])
                                        return !0x0;
                                    break _0x2f7d04;
                                }
                                if ((_0x506ef2 = (_0x1dda22 + 0x1) % _0x219a55) < 0x1 && (_0x506ef2 += _0x219a55),
                                    String(_0x12f44d[0x0])[_0x514f35(0x376)] == _0x506ef2) {
                                    for (_0x506ef2 = 0x0; _0x506ef2 < _0x12f44d[_0x514f35(0x376)]; _0x506ef2++)
                                        if ((_0x583659 = _0x12f44d[_0x506ef2]) < 0x0 || _0x583659 >= _0x258fca || _0x583659 !== _0x3f8614(_0x583659))
                                            break _0x2f7d04;
                                    if (0x0 !== _0x583659)
                                        return !0x0;
                                }
                            }
                        } else {
                            if (null === _0x12f44d && null === _0x1dda22 && (null === _0x5f0458 || 0x1 === _0x5f0458 || -0x1 === _0x5f0458))
                                return !0x0;
                        }
                        throw Error(_0x3fed3d + _0x514f35(0x367) + _0xa84c0f);
                    }
                    ,
                    _0x4a8493['maximum'] = _0x4a8493['max'] = function () {
                        return _0x51dce7(arguments, _0x431f05['lt']);
                    }
                    ,
                    _0x4a8493['minimum'] = _0x4a8493[_0x1c4772(0x412)] = function () {
                        return _0x51dce7(arguments, _0x431f05['gt']);
                    }
                    ,
                    _0x4a8493[_0x1c4772(0x117)] = (_0x2b1adf = 0x20000000000000,
                        _0x5aaead = Math[_0x1c4772(0x117)]() * _0x2b1adf & 0x1fffff ? function () {
                            const _0x445224 = _0x1c4772;
                            return _0x3f8614(Math[_0x445224(0x117)]() * _0x2b1adf);
                        }
                            : function () {
                                const _0x18e275 = _0x1c4772;
                                return 0x800000 * (0x40000000 * Math['random']() | 0x0) + (0x800000 * Math[_0x18e275(0x117)]() | 0x0);
                            }
                        ,
                        function (_0xa16815) {
                            const _0x5c08ee = _0x1c4772;
                            var _0x535e1d, _0x27774e, _0x5cc159, _0x3d5a57, _0x38d458, _0x1340ef = 0x0, _0xfc3a0a = [], _0x824030 = new _0x4a8493(_0x233822);
                            if (null == _0xa16815 ? _0xa16815 = _0x35dac8 : _0x471250(_0xa16815, 0x0, _0x59c0bd),
                                _0x3d5a57 = _0x1ec26a(_0xa16815 / _0x219a55),
                                _0x1f3ae5) {
                                if (crypto['getRandomValues']) {
                                    for (_0x535e1d = crypto[_0x5c08ee(0x77f)](new Uint32Array(_0x3d5a57 *= 0x2)); _0x1340ef < _0x3d5a57;)
                                        (_0x38d458 = 0x20000 * _0x535e1d[_0x1340ef] + (_0x535e1d[_0x1340ef + 0x1] >>> 0xb)) >= 0x1ff973cafa8000 ? (_0x27774e = crypto[_0x5c08ee(0x77f)](new Uint32Array(0x2)),
                                            _0x535e1d[_0x1340ef] = _0x27774e[0x0],
                                            _0x535e1d[_0x1340ef + 0x1] = _0x27774e[0x1]) : (_0xfc3a0a[_0x5c08ee(0x745)](_0x38d458 % 0x5af3107a4000),
                                                _0x1340ef += 0x2);
                                    _0x1340ef = _0x3d5a57 / 0x2;
                                } else {
                                    if (!crypto[_0x5c08ee(0x78b)])
                                        throw _0x1f3ae5 = !0x1,
                                        Error(_0x3fed3d + 'crypto\x20unavailable');
                                    for (_0x535e1d = crypto['randomBytes'](_0x3d5a57 *= 0x7); _0x1340ef < _0x3d5a57;)
                                        (_0x38d458 = 0x1000000000000 * (0x1f & _0x535e1d[_0x1340ef]) + 0x10000000000 * _0x535e1d[_0x1340ef + 0x1] + 0x100000000 * _0x535e1d[_0x1340ef + 0x2] + 0x1000000 * _0x535e1d[_0x1340ef + 0x3] + (_0x535e1d[_0x1340ef + 0x4] << 0x10) + (_0x535e1d[_0x1340ef + 0x5] << 0x8) + _0x535e1d[_0x1340ef + 0x6]) >= 0x1ff973cafa8000 ? crypto['randomBytes'](0x7)[_0x5c08ee(0x7ba)](_0x535e1d, _0x1340ef) : (_0xfc3a0a[_0x5c08ee(0x745)](_0x38d458 % 0x5af3107a4000),
                                            _0x1340ef += 0x7);
                                    _0x1340ef = _0x3d5a57 / 0x7;
                                }
                            }
                            if (!_0x1f3ae5) {
                                for (; _0x1340ef < _0x3d5a57;)
                                    (_0x38d458 = _0x5aaead()) < 0x1ff973cafa8000 && (_0xfc3a0a[_0x1340ef++] = _0x38d458 % 0x5af3107a4000);
                            }
                            for (_0x3d5a57 = _0xfc3a0a[--_0x1340ef],
                                _0xa16815 %= _0x219a55,
                                _0x3d5a57 && _0xa16815 && (_0x38d458 = _0x5b5bd0[_0x219a55 - _0xa16815],
                                    _0xfc3a0a[_0x1340ef] = _0x3f8614(_0x3d5a57 / _0x38d458) * _0x38d458); 0x0 === _0xfc3a0a[_0x1340ef]; _0xfc3a0a[_0x5c08ee(0x6c4)](),
                                _0x1340ef--)
                                ;
                            if (_0x1340ef < 0x0)
                                _0xfc3a0a = [_0x5cc159 = 0x0];
                            else {
                                for (_0x5cc159 = -0x1; 0x0 === _0xfc3a0a[0x0]; _0xfc3a0a[_0x5c08ee(0x646)](0x0, 0x1),
                                    _0x5cc159 -= _0x219a55)
                                    ;
                                for (_0x1340ef = 0x1,
                                    _0x38d458 = _0xfc3a0a[0x0]; _0x38d458 >= 0xa; _0x38d458 /= 0xa,
                                    _0x1340ef++)
                                    ;
                                _0x1340ef < _0x219a55 && (_0x5cc159 -= _0x219a55 - _0x1340ef);
                            }
                            return _0x824030['e'] = _0x5cc159,
                                _0x824030['c'] = _0xfc3a0a,
                                _0x824030;
                        }
                    ),
                    _0x4a8493[_0x1c4772(0x933)] = function () {
                        const _0x61e69 = _0x1c4772;
                        for (var _0x1191d4 = 0x1, _0x21593d = arguments, _0x20acb9 = new _0x4a8493(_0x21593d[0x0]); _0x1191d4 < _0x21593d[_0x61e69(0x376)];)
                            _0x20acb9 = _0x20acb9[_0x61e69(0x1c6)](_0x21593d[_0x1191d4++]);
                        return _0x20acb9;
                    }
                    ,
                    _0x4f0f92 = function () {
                        const _0x53dc0c = _0x1c4772;
                        var _0x45ed84 = _0x53dc0c(0x64c);
                        function _0x4071a0(_0x260689, _0x304aa4, _0x25bf5f, _0x4ecd50) {
                            const _0x164f73 = _0x53dc0c;
                            for (var _0x3cdc13, _0x14ef84, _0xd978f2 = [0x0], _0x1c6750 = 0x0, _0x21602f = _0x260689[_0x164f73(0x376)]; _0x1c6750 < _0x21602f;) {
                                for (_0x14ef84 = _0xd978f2[_0x164f73(0x376)]; _0x14ef84--; _0xd978f2[_0x14ef84] *= _0x304aa4)
                                    ;
                                for (_0xd978f2[0x0] += _0x4ecd50[_0x164f73(0xa59)](_0x260689[_0x164f73(0x8c3)](_0x1c6750++)),
                                    _0x3cdc13 = 0x0; _0x3cdc13 < _0xd978f2['length']; _0x3cdc13++)
                                    _0xd978f2[_0x3cdc13] > _0x25bf5f - 0x1 && (null == _0xd978f2[_0x3cdc13 + 0x1] && (_0xd978f2[_0x3cdc13 + 0x1] = 0x0),
                                        _0xd978f2[_0x3cdc13 + 0x1] += _0xd978f2[_0x3cdc13] / _0x25bf5f | 0x0,
                                        _0xd978f2[_0x3cdc13] %= _0x25bf5f);
                            }
                            return _0xd978f2[_0x164f73(0x339)]();
                        }
                        return function (_0x4cd15c, _0x1fb5f5, _0x592a1e, _0x1d4e2b, _0x4c37e6) {
                            const _0x271f4c = _0x53dc0c;
                            var _0x56e256, _0x4aa28a, _0x5153db, _0x505cc2, _0x3ad539, _0x357a23, _0x4ebf7b, _0x278fac, _0x41a6ec = _0x4cd15c['indexOf']('.'), _0x40967d = _0x35dac8, _0x1fee2e = _0x295829;
                            for (_0x41a6ec >= 0x0 && (_0x505cc2 = _0x563664,
                                _0x563664 = 0x0,
                                _0x4cd15c = _0x4cd15c[_0x271f4c(0x3ed)]('.', ''),
                                _0x357a23 = (_0x278fac = new _0x4a8493(_0x1fb5f5))[_0x271f4c(0x857)](_0x4cd15c['length'] - _0x41a6ec),
                                _0x563664 = _0x505cc2,
                                _0x278fac['c'] = _0x4071a0(_0x5b4d91(_0x3d90a2(_0x357a23['c']), _0x357a23['e'], '0'), 0xa, _0x592a1e, _0x45ed84),
                                _0x278fac['e'] = _0x278fac['c'][_0x271f4c(0x376)]),
                                _0x5153db = _0x505cc2 = (_0x4ebf7b = _0x4071a0(_0x4cd15c, _0x1fb5f5, _0x592a1e, _0x4c37e6 ? (_0x56e256 = _0x4bfd1,
                                    _0x45ed84) : (_0x56e256 = _0x45ed84,
                                        _0x4bfd1)))[_0x271f4c(0x376)]; 0x0 == _0x4ebf7b[--_0x505cc2]; _0x4ebf7b[_0x271f4c(0x6c4)]())
                                ;
                            if (!_0x4ebf7b[0x0])
                                return _0x56e256['charAt'](0x0);
                            if (_0x41a6ec < 0x0 ? --_0x5153db : (_0x357a23['c'] = _0x4ebf7b,
                                _0x357a23['e'] = _0x5153db,
                                _0x357a23['s'] = _0x1d4e2b,
                                _0x4ebf7b = (_0x357a23 = _0x1ee497(_0x357a23, _0x278fac, _0x40967d, _0x1fee2e, _0x592a1e))['c'],
                                _0x3ad539 = _0x357a23['r'],
                                _0x5153db = _0x357a23['e']),
                                _0x41a6ec = _0x4ebf7b[_0x4aa28a = _0x5153db + _0x40967d + 0x1],
                                _0x505cc2 = _0x592a1e / 0x2,
                                _0x3ad539 = _0x3ad539 || _0x4aa28a < 0x0 || null != _0x4ebf7b[_0x4aa28a + 0x1],
                                _0x3ad539 = _0x1fee2e < 0x4 ? (null != _0x41a6ec || _0x3ad539) && (0x0 == _0x1fee2e || _0x1fee2e == (_0x357a23['s'] < 0x0 ? 0x3 : 0x2)) : _0x41a6ec > _0x505cc2 || _0x41a6ec == _0x505cc2 && (0x4 == _0x1fee2e || _0x3ad539 || 0x6 == _0x1fee2e && 0x1 & _0x4ebf7b[_0x4aa28a - 0x1] || _0x1fee2e == (_0x357a23['s'] < 0x0 ? 0x8 : 0x7)),
                                _0x4aa28a < 0x1 || !_0x4ebf7b[0x0])
                                _0x4cd15c = _0x3ad539 ? _0x5b4d91(_0x56e256['charAt'](0x1), -_0x40967d, _0x56e256[_0x271f4c(0x8c3)](0x0)) : _0x56e256[_0x271f4c(0x8c3)](0x0);
                            else {
                                if (_0x4ebf7b[_0x271f4c(0x376)] = _0x4aa28a,
                                    _0x3ad539) {
                                    for (--_0x592a1e; ++_0x4ebf7b[--_0x4aa28a] > _0x592a1e;)
                                        _0x4ebf7b[_0x4aa28a] = 0x0,
                                            _0x4aa28a || (++_0x5153db,
                                                _0x4ebf7b = [0x1][_0x271f4c(0x5f5)](_0x4ebf7b));
                                }
                                for (_0x505cc2 = _0x4ebf7b[_0x271f4c(0x376)]; !_0x4ebf7b[--_0x505cc2];)
                                    ;
                                for (_0x41a6ec = 0x0,
                                    _0x4cd15c = ''; _0x41a6ec <= _0x505cc2; _0x4cd15c += _0x56e256['charAt'](_0x4ebf7b[_0x41a6ec++]))
                                    ;
                                _0x4cd15c = _0x5b4d91(_0x4cd15c, _0x5153db, _0x56e256[_0x271f4c(0x8c3)](0x0));
                            }
                            return _0x4cd15c;
                        }
                            ;
                    }(),
                    _0x1ee497 = function () {
                        function _0x4d7445(_0x591b97, _0x1a63e1, _0x17388b) {
                            const _0x6e2fa2 = _0x557c;
                            var _0x19c02f, _0x56616d, _0xfaded1, _0x854c5, _0x387f35 = 0x0, _0x456c8e = _0x591b97['length'], _0x142fc2 = _0x1a63e1 % _0x196338, _0x352c77 = _0x1a63e1 / _0x196338 | 0x0;
                            for (_0x591b97 = _0x591b97[_0x6e2fa2(0x3be)](); _0x456c8e--;)
                                _0x387f35 = ((_0x56616d = _0x142fc2 * (_0xfaded1 = _0x591b97[_0x456c8e] % _0x196338) + (_0x19c02f = _0x352c77 * _0xfaded1 + (_0x854c5 = _0x591b97[_0x456c8e] / _0x196338 | 0x0) * _0x142fc2) % _0x196338 * _0x196338 + _0x387f35) / _0x17388b | 0x0) + (_0x19c02f / _0x196338 | 0x0) + _0x352c77 * _0x854c5,
                                    _0x591b97[_0x456c8e] = _0x56616d % _0x17388b;
                            return _0x387f35 && (_0x591b97 = [_0x387f35]['concat'](_0x591b97)),
                                _0x591b97;
                        }
                        function _0x3dbfc4(_0xea613, _0x2a290e, _0x50ca1c, _0x5146d6) {
                            var _0x267b84, _0x26396d;
                            if (_0x50ca1c != _0x5146d6)
                                _0x26396d = _0x50ca1c > _0x5146d6 ? 0x1 : -0x1;
                            else {
                                for (_0x267b84 = _0x26396d = 0x0; _0x267b84 < _0x50ca1c; _0x267b84++)
                                    if (_0xea613[_0x267b84] != _0x2a290e[_0x267b84]) {
                                        _0x26396d = _0xea613[_0x267b84] > _0x2a290e[_0x267b84] ? 0x1 : -0x1;
                                        break;
                                    }
                            }
                            return _0x26396d;
                        }
                        function _0x2786dd(_0x598fb0, _0x340acd, _0x3f4ffd, _0x438f6c) {
                            const _0x53cf94 = _0x557c;
                            for (var _0x37f513 = 0x0; _0x3f4ffd--;)
                                _0x598fb0[_0x3f4ffd] -= _0x37f513,
                                    _0x37f513 = _0x598fb0[_0x3f4ffd] < _0x340acd[_0x3f4ffd] ? 0x1 : 0x0,
                                    _0x598fb0[_0x3f4ffd] = _0x37f513 * _0x438f6c + _0x598fb0[_0x3f4ffd] - _0x340acd[_0x3f4ffd];
                            for (; !_0x598fb0[0x0] && _0x598fb0['length'] > 0x1; _0x598fb0[_0x53cf94(0x646)](0x0, 0x1))
                                ;
                        }
                        return function (_0x2e3243, _0x542b89, _0x1b2d84, _0x4be3ad, _0x3a20aa) {
                            const _0x4d38a3 = _0x557c;
                            var _0x3bf0d2, _0x4a8a13, _0x24ef9b, _0x4cf992, _0x3e8138, _0x264657, _0x1930d8, _0x2e2d54, _0x5ea348, _0x48c642, _0x4c9757, _0x54a6d2, _0x6fcef3, _0x2253b2, _0x1c0185, _0x391bf5, _0x48016e, _0x1fe77f = _0x2e3243['s'] == _0x542b89['s'] ? 0x1 : -0x1, _0x1dcc50 = _0x2e3243['c'], _0x50c0d7 = _0x542b89['c'];
                            if (!(_0x1dcc50 && _0x1dcc50[0x0] && _0x50c0d7 && _0x50c0d7[0x0]))
                                return new _0x4a8493(_0x2e3243['s'] && _0x542b89['s'] && (_0x1dcc50 ? !_0x50c0d7 || _0x1dcc50[0x0] != _0x50c0d7[0x0] : _0x50c0d7) ? _0x1dcc50 && 0x0 == _0x1dcc50[0x0] || !_0x50c0d7 ? 0x0 * _0x1fe77f : _0x1fe77f / 0x0 : NaN);
                            for (_0x5ea348 = (_0x2e2d54 = new _0x4a8493(_0x1fe77f))['c'] = [],
                                _0x1fe77f = _0x1b2d84 + (_0x4a8a13 = _0x2e3243['e'] - _0x542b89['e']) + 0x1,
                                _0x3a20aa || (_0x3a20aa = _0x258fca,
                                    _0x4a8a13 = _0x478f38(_0x2e3243['e'] / _0x219a55) - _0x478f38(_0x542b89['e'] / _0x219a55),
                                    _0x1fe77f = _0x1fe77f / _0x219a55 | 0x0),
                                _0x24ef9b = 0x0; _0x50c0d7[_0x24ef9b] == (_0x1dcc50[_0x24ef9b] || 0x0); _0x24ef9b++)
                                ;
                            if (_0x50c0d7[_0x24ef9b] > (_0x1dcc50[_0x24ef9b] || 0x0) && _0x4a8a13--,
                                _0x1fe77f < 0x0)
                                _0x5ea348['push'](0x1),
                                    _0x4cf992 = !0x0;
                            else {
                                for (_0x2253b2 = _0x1dcc50['length'],
                                    _0x391bf5 = _0x50c0d7['length'],
                                    _0x24ef9b = 0x0,
                                    _0x1fe77f += 0x2,
                                    (_0x3e8138 = _0x3f8614(_0x3a20aa / (_0x50c0d7[0x0] + 0x1))) > 0x1 && (_0x50c0d7 = _0x4d7445(_0x50c0d7, _0x3e8138, _0x3a20aa),
                                        _0x1dcc50 = _0x4d7445(_0x1dcc50, _0x3e8138, _0x3a20aa),
                                        _0x391bf5 = _0x50c0d7[_0x4d38a3(0x376)],
                                        _0x2253b2 = _0x1dcc50[_0x4d38a3(0x376)]),
                                    _0x6fcef3 = _0x391bf5,
                                    _0x4c9757 = (_0x48c642 = _0x1dcc50[_0x4d38a3(0x3be)](0x0, _0x391bf5))[_0x4d38a3(0x376)]; _0x4c9757 < _0x391bf5; _0x48c642[_0x4c9757++] = 0x0)
                                    ;
                                _0x48016e = _0x50c0d7[_0x4d38a3(0x3be)](),
                                    _0x48016e = [0x0][_0x4d38a3(0x5f5)](_0x48016e),
                                    _0x1c0185 = _0x50c0d7[0x0],
                                    _0x50c0d7[0x1] >= _0x3a20aa / 0x2 && _0x1c0185++;
                                do {
                                    if (_0x3e8138 = 0x0,
                                        (_0x3bf0d2 = _0x3dbfc4(_0x50c0d7, _0x48c642, _0x391bf5, _0x4c9757)) < 0x0) {
                                        if (_0x54a6d2 = _0x48c642[0x0],
                                            _0x391bf5 != _0x4c9757 && (_0x54a6d2 = _0x54a6d2 * _0x3a20aa + (_0x48c642[0x1] || 0x0)),
                                            (_0x3e8138 = _0x3f8614(_0x54a6d2 / _0x1c0185)) > 0x1) {
                                            for (_0x3e8138 >= _0x3a20aa && (_0x3e8138 = _0x3a20aa - 0x1),
                                                _0x1930d8 = (_0x264657 = _0x4d7445(_0x50c0d7, _0x3e8138, _0x3a20aa))[_0x4d38a3(0x376)],
                                                _0x4c9757 = _0x48c642[_0x4d38a3(0x376)]; 0x1 == _0x3dbfc4(_0x264657, _0x48c642, _0x1930d8, _0x4c9757);)
                                                _0x3e8138--,
                                                    _0x2786dd(_0x264657, _0x391bf5 < _0x1930d8 ? _0x48016e : _0x50c0d7, _0x1930d8, _0x3a20aa),
                                                    _0x1930d8 = _0x264657[_0x4d38a3(0x376)],
                                                    _0x3bf0d2 = 0x1;
                                        } else
                                            0x0 == _0x3e8138 && (_0x3bf0d2 = _0x3e8138 = 0x1),
                                                _0x1930d8 = (_0x264657 = _0x50c0d7[_0x4d38a3(0x3be)]())[_0x4d38a3(0x376)];
                                        if (_0x1930d8 < _0x4c9757 && (_0x264657 = [0x0][_0x4d38a3(0x5f5)](_0x264657)),
                                            _0x2786dd(_0x48c642, _0x264657, _0x4c9757, _0x3a20aa),
                                            _0x4c9757 = _0x48c642[_0x4d38a3(0x376)],
                                            -0x1 == _0x3bf0d2) {
                                            for (; _0x3dbfc4(_0x50c0d7, _0x48c642, _0x391bf5, _0x4c9757) < 0x1;)
                                                _0x3e8138++,
                                                    _0x2786dd(_0x48c642, _0x391bf5 < _0x4c9757 ? _0x48016e : _0x50c0d7, _0x4c9757, _0x3a20aa),
                                                    _0x4c9757 = _0x48c642['length'];
                                        }
                                    } else
                                        0x0 === _0x3bf0d2 && (_0x3e8138++,
                                            _0x48c642 = [0x0]);
                                    _0x5ea348[_0x24ef9b++] = _0x3e8138,
                                        _0x48c642[0x0] ? _0x48c642[_0x4c9757++] = _0x1dcc50[_0x6fcef3] || 0x0 : (_0x48c642 = [_0x1dcc50[_0x6fcef3]],
                                            _0x4c9757 = 0x1);
                                } while ((_0x6fcef3++ < _0x2253b2 || null != _0x48c642[0x0]) && _0x1fe77f--);
                                _0x4cf992 = null != _0x48c642[0x0],
                                    _0x5ea348[0x0] || _0x5ea348[_0x4d38a3(0x646)](0x0, 0x1);
                            }
                            if (_0x3a20aa == _0x258fca) {
                                for (_0x24ef9b = 0x1,
                                    _0x1fe77f = _0x5ea348[0x0]; _0x1fe77f >= 0xa; _0x1fe77f /= 0xa,
                                    _0x24ef9b++)
                                    ;
                                _0x467a6a(_0x2e2d54, _0x1b2d84 + (_0x2e2d54['e'] = _0x24ef9b + _0x4a8a13 * _0x219a55 - 0x1) + 0x1, _0x4be3ad, _0x4cf992);
                            } else
                                _0x2e2d54['e'] = _0x4a8a13,
                                    _0x2e2d54['r'] = +_0x4cf992;
                            return _0x2e2d54;
                        }
                            ;
                    }(),
                    _0x312457 = /^(-?)0([xbo])(?=\w[\w.]*$)/i,
                    _0x18935f = /^([^.]+)\.$/,
                    _0x4adee7 = /^\.([^.]+)$/,
                    _0x5af0cc = /^-?(Infinity|NaN)$/,
                    _0x5ca770 = /^\s*\+(?=[\w.])|^\s+|\s+$/g,
                    _0xa43002 = function (_0x23fbaf, _0x2a406b, _0x29bbcb, _0xff9262) {
                        const _0x12c224 = _0x1c4772;
                        var _0x39da80, _0x4779c5 = _0x29bbcb ? _0x2a406b : _0x2a406b[_0x12c224(0x3ed)](_0x5ca770, '');
                        if (_0x5af0cc[_0x12c224(0x6ae)](_0x4779c5))
                            _0x23fbaf['s'] = isNaN(_0x4779c5) ? null : _0x4779c5 < 0x0 ? -0x1 : 0x1;
                        else {
                            if (!_0x29bbcb && (_0x4779c5 = _0x4779c5[_0x12c224(0x3ed)](_0x312457, function (_0x5ae995, _0xce876e, _0x20a83c) {
                                const _0x261dba = _0x12c224;
                                return _0x39da80 = 'x' == (_0x20a83c = _0x20a83c[_0x261dba(0xa2b)]()) ? 0x10 : 'b' == _0x20a83c ? 0x2 : 0x8,
                                    _0xff9262 && _0xff9262 != _0x39da80 ? _0x5ae995 : _0xce876e;
                            }),
                                _0xff9262 && (_0x39da80 = _0xff9262,
                                    _0x4779c5 = _0x4779c5[_0x12c224(0x3ed)](_0x18935f, '$1')['replace'](_0x4adee7, _0x12c224(0x4f4))),
                                _0x2a406b != _0x4779c5))
                                return new _0x4a8493(_0x4779c5, _0x39da80);
                            if (_0x4a8493[_0x12c224(0x388)])
                                throw Error(_0x3fed3d + _0x12c224(0x183) + (_0xff9262 ? _0x12c224(0x68c) + _0xff9262 : '') + '\x20number:\x20' + _0x2a406b);
                            _0x23fbaf['s'] = null;
                        }
                        _0x23fbaf['c'] = _0x23fbaf['e'] = null;
                    }
                    ,
                    _0x431f05[_0x1c4772(0x741)] = _0x431f05[_0x1c4772(0xa8b)] = function () {
                        var _0x4da8d1 = new _0x4a8493(this);
                        return _0x4da8d1['s'] < 0x0 && (_0x4da8d1['s'] = 0x1),
                            _0x4da8d1;
                    }
                    ,
                    _0x431f05['comparedTo'] = function (_0x20f28c, _0xe1c120) {
                        return _0x1f187d(this, new _0x4a8493(_0x20f28c, _0xe1c120));
                    }
                    ,
                    _0x431f05[_0x1c4772(0xad8)] = _0x431f05['dp'] = function (_0x2f7d27, _0x491ac2) {
                        const _0x1feb73 = _0x1c4772;
                        var _0xee8c1a, _0x7c2008, _0xb24f8b, _0x1fb49c = this;
                        if (null != _0x2f7d27)
                            return _0x471250(_0x2f7d27, 0x0, _0x59c0bd),
                                null == _0x491ac2 ? _0x491ac2 = _0x295829 : _0x471250(_0x491ac2, 0x0, 0x8),
                                _0x467a6a(new _0x4a8493(_0x1fb49c), _0x2f7d27 + _0x1fb49c['e'] + 0x1, _0x491ac2);
                        if (!(_0xee8c1a = _0x1fb49c['c']))
                            return null;
                        if (_0x7c2008 = ((_0xb24f8b = _0xee8c1a[_0x1feb73(0x376)] - 0x1) - _0x478f38(this['e'] / _0x219a55)) * _0x219a55,
                            _0xb24f8b = _0xee8c1a[_0xb24f8b]) {
                            for (; _0xb24f8b % 0xa == 0x0; _0xb24f8b /= 0xa,
                                _0x7c2008--)
                                ;
                        }
                        return _0x7c2008 < 0x0 && (_0x7c2008 = 0x0),
                            _0x7c2008;
                    }
                    ,
                    _0x431f05['dividedBy'] = _0x431f05[_0x1c4772(0x9fc)] = function (_0x192e75, _0x3deea1) {
                        return _0x1ee497(this, new _0x4a8493(_0x192e75, _0x3deea1), _0x35dac8, _0x295829);
                    }
                    ,
                    _0x431f05[_0x1c4772(0x97d)] = _0x431f05['idiv'] = function (_0x3e58e2, _0x3435d5) {
                        return _0x1ee497(this, new _0x4a8493(_0x3e58e2, _0x3435d5), 0x0, 0x1);
                    }
                    ,
                    _0x431f05[_0x1c4772(0x80c)] = _0x431f05[_0x1c4772(0x857)] = function (_0xae888e, _0x748b7a) {
                        const _0x5471ee = _0x1c4772;
                        var _0x23f061, _0x5794c7, _0x401ad7, _0x43a546, _0x5f2e77, _0x3c4889, _0x548353, _0x2f3ac7, _0x4d5fb0 = this;
                        if ((_0xae888e = new _0x4a8493(_0xae888e))['c'] && !_0xae888e['isInteger']())
                            throw Error(_0x3fed3d + _0x5471ee(0x271) + _0x175d72(_0xae888e));
                        if (null != _0x748b7a && (_0x748b7a = new _0x4a8493(_0x748b7a)),
                            _0x5f2e77 = _0xae888e['e'] > 0xe,
                            !_0x4d5fb0['c'] || !_0x4d5fb0['c'][0x0] || 0x1 == _0x4d5fb0['c'][0x0] && !_0x4d5fb0['e'] && 0x1 == _0x4d5fb0['c'][_0x5471ee(0x376)] || !_0xae888e['c'] || !_0xae888e['c'][0x0])
                            return _0x2f3ac7 = new _0x4a8493(Math[_0x5471ee(0x857)](+_0x175d72(_0x4d5fb0), _0x5f2e77 ? 0x2 - _0x1ec0ee(_0xae888e) : +_0x175d72(_0xae888e))),
                                _0x748b7a ? _0x2f3ac7[_0x5471ee(0x126)](_0x748b7a) : _0x2f3ac7;
                        if (_0x3c4889 = _0xae888e['s'] < 0x0,
                            _0x748b7a) {
                            if (_0x748b7a['c'] ? !_0x748b7a['c'][0x0] : !_0x748b7a['s'])
                                return new _0x4a8493(NaN);
                            (_0x5794c7 = !_0x3c4889 && _0x4d5fb0['isInteger']() && _0x748b7a[_0x5471ee(0x7cb)]()) && (_0x4d5fb0 = _0x4d5fb0[_0x5471ee(0x126)](_0x748b7a));
                        } else {
                            if (_0xae888e['e'] > 0x9 && (_0x4d5fb0['e'] > 0x0 || _0x4d5fb0['e'] < -0x1 || (0x0 == _0x4d5fb0['e'] ? _0x4d5fb0['c'][0x0] > 0x1 || _0x5f2e77 && _0x4d5fb0['c'][0x1] >= 0xe4e1c00 : _0x4d5fb0['c'][0x0] < 0x48c273950000 || _0x5f2e77 && _0x4d5fb0['c'][0x0] <= 0x5af301938d80)))
                                return _0x43a546 = _0x4d5fb0['s'] < 0x0 && _0x1ec0ee(_0xae888e) ? -0x0 : 0x0,
                                    _0x4d5fb0['e'] > -0x1 && (_0x43a546 = 0x1 / _0x43a546),
                                    new _0x4a8493(_0x3c4889 ? 0x1 / _0x43a546 : _0x43a546);
                            _0x563664 && (_0x43a546 = _0x1ec26a(_0x563664 / _0x219a55 + 0x2));
                        }
                        for (_0x5f2e77 ? (_0x23f061 = new _0x4a8493(0.5),
                            _0x3c4889 && (_0xae888e['s'] = 0x1),
                            _0x548353 = _0x1ec0ee(_0xae888e)) : _0x548353 = (_0x401ad7 = Math['abs'](+_0x175d72(_0xae888e))) % 0x2,
                            _0x2f3ac7 = new _0x4a8493(_0x233822); ;) {
                            if (_0x548353) {
                                if (!(_0x2f3ac7 = _0x2f3ac7[_0x5471ee(0xab6)](_0x4d5fb0))['c'])
                                    break;
                                _0x43a546 ? _0x2f3ac7['c'][_0x5471ee(0x376)] > _0x43a546 && (_0x2f3ac7['c'][_0x5471ee(0x376)] = _0x43a546) : _0x5794c7 && (_0x2f3ac7 = _0x2f3ac7[_0x5471ee(0x126)](_0x748b7a));
                            }
                            if (_0x401ad7) {
                                if (0x0 === (_0x401ad7 = _0x3f8614(_0x401ad7 / 0x2)))
                                    break;
                                _0x548353 = _0x401ad7 % 0x2;
                            } else {
                                if (_0x467a6a(_0xae888e = _0xae888e[_0x5471ee(0xab6)](_0x23f061), _0xae888e['e'] + 0x1, 0x1),
                                    _0xae888e['e'] > 0xe)
                                    _0x548353 = _0x1ec0ee(_0xae888e);
                                else {
                                    if (0x0 === (_0x401ad7 = +_0x175d72(_0xae888e)))
                                        break;
                                    _0x548353 = _0x401ad7 % 0x2;
                                }
                            }
                            _0x4d5fb0 = _0x4d5fb0['times'](_0x4d5fb0),
                                _0x43a546 ? _0x4d5fb0['c'] && _0x4d5fb0['c'][_0x5471ee(0x376)] > _0x43a546 && (_0x4d5fb0['c']['length'] = _0x43a546) : _0x5794c7 && (_0x4d5fb0 = _0x4d5fb0['mod'](_0x748b7a));
                        }
                        return _0x5794c7 ? _0x2f3ac7 : (_0x3c4889 && (_0x2f3ac7 = _0x233822[_0x5471ee(0x9fc)](_0x2f3ac7)),
                            _0x748b7a ? _0x2f3ac7['mod'](_0x748b7a) : _0x43a546 ? _0x467a6a(_0x2f3ac7, _0x563664, _0x295829, undefined) : _0x2f3ac7);
                    }
                    ,
                    _0x431f05[_0x1c4772(0xa6c)] = function (_0x41edbc) {
                        var _0x3f6ad5 = new _0x4a8493(this);
                        return null == _0x41edbc ? _0x41edbc = _0x295829 : _0x471250(_0x41edbc, 0x0, 0x8),
                            _0x467a6a(_0x3f6ad5, _0x3f6ad5['e'] + 0x1, _0x41edbc);
                    }
                    ,
                    _0x431f05[_0x1c4772(0x6aa)] = _0x431f05['eq'] = function (_0x41156c, _0x579b14) {
                        return 0x0 === _0x1f187d(this, new _0x4a8493(_0x41156c, _0x579b14));
                    }
                    ,
                    _0x431f05[_0x1c4772(0xad0)] = function () {
                        return !!this['c'];
                    }
                    ,
                    _0x431f05[_0x1c4772(0x52d)] = _0x431f05['gt'] = function (_0x39d443, _0x457ed1) {
                        return _0x1f187d(this, new _0x4a8493(_0x39d443, _0x457ed1)) > 0x0;
                    }
                    ,
                    _0x431f05[_0x1c4772(0x226)] = _0x431f05[_0x1c4772(0x617)] = function (_0x4e5b1b, _0xa6d096) {
                        return 0x1 === (_0xa6d096 = _0x1f187d(this, new _0x4a8493(_0x4e5b1b, _0xa6d096))) || 0x0 === _0xa6d096;
                    }
                    ,
                    _0x431f05[_0x1c4772(0x7cb)] = function () {
                        const _0x26300e = _0x1c4772;
                        return !!this['c'] && _0x478f38(this['e'] / _0x219a55) > this['c'][_0x26300e(0x376)] - 0x2;
                    }
                    ,
                    _0x431f05[_0x1c4772(0x499)] = _0x431f05['lt'] = function (_0x5b1f26, _0x56c0ef) {
                        return _0x1f187d(this, new _0x4a8493(_0x5b1f26, _0x56c0ef)) < 0x0;
                    }
                    ,
                    _0x431f05[_0x1c4772(0xfb)] = _0x431f05[_0x1c4772(0x2ba)] = function (_0x4bf1e9, _0x588f25) {
                        return -0x1 === (_0x588f25 = _0x1f187d(this, new _0x4a8493(_0x4bf1e9, _0x588f25))) || 0x0 === _0x588f25;
                    }
                    ,
                    _0x431f05['isNaN'] = function () {
                        return !this['s'];
                    }
                    ,
                    _0x431f05[_0x1c4772(0x72a)] = function () {
                        return this['s'] < 0x0;
                    }
                    ,
                    _0x431f05[_0x1c4772(0x5a4)] = function () {
                        return this['s'] > 0x0;
                    }
                    ,
                    _0x431f05[_0x1c4772(0x5e4)] = function () {
                        return !!this['c'] && 0x0 == this['c'][0x0];
                    }
                    ,
                    _0x431f05[_0x1c4772(0x2ea)] = function (_0x4f5f63, _0x23cccc) {
                        const _0x54e1f3 = _0x1c4772;
                        var _0x4881a8, _0x5cae33, _0x23e073, _0x11831a, _0x5916ca = this, _0xf69734 = _0x5916ca['s'];
                        if (_0x23cccc = (_0x4f5f63 = new _0x4a8493(_0x4f5f63, _0x23cccc))['s'],
                            !_0xf69734 || !_0x23cccc)
                            return new _0x4a8493(NaN);
                        if (_0xf69734 != _0x23cccc)
                            return _0x4f5f63['s'] = -_0x23cccc,
                                _0x5916ca[_0x54e1f3(0x1c6)](_0x4f5f63);
                        var _0x52448d = _0x5916ca['e'] / _0x219a55
                            , _0x1e164e = _0x4f5f63['e'] / _0x219a55
                            , _0x2fd68c = _0x5916ca['c']
                            , _0x245cb6 = _0x4f5f63['c'];
                        if (!_0x52448d || !_0x1e164e) {
                            if (!_0x2fd68c || !_0x245cb6)
                                return _0x2fd68c ? (_0x4f5f63['s'] = -_0x23cccc,
                                    _0x4f5f63) : new _0x4a8493(_0x245cb6 ? _0x5916ca : NaN);
                            if (!_0x2fd68c[0x0] || !_0x245cb6[0x0])
                                return _0x245cb6[0x0] ? (_0x4f5f63['s'] = -_0x23cccc,
                                    _0x4f5f63) : new _0x4a8493(_0x2fd68c[0x0] ? _0x5916ca : 0x3 == _0x295829 ? -0x0 : 0x0);
                        }
                        if (_0x52448d = _0x478f38(_0x52448d),
                            _0x1e164e = _0x478f38(_0x1e164e),
                            _0x2fd68c = _0x2fd68c[_0x54e1f3(0x3be)](),
                            _0xf69734 = _0x52448d - _0x1e164e) {
                            for ((_0x11831a = _0xf69734 < 0x0) ? (_0xf69734 = -_0xf69734,
                                _0x23e073 = _0x2fd68c) : (_0x1e164e = _0x52448d,
                                    _0x23e073 = _0x245cb6),
                                _0x23e073['reverse'](),
                                _0x23cccc = _0xf69734; _0x23cccc--; _0x23e073[_0x54e1f3(0x745)](0x0))
                                ;
                            _0x23e073[_0x54e1f3(0x339)]();
                        } else {
                            for (_0x5cae33 = (_0x11831a = (_0xf69734 = _0x2fd68c[_0x54e1f3(0x376)]) < (_0x23cccc = _0x245cb6['length'])) ? _0xf69734 : _0x23cccc,
                                _0xf69734 = _0x23cccc = 0x0; _0x23cccc < _0x5cae33; _0x23cccc++)
                                if (_0x2fd68c[_0x23cccc] != _0x245cb6[_0x23cccc]) {
                                    _0x11831a = _0x2fd68c[_0x23cccc] < _0x245cb6[_0x23cccc];
                                    break;
                                }
                        }
                        if (_0x11831a && (_0x23e073 = _0x2fd68c,
                            _0x2fd68c = _0x245cb6,
                            _0x245cb6 = _0x23e073,
                            _0x4f5f63['s'] = -_0x4f5f63['s']),
                            (_0x23cccc = (_0x5cae33 = _0x245cb6['length']) - (_0x4881a8 = _0x2fd68c['length'])) > 0x0) {
                            for (; _0x23cccc--; _0x2fd68c[_0x4881a8++] = 0x0)
                                ;
                        }
                        for (_0x23cccc = _0x258fca - 0x1; _0x5cae33 > _0xf69734;) {
                            if (_0x2fd68c[--_0x5cae33] < _0x245cb6[_0x5cae33]) {
                                for (_0x4881a8 = _0x5cae33; _0x4881a8 && !_0x2fd68c[--_0x4881a8]; _0x2fd68c[_0x4881a8] = _0x23cccc)
                                    ;
                                --_0x2fd68c[_0x4881a8],
                                    _0x2fd68c[_0x5cae33] += _0x258fca;
                            }
                            _0x2fd68c[_0x5cae33] -= _0x245cb6[_0x5cae33];
                        }
                        for (; 0x0 == _0x2fd68c[0x0]; _0x2fd68c[_0x54e1f3(0x646)](0x0, 0x1),
                            --_0x1e164e)
                            ;
                        return _0x2fd68c[0x0] ? _0x164390(_0x4f5f63, _0x2fd68c, _0x1e164e) : (_0x4f5f63['s'] = 0x3 == _0x295829 ? -0x1 : 0x1,
                            _0x4f5f63['c'] = [_0x4f5f63['e'] = 0x0],
                            _0x4f5f63);
                    }
                    ,
                    _0x431f05[_0x1c4772(0x79d)] = _0x431f05[_0x1c4772(0x126)] = function (_0x392933, _0x50d3fd) {
                        const _0x4ba1d6 = _0x1c4772;
                        var _0x2171f6, _0x5aa34b, _0x2120ec = this;
                        return _0x392933 = new _0x4a8493(_0x392933, _0x50d3fd),
                            !_0x2120ec['c'] || !_0x392933['s'] || _0x392933['c'] && !_0x392933['c'][0x0] ? new _0x4a8493(NaN) : !_0x392933['c'] || _0x2120ec['c'] && !_0x2120ec['c'][0x0] ? new _0x4a8493(_0x2120ec) : (0x9 == _0x32ffcf ? (_0x5aa34b = _0x392933['s'],
                                _0x392933['s'] = 0x1,
                                _0x2171f6 = _0x1ee497(_0x2120ec, _0x392933, 0x0, 0x3),
                                _0x392933['s'] = _0x5aa34b,
                                _0x2171f6['s'] *= _0x5aa34b) : _0x2171f6 = _0x1ee497(_0x2120ec, _0x392933, 0x0, _0x32ffcf),
                                (_0x392933 = _0x2120ec[_0x4ba1d6(0x2ea)](_0x2171f6[_0x4ba1d6(0xab6)](_0x392933)))['c'][0x0] || 0x1 != _0x32ffcf || (_0x392933['s'] = _0x2120ec['s']),
                                _0x392933);
                    }
                    ,
                    _0x431f05[_0x1c4772(0x8d1)] = _0x431f05[_0x1c4772(0xab6)] = function (_0x522fa5, _0x1fed3b) {
                        const _0x3d7af5 = _0x1c4772;
                        var _0x3f8e6c, _0x4da353, _0x4f8dcd, _0x265067, _0xff4304, _0x4e384d, _0x1331df, _0x73fe75, _0x4faf8e, _0x548b8d, _0x5f1d8c, _0x42b2f6, _0x4bd130, _0x5e90bd, _0x9fe61d, _0x4ead61 = this, _0x2a8c5e = _0x4ead61['c'], _0x249af0 = (_0x522fa5 = new _0x4a8493(_0x522fa5, _0x1fed3b))['c'];
                        if (!(_0x2a8c5e && _0x249af0 && _0x2a8c5e[0x0] && _0x249af0[0x0]))
                            return !_0x4ead61['s'] || !_0x522fa5['s'] || _0x2a8c5e && !_0x2a8c5e[0x0] && !_0x249af0 || _0x249af0 && !_0x249af0[0x0] && !_0x2a8c5e ? _0x522fa5['c'] = _0x522fa5['e'] = _0x522fa5['s'] = null : (_0x522fa5['s'] *= _0x4ead61['s'],
                                _0x2a8c5e && _0x249af0 ? (_0x522fa5['c'] = [0x0],
                                    _0x522fa5['e'] = 0x0) : _0x522fa5['c'] = _0x522fa5['e'] = null),
                                _0x522fa5;
                        for (_0x4da353 = _0x478f38(_0x4ead61['e'] / _0x219a55) + _0x478f38(_0x522fa5['e'] / _0x219a55),
                            _0x522fa5['s'] *= _0x4ead61['s'],
                            (_0x1331df = _0x2a8c5e[_0x3d7af5(0x376)]) < (_0x548b8d = _0x249af0[_0x3d7af5(0x376)]) && (_0x4bd130 = _0x2a8c5e,
                                _0x2a8c5e = _0x249af0,
                                _0x249af0 = _0x4bd130,
                                _0x4f8dcd = _0x1331df,
                                _0x1331df = _0x548b8d,
                                _0x548b8d = _0x4f8dcd),
                            _0x4f8dcd = _0x1331df + _0x548b8d,
                            _0x4bd130 = []; _0x4f8dcd--; _0x4bd130['push'](0x0))
                            ;
                        for (_0x5e90bd = _0x258fca,
                            _0x9fe61d = _0x196338,
                            _0x4f8dcd = _0x548b8d; --_0x4f8dcd >= 0x0;) {
                            for (_0x3f8e6c = 0x0,
                                _0x5f1d8c = _0x249af0[_0x4f8dcd] % _0x9fe61d,
                                _0x42b2f6 = _0x249af0[_0x4f8dcd] / _0x9fe61d | 0x0,
                                _0x265067 = _0x4f8dcd + (_0xff4304 = _0x1331df); _0x265067 > _0x4f8dcd;)
                                _0x3f8e6c = ((_0x73fe75 = _0x5f1d8c * (_0x73fe75 = _0x2a8c5e[--_0xff4304] % _0x9fe61d) + (_0x4e384d = _0x42b2f6 * _0x73fe75 + (_0x4faf8e = _0x2a8c5e[_0xff4304] / _0x9fe61d | 0x0) * _0x5f1d8c) % _0x9fe61d * _0x9fe61d + _0x4bd130[_0x265067] + _0x3f8e6c) / _0x5e90bd | 0x0) + (_0x4e384d / _0x9fe61d | 0x0) + _0x42b2f6 * _0x4faf8e,
                                    _0x4bd130[_0x265067--] = _0x73fe75 % _0x5e90bd;
                            _0x4bd130[_0x265067] = _0x3f8e6c;
                        }
                        return _0x3f8e6c ? ++_0x4da353 : _0x4bd130[_0x3d7af5(0x646)](0x0, 0x1),
                            _0x164390(_0x522fa5, _0x4bd130, _0x4da353);
                    }
                    ,
                    _0x431f05[_0x1c4772(0x431)] = function () {
                        var _0x3b173a = new _0x4a8493(this);
                        return _0x3b173a['s'] = -_0x3b173a['s'] || null,
                            _0x3b173a;
                    }
                    ,
                    _0x431f05['plus'] = function (_0x570902, _0x2bd616) {
                        const _0x5e0e62 = _0x1c4772;
                        var _0x561725, _0xe5c2b7 = this, _0x3bacf1 = _0xe5c2b7['s'];
                        if (_0x2bd616 = (_0x570902 = new _0x4a8493(_0x570902, _0x2bd616))['s'],
                            !_0x3bacf1 || !_0x2bd616)
                            return new _0x4a8493(NaN);
                        if (_0x3bacf1 != _0x2bd616)
                            return _0x570902['s'] = -_0x2bd616,
                                _0xe5c2b7[_0x5e0e62(0x2ea)](_0x570902);
                        var _0x5538ae = _0xe5c2b7['e'] / _0x219a55
                            , _0x54db17 = _0x570902['e'] / _0x219a55
                            , _0x42433c = _0xe5c2b7['c']
                            , _0x540036 = _0x570902['c'];
                        if (!_0x5538ae || !_0x54db17) {
                            if (!_0x42433c || !_0x540036)
                                return new _0x4a8493(_0x3bacf1 / 0x0);
                            if (!_0x42433c[0x0] || !_0x540036[0x0])
                                return _0x540036[0x0] ? _0x570902 : new _0x4a8493(_0x42433c[0x0] ? _0xe5c2b7 : 0x0 * _0x3bacf1);
                        }
                        if (_0x5538ae = _0x478f38(_0x5538ae),
                            _0x54db17 = _0x478f38(_0x54db17),
                            _0x42433c = _0x42433c[_0x5e0e62(0x3be)](),
                            _0x3bacf1 = _0x5538ae - _0x54db17) {
                            for (_0x3bacf1 > 0x0 ? (_0x54db17 = _0x5538ae,
                                _0x561725 = _0x540036) : (_0x3bacf1 = -_0x3bacf1,
                                    _0x561725 = _0x42433c),
                                _0x561725[_0x5e0e62(0x339)](); _0x3bacf1--; _0x561725[_0x5e0e62(0x745)](0x0))
                                ;
                            _0x561725['reverse']();
                        }
                        for ((_0x3bacf1 = _0x42433c['length']) - (_0x2bd616 = _0x540036[_0x5e0e62(0x376)]) < 0x0 && (_0x561725 = _0x540036,
                            _0x540036 = _0x42433c,
                            _0x42433c = _0x561725,
                            _0x2bd616 = _0x3bacf1),
                            _0x3bacf1 = 0x0; _0x2bd616;)
                            _0x3bacf1 = (_0x42433c[--_0x2bd616] = _0x42433c[_0x2bd616] + _0x540036[_0x2bd616] + _0x3bacf1) / _0x258fca | 0x0,
                                _0x42433c[_0x2bd616] = _0x258fca === _0x42433c[_0x2bd616] ? 0x0 : _0x42433c[_0x2bd616] % _0x258fca;
                        return _0x3bacf1 && (_0x42433c = [_0x3bacf1][_0x5e0e62(0x5f5)](_0x42433c),
                            ++_0x54db17),
                            _0x164390(_0x570902, _0x42433c, _0x54db17);
                    }
                    ,
                    _0x431f05[_0x1c4772(0x637)] = _0x431f05['sd'] = function (_0x605e09, _0x70b6ae) {
                        const _0x35ae8d = _0x1c4772;
                        var _0x4ce9b3, _0x35ca39, _0x162ad7, _0x43aaaf = this;
                        if (null != _0x605e09 && _0x605e09 !== !!_0x605e09)
                            return _0x471250(_0x605e09, 0x1, _0x59c0bd),
                                null == _0x70b6ae ? _0x70b6ae = _0x295829 : _0x471250(_0x70b6ae, 0x0, 0x8),
                                _0x467a6a(new _0x4a8493(_0x43aaaf), _0x605e09, _0x70b6ae);
                        if (!(_0x4ce9b3 = _0x43aaaf['c']))
                            return null;
                        if (_0x35ca39 = (_0x162ad7 = _0x4ce9b3[_0x35ae8d(0x376)] - 0x1) * _0x219a55 + 0x1,
                            _0x162ad7 = _0x4ce9b3[_0x162ad7]) {
                            for (; _0x162ad7 % 0xa == 0x0; _0x162ad7 /= 0xa,
                                _0x35ca39--)
                                ;
                            for (_0x162ad7 = _0x4ce9b3[0x0]; _0x162ad7 >= 0xa; _0x162ad7 /= 0xa,
                                _0x35ca39++)
                                ;
                        }
                        return _0x605e09 && _0x43aaaf['e'] + 0x1 > _0x35ca39 && (_0x35ca39 = _0x43aaaf['e'] + 0x1),
                            _0x35ca39;
                    }
                    ,
                    _0x431f05[_0x1c4772(0x806)] = function (_0x2e5ba3) {
                        const _0x57b4bf = _0x1c4772;
                        return _0x471250(_0x2e5ba3, -0x1fffffffffffff, _0x484004),
                            this[_0x57b4bf(0xab6)]('1e' + _0x2e5ba3);
                    }
                    ,
                    _0x431f05[_0x1c4772(0xdd)] = _0x431f05[_0x1c4772(0x3d2)] = function () {
                        const _0x4d1174 = _0x1c4772;
                        var _0x344d8f, _0x40c4e0, _0x495055, _0x4836d9, _0x44df8a, _0x15fa4e = this, _0x2a44d0 = _0x15fa4e['c'], _0x85cd17 = _0x15fa4e['s'], _0x16d068 = _0x15fa4e['e'], _0xfa8b74 = _0x35dac8 + 0x4, _0x1b62c1 = new _0x4a8493('0.5');
                        if (0x1 !== _0x85cd17 || !_0x2a44d0 || !_0x2a44d0[0x0])
                            return new _0x4a8493(!_0x85cd17 || _0x85cd17 < 0x0 && (!_0x2a44d0 || _0x2a44d0[0x0]) ? NaN : _0x2a44d0 ? _0x15fa4e : 0x1 / 0x0);
                        if (0x0 == (_0x85cd17 = Math[_0x4d1174(0x3d2)](+_0x175d72(_0x15fa4e))) || _0x85cd17 == 0x1 / 0x0 ? (((_0x40c4e0 = _0x3d90a2(_0x2a44d0))[_0x4d1174(0x376)] + _0x16d068) % 0x2 == 0x0 && (_0x40c4e0 += '0'),
                            _0x85cd17 = Math[_0x4d1174(0x3d2)](+_0x40c4e0),
                            _0x16d068 = _0x478f38((_0x16d068 + 0x1) / 0x2) - (_0x16d068 < 0x0 || _0x16d068 % 0x2),
                            _0x495055 = new _0x4a8493(_0x40c4e0 = _0x85cd17 == 0x1 / 0x0 ? '1e' + _0x16d068 : (_0x40c4e0 = _0x85cd17[_0x4d1174(0x344)]())['slice'](0x0, _0x40c4e0[_0x4d1174(0xa59)]('e') + 0x1) + _0x16d068)) : _0x495055 = new _0x4a8493(_0x85cd17 + ''),
                            _0x495055['c'][0x0]) {
                            for ((_0x85cd17 = (_0x16d068 = _0x495055['e']) + _0xfa8b74) < 0x3 && (_0x85cd17 = 0x0); ;)
                                if (_0x44df8a = _0x495055,
                                    _0x495055 = _0x1b62c1[_0x4d1174(0xab6)](_0x44df8a[_0x4d1174(0x1c6)](_0x1ee497(_0x15fa4e, _0x44df8a, _0xfa8b74, 0x1))),
                                    _0x3d90a2(_0x44df8a['c'])['slice'](0x0, _0x85cd17) === (_0x40c4e0 = _0x3d90a2(_0x495055['c']))[_0x4d1174(0x3be)](0x0, _0x85cd17)) {
                                    if (_0x495055['e'] < _0x16d068 && --_0x85cd17,
                                        '9999' != (_0x40c4e0 = _0x40c4e0[_0x4d1174(0x3be)](_0x85cd17 - 0x3, _0x85cd17 + 0x1)) && (_0x4836d9 || _0x4d1174(0x5a8) != _0x40c4e0)) {
                                        +_0x40c4e0 && (+_0x40c4e0[_0x4d1174(0x3be)](0x1) || '5' != _0x40c4e0[_0x4d1174(0x8c3)](0x0)) || (_0x467a6a(_0x495055, _0x495055['e'] + _0x35dac8 + 0x2, 0x1),
                                            _0x344d8f = !_0x495055[_0x4d1174(0xab6)](_0x495055)['eq'](_0x15fa4e));
                                        break;
                                    }
                                    if (!_0x4836d9 && (_0x467a6a(_0x44df8a, _0x44df8a['e'] + _0x35dac8 + 0x2, 0x0),
                                        _0x44df8a[_0x4d1174(0xab6)](_0x44df8a)['eq'](_0x15fa4e))) {
                                        _0x495055 = _0x44df8a;
                                        break;
                                    }
                                    _0xfa8b74 += 0x4,
                                        _0x85cd17 += 0x4,
                                        _0x4836d9 = 0x1;
                                }
                        }
                        return _0x467a6a(_0x495055, _0x495055['e'] + _0x35dac8 + 0x1, _0x295829, _0x344d8f);
                    }
                    ,
                    _0x431f05[_0x1c4772(0x344)] = function (_0x3d44c7, _0x25dd27) {
                        return null != _0x3d44c7 && (_0x471250(_0x3d44c7, 0x0, _0x59c0bd),
                            _0x3d44c7++),
                            _0x314533(this, _0x3d44c7, _0x25dd27, 0x1);
                    }
                    ,
                    _0x431f05[_0x1c4772(0x7ed)] = function (_0x543fa7, _0xe50a7b) {
                        return null != _0x543fa7 && (_0x471250(_0x543fa7, 0x0, _0x59c0bd),
                            _0x543fa7 = _0x543fa7 + this['e'] + 0x1),
                            _0x314533(this, _0x543fa7, _0xe50a7b);
                    }
                    ,
                    _0x431f05[_0x1c4772(0x278)] = function (_0x2cca6e, _0x1b43c1, _0x19c14f) {
                        const _0x223404 = _0x1c4772;
                        var _0x352d19, _0x348813 = this;
                        if (null == _0x19c14f)
                            null != _0x2cca6e && _0x1b43c1 && 'object' == typeof _0x1b43c1 ? (_0x19c14f = _0x1b43c1,
                                _0x1b43c1 = null) : _0x2cca6e && 'object' == typeof _0x2cca6e ? (_0x19c14f = _0x2cca6e,
                                    _0x2cca6e = _0x1b43c1 = null) : _0x19c14f = _0x18984f;
                        else {
                            if (_0x223404(0x3f0) != typeof _0x19c14f)
                                throw Error(_0x3fed3d + _0x223404(0x584) + _0x19c14f);
                        }
                        if (_0x352d19 = _0x348813[_0x223404(0x7ed)](_0x2cca6e, _0x1b43c1),
                            _0x348813['c']) {
                            var _0x1af09d, _0x3a7a1 = _0x352d19[_0x223404(0x89c)]('.'), _0x3c28c9 = +_0x19c14f['groupSize'], _0x559312 = +_0x19c14f[_0x223404(0x2ed)], _0x2a6277 = _0x19c14f['groupSeparator'] || '', _0x44d955 = _0x3a7a1[0x0], _0x1f8546 = _0x3a7a1[0x1], _0x44077d = _0x348813['s'] < 0x0, _0x5a9ee5 = _0x44077d ? _0x44d955[_0x223404(0x3be)](0x1) : _0x44d955, _0xf03fc0 = _0x5a9ee5['length'];
                            if (_0x559312 && (_0x1af09d = _0x3c28c9,
                                _0x3c28c9 = _0x559312,
                                _0x559312 = _0x1af09d,
                                _0xf03fc0 -= _0x1af09d),
                                _0x3c28c9 > 0x0 && _0xf03fc0 > 0x0) {
                                for (_0x1af09d = _0xf03fc0 % _0x3c28c9 || _0x3c28c9,
                                    _0x44d955 = _0x5a9ee5['substr'](0x0, _0x1af09d); _0x1af09d < _0xf03fc0; _0x1af09d += _0x3c28c9)
                                    _0x44d955 += _0x2a6277 + _0x5a9ee5[_0x223404(0x7be)](_0x1af09d, _0x3c28c9);
                                _0x559312 > 0x0 && (_0x44d955 += _0x2a6277 + _0x5a9ee5[_0x223404(0x3be)](_0x1af09d)),
                                    _0x44077d && (_0x44d955 = '-' + _0x44d955);
                            }
                            _0x352d19 = _0x1f8546 ? _0x44d955 + (_0x19c14f[_0x223404(0x308)] || '') + ((_0x559312 = +_0x19c14f['fractionGroupSize']) ? _0x1f8546[_0x223404(0x3ed)](new RegExp(_0x223404(0x4fc) + _0x559312 + _0x223404(0x52e), 'g'), '$&' + (_0x19c14f[_0x223404(0x1e6)] || '')) : _0x1f8546) : _0x44d955;
                        }
                        return (_0x19c14f[_0x223404(0x2f2)] || '') + _0x352d19 + (_0x19c14f[_0x223404(0x563)] || '');
                    }
                    ,
                    _0x431f05[_0x1c4772(0x2cd)] = function (_0x5d8e19) {
                        const _0x2521ab = _0x1c4772;
                        var _0x42500d, _0x31558f, _0x3c78c7, _0x21b7c0, _0x45aebf, _0x117d9e, _0x18e2fe, _0x1ecdd7, _0x38925c, _0x4c4bbe, _0xf662e4, _0x3b9697, _0x40e6fe = this, _0x3cf652 = _0x40e6fe['c'];
                        if (null != _0x5d8e19 && (!(_0x18e2fe = new _0x4a8493(_0x5d8e19))[_0x2521ab(0x7cb)]() && (_0x18e2fe['c'] || 0x1 !== _0x18e2fe['s']) || _0x18e2fe['lt'](_0x233822)))
                            throw Error(_0x3fed3d + 'Argument\x20' + (_0x18e2fe[_0x2521ab(0x7cb)]() ? _0x2521ab(0x1af) : _0x2521ab(0xa87)) + _0x175d72(_0x18e2fe));
                        if (!_0x3cf652)
                            return new _0x4a8493(_0x40e6fe);
                        for (_0x42500d = new _0x4a8493(_0x233822),
                            _0x38925c = _0x31558f = new _0x4a8493(_0x233822),
                            _0x3c78c7 = _0x1ecdd7 = new _0x4a8493(_0x233822),
                            _0x3b9697 = _0x3d90a2(_0x3cf652),
                            _0x45aebf = _0x42500d['e'] = _0x3b9697['length'] - _0x40e6fe['e'] - 0x1,
                            _0x42500d['c'][0x0] = _0x5b5bd0[(_0x117d9e = _0x45aebf % _0x219a55) < 0x0 ? _0x219a55 + _0x117d9e : _0x117d9e],
                            _0x5d8e19 = !_0x5d8e19 || _0x18e2fe[_0x2521ab(0x801)](_0x42500d) > 0x0 ? _0x45aebf > 0x0 ? _0x42500d : _0x38925c : _0x18e2fe,
                            _0x117d9e = _0x1816d5,
                            _0x1816d5 = 0x1 / 0x0,
                            _0x18e2fe = new _0x4a8493(_0x3b9697),
                            _0x1ecdd7['c'][0x0] = 0x0; _0x4c4bbe = _0x1ee497(_0x18e2fe, _0x42500d, 0x0, 0x1),
                            0x1 != (_0x21b7c0 = _0x31558f[_0x2521ab(0x1c6)](_0x4c4bbe[_0x2521ab(0xab6)](_0x3c78c7)))[_0x2521ab(0x801)](_0x5d8e19);)
                            _0x31558f = _0x3c78c7,
                                _0x3c78c7 = _0x21b7c0,
                                _0x38925c = _0x1ecdd7[_0x2521ab(0x1c6)](_0x4c4bbe[_0x2521ab(0xab6)](_0x21b7c0 = _0x38925c)),
                                _0x1ecdd7 = _0x21b7c0,
                                _0x42500d = _0x18e2fe[_0x2521ab(0x2ea)](_0x4c4bbe[_0x2521ab(0xab6)](_0x21b7c0 = _0x42500d)),
                                _0x18e2fe = _0x21b7c0;
                        return _0x21b7c0 = _0x1ee497(_0x5d8e19[_0x2521ab(0x2ea)](_0x31558f), _0x3c78c7, 0x0, 0x1),
                            _0x1ecdd7 = _0x1ecdd7[_0x2521ab(0x1c6)](_0x21b7c0['times'](_0x38925c)),
                            _0x31558f = _0x31558f[_0x2521ab(0x1c6)](_0x21b7c0[_0x2521ab(0xab6)](_0x3c78c7)),
                            _0x1ecdd7['s'] = _0x38925c['s'] = _0x40e6fe['s'],
                            _0xf662e4 = _0x1ee497(_0x38925c, _0x3c78c7, _0x45aebf *= 0x2, _0x295829)[_0x2521ab(0x2ea)](_0x40e6fe)[_0x2521ab(0xa8b)]()[_0x2521ab(0x801)](_0x1ee497(_0x1ecdd7, _0x31558f, _0x45aebf, _0x295829)[_0x2521ab(0x2ea)](_0x40e6fe)[_0x2521ab(0xa8b)]()) < 0x1 ? [_0x38925c, _0x3c78c7] : [_0x1ecdd7, _0x31558f],
                            _0x1816d5 = _0x117d9e,
                            _0xf662e4;
                    }
                    ,
                    _0x431f05[_0x1c4772(0xa91)] = function () {
                        return +_0x175d72(this);
                    }
                    ,
                    _0x431f05['toPrecision'] = function (_0x3e14a1, _0x11ba56) {
                        return null != _0x3e14a1 && _0x471250(_0x3e14a1, 0x1, _0x59c0bd),
                            _0x314533(this, _0x3e14a1, _0x11ba56, 0x2);
                    }
                    ,
                    _0x431f05['toString'] = function (_0x86a838) {
                        const _0x105fa0 = _0x1c4772;
                        var _0x590308, _0x236052 = this, _0x198ab3 = _0x236052['s'], _0x242dba = _0x236052['e'];
                        return null === _0x242dba ? _0x198ab3 ? (_0x590308 = _0x105fa0(0x44c),
                            _0x198ab3 < 0x0 && (_0x590308 = '-' + _0x590308)) : _0x590308 = _0x105fa0(0x93a) : (null == _0x86a838 ? _0x590308 = _0x242dba <= _0x449fb6 || _0x242dba >= _0x4fad4b ? _0x374392(_0x3d90a2(_0x236052['c']), _0x242dba) : _0x5b4d91(_0x3d90a2(_0x236052['c']), _0x242dba, '0') : 0xa === _0x86a838 ? _0x590308 = _0x5b4d91(_0x3d90a2((_0x236052 = _0x467a6a(new _0x4a8493(_0x236052), _0x35dac8 + _0x242dba + 0x1, _0x295829))['c']), _0x236052['e'], '0') : (_0x471250(_0x86a838, 0x2, _0x4bfd1[_0x105fa0(0x376)], _0x105fa0(0x507)),
                                _0x590308 = _0x4f0f92(_0x5b4d91(_0x3d90a2(_0x236052['c']), _0x242dba, '0'), 0xa, _0x86a838, _0x198ab3, !0x0)),
                                _0x198ab3 < 0x0 && _0x236052['c'][0x0] && (_0x590308 = '-' + _0x590308)),
                            _0x590308;
                    }
                    ,
                    _0x431f05[_0x1c4772(0x696)] = _0x431f05[_0x1c4772(0x1dd)] = function () {
                        return _0x175d72(this);
                    }
                    ,
                    _0x431f05[_0x1c4772(0x6b1)] = !0x0,
                    _0x3df263 && (_0x431f05[Symbol[_0x1c4772(0x976)]] = 'BigNumber',
                        _0x431f05[Symbol[_0x1c4772(0x246)](_0x1c4772(0x8c4))] = _0x431f05[_0x1c4772(0x696)]),
                    null != _0x5ba828 && _0x4a8493[_0x1c4772(0x414)](_0x5ba828),
                    _0x4a8493;
            }(),
                _0x2aaa98['default'] = _0x2aaa98['BigNumber'] = _0x2aaa98,
                _0x46345f(0x3eb) == typeof define && define['amd'] ? define(function () {
                    return _0x2aaa98;
                }) : 'undefined' != typeof module && module[_0x46345f(0x359)] ? module['exports'] = _0x2aaa98 : (_0x2acfd1 || (_0x2acfd1 = _0x46345f(0x8a8) != typeof self && self ? self : window),
                    _0x2acfd1[_0x46345f(0x418)] = _0x2aaa98),
                _0x2aaa98;
        }();
        function _0x58cd67() { }
        function _0x556604(_0x533446) {
            const _0x2c0bd7 = _0x324b8e;
            this['context'] = _0x533446,
                this[_0x2c0bd7(0x30a)] = new Cesium[(_0x2c0bd7(0x485))](),
                this[_0x2c0bd7(0x5dc)] = new Cesium[(_0x2c0bd7(0x6a6))](_0x533446),
                this[_0x2c0bd7(0x5dc)]['viewport'] = new Cesium['BoundingRectangle'](),
                this['waterNormalMapUrl'] = _0x2c0bd7(0x9de),
                this['waterNormalMap'] = void 0x0,
                this[_0x2c0bd7(0x2d3)] = new Cesium[(_0x2c0bd7(0x503))](Cesium[_0x2c0bd7(0x85d)]['UNIT_Z'], 0x615299),
                this[_0x2c0bd7(0x5bf)] = {
                    'isSunVisible': !0x0,
                    'isMoonVisible': !0x0,
                    'isSkyAtmosphereVisible': !0x0,
                    'isSkyBoxVisible': !0x0,
                    'isGlobalVisible': !0x1,
                    'isObjectVisible': !0x0
                },
                this[_0x2c0bd7(0x5dc)]['cullPass'] = Cesium['Pass'][_0x2c0bd7(0x172)],
                this['clearCommand'] = new Cesium[(_0x2c0bd7(0x4e4))]({
                    'color': new Cesium[(_0x2c0bd7(0x75c))](0x0, 0x0, 0x0, 0x0),
                    'stencil': 0x0,
                    'depth': 0x1
                }),
                this['isUpdate'] = !0x1;
        }
        function _0x2c0696(_0x520db6) {
            const _0x15f1d1 = _0x324b8e;
            if (_0x520db6 = Cesium['defaultValue'](_0x520db6, Cesium[_0x15f1d1(0x225)][_0x15f1d1(0x8bc)]),
                this[_0x15f1d1(0x583)] = Cesium[_0x15f1d1(0x225)](_0x520db6['ellipsoid'], Cesium[_0x15f1d1(0x8f3)][_0x15f1d1(0x47b)]),
                this[_0x15f1d1(0x32d)] = Cesium[_0x15f1d1(0x225)](_0x520db6[_0x15f1d1(0x7f1)], 0x1),
                this[_0x15f1d1(0x19c)] = Cesium[_0x15f1d1(0x225)](_0x520db6[_0x15f1d1(0x447)], 0x1),
                this[_0x15f1d1(0x2e6)] = new Cesium[(_0x15f1d1(0x5bd))](this[_0x15f1d1(0x583)]),
                Cesium[_0x15f1d1(0x14b)](_0x520db6['rectangleSouthwestInMeters']) && Cesium[_0x15f1d1(0x14b)](_0x520db6[_0x15f1d1(0x971)]))
                this[_0x15f1d1(0x195)] = _0x520db6[_0x15f1d1(0x12a)],
                    this[_0x15f1d1(0x7d5)] = _0x520db6[_0x15f1d1(0x971)];
            else {
                let _0x132bca = this['_ellipsoid'][_0x15f1d1(0x1d4)] * Math['PI'];
                this['_rectangleSouthwestInMeters'] = new Cesium[(_0x15f1d1(0xab7))](-_0x132bca, -_0x132bca),
                    this[_0x15f1d1(0x7d5)] = new Cesium[(_0x15f1d1(0xab7))](_0x132bca, _0x132bca);
            }
            let _0x4267cd = this[_0x15f1d1(0x2e6)][_0x15f1d1(0x56d)](this[_0x15f1d1(0x195)])
                , _0x22f5ba = this[_0x15f1d1(0x2e6)][_0x15f1d1(0x56d)](this[_0x15f1d1(0x7d5)]);
            this[_0x15f1d1(0x69f)] = new Cesium[(_0x15f1d1(0x57c))](_0x4267cd[_0x15f1d1(0x547)], _0x4267cd['latitude'], _0x22f5ba[_0x15f1d1(0x547)], _0x22f5ba[_0x15f1d1(0x21c)]),
                this[_0x15f1d1(0x56a)] = _0x520db6[_0x15f1d1(0x28c)],
                this['_scaleDenominators'] = _0x520db6[_0x15f1d1(0x9da)],
                this[_0x15f1d1(0x39c)] = Cesium[_0x15f1d1(0x225)](_0x520db6[_0x15f1d1(0x556)], 0x100),
                this[_0x15f1d1(0x303)] = Cesium[_0x15f1d1(0x225)](_0x520db6[_0x15f1d1(0x2a5)], 0x100);
        }
        function _0x46529c() {
            const _0x53193c = _0x324b8e;
            this[_0x53193c(0x508)] = void 0x0,
                this[_0x53193c(0x8a4)] = void 0x0,
                this[_0x53193c(0xaa6)] = 0x0;
        }
        function _0x12b926(_0x4ed5c3, _0x3c5971) {
            const _0x3dd7a3 = _0x324b8e;
            var _0x5b0b7c = _0x3c5971[_0x3dd7a3(0x19e)]
                , _0x17617d = _0x3c5971[_0x3dd7a3(0x96c)];
            _0x3c5971 === _0x4ed5c3[_0x3dd7a3(0x508)] ? _0x4ed5c3[_0x3dd7a3(0x508)] = _0x17617d : _0x5b0b7c[_0x3dd7a3(0x96c)] = _0x17617d,
                _0x3c5971 === _0x4ed5c3[_0x3dd7a3(0x8a4)] ? _0x4ed5c3[_0x3dd7a3(0x8a4)] = _0x5b0b7c : _0x17617d['previous'] = _0x5b0b7c,
                _0x3c5971[_0x3dd7a3(0x19e)] = void 0x0,
                _0x3c5971[_0x3dd7a3(0x96c)] = void 0x0,
                --_0x4ed5c3['count'];
        }
        function _0x10d6d5(_0x286e05, _0x49ab67, _0x4f8395, _0x578d8e) {
            const _0x2eaa40 = _0x324b8e;
            this['quadKey'] = _0x49ab67,
                this['data'] = _0x4f8395,
                this[_0x2eaa40(0x128)] = _0x286e05,
                this['promise'] = _0x578d8e;
        }
        _0x58cd67['prototype'][_0x324b8e(0x2e1)] = Cesium[_0x324b8e(0x335)][_0x324b8e(0x103)],
            _0x58cd67[_0x324b8e(0x74f)][_0x324b8e(0x8ad)] = Cesium[_0x324b8e(0x335)][_0x324b8e(0x103)],
            _0x556604[_0x324b8e(0x74f)] = Object[_0x324b8e(0x34c)](_0x58cd67[_0x324b8e(0x74f)]),
            _0x556604[_0x324b8e(0x74f)][_0x324b8e(0x124)] = _0x58cd67,
            _0x556604['prototype'][_0x324b8e(0x2e1)] = function (_0x5a8b5c) {
                const _0x38d1b4 = _0x324b8e;
                return this[_0x38d1b4(0x30a)][_0x38d1b4(0x4bc)](_0x5a8b5c[_0x38d1b4(0x56c)], _0x5a8b5c[_0x38d1b4(0x122)]['viewport'], _0x5a8b5c[_0x38d1b4(0x775)]),
                    this['passState'][_0x38d1b4(0x882)] = this['sceneFramebuffer'][_0x38d1b4(0x9df)](),
                    Cesium[_0x38d1b4(0x4d0)]['clone'](_0x5a8b5c[_0x38d1b4(0x122)][_0x38d1b4(0xd5)], this[_0x38d1b4(0x5dc)]['viewport']),
                    this[_0x38d1b4(0x316)][_0x38d1b4(0x62c)](_0x5a8b5c[_0x38d1b4(0x56c)], this[_0x38d1b4(0x5dc)]),
                    _0x5a8b5c[_0x38d1b4(0xd8)]['enableReflection'](this[_0x38d1b4(0x2d3)]),
                    this['passState'];
            }
            ,
            _0x556604[_0x324b8e(0x74f)][_0x324b8e(0x8ad)] = function (_0x31203d) {
                const _0x1c1bce = _0x324b8e;
                _0x31203d[_0x1c1bce(0xd8)][_0x1c1bce(0xa2c)]();
            }
            ,
            _0x556604[_0x324b8e(0x74f)][_0x324b8e(0x575)] = function () {
                const _0x448561 = _0x324b8e;
                return this[_0x448561(0x30a)] = this['sceneFramebuffer'][_0x448561(0x4dd)](),
                    this[_0x448561(0x2ff)] = !0x1,
                    !0x1;
            }
            ,
            _0x556604[_0x324b8e(0x74f)]['destroy'] = function () {
                return Cesium['destroyObject'](this);
            }
            ,
            Object[_0x324b8e(0xa38)](_0x2c0696['prototype'], {
                'ellipsoid': {
                    'get': function () {
                        const _0x421ecb = _0x324b8e;
                        return this[_0x421ecb(0x583)];
                    }
                },
                'rectangle': {
                    'get': function () {
                        const _0x30809f = _0x324b8e;
                        return this[_0x30809f(0x69f)];
                    }
                },
                'projection': {
                    'get': function () {
                        const _0x3ee32b = _0x324b8e;
                        return this[_0x3ee32b(0x2e6)];
                    }
                }
            }),
            _0x2c0696[_0x324b8e(0x74f)][_0x324b8e(0x42a)] = function (_0xf6a102) {
                const _0x59ce2c = _0x324b8e;
                return this[_0x59ce2c(0x32d)] << _0xf6a102;
            }
            ,
            _0x2c0696[_0x324b8e(0x74f)]['getNumberOfYTilesAtLevel'] = function (_0xa2a231) {
                const _0x5e5a44 = _0x324b8e;
                return this[_0x5e5a44(0x19c)] << _0xa2a231;
            }
            ,
            _0x2c0696[_0x324b8e(0x74f)][_0x324b8e(0x5bb)] = function (_0xb9da46, _0x11c154) {
                const _0x1a5a97 = _0x324b8e;
                let _0x45124c = this[_0x1a5a97(0x2e6)]
                    , _0x59d540 = _0x45124c[_0x1a5a97(0x856)](Cesium[_0x1a5a97(0x57c)][_0x1a5a97(0x1d0)](_0xb9da46))
                    , _0xbf9508 = _0x45124c[_0x1a5a97(0x856)](Cesium['Rectangle'][_0x1a5a97(0x7ac)](_0xb9da46));
                return Cesium['defined'](_0x11c154) ? (_0x11c154[_0x1a5a97(0x28b)] = _0x59d540['x'],
                    _0x11c154[_0x1a5a97(0x58d)] = _0x59d540['y'],
                    _0x11c154[_0x1a5a97(0x526)] = _0xbf9508['x'],
                    _0x11c154['north'] = _0xbf9508['y'],
                    _0x11c154) : new Cesium[(_0x1a5a97(0x57c))](_0x59d540['x'], _0x59d540['y'], _0xbf9508['x'], _0xbf9508['y']);
            }
            ,
            _0x2c0696[_0x324b8e(0x74f)][_0x324b8e(0x5c0)] = function (_0x5aa340, _0xc959b9, _0x3da0dc, _0x356e81) {
                const _0xde4697 = _0x324b8e;
                if (Cesium[_0xde4697(0x14b)](this[_0xde4697(0x56a)]) && Cesium[_0xde4697(0x14b)](this[_0xde4697(0x63f)])) {
                    let _0x540e17 = this[_0xde4697(0x8bd)](_0x3da0dc)
                        , _0x3437a5 = this[_0xde4697(0x195)]['x'] + _0x5aa340 * this[_0xde4697(0x39c)] * _0x540e17['x']
                        , _0x54d280 = this[_0xde4697(0x195)]['x'] + (_0x5aa340 + 0x1) * this[_0xde4697(0x39c)] * _0x540e17['x']
                        , _0x37376b = this[_0xde4697(0x7d5)]['y'] - _0xc959b9 * this['_tileHeight'] * _0x540e17['y']
                        , _0x505e6f = this[_0xde4697(0x7d5)]['y'] - (_0xc959b9 + 0x1) * this[_0xde4697(0x303)] * _0x540e17['y'];
                    return Cesium[_0xde4697(0x14b)](_0x356e81) ? (_0x356e81[_0xde4697(0x28b)] = _0x3437a5,
                        _0x356e81[_0xde4697(0x58d)] = _0x505e6f,
                        _0x356e81[_0xde4697(0x526)] = _0x54d280,
                        _0x356e81[_0xde4697(0xac8)] = _0x37376b,
                        _0x356e81) : new Cesium[(_0xde4697(0x57c))](_0x3437a5, _0x505e6f, _0x54d280, _0x37376b);
                }
                let _0x107ea0 = this[_0xde4697(0x42a)](_0x3da0dc)
                    , _0x1ea131 = this['getNumberOfYTilesAtLevel'](_0x3da0dc)
                    , _0x305b55 = (this[_0xde4697(0x7d5)]['x'] - this[_0xde4697(0x195)]['x']) / _0x107ea0
                    , _0x31947e = this[_0xde4697(0x195)]['x'] + _0x5aa340 * _0x305b55
                    , _0x2faf3c = this['_rectangleSouthwestInMeters']['x'] + (_0x5aa340 + 0x1) * _0x305b55
                    , _0x48a6bf = (this[_0xde4697(0x7d5)]['y'] - this[_0xde4697(0x195)]['y']) / _0x1ea131
                    , _0x27c0ca = this[_0xde4697(0x7d5)]['y'] - _0xc959b9 * _0x48a6bf
                    , _0x2cee43 = this[_0xde4697(0x7d5)]['y'] - (_0xc959b9 + 0x1) * _0x48a6bf;
                return Cesium[_0xde4697(0x14b)](_0x356e81) ? (_0x356e81[_0xde4697(0x28b)] = _0x31947e,
                    _0x356e81[_0xde4697(0x58d)] = _0x2cee43,
                    _0x356e81['east'] = _0x2faf3c,
                    _0x356e81[_0xde4697(0xac8)] = _0x27c0ca,
                    _0x356e81) : new Cesium[(_0xde4697(0x57c))](_0x31947e, _0x2cee43, _0x2faf3c, _0x27c0ca);
            }
            ,
            _0x2c0696[_0x324b8e(0x74f)][_0x324b8e(0x566)] = function (_0x539855, _0x4c85a2, _0x56f02c, _0x2f99b4) {
                const _0xb06fa4 = _0x324b8e;
                let _0x2d949 = this[_0xb06fa4(0x5c0)](_0x539855, _0x4c85a2, _0x56f02c, _0x2f99b4)
                    , _0x4aa8e3 = this[_0xb06fa4(0x2e6)]
                    , _0x703b5e = _0x4aa8e3[_0xb06fa4(0x56d)](new Cesium[(_0xb06fa4(0xab7))](_0x2d949[_0xb06fa4(0x28b)], _0x2d949[_0xb06fa4(0x58d)]))
                    , _0x2adcec = _0x4aa8e3[_0xb06fa4(0x56d)](new Cesium[(_0xb06fa4(0xab7))](_0x2d949[_0xb06fa4(0x526)], _0x2d949[_0xb06fa4(0xac8)]));
                return _0x2d949['west'] = _0x703b5e[_0xb06fa4(0x547)],
                    _0x2d949[_0xb06fa4(0x58d)] = _0x703b5e[_0xb06fa4(0x21c)],
                    _0x2d949[_0xb06fa4(0x526)] = _0x2adcec['longitude'],
                    _0x2d949[_0xb06fa4(0xac8)] = _0x2adcec[_0xb06fa4(0x21c)],
                    _0x2d949;
            }
            ,
            _0x2c0696[_0x324b8e(0x74f)]['positionToTileXY'] = function (_0x196a27, _0x3b2ce4, _0xb0fc5b) {
                const _0x3f3091 = _0x324b8e;
                let _0x264420 = this[_0x3f3091(0x69f)];
                if (!Cesium[_0x3f3091(0x57c)][_0x3f3091(0x924)](_0x264420, _0x196a27))
                    return;
                let _0x1cc512 = this[_0x3f3091(0x42a)](_0x3b2ce4)
                    , _0x442891 = this[_0x3f3091(0xab0)](_0x3b2ce4)
                    , _0x12b132 = (this[_0x3f3091(0x7d5)]['x'] - this['_rectangleSouthwestInMeters']['x']) / _0x1cc512
                    , _0xf82432 = (this[_0x3f3091(0x7d5)]['y'] - this[_0x3f3091(0x195)]['y']) / _0x442891;
                if (Cesium[_0x3f3091(0x14b)](this[_0x3f3091(0x56a)]) && Cesium[_0x3f3091(0x14b)](this[_0x3f3091(0x63f)])) {
                    let _0x2661f2 = this['calculateResolution'](_0x3b2ce4);
                    _0x12b132 = this[_0x3f3091(0x39c)] * _0x2661f2['x'],
                        _0xf82432 = this['_tileHeight'] * _0x2661f2['y'];
                }
                let _0x425c60 = this['_projection'][_0x3f3091(0x856)](_0x196a27)
                    , _0x47d698 = (_0x425c60['x'] - this[_0x3f3091(0x195)]['x']) / _0x12b132 | 0x0;
                _0x47d698 >= _0x1cc512 && (_0x47d698 = _0x1cc512 - 0x1);
                let _0x44792f = (this[_0x3f3091(0x7d5)]['y'] - _0x425c60['y']) / _0xf82432 | 0x0;
                return _0x44792f >= _0x442891 && (_0x44792f = _0x442891 - 0x1),
                    Cesium[_0x3f3091(0x14b)](_0xb0fc5b) ? (_0xb0fc5b['x'] = _0x47d698,
                        _0xb0fc5b['y'] = _0x44792f,
                        _0xb0fc5b) : new Cesium[(_0x3f3091(0xab7))](_0x47d698, _0x44792f);
            }
            ,
            _0x2c0696[_0x324b8e(0x74f)][_0x324b8e(0x8bd)] = function (_0x5bdd85) {
                const _0x37c93e = _0x324b8e;
                let _0x4ec2d7 = 0.0254 * this[_0x37c93e(0x63f)][_0x5bdd85] / this[_0x37c93e(0x56a)]['x']
                    , _0x5430b9 = 0.0254 * this[_0x37c93e(0x63f)][_0x5bdd85] / this[_0x37c93e(0x56a)]['y'];
                return new Cesium[(_0x37c93e(0xab7))](_0x4ec2d7, _0x5430b9);
            }
            ,
            _0x46529c[_0x324b8e(0x74f)][_0x324b8e(0xac7)] = function (_0x388f9b) {
                const _0x52104d = _0x324b8e;
                for (var _0x2b2664 = this[_0x52104d(0x8a4)]; this[_0x52104d(0xaa6)] > _0x388f9b && Cesium[_0x52104d(0x14b)](_0x2b2664);) {
                    var _0x3f547c = _0x2b2664[_0x52104d(0x19e)];
                    _0x2b2664['free'](),
                        _0x12b926(this, _0x2b2664),
                        _0x2b2664 = _0x3f547c;
                }
            }
            ,
            _0x46529c[_0x324b8e(0x74f)][_0x324b8e(0x681)] = function (_0x2c6fa7) {
                const _0x350fac = _0x324b8e;
                var _0x6ba512 = this[_0x350fac(0x508)];
                if (_0x6ba512 !== _0x2c6fa7) {
                    if (++this[_0x350fac(0xaa6)],
                        !Cesium[_0x350fac(0x14b)](_0x6ba512))
                        return _0x2c6fa7[_0x350fac(0x19e)] = void 0x0,
                            _0x2c6fa7[_0x350fac(0x96c)] = void 0x0,
                            this[_0x350fac(0x508)] = _0x2c6fa7,
                            void (this[_0x350fac(0x8a4)] = _0x2c6fa7);
                    (Cesium[_0x350fac(0x14b)](_0x2c6fa7[_0x350fac(0x19e)]) || Cesium[_0x350fac(0x14b)](_0x2c6fa7[_0x350fac(0x96c)])) && _0x12b926(this, _0x2c6fa7),
                        _0x2c6fa7[_0x350fac(0x19e)] = void 0x0,
                        _0x2c6fa7[_0x350fac(0x96c)] = _0x6ba512,
                        _0x6ba512[_0x350fac(0x19e)] = _0x2c6fa7,
                        this[_0x350fac(0x508)] = _0x2c6fa7;
                }
            }
            ,
            _0x10d6d5[_0x324b8e(0x74f)]['free'] = function () {
                const _0x17de11 = _0x324b8e;
                delete this[_0x17de11(0x128)][_0x17de11(0x666)][this['quadKey']];
            }
            ;
        const _0x537335 = Cesium['defined'];
        function _0x2a1350(_0x10f2ed, _0x4d8599) {
            const _0x48b387 = _0x324b8e;
            let _0x577d84 = _0x48b387(0x338)
                , _0x4e1976 = _0x4d8599['documentElement'];
            var _0x2ba559 = function (_0x57ec67, _0x1415c7) {
                const _0x2fb191 = _0x48b387;
                if (!Cesium[_0x2fb191(0x14b)](_0x57ec67))
                    return;
                var _0x18d0d8 = _0x57ec67['getAttribute'](_0x1415c7);
                if (null !== _0x18d0d8) {
                    var _0x2c2c44 = parseFloat(_0x18d0d8);
                    return isNaN(_0x2c2c44) ? void 0x0 : _0x2c2c44;
                }
                return;
            }(_0x5aff14[_0x48b387(0x2fd)](_0x4e1976, _0x48b387(0x910), _0x577d84), _0x48b387(0xa7a));
            _0x48b387(0x305) == typeof _0x2ba559 && (_0x10f2ed[_0x48b387(0x2a3)] = !0x0,
                _0x10f2ed[_0x48b387(0x1ce)] = _0x2ba559);
            let _0x226327 = _0x5aff14[_0x48b387(0x2fd)](_0x4e1976, 'Bounds', _0x577d84)
                , _0x18e82b = _0x5aff14['queryNumericValue'](_0x226327, 'Left', _0x577d84)
                , _0x1dbb97 = _0x5aff14['queryNumericValue'](_0x226327, _0x48b387(0xd0), _0x577d84)
                , _0xafc07c = _0x5aff14[_0x48b387(0x9c7)](_0x226327, _0x48b387(0x978), _0x577d84)
                , _0x168ad2 = _0x5aff14[_0x48b387(0x9c7)](_0x226327, _0x48b387(0x5ed), _0x577d84)
                , _0x2e86e9 = _0x5aff14['queryStringValue'](_0x4e1976, _0x48b387(0x6e9), _0x577d84)
                , _0x39d819 = _0x5aff14[_0x48b387(0x9c7)](_0x4e1976, _0x48b387(0x16b), _0x577d84)
                , _0x54d236 = _0x5aff14[_0x48b387(0x9c7)](_0x4e1976, 'CellHeight', _0x577d84)
                , _0x2667b4 = _0x5aff14['queryFirstNode'](_0x4e1976, _0x48b387(0x5ee), _0x577d84)
                , _0x44b5aa = _0x5aff14[_0x48b387(0x8a7)](_0x2667b4, _0x48b387(0x86c), _0x577d84)
                , _0x517771 = [];
            for (let _0x440f0f = 0x0, _0x5a594d = _0x44b5aa[_0x48b387(0x376)]; _0x440f0f < _0x5a594d; _0x440f0f++)
                _0x517771[_0x48b387(0x745)](parseInt(_0x44b5aa[_0x440f0f][_0x48b387(0x133)], 0xa));
            _0x10f2ed[_0x48b387(0x3b9)] = Cesium[_0x48b387(0x225)](_0x2e86e9, _0x48b387(0x348)),
                _0x10f2ed[_0x48b387(0x2aa)] = Cesium[_0x48b387(0x225)](_0x2e86e9, 'png'),
                _0x10f2ed[_0x48b387(0x39c)] = Cesium[_0x48b387(0x225)](_0x39d819, 0x100),
                _0x10f2ed[_0x48b387(0x303)] = Cesium[_0x48b387(0x225)](_0x54d236, 0x100);
            let _0x3c00f1 = _0x517771[_0x48b387(0x376)];
            _0x10f2ed[_0x48b387(0x9f9)] = Cesium[_0x48b387(0x225)](_0x517771[0x0], 0x0),
                _0x10f2ed[_0x48b387(0x390)] = Cesium[_0x48b387(0x225)](_0x10f2ed[_0x48b387(0x390)], _0x517771[_0x3c00f1 - 0x1]),
                _0x10f2ed[_0x48b387(0x369)] || (_0x10f2ed['_tilingScheme'] = new Cesium[(_0x48b387(0x371))]());
            let _0x5d2052 = _0x10f2ed['_tilingScheme'];
            !_0x10f2ed[_0x48b387(0x69f)] && _0x18e82b && _0x1dbb97 && _0xafc07c && _0x168ad2 && (_0x10f2ed[_0x48b387(0x69f)] = new Cesium['Rectangle'](Cesium[_0x48b387(0x16d)][_0x48b387(0x4cc)](_0x18e82b), Cesium['Math'][_0x48b387(0x4cc)](_0x168ad2), Cesium[_0x48b387(0x16d)][_0x48b387(0x4cc)](_0x1dbb97), Cesium['Math']['toRadians'](_0xafc07c))),
                _0x10f2ed[_0x48b387(0x69f)][_0x48b387(0x28b)] < _0x5d2052[_0x48b387(0xf7)][_0x48b387(0x28b)] && (_0x10f2ed[_0x48b387(0x69f)][_0x48b387(0x28b)] = _0x5d2052[_0x48b387(0xf7)]['west']),
                _0x10f2ed['_rectangle'][_0x48b387(0x526)] > _0x5d2052[_0x48b387(0xf7)][_0x48b387(0x526)] && (_0x10f2ed[_0x48b387(0x69f)][_0x48b387(0x526)] = _0x5d2052[_0x48b387(0xf7)]['east']),
                _0x10f2ed[_0x48b387(0x69f)]['south'] < _0x5d2052[_0x48b387(0xf7)][_0x48b387(0x58d)] && (_0x10f2ed[_0x48b387(0x69f)][_0x48b387(0x58d)] = _0x5d2052[_0x48b387(0xf7)]['south']),
                _0x10f2ed[_0x48b387(0x69f)][_0x48b387(0xac8)] > _0x5d2052[_0x48b387(0xf7)][_0x48b387(0xac8)] && (_0x10f2ed['_rectangle'][_0x48b387(0xac8)] = _0x5d2052['rectangle']['north']);
            let _0x28026a = _0x5d2052[_0x48b387(0x36b)](Cesium[_0x48b387(0x57c)][_0x48b387(0x1d0)](_0x10f2ed['_rectangle']), _0x10f2ed[_0x48b387(0x9f9)])
                , _0x33cb05 = _0x5d2052[_0x48b387(0x36b)](Cesium[_0x48b387(0x57c)]['northeast'](_0x10f2ed['_rectangle']), _0x10f2ed[_0x48b387(0x9f9)]);
            (Math['abs'](_0x33cb05['x'] - _0x28026a['x']) + 0x1) * (Math[_0x48b387(0xa8b)](_0x33cb05['y'] - _0x28026a['y']) + 0x1) > 0x4 && (_0x10f2ed[_0x48b387(0x9f9)] = 0x0),
                _0x10f2ed[_0x48b387(0x36d)] = _0x10f2ed[_0x48b387(0x2f3)] + _0x48b387(0x8f8),
                _0x537335(_0x5cb66c[_0x48b387(0x25e)]) && (_0x537335(_0x5cb66c[_0x48b387(0x25e)][_0x48b387(0x697)][_0x10f2ed['_urlTemplate']]) ? _0x10f2ed[_0x48b387(0x36d)] = _0x5cb66c[_0x48b387(0x779)](_0x10f2ed[_0x48b387(0x36d)], _0x10f2ed[_0x48b387(0x36d)]) : _0x10f2ed[_0x48b387(0x36d)] = _0x5cb66c[_0x48b387(0x474)](_0x10f2ed[_0x48b387(0x36d)])),
                _0x10f2ed['_ready'] = !0x0,
                _0x10f2ed['_readyPromise'][_0x48b387(0x1d5)](!0x0);
        }
        function _0x21192c(_0x3e2c80, _0x41580e, _0x5a633a, _0x16e143) {
            const _0x10de48 = _0x324b8e;
            var _0x30273d = _0x3e2c80[_0x10de48(0x1ce)]
                , _0x34501b = Math[_0x10de48(0x857)](0x2, _0x30273d)
                , _0x3527d5 = Math['floor'](_0x41580e / _0x34501b)
                , _0x196961 = _0x41580e % _0x34501b
                , _0x361375 = Math[_0x10de48(0x432)](_0x5a633a / _0x34501b)
                , _0x527b3e = _0x5a633a % _0x34501b
                , _0x3b3c54 = function (_0x37a71b, _0x4e4639, _0x20cdc2, _0x144537, _0x356fa2) {
                    const _0x277590 = _0x10de48;
                    var _0x4d4fa4;
                    if (_0x37a71b[_0x277590(0x6e8)]) {
                        var _0x4797a2, _0x1f238a = '' === _0x37a71b[_0x277590(0x284)] ? '' : _0x277590(0x761) + _0x37a71b[_0x277590(0x284)];
                        _0x277590(0xaac) === _0x37a71b[_0x277590(0x701)] ? 0x1 === _0x37a71b['packingRequest'] ? _0x4d4fa4 = _0x37a71b['_urlTemplate'][_0x277590(0x3ed)](_0x277590(0x657), '')['replace'](_0x277590(0x4b3), _0x1f238a)[_0x277590(0x3ed)](_0x277590(0x6bd), _0x277590(0x4fb))['replace'](_0x277590(0x805), '') : (_0x4797a2 = _0x37a71b[_0x277590(0x3ac)][_0x144537 + _0x37a71b[_0x277590(0x38a)]] || _0x3d31f7[_0x144537],
                            _0x4d4fa4 = _0x37a71b[_0x277590(0x36d)]['replace'](_0x277590(0x9af), _0x4e4639)['replace'](_0x277590(0x881), _0x20cdc2)[_0x277590(0x3ed)](_0x277590(0x42f), _0x4797a2[_0x277590(0x362)]())[_0x277590(0x3ed)](_0x277590(0x4b3), _0x1f238a)) : 'METER' === _0x37a71b[_0x277590(0x701)] && (0x1 === _0x37a71b[_0x277590(0x3c8)] ? _0x4d4fa4 = _0x37a71b[_0x277590(0x36d)][_0x277590(0x3ed)](_0x277590(0x657), '')['replace']('{tileversion}', _0x1f238a)[_0x277590(0x3ed)]('tileImage', 'tileImages')['replace']('&_cache=true', '') : (_0x4797a2 = _0x37a71b['_scales'][_0x144537],
                                _0x4d4fa4 = _0x37a71b[_0x277590(0x36d)][_0x277590(0x3ed)](_0x277590(0x9af), _0x4e4639)[_0x277590(0x3ed)](_0x277590(0x881), _0x20cdc2)['replace'](_0x277590(0x42f), _0x4797a2[_0x277590(0x362)]())['replace'](_0x277590(0x4b3), _0x1f238a)));
                    } else
                        _0x4d4fa4 = _0x37a71b['_urlTemplate'][_0x277590(0x3ed)](_0x277590(0x9af), _0x4e4639)[_0x277590(0x3ed)](_0x277590(0x881), _0x20cdc2)['replace'](_0x277590(0x232), _0x144537)['replace']('{fileExtension}', _0x37a71b['_fileExtension']);
                    if (Cesium[_0x277590(0x14b)](_0x37a71b['_subdomains'])) {
                        var _0x59b3df = _0x37a71b[_0x277590(0x506)]
                            , _0x3d1574 = _0x59b3df[(_0x4e4639 + _0x20cdc2 + _0x144537) % _0x59b3df[_0x277590(0x376)]];
                        _0x4d4fa4 = _0x4d4fa4[_0x277590(0x3ed)](domainReg, function (_0x47f110, _0x51662c) {
                            const _0x34161b = _0x277590;
                            return _0x34161b(0x55c) === _0x51662c ? _0x3d1574 : _0x47f110;
                        });
                    }
                    return _0x4d4fa4;
                }(_0x3e2c80, _0x3527d5, _0x361375, _0x16e143);
            return {
                'x': _0x3527d5,
                'y': _0x361375,
                'url': _0x3b3c54,
                'col': _0x196961,
                'row': _0x527b3e,
                'level': _0x16e143,
                'blockSize': _0x34501b
            };
        }
        const _0x3d31f7 = [1.690163571602655e-9, 3.3803271432053056e-9, 6.760654286410611e-9, 1.3521308572821242e-8, 2.7042617145642484e-8, 5.408523429128511e-8, 1.0817046858256998e-7, 2.1634093716513974e-7, 4.3268187433028044e-7, 8.653637486605571e-7, 0.0000017307274973211203, 0.0000034614549946422405, 0.0000069229099892844565, 0.000013845819978568952, 0.000027691639957137904, 0.0000553832799142758, 0.0001107665598285516, 0.0002215331196571032, 0.0004430662393142064, 0.0008861324786284128, 0.001772264957256826, 0.003544529914513652];
        function _0x4afa97(_0xd6b8ec) {
            const _0x55a319 = _0x324b8e;
            if (!(_0xd6b8ec = Cesium[_0x55a319(0x225)](_0xd6b8ec, {}))[_0x55a319(0xa62)])
                throw new Cesium[(_0x55a319(0x335))](_0x55a319(0x185));
            if (this[_0x55a319(0x2f3)] = Cesium[_0x55a319(0x1c2)](_0xd6b8ec[_0x55a319(0xa62)]),
                this[_0x55a319(0xaab)] = Cesium['Resource'][_0x55a319(0x260)](this[_0x55a319(0x2f3)]),
                this[_0x55a319(0x21f)] = _0xd6b8ec[_0x55a319(0xa62)][_0x55a319(0xa59)]('rest/maps') > -0x1,
                this[_0x55a319(0x5e6)] = _0xd6b8ec[_0x55a319(0xa62)][_0x55a319(0xa59)]('rest/realspace') > -0x1,
                !this['_isTileMap'] && !this[_0x55a319(0x5e6)])
                throw new Cesium[(_0x55a319(0x335))]('options.url\x20is\x20error');
            this[_0x55a319(0x36d)] = void 0x0,
                this[_0x55a319(0x1b0)] = new Cesium[(_0x55a319(0x425))](),
                this['_fileExtension'] = _0x55a319(0x348),
                this[_0x55a319(0x39c)] = 0x100,
                this[_0x55a319(0x303)] = 0x100,
                this[_0x55a319(0x2aa)] = Cesium[_0x55a319(0x225)](_0xd6b8ec[_0x55a319(0x1e7)], _0x55a319(0x348)),
                this[_0x55a319(0x9f9)] = Cesium[_0x55a319(0x225)](_0xd6b8ec[_0x55a319(0xe6)], 0x0),
                this[_0x55a319(0x390)] = _0xd6b8ec[_0x55a319(0xa8e)],
                this[_0x55a319(0x69f)] = void 0x0,
                this[_0x55a319(0x369)] = _0xd6b8ec[_0x55a319(0x113)],
                this[_0x55a319(0x701)] = void 0x0,
                this[_0x55a319(0x3ac)] = _0x3d31f7,
                this[_0x55a319(0x958)] = _0xd6b8ec[_0x55a319(0x3d7)];
            let _0x132d2c = Cesium[_0x55a319(0x225)](_0xd6b8ec[_0x55a319(0x4a7)], '');
            'string' == typeof _0x132d2c && (_0x132d2c = new Cesium[(_0x55a319(0x6dc))](_0x132d2c)),
                this[_0x55a319(0x358)] = _0x132d2c,
                this['_ready'] = !0x1,
                this['_readyPromise'] = _0x438ab0(),
                this[_0x55a319(0x2a3)] = !0x1,
                this['_blockCache'] = {},
                this[_0x55a319(0x363)] = new _0x46529c(),
                this[_0x55a319(0x8fa)] = 0x64,
                this['_blockScale'] = 0x0;
            let _0x192e7b, _0x4f7b98, _0x3fa2f9 = this;
            this['_isSci3D'] ? (_0x192e7b = this['_resource'][_0x55a319(0x139)]({
                'url': _0x55a319(0x33c)
            }),
                _0x537335(_0x5cb66c[_0x55a319(0x25e)]) && (_0x537335(_0x5cb66c[_0x55a319(0x25e)]['_keymap'][_0x192e7b[_0x55a319(0xa62)]]) ? _0x192e7b[_0x55a319(0xa62)] = _0x5cb66c[_0x55a319(0x779)](_0x192e7b[_0x55a319(0xa62)], _0x192e7b[_0x55a319(0xa62)]) : _0x192e7b[_0x55a319(0xa62)] = _0x5cb66c[_0x55a319(0x474)](_0x192e7b[_0x55a319(0xa62)])),
                _0x4f7b98 = _0x192e7b['fetchXML']()) : (_0x192e7b = Cesium[_0x55a319(0x9c9)][_0x55a319(0x260)](_0xd6b8ec['url'] + _0x55a319(0x714)),
                    _0x4f7b98 = _0x192e7b[_0x55a319(0x23a)]()),
                _0x4f7b98[_0x55a319(0x685)](function (_0x591754) {
                    _0x3fa2f9['_isSci3D'] ? _0x2a1350(_0x3fa2f9, _0x591754) : _0x3fa2f9['_isTileMap'] && function (_0x2263d9, _0x456c21) {
                        const _0x52b585 = _0x557c;
                        let _0x2f0e5a = _0x456c21[_0x52b585(0x754)][_0x52b585(0x568)]
                            , _0x3030ea = _0x456c21[_0x52b585(0x39d)]
                            , _0x3bd0aa = _0x456c21[_0x52b585(0xa27)]
                            , _0x5a0f2e = 0x0 === _0x3bd0aa['length'];
                        if (_0x2263d9['_coordUnit'] = _0x2f0e5a,
                            _0x52b585(0xaac) === _0x2f0e5a)
                            return _0x2263d9['_tilingScheme'] = new Cesium[(_0x52b585(0x371))](),
                                _0x3030ea[_0x52b585(0x4b6)] = Cesium[_0x52b585(0x16d)][_0x52b585(0x947)](_0x3030ea[_0x52b585(0x4b6)], -0xb4, 0xb4),
                                _0x3030ea['bottom'] = Cesium[_0x52b585(0x16d)][_0x52b585(0x947)](_0x3030ea[_0x52b585(0x7e2)], -0x5a, 0x5a),
                                _0x3030ea['right'] = Cesium[_0x52b585(0x16d)][_0x52b585(0x947)](_0x3030ea[_0x52b585(0x3e2)], -0xb4, 0xb4),
                                _0x3030ea[_0x52b585(0x129)] = Cesium[_0x52b585(0x16d)][_0x52b585(0x947)](_0x3030ea[_0x52b585(0x129)], -0x5a, 0x5a),
                                Cesium['Math'][_0x52b585(0xcf)](_0x3030ea['left'], _0x3030ea['right'], Cesium['Math'][_0x52b585(0x6b6)]) && (_0x3030ea[_0x52b585(0x3e2)] += Cesium['Math']['EPSILON5']),
                                Cesium[_0x52b585(0x16d)]['equalsEpsilon'](_0x3030ea[_0x52b585(0x129)], _0x3030ea[_0x52b585(0x7e2)], Cesium[_0x52b585(0x16d)][_0x52b585(0x6b6)]) && (_0x3030ea[_0x52b585(0x129)] += Cesium[_0x52b585(0x16d)]['EPSILON5']),
                                _0x2263d9[_0x52b585(0x69f)] = Cesium['Rectangle'][_0x52b585(0xa08)](_0x3030ea[_0x52b585(0x4b6)], _0x3030ea[_0x52b585(0x7e2)], _0x3030ea[_0x52b585(0x3e2)], _0x3030ea['top']),
                                _0x2263d9['_urlTemplate'] = _0x2263d9[_0x52b585(0x2f3)] + _0x52b585(0x326) + _0x2263d9[_0x52b585(0x2aa)] + '?x={x}&y={y}&scale={scale}&origin={\x22x\x22:-180,\x22y\x22:90}',
                                _0x2263d9[_0x52b585(0x390)] = Cesium['defaultValue'](_0x2263d9[_0x52b585(0x390)], _0x2263d9['_scales']['length']),
                                _0x2263d9['_ready'] = !0x0,
                                void _0x2263d9['_readyPromise'][_0x52b585(0x1d5)](!0x0);
                        let _0x4ff2e2 = new Cesium[(_0x52b585(0x85d))](_0x3030ea[_0x52b585(0x4b6)], _0x3030ea[_0x52b585(0x7e2)], 0x0)
                            , _0x4d6b41 = new Cesium[(_0x52b585(0x85d))](_0x3030ea[_0x52b585(0x3e2)], _0x3030ea[_0x52b585(0x129)], 0x0);
                        if (!Cesium[_0x52b585(0x14b)](_0x2263d9[_0x52b585(0x369)])) {
                            let _0x39ada2, _0x15360f, _0x127ac2, _0x5901b2, _0x1c71cc = Cesium[_0x52b585(0x14b)](_0x456c21[_0x52b585(0x754)]) && Cesium[_0x52b585(0x14b)](_0x456c21[_0x52b585(0x754)][_0x52b585(0xa99)]) && (_0x52b585(0x515) === _0x456c21[_0x52b585(0x754)]['projection'][_0x52b585(0x928)] || _0x52b585(0x162) === _0x456c21['prjCoordSys'][_0x52b585(0xa99)]['type']), _0x185d4a = _0x1c71cc ? new Cesium[(_0x52b585(0xd2))]() : new Cesium[(_0x52b585(0x5bd))](), _0x764080 = _0x185d4a[_0x52b585(0x56d)](_0x4ff2e2), _0xc5e122 = _0x185d4a[_0x52b585(0x56d)](_0x4d6b41), _0x4eee77 = new Cesium['Rectangle'](_0x764080[_0x52b585(0x547)], _0x764080[_0x52b585(0x21c)], _0xc5e122[_0x52b585(0x547)], _0xc5e122[_0x52b585(0x21c)]);
                            if (!_0x5a0f2e) {
                                _0x127ac2 = [],
                                    _0x5901b2 = new Cesium[(_0x52b585(0xab7))](_0x456c21[_0x52b585(0x67e)], _0x456c21[_0x52b585(0x67e)]);
                                for (let _0x4d1d86 = 0x0; _0x4d1d86 < _0x3bd0aa[_0x52b585(0x376)]; _0x4d1d86++)
                                    _0x127ac2[_0x52b585(0x745)](0x1 / _0x3bd0aa[_0x4d1d86]);
                                let _0x453c99 = _0x3bd0aa[0x0]
                                    , _0x1760e7 = 0.0254 / (_0x456c21[_0x52b585(0x67e)] * _0x453c99);
                                _0x39ada2 = Math[_0x52b585(0x826)]((_0x4d6b41['x'] - _0x4ff2e2['x']) / _0x1760e7 / _0x456c21['viewer'][_0x52b585(0x8ce)]),
                                    _0x15360f = Math[_0x52b585(0x826)]((_0x4d6b41['y'] - _0x4ff2e2['y']) / _0x1760e7 / _0x456c21['viewer'][_0x52b585(0x88d)]),
                                    _0x2263d9[_0x52b585(0x3ac)] = _0x3bd0aa;
                            }
                            _0x2263d9[_0x52b585(0x369)] = _0x1c71cc ? new Cesium[(_0x52b585(0x67f))]({
                                'numberOfLevelZeroTilesX': _0x39ada2,
                                'numberOfLevelZeroTilesY': _0x15360f,
                                'rectangleSouthwestInMeters': _0x5a0f2e ? void 0x0 : _0x4ff2e2,
                                'rectangleNortheastInMeters': _0x5a0f2e ? void 0x0 : _0x4d6b41
                            }) : new _0x2c0696({
                                'projection': _0x185d4a,
                                'rectangleSouthwestInMeters': _0x4ff2e2,
                                'rectangleNortheastInMeters': _0x4d6b41,
                                'numberOfLevelZeroTilesX': _0x39ada2,
                                'numberOfLevelZeroTilesY': _0x15360f,
                                'customDPI': _0x5901b2,
                                'scaleDenominators': _0x127ac2
                            }),
                                _0x2263d9[_0x52b585(0x69f)] = _0x4eee77;
                        }
                        let _0x31d49c = _0x5a0f2e ? -20037508.342789248 : _0x3030ea[_0x52b585(0x4b6)]
                            , _0x18f7d8 = _0x5a0f2e ? 20037508.342789095 : _0x3030ea['top'];
                        _0x2263d9[_0x52b585(0x36d)] = _0x2263d9['_url'] + _0x52b585(0x326) + _0x2263d9[_0x52b585(0x2aa)] + _0x52b585(0x6b0) + _0x31d49c + _0x52b585(0x7ff) + _0x18f7d8 + '}',
                            _0x2263d9['_maximumLevel'] = Cesium[_0x52b585(0x225)](_0x2263d9[_0x52b585(0x390)], _0x2263d9['_scales'][_0x52b585(0x376)]),
                            _0x2263d9[_0x52b585(0x3cf)] = !0x0,
                            _0x2263d9[_0x52b585(0x3e8)][_0x52b585(0x1d5)](!0x0);
                    }(_0x3fa2f9, _0x591754);
                }, function (_0x403c95) {
                    const _0x528372 = _0x55a319;
                    let _0x2e0f67 = _0x528372(0x2c4) + _0x3fa2f9[_0x528372(0x2f3)] + '.';
                    _0x3fa2f9[_0x528372(0x3e8)][_0x528372(0x7aa)](new Cesium[(_0x528372(0x532))](_0x2e0f67));
                });
        }
        Object[_0x324b8e(0xa38)](_0x4afa97[_0x324b8e(0x74f)], {
            'url': {
                'get': function () {
                    return this['_url'];
                }
            },
            'tileWidth': {
                'get': function () {
                    const _0x2ab5fc = _0x324b8e;
                    if (!this[_0x2ab5fc(0x3cf)])
                        throw new DeveloperError(_0x2ab5fc(0x2f1));
                    return this[_0x2ab5fc(0x39c)];
                }
            },
            'tileHeight': {
                'get': function () {
                    const _0x49984d = _0x324b8e;
                    if (!this['_ready'])
                        throw new DeveloperError(_0x49984d(0x777));
                    return this[_0x49984d(0x303)];
                }
            },
            'tileFormat': {
                'get': function () {
                    return this['_tileFormat'];
                }
            },
            'maximumLevel': {
                'get': function () {
                    const _0x23c4ab = _0x324b8e;
                    if (!this[_0x23c4ab(0x3cf)])
                        throw new DeveloperError(_0x23c4ab(0x49d));
                    return 0x1 === this['resolution'] ? this[_0x23c4ab(0x390)] : this['_maximumLevel'] - 0x1;
                }
            },
            'minimumLevel': {
                'get': function () {
                    const _0x19a738 = _0x324b8e;
                    if (!this['_ready'])
                        throw new DeveloperError(_0x19a738(0x2f4));
                    return this[_0x19a738(0x9f9)];
                }
            },
            'tilingScheme': {
                'get': function () {
                    const _0x2d44c5 = _0x324b8e;
                    if (!this[_0x2d44c5(0x3cf)])
                        throw new DeveloperError(_0x2d44c5(0x6a8));
                    return this['_tilingScheme'];
                }
            },
            'rectangle': {
                'get': function () {
                    const _0x2403c2 = _0x324b8e;
                    if (!this[_0x2403c2(0x3cf)])
                        throw new DeveloperError(_0x2403c2(0x268));
                    return this['_rectangle'];
                }
            },
            'errorEvent': {
                'get': function () {
                    return this['_errorEvent'];
                }
            },
            'ready': {
                'get': function () {
                    return this['_ready'];
                }
            },
            'credit': {
                'get': function () {
                    const _0x3653e5 = _0x324b8e;
                    return this[_0x3653e5(0x358)];
                }
            },
            'hasAlphaChannel': {
                'get': function () {
                    return !0x0;
                }
            },
            'readyPromise': {
                'get': function () {
                    const _0x3d6097 = _0x324b8e;
                    return this[_0x3d6097(0x3e8)][_0x3d6097(0x150)];
                }
            },
            'tileDiscardPolicy': {
                'get': function () {
                    return this['_tileDiscardPolicy'];
                }
            },
            'isBlock': {
                'get': function () {
                    const _0x2858ea = _0x324b8e;
                    return this[_0x2858ea(0x2a3)];
                }
            },
            'blockCache': {
                'get': function () {
                    return this['_blockCache'];
                }
            },
            'blockCacheQueue': {
                'get': function () {
                    return this['_blockCacheQueue'];
                }
            },
            'blockCacheSize': {
                'get': function () {
                    const _0xc4135a = _0x324b8e;
                    return this[_0xc4135a(0x8fa)];
                }
            }
        }),
            _0x4afa97['prototype'][_0x324b8e(0x1e2)] = function (_0x5346a4, _0x24a447, _0x132716) { }
            ;
        var _0x5aee3d = /\.dxtz/i;
        function _0x4dfc5a(_0x95ba3a, _0x5b5ce6) {
            const _0xb99af1 = _0x324b8e;
            let _0x53071a = Cesium['Resource'][_0xb99af1(0x260)](_0x5b5ce6);
            return _0x95ba3a[_0xb99af1(0x3d7)] ? _0x53071a[_0xb99af1(0x53b)]({
                'preferBlob': !0x0,
                'preferImageBitmap': !0x0,
                'flipY': !0x0
            }) : _0x95ba3a[_0xb99af1(0x3f6)] ? (_0x5aee3d[_0xb99af1(0x6ae)](_0x53071a[_0xb99af1(0xa62)]) && (_0x95ba3a[_0xb99af1(0x579)] = !0x0),
                _0x53071a[_0xb99af1(0x5e8)]()) : _0x53071a[_0xb99af1(0x53b)]();
        }
        _0x4afa97[_0x324b8e(0x74f)][_0x324b8e(0x691)] = function (_0x352dd9, _0xfaa624, _0x207d5b, _0x22e2cf) {
            const _0x2c8010 = _0x324b8e;
            if (!this['_ready'])
                throw new Cesium[(_0x2c8010(0x335))](_0x2c8010(0x726));
            let _0x186b92;
            if (this[_0x2c8010(0x2a3)]) {
                _0x186b92 = this[_0x2c8010(0xaab)]['getDerivedResource']({
                    'url': this[_0x2c8010(0x36d)],
                    'request': _0x22e2cf,
                    'templateValues': {}
                }),
                    _0x22e2cf['type'] = 0x5;
                var _0x427170 = _0x21192c(this, _0x352dd9, _0xfaa624, _0x207d5b);
                _0x186b92[_0x2c8010(0xa62)] = _0x427170[_0x2c8010(0xa62)],
                    _0x22e2cf['blockInfo'] = _0x427170,
                    _0x22e2cf[_0x2c8010(0x196)] = function (_0x1c491f, _0x28ffb1, _0x3af99d) {
                        const _0x421114 = _0x2c8010;
                        for (var _0x4d66a6 = '', _0x3850af = _0x3af99d; _0x3850af >= 0x0; --_0x3850af) {
                            var _0x18e7c9 = 0x1 << _0x3850af
                                , _0x43cb8c = 0x0;
                            Cesium[_0x421114(0x2b2)](_0x28ffb1, _0x18e7c9) ? Cesium[_0x421114(0x2b2)](_0x1c491f, _0x18e7c9) && (_0x43cb8c |= 0x1) : (_0x43cb8c |= 0x2,
                                Cesium[_0x421114(0x2b2)](_0x1c491f, _0x18e7c9) || (_0x43cb8c |= 0x1)),
                                _0x4d66a6 += _0x43cb8c;
                        }
                        return _0x4d66a6;
                    }(_0x427170['x'], _0x427170['y'], _0x427170[_0x2c8010(0x985)]),
                    _0x22e2cf[_0x2c8010(0x26d)] = this[_0x2c8010(0x2f3)];
                var _0x25c6bd = this[_0x2c8010(0x666)][_0x22e2cf[_0x2c8010(0x196)]];
                if (Cesium[_0x2c8010(0x14b)](_0x25c6bd) && Cesium[_0x2c8010(0x14b)](_0x25c6bd[_0x2c8010(0xa3c)]))
                    return this[_0x2c8010(0x27e)][_0x2c8010(0x681)](_0x25c6bd),
                        _0x25c6bd[_0x2c8010(0xa3c)];
            } else {
                if (this[_0x2c8010(0x5e6)])
                    _0x186b92 = this['_resource'][_0x2c8010(0x139)]({
                        'url': this[_0x2c8010(0x36d)],
                        'request': _0x22e2cf,
                        'templateValues': {
                            'x': _0x352dd9,
                            'y': _0xfaa624,
                            'level': _0x207d5b,
                            'fileExtension': this['_tileFormat']
                        }
                    });
                else {
                    let _0x2aa5b6 = _0x2c8010(0xaac) === this[_0x2c8010(0x701)] ? this['_scales'][_0x207d5b + 0x1] : this[_0x2c8010(0x3ac)][_0x207d5b];
                    _0x186b92 = this['_resource'][_0x2c8010(0x139)]({
                        'url': this[_0x2c8010(0x36d)],
                        'request': _0x22e2cf,
                        'templateValues': {
                            'x': _0x352dd9,
                            'y': _0xfaa624,
                            'scale': _0x2aa5b6
                        },
                        'queryParameters': {
                            'transparent': !0x0,
                            'cacheEnabled': !0x0,
                            '_cache': !0x0,
                            'width': 0x100,
                            'height': 0x100,
                            'redirect': !0x1,
                            'overlapDisplayed': !0x1
                        }
                    });
                }
            }
            return function (_0x257cdf, _0x6cdeb2) {
                const _0x46936b = _0x2c8010;
                if (_0x257cdf['_isBlock']) {
                    var _0x4593f1 = _0x257cdf['blockCache'][_0x22e2cf['quadKey']];
                    if (Cesium[_0x46936b(0x14b)](_0x4593f1))
                        return _0x4593f1[_0x46936b(0x150)];
                    var _0xa4deb3 = _0x4dfc5a(_0x257cdf, _0x6cdeb2);
                    if (!Cesium[_0x46936b(0x14b)](_0xa4deb3))
                        return;
                    return _0x4593f1 = new _0x10d6d5(_0x257cdf, _0x22e2cf[_0x46936b(0x196)]),
                        _0x257cdf[_0x46936b(0x666)][_0x22e2cf[_0x46936b(0x196)]] = _0x4593f1,
                        _0x4593f1[_0x46936b(0x150)] = _0xa4deb3,
                        _0x4593f1[_0x46936b(0x150)];
                }
                return _0x4dfc5a(_0x257cdf, _0x6cdeb2);
            }(this, _0x186b92);
        }
            ,
            _0x4afa97['prototype'][_0x324b8e(0x6ce)] = function () { }
            ;
        const _0x5e8217 = Cesium[_0x324b8e(0x14b)];
        function _0x1ac51c(_0x1b5b7f) {
            const _0x196b19 = _0x324b8e;
            this[_0x196b19(0x5ba)] = _0x1b5b7f[_0x196b19(0x5ba)],
                this[_0x196b19(0x5a6)] = _0x1b5b7f[_0x196b19(0x5a6)],
                this[_0x196b19(0x69c)] = _0x1b5b7f[_0x196b19(0x69c)],
                this[_0x196b19(0x767)] = _0x1b5b7f[_0x196b19(0x767)],
                this[_0x196b19(0x601)] = _0x1b5b7f[_0x196b19(0x601)],
                this['hasVertexNormals'] = _0x1b5b7f['hasVertexNormals'],
                this['hasWaterMask'] = _0x1b5b7f[_0x196b19(0x175)],
                this['hasMetadata'] = _0x1b5b7f[_0x196b19(0x92c)],
                this[_0x196b19(0x623)] = _0x1b5b7f[_0x196b19(0x623)],
                this['availabilityTilesLoaded'] = _0x1b5b7f[_0x196b19(0x520)],
                this[_0x196b19(0x530)] = _0x1b5b7f[_0x196b19(0x530)],
                this[_0x196b19(0x520)] = _0x1b5b7f[_0x196b19(0x520)],
                this[_0x196b19(0x943)] = {};
        }
        let _0x98b84e = 0x1
            , _0x40d69c = 0x2
            , _0x1864a7 = 0x4;
        function _0x38e9a2(_0x1ecf6d) {
            const _0x112774 = _0x324b8e;
            if (!Cesium[_0x112774(0x14b)](_0x1ecf6d) || !Cesium['defined'](_0x1ecf6d[_0x112774(0xa62)]))
                throw new Cesium[(_0x112774(0x335))](_0x112774(0x185));
            this[_0x112774(0x2f3)] = Cesium[_0x112774(0x1c2)](_0x1ecf6d['url']),
                this[_0x112774(0x9be)] = Cesium[_0x112774(0x225)](_0x1ecf6d[_0x112774(0x4da)], !0x0),
                this[_0x112774(0x92a)] = 0x41,
                this[_0x112774(0x1ea)] = void 0x0,
                this[_0x112774(0x667)] = !0x1,
                this[_0x112774(0x8ea)] = !0x1,
                this[_0x112774(0x583)] = _0x1ecf6d[_0x112774(0x5d7)],
                this[_0x112774(0x343)] = Cesium['defaultValue'](_0x1ecf6d[_0x112774(0x850)], !0x1),
                this['_requestWaterMask'] = Cesium[_0x112774(0x225)](_0x1ecf6d['requestWaterMask'], !0x1),
                this['_requestMetadata'] = Cesium[_0x112774(0x225)](_0x1ecf6d[_0x112774(0x996)], !0x0),
                this[_0x112774(0x1b0)] = new Cesium['Event']();
            let _0x415e29 = _0x1ecf6d[_0x112774(0x4a7)];
            _0x112774(0x937) == typeof _0x415e29 && (_0x415e29 = new Cesium['Credit'](_0x415e29)),
                this[_0x112774(0x358)] = _0x415e29,
                this['_scheme'] = _0x112774(0x274),
                this[_0x112774(0x1c8)] = void 0x0,
                this[_0x112774(0x3cf)] = !0x1,
                this['_readyPromise'] = _0x438ab0(),
                this[_0x112774(0x68a)] = void 0x0;
            let _0x1f7b67, _0x503675 = this, _0xfe139d = this['_layers'] = [], _0x453c8a = [];
            function _0x29b7b7(_0x279d5c) {
                const _0x29e529 = _0x112774;
                let _0x17fc39 = _0x279d5c[_0x29e529(0xa14)];
                _0x503675['_tilingScheme'] = new Cesium['GeographicTilingScheme']({
                    'numberOfLevelZeroTilesX': 0x2,
                    'numberOfLevelZeroTilesY': 0x1,
                    'ellipsoid': _0x503675[_0x29e529(0x583)]
                }),
                    _0x503675[_0x29e529(0x1ba)] = Cesium[_0x29e529(0x59b)][_0x29e529(0x222)](_0x503675[_0x29e529(0x369)][_0x29e529(0x5d7)], _0x503675[_0x29e529(0x92a)], _0x503675[_0x29e529(0x369)]['getNumberOfXTilesAtLevel'](0x0));
                var _0x4c0b6f = _0x5aff14[_0x29e529(0x2fd)](_0x17fc39, _0x29e529(0x910), void 0x0);
                _0x503675['_blockScale'] = _0x5aff14[_0x29e529(0xf0)](_0x4c0b6f, 'BlockScale', void 0x0),
                    Cesium[_0x29e529(0x14b)](_0x503675[_0x29e529(0x1ce)]) && _0x503675['_blockScale'] > 0x0 && (_0x503675[_0x29e529(0x2a3)] = !0x0);
                var _0x574c0f = _0x5aff14[_0x29e529(0x1cf)](_0x17fc39, _0x29e529(0x6e9), void 0x0);
                _0x574c0f = _0x574c0f[_0x29e529(0xa2b)](),
                    _0x503675[_0x29e529(0x627)] = 'terrainz' === _0x574c0f;
                let _0x332236 = _0x5aff14[_0x29e529(0x2fd)](_0x17fc39, _0x29e529(0x6f3), void 0x0)
                    , _0x394838 = _0x5aff14[_0x29e529(0x9c7)](_0x332236, _0x29e529(0x742), void 0x0)
                    , _0x37efc2 = _0x5aff14['queryNumericValue'](_0x332236, _0x29e529(0xd0), void 0x0)
                    , _0x5b1a6f = _0x5aff14[_0x29e529(0x9c7)](_0x332236, _0x29e529(0x5ed), void 0x0)
                    , _0x3793ef = _0x5aff14[_0x29e529(0x9c7)](_0x332236, _0x29e529(0x978), void 0x0);
                Cesium['defined'](_0x394838) && Cesium[_0x29e529(0x14b)](_0x37efc2) && Cesium['defined'](_0x5b1a6f) && Cesium[_0x29e529(0x14b)](_0x3793ef) && (_0x503675[_0x29e529(0x69f)] = Cesium[_0x29e529(0x57c)][_0x29e529(0xa08)](_0x394838, _0x5b1a6f, _0x37efc2, _0x3793ef));
                let _0x36cd22 = _0x5aff14[_0x29e529(0x2fd)](_0x17fc39, _0x29e529(0x5ee), void 0x0)
                    , _0x32eed1 = _0x5aff14[_0x29e529(0x5c6)](_0x36cd22, _0x29e529(0x86c), void 0x0)
                    , _0x4c799f = [];
                for (let _0x2c07fe = 0x0, _0x1341d8 = _0x32eed1[_0x29e529(0x376)]; _0x2c07fe < _0x1341d8; _0x2c07fe++) {
                    let _0x2f39dd = parseInt(_0x32eed1[_0x2c07fe][_0x29e529(0x133)]);
                    _0x4c799f[_0x29e529(0x745)](_0x2f39dd);
                }
                let _0x3dfa64 = _0x4c799f[0x0]
                    , _0x147e59 = _0x4c799f[_0x4c799f[_0x29e529(0x376)] - 0x1];
                _0x503675[_0x29e529(0x1ec)] = _0x4c799f;
                let _0x505028 = _0x5aff14[_0x29e529(0x2fd)](_0x17fc39, _0x29e529(0x276), void 0x0);
                if (_0x505028) {
                    let _0x48aa01 = _0x5aff14[_0x29e529(0x5c6)](_0x505028, 'TilesBounds', void 0x0)
                        , _0xce1d01 = _0x3dfa64 > 0x0 ? _0x4c799f[_0x29e529(0x376)] + 0x1 : _0x4c799f[_0x29e529(0x376)]
                        , _0x27c9e0 = new Array(_0xce1d01);
                    for (let _0x525613 = 0x0; _0x525613 < _0x3dfa64; _0x525613++)
                        _0x27c9e0[_0x525613] = [];
                    for (let _0x363b8f = 0x0, _0x1d7ddb = _0x48aa01[_0x29e529(0x376)]; _0x363b8f < _0x1d7ddb; _0x363b8f++) {
                        let _0x1feba9 = _0x48aa01[_0x363b8f]
                            , _0x1071e5 = [];
                        _0x27c9e0[_0x5aff14[_0x29e529(0xf0)](_0x1feba9, _0x29e529(0x985), void 0x0)] = _0x1071e5;
                        let _0x2c07cd = _0x5aff14['queryChildNodes'](_0x1feba9, 'TileBounds', void 0x0);
                        for (let _0x500bd0 = 0x0, _0x4566eb = _0x2c07cd[_0x29e529(0x376)]; _0x500bd0 < _0x4566eb; _0x500bd0++) {
                            let _0x32d591 = _0x2c07cd[_0x500bd0]
                                , _0x5c1e0b = _0x5aff14[_0x29e529(0x9c7)](_0x32d591, _0x29e529(0x92b), void 0x0)
                                , _0x17d7e2 = _0x5aff14['queryNumericValue'](_0x32d591, _0x29e529(0xf4), void 0x0)
                                , _0x568bc1 = _0x5aff14[_0x29e529(0x9c7)](_0x32d591, 'EndCol', void 0x0)
                                , _0x3a2d5a = _0x5aff14[_0x29e529(0x9c7)](_0x32d591, _0x29e529(0x487), void 0x0);
                            _0x1071e5[_0x29e529(0x745)]({
                                'startX': _0x5c1e0b,
                                'startY': _0x17d7e2,
                                'endX': _0x568bc1,
                                'endY': _0x3a2d5a
                            });
                        }
                    }
                    _0x27c9e0[0x0] = [{
                        'startX': 0x0,
                        'startY': 0x0,
                        'endX': 0x1,
                        'endY': 0x1
                    }];
                    let _0x505240 = new Cesium[(_0x29e529(0x502))](_0x503675[_0x29e529(0x369)], _0x147e59);
                    for (let _0x4e3e2e = 0x0; _0x4e3e2e < _0x27c9e0[_0x29e529(0x376)]; ++_0x4e3e2e) {
                        let _0x4bc92d = _0x27c9e0[_0x4e3e2e]
                            , _0x1fe545 = _0x503675[_0x29e529(0x369)]['getNumberOfYTilesAtLevel'](_0x4e3e2e);
                        if (Cesium['defined'](_0x453c8a[_0x4e3e2e]) || (_0x453c8a[_0x4e3e2e] = []),
                            Cesium['defined'](_0x4bc92d))
                            for (let _0x5e04a7 = 0x0; _0x5e04a7 < _0x4bc92d[_0x29e529(0x376)]; ++_0x5e04a7) {
                                let _0x334a3a = _0x4bc92d[_0x5e04a7]
                                    , _0x395b34 = _0x1fe545 - _0x334a3a[_0x29e529(0x7fb)] - 0x1
                                    , _0xeb403f = _0x1fe545 - _0x334a3a[_0x29e529(0x60a)] - 0x1;
                                _0x453c8a[_0x4e3e2e][_0x29e529(0x745)]([_0x334a3a['startX'], _0x395b34, _0x334a3a['endX'], _0xeb403f]),
                                    _0x505240[_0x29e529(0x199)](_0x4e3e2e, _0x334a3a[_0x29e529(0x88f)], _0x395b34, _0x334a3a['endX'], _0xeb403f);
                            }
                    }
                    _0x503675['_availability'] = _0x505240;
                }
                _0xfe139d[_0x29e529(0x745)](new _0x1ac51c({
                    'resource': _0x1f7b67,
                    'version': _0x29e529(0x4ef),
                    'isHeightmap': !0x1,
                    'tileUrlTemplates': _0x29e529(0x1bb),
                    'availability': void 0x0,
                    'hasVertexNormals': !0x1,
                    'hasWaterMask': !0x1,
                    'hasMetadata': !0x1,
                    'availabilityLevels': 0x0,
                    'availabilityTilesLoaded': !0x1,
                    'littleEndianExtensionSize': !0x0
                }));
                let _0x3c57c5 = _0x453c8a[_0x29e529(0x376)];
                if (_0x3c57c5 > 0x0) {
                    let _0x4deb64 = _0x503675[_0x29e529(0x1c8)] = new Cesium[(_0x29e529(0x502))](_0x503675[_0x29e529(0x369)], 0x0);
                    for (let _0x273b8f = 0x0; _0x273b8f < _0x3c57c5; ++_0x273b8f) {
                        let _0x32d250 = _0x453c8a[_0x273b8f];
                        for (let _0x168ed4 = 0x0; _0x168ed4 < _0x32d250[_0x29e529(0x376)]; ++_0x168ed4) {
                            let _0x5f42eb = _0x32d250[_0x168ed4];
                            _0x4deb64[_0x29e529(0x199)](_0x273b8f, _0x5f42eb[0x0], _0x5f42eb[0x1], _0x5f42eb[0x2], _0x5f42eb[0x3]);
                        }
                    }
                }
                _0x503675[_0x29e529(0x3cf)] = !0x0,
                    _0x503675[_0x29e529(0x3e8)][_0x29e529(0x1d5)](!0x0);
            }
            function _0xfd29b8(_0x214362) {
                const _0x5c3817 = _0x112774;
                Cesium[_0x5c3817(0x14b)](_0x214362) && 0x194 === _0x214362[_0x5c3817(0x32e)] && _0x29b7b7({
                    'tilejson': '2.1.0',
                    'format': _0x5c3817(0x6da),
                    'version': _0x5c3817(0x4ef),
                    'scheme': _0x5c3817(0x274),
                    'tiles': ['data/path/{z}/{x}/{y}.terrainz?v={version}']
                });
            }
            this[_0x112774(0x2a3)] = !0x1,
                this['_blockCache'] = {},
                this['_blockCacheQueue'] = new _0x46529c(),
                this[_0x112774(0x8fa)] = 0x64,
                this[_0x112774(0x1ce)] = 0x0,
                this[_0x112774(0x627)] = !0x1,
                Promise['resolve'](_0x1ecf6d[_0x112774(0xa62)])['then'](_0x3fdee0 => {
                    const _0xa4ffea = _0x112774;
                    _0x1f7b67 = Cesium[_0xa4ffea(0x9c9)]['createIfNeeded'](_0x3fdee0),
                        _0x1f7b67[_0xa4ffea(0x1c2)]();
                    let _0x1cc412 = _0x1f7b67[_0xa4ffea(0x139)]({
                        'url': 'config'
                    });
                    _0x5e8217(_0x5cb66c[_0xa4ffea(0x25e)]) && (_0x5e8217(_0x5cb66c[_0xa4ffea(0x25e)]['_keymap'][_0x1cc412['url']]) ? _0x1cc412[_0xa4ffea(0xa62)] = _0x5cb66c[_0xa4ffea(0x779)](_0x1cc412[_0xa4ffea(0xa62)], _0x1cc412['url']) : _0x1cc412[_0xa4ffea(0xa62)] = _0x5cb66c[_0xa4ffea(0x474)](_0x1cc412['url'])),
                        _0x1cc412[_0xa4ffea(0x992)]()[_0xa4ffea(0x685)](_0x29b7b7, _0xfd29b8);
                }
                    , _0x6a8b2e => {
                        reject(_0x6a8b2e);
                    }
                );
        }
        function _0x3f3183(_0x165693, _0x4ab9a7, _0x390e59, _0x15a815, _0x441f26, _0x5e7e89) {
            const _0x56d6fa = _0x324b8e;
            let _0x3b97e5 = _0x5e7e89['littleEndianExtensionSize']
                , _0x5587bf = 0x0
                , _0x154ab8 = 0x3 * Float64Array['BYTES_PER_ELEMENT']
                , _0x367e7 = 0x4 * Float64Array[_0x56d6fa(0x739)]
                , _0x181cef = 0x3 * Uint16Array[_0x56d6fa(0x739)]
                , _0x1a3b56 = Uint16Array[_0x56d6fa(0x739)]
                , _0x4fb629 = 0x3 * _0x1a3b56
                , _0x1d0e7a = new DataView(_0x4ab9a7)
                , _0x4d8f1f = new Cesium[(_0x56d6fa(0x85d))](_0x1d0e7a['getFloat64'](_0x5587bf, !0x0), _0x1d0e7a['getFloat64'](_0x5587bf + 0x8, !0x0), _0x1d0e7a[_0x56d6fa(0xa42)](_0x5587bf + 0x10, !0x0));
            _0x5587bf += _0x154ab8;
            let _0x5018c6 = _0x1d0e7a[_0x56d6fa(0x486)](_0x5587bf, !0x0);
            _0x5587bf += Float32Array[_0x56d6fa(0x739)];
            let _0x235c0e = _0x1d0e7a[_0x56d6fa(0x486)](_0x5587bf, !0x0);
            _0x5587bf += Float32Array['BYTES_PER_ELEMENT'];
            let _0x2b5d6d = new Cesium[(_0x56d6fa(0xa4a))](new Cesium['Cartesian3'](_0x1d0e7a[_0x56d6fa(0xa42)](_0x5587bf, !0x0), _0x1d0e7a['getFloat64'](_0x5587bf + 0x8, !0x0), _0x1d0e7a['getFloat64'](_0x5587bf + 0x10, !0x0)), _0x1d0e7a[_0x56d6fa(0xa42)](_0x5587bf + _0x154ab8, !0x0));
            _0x5587bf += _0x367e7;
            let _0x3022af = new Cesium[(_0x56d6fa(0x85d))](_0x1d0e7a['getFloat64'](_0x5587bf, !0x0), _0x1d0e7a['getFloat64'](_0x5587bf + 0x8, !0x0), _0x1d0e7a[_0x56d6fa(0xa42)](_0x5587bf + 0x10, !0x0));
            _0x5587bf += _0x154ab8;
            let _0x4771fa = _0x1d0e7a['getUint32'](_0x5587bf, !0x0);
            _0x5587bf += Uint32Array[_0x56d6fa(0x739)];
            let _0x5c0e3b = new Uint16Array(_0x4ab9a7, _0x5587bf, 0x3 * _0x4771fa);
            _0x5587bf += _0x4771fa * _0x181cef,
                _0x4771fa > 0x10000 && (_0x1a3b56 = Uint32Array[_0x56d6fa(0x739)],
                    _0x4fb629 = 0x3 * _0x1a3b56);
            let _0x86830 = _0x5c0e3b[_0x56d6fa(0x75e)](0x0, _0x4771fa)
                , _0x39af92 = _0x5c0e3b['subarray'](_0x4771fa, 0x2 * _0x4771fa)
                , _0x316808 = _0x5c0e3b[_0x56d6fa(0x75e)](0x2 * _0x4771fa, 0x3 * _0x4771fa);
            Cesium[_0x56d6fa(0x545)]['zigZagDeltaDecode'](_0x86830, _0x39af92, _0x316808),
                _0x5587bf % _0x1a3b56 != 0x0 && (_0x5587bf += _0x1a3b56 - _0x5587bf % _0x1a3b56);
            let _0x1b1985 = _0x1d0e7a['getUint32'](_0x5587bf, !0x0);
            _0x5587bf += Uint32Array[_0x56d6fa(0x739)];
            let _0x22dcb1 = Cesium[_0x56d6fa(0x98e)][_0x56d6fa(0x342)](_0x4771fa, _0x4ab9a7, _0x5587bf, 0x3 * _0x1b1985);
            _0x5587bf += _0x1b1985 * _0x4fb629;
            let _0x40ca8a = 0x0
                , _0x55e63c = _0x22dcb1[_0x56d6fa(0x376)];
            for (let _0x315371 = 0x0; _0x315371 < _0x55e63c; ++_0x315371) {
                let _0x44fb5e = _0x22dcb1[_0x315371];
                _0x22dcb1[_0x315371] = _0x40ca8a - _0x44fb5e,
                    0x0 === _0x44fb5e && ++_0x40ca8a;
            }
            let _0xfed3b9 = _0x1d0e7a['getUint32'](_0x5587bf, !0x0);
            _0x5587bf += Uint32Array['BYTES_PER_ELEMENT'];
            let _0xe2d13b = Cesium[_0x56d6fa(0x98e)]['createTypedArrayFromArrayBuffer'](_0x4771fa, _0x4ab9a7, _0x5587bf, _0xfed3b9);
            _0x5587bf += _0xfed3b9 * _0x1a3b56;
            let _0x17a7f8 = _0x1d0e7a[_0x56d6fa(0x69d)](_0x5587bf, !0x0);
            _0x5587bf += Uint32Array['BYTES_PER_ELEMENT'];
            let _0x5c0d70 = Cesium[_0x56d6fa(0x98e)][_0x56d6fa(0x342)](_0x4771fa, _0x4ab9a7, _0x5587bf, _0x17a7f8);
            _0x5587bf += _0x17a7f8 * _0x1a3b56;
            let _0x2ecf64 = _0x1d0e7a[_0x56d6fa(0x69d)](_0x5587bf, !0x0);
            _0x5587bf += Uint32Array[_0x56d6fa(0x739)];
            let _0x39c881 = Cesium[_0x56d6fa(0x98e)][_0x56d6fa(0x342)](_0x4771fa, _0x4ab9a7, _0x5587bf, _0x2ecf64);
            _0x5587bf += _0x2ecf64 * _0x1a3b56;
            let _0x36276b = _0x1d0e7a[_0x56d6fa(0x69d)](_0x5587bf, !0x0);
            _0x5587bf += Uint32Array[_0x56d6fa(0x739)];
            let _0x2f282c, _0x392db3, _0x57d95e = Cesium[_0x56d6fa(0x98e)][_0x56d6fa(0x342)](_0x4771fa, _0x4ab9a7, _0x5587bf, _0x36276b);
            for (_0x5587bf += _0x36276b * _0x1a3b56; _0x5587bf < _0x1d0e7a['byteLength'];) {
                let _0x4abbc4 = _0x1d0e7a[_0x56d6fa(0x3b8)](_0x5587bf, !0x0);
                _0x5587bf += Uint8Array['BYTES_PER_ELEMENT'];
                let _0x25f2b2 = _0x1d0e7a[_0x56d6fa(0x69d)](_0x5587bf, _0x3b97e5);
                if (_0x5587bf += Uint32Array[_0x56d6fa(0x739)],
                    _0x4abbc4 === _0x98b84e && _0x165693[_0x56d6fa(0x343)])
                    _0x2f282c = new Uint8Array(_0x4ab9a7, _0x5587bf, 0x2 * _0x4771fa);
                else {
                    if (_0x4abbc4 === _0x40d69c && _0x165693[_0x56d6fa(0x972)])
                        _0x392db3 = new Uint8Array(_0x4ab9a7, _0x5587bf, _0x25f2b2);
                    else {
                        if (_0x4abbc4 === _0x1864a7 && _0x165693[_0x56d6fa(0x598)] && !_0x165693['_isSct']) {
                            let _0x49cb18 = _0x1d0e7a['getUint32'](_0x5587bf, !0x0);
                            if (_0x49cb18 > 0x0) {
                                let _0x3e712b = Cesium[_0x56d6fa(0x178)](new Uint8Array(_0x4ab9a7), _0x5587bf + Uint32Array[_0x56d6fa(0x739)], _0x49cb18)
                                    , _0x54d2e2 = JSON['parse'](_0x3e712b)['available'];
                                if (Cesium[_0x56d6fa(0x14b)](_0x54d2e2))
                                    for (let _0x392ac9 = 0x0; _0x392ac9 < _0x54d2e2[_0x56d6fa(0x376)]; ++_0x392ac9) {
                                        let _0x5ec44b = _0x390e59 + _0x392ac9 + 0x1
                                            , _0x559c7f = _0x54d2e2[_0x392ac9]
                                            , _0x171c46 = _0x165693[_0x56d6fa(0x369)][_0x56d6fa(0xab0)](_0x5ec44b);
                                        for (let _0x48f657 = 0x0; _0x48f657 < _0x559c7f[_0x56d6fa(0x376)]; ++_0x48f657) {
                                            let _0x238f3 = _0x559c7f[_0x48f657]
                                                , _0x171404 = _0x171c46 - _0x238f3[_0x56d6fa(0x7fb)] - 0x1
                                                , _0x77e5b = _0x171c46 - _0x238f3[_0x56d6fa(0x60a)] - 0x1;
                                            _0x165693[_0x56d6fa(0x601)][_0x56d6fa(0x199)](_0x5ec44b, _0x238f3[_0x56d6fa(0x88f)], _0x171404, _0x238f3[_0x56d6fa(0x18b)], _0x77e5b),
                                                _0x5e7e89[_0x56d6fa(0x601)][_0x56d6fa(0x199)](_0x5ec44b, _0x238f3[_0x56d6fa(0x88f)], _0x171404, _0x238f3[_0x56d6fa(0x18b)], _0x77e5b);
                                        }
                                    }
                            }
                            _0x5e7e89[_0x56d6fa(0x520)][_0x56d6fa(0x199)](_0x390e59, _0x15a815, _0x441f26, _0x15a815, _0x441f26);
                        }
                    }
                }
                _0x5587bf += _0x25f2b2;
            }
            let _0xf25657 = 0x5 * _0x165693[_0x56d6fa(0x493)](_0x390e59)
                , _0x527885 = _0x165693[_0x56d6fa(0x369)]['tileXYToRectangle'](_0x15a815, _0x441f26, _0x390e59)
                , _0x532438 = Cesium[_0x56d6fa(0x15b)]['fromRectangle'](_0x527885, _0x5018c6, _0x235c0e, _0x165693['_tilingScheme']['ellipsoid']);
            return new Cesium[(_0x56d6fa(0xacc))]({
                'center': _0x4d8f1f,
                'minimumHeight': _0x5018c6,
                'maximumHeight': _0x235c0e,
                'boundingSphere': _0x2b5d6d,
                'orientedBoundingBox': _0x532438,
                'horizonOcclusionPoint': _0x3022af,
                'quantizedVertices': _0x5c0e3b,
                'encodedNormals': _0x2f282c,
                'indices': _0x22dcb1,
                'westIndices': _0xe2d13b,
                'southIndices': _0x5c0d70,
                'eastIndices': _0x39c881,
                'northIndices': _0x57d95e,
                'westSkirtHeight': _0xf25657,
                'southSkirtHeight': _0xf25657,
                'eastSkirtHeight': _0xf25657,
                'northSkirtHeight': _0xf25657,
                'childTileMask': 0xf,
                'waterMask': _0x392db3,
                'credits': _0x165693['_tileCredits']
            });
        }
        function _0x4e04be(_0x3e7a62, _0x481780) {
            const _0x4f195c = _0x324b8e;
            var _0x2099e1 = new DataView(_0x3e7a62)
                , _0x7f67ef = 0x0;
            _0x2099e1[_0x4f195c(0x69d)](_0x7f67ef, !0x0),
                _0x7f67ef += 0x4;
            var _0x219e39 = _0x2099e1[_0x4f195c(0x69d)](_0x7f67ef, !0x0);
            _0x7f67ef += 0x4;
            for (var _0x5808a3 = _0x481780['col'], _0x34aaf3 = _0x481780[_0x4f195c(0x864)] * _0x481780[_0x4f195c(0x706)] + _0x5808a3, _0x19e7f0 = 0x0, _0x32cc88 = 0x0, _0xb8e611 = 0x0; _0xb8e611 < _0x219e39; _0xb8e611++) {
                if (_0xb8e611 < _0x34aaf3)
                    _0x19e7f0 += _0x2099e1[_0x4f195c(0x69d)](_0x7f67ef, !0x0);
                else {
                    if (_0xb8e611 === _0x34aaf3) {
                        _0x32cc88 = _0x2099e1['getUint32'](_0x7f67ef, !0x0),
                            _0x7f67ef += 0x4;
                        break;
                    }
                }
                _0x7f67ef += 0x4;
            }
            if (_0x7f67ef = 0x8 + 0x4 * _0x219e39,
                0x0 !== _0x32cc88)
                return _0x7f67ef += _0x19e7f0,
                    new Uint8Array(_0x3e7a62)[_0x4f195c(0x3be)](_0x7f67ef, _0x7f67ef + _0x32cc88)[_0x4f195c(0x38d)];
        }
        function _0x57df2b(_0x4e7e99, _0x329f1d, _0x4f3bd5, _0x433b9c, _0x43c10f, _0x5929c4, _0x2366a9, _0x1a53af, _0x776a6d) {
            const _0xc580e8 = _0x324b8e;
            function _0x6c92d2(_0x13a1e1) {
                const _0x4b7854 = _0x557c;
                var _0x2799f1;
                if (Cesium[_0x4b7854(0x14b)](_0x13a1e1)) {
                    var _0x5a6f89 = _0x329f1d[_0x4b7854(0x666)][_0x2366a9[_0x4b7854(0x196)]];
                    return Cesium['defined'](_0x5a6f89[_0x4b7854(0xa3c)]) || (_0x5a6f89[_0x4b7854(0xa3c)] = _0x13a1e1),
                        _0x329f1d[_0x4b7854(0x27e)]['touch'](_0x5a6f89),
                        _0x329f1d['blockCacheQueue'][_0x4b7854(0xac7)](_0x329f1d[_0x4b7854(0x58b)]),
                        _0x2799f1 = _0x4e04be(_0x13a1e1, _0x2366a9[_0x4b7854(0x675)]),
                        Cesium[_0x4b7854(0x14b)](_0x2799f1) ? (_0x2799f1 = _0x35205d['inflate'](new Uint8Array(_0x2799f1))['buffer'],
                            _0x3f3183(_0x329f1d, _0x2799f1, _0x43c10f, _0x4f3bd5, _0x433b9c, _0x5929c4)) : Promise['reject']();
                }
            }
            var _0x474d29, _0x20ba77 = _0x5929c4[_0xc580e8(0x5ba)];
            _0x2366a9[_0xc580e8(0x928)] = 0x5,
                _0x2366a9[_0xc580e8(0x26d)] = _0x329f1d[_0xc580e8(0xa05)],
                _0x474d29 = function (_0x131e18, _0x113d7d, _0x3b3b7c, _0x2bc378) {
                    const _0xb8124a = _0xc580e8;
                    var _0x20158c = Math['min'](_0x131e18[_0xb8124a(0x1ce)], _0x2bc378)
                        , _0x644696 = Math[_0xb8124a(0x857)](0x2, _0x20158c)
                        , _0xbbf0e3 = _0x113d7d % _0x644696;
                    return {
                        'x': Math[_0xb8124a(0x432)](_0x113d7d / _0x644696),
                        'y': Math['floor'](_0x3b3b7c / _0x644696),
                        'col': _0xbbf0e3,
                        'row': _0x3b3b7c % _0x644696,
                        'level': _0x2bc378,
                        'blockSize': _0x644696
                    };
                }(_0x329f1d, _0x4f3bd5, _0x1a53af, _0x43c10f),
                _0x2366a9[_0xc580e8(0x196)] = function (_0x159cfd, _0x498dcb, _0x28fc3) {
                    const _0xd42112 = _0xc580e8;
                    for (var _0x2bce3b = '', _0x4e83f5 = _0x28fc3; _0x4e83f5 >= 0x0; --_0x4e83f5) {
                        var _0x5c224d = 0x1 << _0x4e83f5
                            , _0x76e8be = 0x0;
                        Cesium[_0xd42112(0x2b2)](_0x498dcb, _0x5c224d) ? Cesium[_0xd42112(0x2b2)](_0x159cfd, _0x5c224d) && (_0x76e8be |= 0x1) : (_0x76e8be |= 0x2,
                            Cesium[_0xd42112(0x2b2)](_0x159cfd, _0x5c224d) || (_0x76e8be |= 0x1)),
                            _0x2bce3b += _0x76e8be;
                    }
                    return _0x2bce3b;
                }(_0x474d29['x'], _0x474d29['y'], _0x474d29['level']),
                _0x2366a9[_0xc580e8(0x675)] = _0x474d29;
            var _0x324d6a = _0x329f1d[_0xc580e8(0x666)][_0x2366a9[_0xc580e8(0x196)]];
            if (Cesium[_0xc580e8(0x14b)](_0x324d6a) && Cesium[_0xc580e8(0x14b)](_0x324d6a[_0xc580e8(0xa3c)])) {
                _0x329f1d[_0xc580e8(0x27e)][_0xc580e8(0x681)](_0x324d6a);
                var _0x430489 = _0x4e04be(_0x324d6a[_0xc580e8(0xa3c)], _0x474d29);
                return Cesium['defined'](_0x430489) ? (_0x430489 = _0x35205d[_0xc580e8(0x613)](new Uint8Array(_0x430489))[_0xc580e8(0x38d)],
                    _0x3f3183(_0x329f1d, _0x430489, _0x43c10f, _0x4f3bd5, _0x433b9c, _0x5929c4)) : Promise[_0xc580e8(0x7aa)]();
            }
            _0x324d6a = _0x329f1d[_0xc580e8(0x666)][_0x2366a9[_0xc580e8(0x196)] || _0x43c10f + '' + _0x4f3bd5 + _0x433b9c];
            if (Cesium[_0xc580e8(0x14b)](_0x324d6a))
                return _0x324d6a['promise'][_0xc580e8(0x685)](_0x6c92d2);
            var _0x5d3297 = function (_0x522924, _0x38a082, _0x6328d0, _0x4080fe, _0x2b4dcd, _0x31b608, _0xd4888d, _0x2d8458) {
                const _0x4d3ca4 = _0xc580e8;
                var _0x48dfe1 = _0x2d8458['x']
                    , _0x4152cb = _0x2d8458['y'];
                return _0x522924['getDerivedResource']({
                    'url': _0x38a082,
                    'templateValues': {
                        'version': _0x6328d0[_0x4d3ca4(0x5a6)],
                        'z': _0x4080fe,
                        'x': _0x48dfe1,
                        'y': _0x4152cb
                    },
                    'headers': _0x2b4dcd,
                    'request': _0x31b608
                })[_0x4d3ca4(0x5e8)]();
            }(_0x20ba77, _0x4e7e99, _0x5929c4, _0x43c10f, _0x776a6d, _0x2366a9, 0x0, _0x474d29);
            return _0x5d3297 ? (_0x324d6a = new _0x10d6d5(_0x329f1d, _0x2366a9['quadKey'] || _0x43c10f + '' + _0x4f3bd5 + _0x433b9c),
                _0x329f1d[_0xc580e8(0x666)][_0x2366a9['quadKey']] = _0x324d6a,
                _0x324d6a[_0xc580e8(0x150)] = _0x5d3297,
                _0x5d3297[_0xc580e8(0x685)](_0x6c92d2)) : void 0x0;
        }
        Object['defineProperties'](_0x38e9a2['prototype'], {
            'errorEvent': {
                'get': function () {
                    return this['_errorEvent'];
                }
            },
            'credit': {
                'get': function () {
                    const _0x5e09c9 = _0x324b8e;
                    if (!this[_0x5e09c9(0x3cf)])
                        throw new Cesium[(_0x5e09c9(0x335))](_0x5e09c9(0x723));
                    return this[_0x5e09c9(0x358)];
                }
            },
            'tilingScheme': {
                'get': function () {
                    const _0x3ea542 = _0x324b8e;
                    if (!this[_0x3ea542(0x3cf)])
                        throw new Cesium['DeveloperError'](_0x3ea542(0x9a1));
                    return this[_0x3ea542(0x369)];
                }
            },
            'ready': {
                'get': function () {
                    const _0x4ee698 = _0x324b8e;
                    return this[_0x4ee698(0x3cf)];
                }
            },
            'readyPromise': {
                'get': function () {
                    const _0x15124f = _0x324b8e;
                    return this[_0x15124f(0x3e8)]['promise'];
                }
            },
            'hasWaterMask': {
                'get': function () {
                    const _0x4d23eb = _0x324b8e;
                    if (!this[_0x4d23eb(0x3cf)])
                        throw new Cesium[(_0x4d23eb(0x335))](_0x4d23eb(0x29a));
                    return this[_0x4d23eb(0x667)] && this[_0x4d23eb(0x972)];
                }
            },
            'hasVertexNormals': {
                'get': function () {
                    const _0x4c1ed2 = _0x324b8e;
                    if (!this[_0x4c1ed2(0x3cf)])
                        throw new Cesium['DeveloperError']('hasVertexNormals\x20must\x20not\x20be\x20called\x20before\x20the\x20terrain\x20provider\x20is\x20ready.');
                    return this[_0x4c1ed2(0x8ea)] && this[_0x4c1ed2(0x343)];
                }
            },
            'hasMetadata': {
                'get': function () {
                    const _0x495023 = _0x324b8e;
                    if (!this[_0x495023(0x3cf)])
                        throw new Cesium[(_0x495023(0x335))](_0x495023(0x209));
                    return this['_hasMetadata'] && this[_0x495023(0x598)];
                }
            },
            'requestVertexNormals': {
                'get': function () {
                    return this['_requestVertexNormals'];
                }
            },
            'requestWaterMask': {
                'get': function () {
                    return this['_requestWaterMask'];
                }
            },
            'requestMetadata': {
                'get': function () {
                    return this['_requestMetadata'];
                }
            },
            'availability': {
                'get': function () {
                    const _0x12c09f = _0x324b8e;
                    if (!this[_0x12c09f(0x3cf)])
                        throw new Cesium[(_0x12c09f(0x335))](_0x12c09f(0x312));
                    return this[_0x12c09f(0x1c8)];
                }
            },
            'blockCache': {
                'get': function () {
                    const _0x26d46d = _0x324b8e;
                    return this[_0x26d46d(0x709)];
                }
            },
            'blockCacheQueue': {
                'get': function () {
                    const _0x4183d3 = _0x324b8e;
                    return this[_0x4183d3(0x363)];
                }
            },
            'blockCacheSize': {
                'get': function () {
                    return this['_blockCacheSize'];
                }
            }
        }),
            _0x38e9a2[_0x324b8e(0x74f)][_0x324b8e(0x1f7)] = function (_0x3bb4f8, _0x161378, _0x1cf2bd, _0x42a853) {
                const _0x2432a1 = _0x324b8e;
                if (!this[_0x2432a1(0x3cf)])
                    throw new Cesium[(_0x2432a1(0x335))]('requestTileGeometry\x20must\x20not\x20be\x20called\x20before\x20the\x20terrain\x20provider\x20is\x20ready.');
                if (0x0 === _0x1cf2bd) {
                    let _0x5da096 = new Uint16Array(0x3000);
                    for (let _0x58748a = 0x0; _0x58748a < 0x40; _0x58748a++)
                        for (let _0x2e4a52 = 0x0; _0x2e4a52 < 0x40; _0x2e4a52++)
                            _0x5da096[0x40 * _0x58748a + _0x2e4a52] = Math[_0x2432a1(0x432)](0x7fff * _0x58748a / 0x3f),
                                _0x5da096[0x1000 + 0x40 * _0x58748a + _0x2e4a52] = Math[_0x2432a1(0x432)](0x7fff * _0x2e4a52 / 0x3f),
                                _0x5da096[0x2000 + 0x40 * _0x58748a + _0x2e4a52] = 0x0;
                    let _0x2ffaa2 = new Uint16Array(0x5d06);
                    for (let _0x316cea = 0x0; _0x316cea < 0x3f; _0x316cea++)
                        for (let _0x192821 = 0x0; _0x192821 < 0x3f; _0x192821++)
                            _0x2ffaa2[0x6 * (0x3f * _0x316cea + _0x192821)] = 0x40 * _0x316cea + _0x192821,
                                _0x2ffaa2[0x6 * (0x3f * _0x316cea + _0x192821) + 0x1] = 0x40 * (_0x316cea + 0x1) + _0x192821 + 0x1,
                                _0x2ffaa2[0x6 * (0x3f * _0x316cea + _0x192821) + 0x2] = 0x40 * _0x316cea + _0x192821 + 0x1,
                                _0x2ffaa2[0x6 * (0x3f * _0x316cea + _0x192821) + 0x3] = 0x40 * (_0x316cea + 0x1) + _0x192821,
                                _0x2ffaa2[0x6 * (0x3f * _0x316cea + _0x192821) + 0x4] = 0x40 * (_0x316cea + 0x1) + _0x192821 + 0x1,
                                _0x2ffaa2[0x6 * (0x3f * _0x316cea + _0x192821) + 0x5] = 0x40 * _0x316cea + _0x192821;
                    let _0x2b5675 = new Uint16Array(0x0)
                        , _0x1343a3 = new Cesium[(_0x2432a1(0x85d))](NaN, -0x1 / 0x0, NaN)
                        , _0xfcfec4 = new Cesium[(_0x2432a1(0x85d))](0x0, -3189068.5, 0x0);
                    return 0x1 === _0x3bb4f8 && (_0xfcfec4['y'] = 3189068.5,
                        _0x1343a3['y'] = 0x1 / 0x0),
                        Promise[_0x2432a1(0x1d5)](new Cesium[(_0x2432a1(0xacc))]({
                            'center': _0xfcfec4,
                            'minimumHeight': 0x0,
                            'maximumHeight': 0x0,
                            'boundingSphere': new Cesium[(_0x2432a1(0xa4a))](_0xfcfec4, 9567205.5),
                            'horizonOcclusionPoint': _0x1343a3,
                            'quantizedVertices': _0x5da096,
                            'indices': _0x2ffaa2,
                            'westIndices': _0x2b5675,
                            'southIndices': _0x2b5675,
                            'eastIndices': _0x2b5675,
                            'northIndices': _0x2b5675,
                            'westSkirtHeight': 0x0,
                            'southSkirtHeight': 0x0,
                            'eastSkirtHeight': 0x0,
                            'northSkirtHeight': 0x0,
                            'childTileMask': 0xf,
                            'invalid': !0x1,
                            'hasInvalid': !0x1
                        }));
                }
                let _0x5ad351, _0x1b6819 = this[_0x2432a1(0x893)], _0x3b7cb1 = _0x1b6819['length'];
                if (0x1 === _0x3b7cb1)
                    _0x5ad351 = _0x1b6819[0x0];
                else
                    for (let _0x4874ef = 0x0; _0x4874ef < _0x3b7cb1; ++_0x4874ef) {
                        let _0x172b2f = _0x1b6819[_0x4874ef];
                        if (!Cesium[_0x2432a1(0x14b)](_0x172b2f[_0x2432a1(0x601)]) || _0x172b2f[_0x2432a1(0x601)]['isTileAvailable'](_0x1cf2bd, _0x3bb4f8, _0x161378)) {
                            _0x5ad351 = _0x172b2f;
                            break;
                        }
                    }
                return Cesium['defined'](_0x42a853) || (_0x42a853 = new Cesium[(_0x2432a1(0x660))]({
                    'throttle': !0x1,
                    'throttleByServer': !0x1,
                    'type': Cesium[_0x2432a1(0x8b9)]['TERRAIN']
                })),
                    function (_0x31db96, _0x30b118, _0x1cd5fb, _0x53c7d5, _0x44183e, _0x4c35b2) {
                        const _0xe3a448 = _0x2432a1;
                        let _0x3e46ac, _0x36d426 = _0x31db96['_url'] + _0x44183e[_0xe3a448(0x767)];
                        _0x5e8217(_0x5cb66c[_0xe3a448(0x25e)]) && (_0x36d426 = _0x5e8217(_0x5cb66c[_0xe3a448(0x25e)][_0xe3a448(0x697)][_0x36d426]) ? _0x5cb66c[_0xe3a448(0x779)](_0x36d426, _0x36d426) : _0x5cb66c['addToken'](_0x36d426));
                        if (_0x31db96[_0xe3a448(0xde)] && _0xe3a448(0x274) !== _0x31db96[_0xe3a448(0xde)])
                            _0x3e46ac = _0x1cd5fb;
                        else
                            _0x3e46ac = _0x31db96[_0xe3a448(0x369)][_0xe3a448(0xab0)](_0x53c7d5) - _0x1cd5fb - 0x1;
                        let _0x336d58 = _0x36d426
                            , _0x4e5666 = _0x44183e['resource'];
                        _0x5e8217(_0x5cb66c[_0xe3a448(0x25e)]) && (_0x5e8217(_0x5cb66c['CREDENTIAL']['_keymap'][_0x4e5666['url']]) ? _0x4e5666[_0xe3a448(0xa62)] = _0x5cb66c[_0xe3a448(0x779)](_0x4e5666['url'], _0x4e5666[_0xe3a448(0xa62)]) : _0x4e5666[_0xe3a448(0xa62)] = _0x5cb66c['addToken'](_0x4e5666['url']));
                        let _0x4ab5ec = {
                            'Accept': 'application/vnd.quantized-mesh,application/octet-stream;q=0.9,*/*;q=0.01'
                        };
                        if (_0x31db96[_0xe3a448(0x2a3)])
                            return _0x57df2b(_0x336d58, _0x31db96, _0x30b118, _0x1cd5fb, _0x53c7d5, _0x44183e, _0x4c35b2, _0x3e46ac, _0x4ab5ec);
                        let _0x29d5d9 = _0x4e5666['getDerivedResource']({
                            'url': _0x336d58,
                            'templateValues': {
                                'version': _0x44183e[_0xe3a448(0x5a6)],
                                'z': _0x53c7d5,
                                'x': _0x30b118,
                                'y': _0x3e46ac
                            },
                            'headers': _0x4ab5ec,
                            'request': _0x4c35b2
                        })[_0xe3a448(0x5e8)]();
                        if (!Cesium[_0xe3a448(0x14b)](_0x29d5d9))
                            return;
                        return _0x29d5d9[_0xe3a448(0x685)](function (_0x150c46) {
                            const _0x49ac73 = _0xe3a448;
                            return _0x150c46 = _0x35205d[_0x49ac73(0x613)](new Uint8Array(_0x150c46))[_0x49ac73(0x38d)],
                                _0x3f3183(_0x31db96, _0x150c46, _0x53c7d5, _0x30b118, _0x1cd5fb, _0x44183e);
                        });
                    }(this, _0x3bb4f8, _0x161378, _0x1cf2bd, _0x5ad351, _0x42a853);
            }
            ,
            _0x38e9a2[_0x324b8e(0x74f)][_0x324b8e(0x493)] = function (_0x2ebba7) {
                const _0x1b4a40 = _0x324b8e;
                return this[_0x1b4a40(0x1ba)] / (0x1 << _0x2ebba7);
            }
            ;
        let _0x781f0c = new Cesium[(_0x324b8e(0x57c))]();
        _0x38e9a2[_0x324b8e(0x74f)][_0x324b8e(0x229)] = function (_0x4ade66, _0x4eb443, _0xd0e4f5) {
            const _0x2fae43 = _0x324b8e;
            if (0x0 !== _0xd0e4f5) {
                if (-0x1 !== this[_0x2fae43(0x1ec)][_0x2fae43(0xa59)](_0xd0e4f5)) {
                    let _0xacfe0f = this[_0x2fae43(0x369)][_0x2fae43(0x566)](_0x4ade66, _0x4eb443, _0xd0e4f5)
                        , _0x544568 = Cesium[_0x2fae43(0x57c)][_0x2fae43(0x2a2)](this[_0x2fae43(0x69f)], _0xacfe0f, _0x781f0c);
                    return Cesium['defined'](_0x544568);
                }
                return !0x1;
            }
            if (Cesium['defined'](this[_0x2fae43(0x1c8)]))
                return !(_0xd0e4f5 > this[_0x2fae43(0x1c8)][_0x2fae43(0x390)]) && (!!this[_0x2fae43(0x1c8)]['isTileAvailable'](_0xd0e4f5, _0x4ade66, _0x4eb443) || (this['_hasMetadata'],
                    !0x1));
        }
            ,
            _0x38e9a2[_0x324b8e(0x74f)]['loadTileDataAvailability'] = function (_0x73ee2a, _0x174334, _0xcd22c3) { }
            ;
        let _0x1681a8 = Cesium[_0x324b8e(0x386)]
            , _0x405f05 = Cesium[_0x324b8e(0x14b)]
            , _0x2022fe = Cesium[_0x324b8e(0xce)]
            , _0x1e5210 = Object[_0x324b8e(0x72e)]({
                'PACK': 0x4,
                'BLOCK': 0x5,
                'BLOCKPACK': 0x6
            }, Cesium[_0x324b8e(0x8b9)]);
        var _0x2e369d = {
            'webp': _0x324b8e(0x90a),
            'png': _0x324b8e(0x8f6)
        }
            , _0x5f467b = 0x0
            , _0x401fc2 = 0x1
            , _0x432363 = 0x2
            , _0x90a381 = 0x5
            , _0x369faa = /\.dxtz/i;
        function _0x3d4283(_0x3f2346, _0x105be8, _0xd12cac) {
            const _0xf26f51 = _0x324b8e;
            var _0x4cc1e6 = new DataView(_0x3f2346)
                , _0x38d631 = 0x0;
            _0x4cc1e6[_0xf26f51(0x69d)](_0x38d631, !0x0),
                _0x38d631 += 0x4;
            var _0x1715f7 = _0x4cc1e6[_0xf26f51(0x69d)](_0x38d631, !0x0);
            _0x38d631 += 0x4;
            for (var _0x148338 = _0x105be8[_0xf26f51(0x9b2)], _0x1a3488 = _0x105be8['row'] * _0x105be8['blockSize'] + _0x148338, _0x27b617 = 0x0, _0x50f231 = 0x0, _0x32622d = 0x0; _0x32622d < _0x1715f7; _0x32622d++) {
                if (_0x32622d < _0x1a3488)
                    _0x27b617 += _0x4cc1e6['getUint32'](_0x38d631, !0x0);
                else {
                    if (_0x32622d === _0x1a3488) {
                        _0x50f231 = _0x4cc1e6[_0xf26f51(0x69d)](_0x38d631, !0x0),
                            _0x38d631 += 0x4;
                        break;
                    }
                }
                _0x38d631 += 0x4;
            }
            if (_0x38d631 = 0x8 + 0x4 * _0x1715f7,
                0x0 !== _0x50f231) {
                _0x38d631 += _0x27b617;
                var _0x1de691 = _0x438ab0()
                    , _0x412ce4 = _0x105be8[_0xf26f51(0xa62)];
                return _0x369faa[_0xf26f51(0x6ae)](_0x412ce4) ? _0x1de691[_0xf26f51(0x1d5)](function (_0x35d616, _0x2886f2, _0x558808) {
                    const _0x5ff58e = _0xf26f51;
                    var _0x20c729 = new DataView(_0x35d616, _0x2886f2, _0x558808)
                        , _0x57bb2b = 0x0
                        , _0xd2c844 = _0x20c729[_0x5ff58e(0x69d)](_0x57bb2b, !0x0);
                    _0x57bb2b += Uint32Array[_0x5ff58e(0x739)],
                        _0x20c729[_0x5ff58e(0x69d)](_0x57bb2b, !0x0),
                        _0x57bb2b += Uint32Array['BYTES_PER_ELEMENT'];
                    var _0x24fef9 = 0x20 === _0xd2c844 ? PixelFormat[_0x5ff58e(0x7f8)] : PixelFormat[_0x5ff58e(0x783)]
                        , _0xfe136e = _0x20c729[_0x5ff58e(0x69d)](_0x57bb2b, !0x0);
                    _0x57bb2b += Uint32Array[_0x5ff58e(0x739)];
                    var _0xdc67a6 = _0x20c729[_0x5ff58e(0x69d)](_0x57bb2b, !0x0);
                    _0x57bb2b += Uint32Array[_0x5ff58e(0x739)],
                        _0x20c729['getUint32'](_0x57bb2b, !0x0),
                        _0x57bb2b += Uint32Array[_0x5ff58e(0x739)];
                    var _0x450dfe = _0x20c729[_0x5ff58e(0x69d)](_0x57bb2b, !0x0);
                    _0x57bb2b += Uint32Array[_0x5ff58e(0x739)];
                    var _0x3e702f = new Uint8Array(_0x35d616, _0x57bb2b + _0x2886f2, _0x450dfe)
                        , _0x18110e = pako['inflate'](_0x3e702f)[_0x5ff58e(0x38d)]
                        , _0x71faa6 = new Uint8Array(_0x18110e);
                    return new CompressedTextureBuffer(_0x24fef9, _0xfe136e, _0xdc67a6, _0x71faa6);
                }(_0x3f2346, _0x38d631, _0x50f231)) : _0x1681a8({
                    'uint8Array': new Uint8Array(_0x3f2346, _0x38d631, _0x50f231),
                    'format': _0xd12cac,
                    'flipY': !0x0
                });
            }
        }
        Cesium[_0x324b8e(0x21e)][_0x324b8e(0x74f)][_0x324b8e(0x9e1)] = Cesium[_0x324b8e(0x21e)][_0x324b8e(0x74f)][_0x324b8e(0x368)],
            Cesium[_0x324b8e(0x21e)][_0x324b8e(0x74f)][_0x324b8e(0x368)] = function (_0x9ceac0) {
                const _0x10c338 = _0x324b8e;
                _0x9ceac0[_0x10c338(0x134)][_0x10c338(0x78c)][_0x10c338(0x3f6)] ? function (_0x497120, _0x3d6db0) {
                    const _0xed2854 = _0x3d6db0['_imageryProvider']
                        , _0x11daae = _0x3d6db0;
                    function _0x4340eb(_0x579772) {
                        const _0x488ff5 = _0x557c;
                        if (!_0x405f05(_0x579772))
                            return _0x50504d();
                        var _0x57bcd5 = _0x2e369d[_0xed2854[_0x488ff5(0x3b9)]]
                            , _0x4df202 = _0xed2854[_0x488ff5(0x666)][_0x497120[_0x488ff5(0x993)][_0x488ff5(0x196)]];
                        _0x405f05(_0x4df202[_0x488ff5(0xa3c)]) || (_0x4df202['data'] = _0x579772),
                            _0xed2854[_0x488ff5(0x27e)][_0x488ff5(0x681)](_0x4df202),
                            _0xed2854[_0x488ff5(0x27e)]['trim'](_0xed2854[_0x488ff5(0x58b)]),
                            _0x405f05(_0xed2854['_cacheKey']) && _0xed2854[_0x488ff5(0x718)][_0x488ff5(0x376)] > 0x0 && (_0x579772 = decodeArrayBuffer(_0x579772, _0xed2854[_0x488ff5(0x718)]));
                        var _0x12d37b = _0x3d4283(_0x579772, _0x497120[_0x488ff5(0x993)][_0x488ff5(0x675)], _0x57bcd5);
                        _0x405f05(_0x12d37b) || (_0x497120[_0x488ff5(0x793)] = _0x90a381),
                            _0x12d37b[_0x488ff5(0x685)](function (_0x34cffb) {
                                const _0x573692 = _0x488ff5;
                                _0x497120[_0x573692(0x496)] = _0x34cffb,
                                    _0x497120[_0x573692(0x793)] = _0x432363;
                            }, _0x415a59 => {
                                _0x497120['state'] = _0x90a381;
                            }
                            ),
                            _0x497120[_0x488ff5(0x993)] = void 0x0,
                            _0x405f05(Cesium[_0x488ff5(0x67a)][_0x488ff5(0x44d)]) ? Cesium[_0x488ff5(0x67a)][_0x488ff5(0x44d)](_0x11daae['_requestImageError']) : _0x405f05(Cesium[_0x488ff5(0x67a)][_0x488ff5(0x360)]) && Cesium[_0x488ff5(0x67a)]['reportSuccess'](_0x11daae[_0x488ff5(0x957)]);
                    }
                    function _0x50504d(_0xd9ba89) {
                        const _0x586eaa = _0x557c;
                        if (_0x497120[_0x586eaa(0x993)]['state'] === _0x2022fe[_0x586eaa(0x2dc)])
                            return _0x497120[_0x586eaa(0x793)] = _0x5f467b,
                                void (_0x497120[_0x586eaa(0x993)] = void 0x0);
                        _0x497120[_0x586eaa(0x793)] = _0x90a381,
                            _0x497120[_0x586eaa(0x993)] = void 0x0;
                        const _0x117fab = 'Failed\x20to\x20obtain\x20image\x20tile\x20X:\x20' + _0x497120['x'] + '\x20Y:\x20' + _0x497120['y'] + _0x586eaa(0x4f8) + _0x497120[_0x586eaa(0x985)] + '.';
                        _0x11daae['_requestImageError'] = Cesium[_0x586eaa(0x67a)]['handleError'](_0x11daae['_requestImageError'], _0xed2854, _0xed2854[_0x586eaa(0x80e)], _0x117fab, _0x497120['x'], _0x497120['y'], _0x497120[_0x586eaa(0x985)], _0x41b013, _0xd9ba89);
                    }
                    function _0x41b013(_0x3fc445) {
                        const _0x549f21 = _0x557c;
                        var _0xd8bc42 = new Cesium[(_0x549f21(0x660))]({
                            'throttle': !0x1,
                            'throttleByServer': !0x0,
                            'type': _0x1e5210[_0x549f21(0x429)]
                        });
                        _0xd8bc42['cacheEnable'] = _0x3fc445,
                            _0x497120['request'] = _0xd8bc42,
                            _0x497120['state'] = _0x401fc2;
                        var _0x4d3054 = _0xed2854[_0x549f21(0x691)](_0x497120['x'], _0x497120['y'], _0x497120[_0x549f21(0x985)], _0xd8bc42, _0x497120[_0x549f21(0xf7)], _0x497120);
                        if (!_0x405f05(_0x4d3054))
                            return _0x497120[_0x549f21(0x793)] = _0x5f467b,
                                void (_0x497120[_0x549f21(0x993)] = void 0x0);
                        _0x405f05(_0xed2854[_0x549f21(0x1e2)]) && (_0x497120[_0x549f21(0x6f8)] = _0xed2854[_0x549f21(0x1e2)](_0x497120['x'], _0x497120['y'], _0x497120[_0x549f21(0x985)])),
                            _0x405f05(_0x4d3054[_0x549f21(0x685)]) || (_0x4d3054 = Promise[_0x549f21(0x1d5)](_0x4d3054)),
                            _0x4d3054[_0x549f21(0x685)](_0x4340eb, _0x50504d);
                    }
                    _0x41b013(!0x0);
                }(_0x9ceac0, this) : this['hookRequestImageryFunc'](_0x9ceac0);
            }
            ,
            void 0x0 === Date[_0x324b8e(0x97b)] && (Date[_0x324b8e(0x97b)] = function () {
                return new Date()['valueOf']();
            }
            );
        var _0x237430, _0x483403 = _0x483403 || (_0x237430 = [],
        {
            'REVISION': '13',
            'getAll': function () {
                return _0x237430;
            },
            'removeAll': function () {
                _0x237430 = [];
            },
            'add': function (_0x175f6c) {
                _0x237430['push'](_0x175f6c);
            },
            'remove': function (_0x22aa33) {
                const _0x1c0437 = _0x324b8e;
                var _0xd40068 = _0x237430[_0x1c0437(0xa59)](_0x22aa33);
                -0x1 !== _0xd40068 && _0x237430[_0x1c0437(0x646)](_0xd40068, 0x1);
            },
            'update': function (_0x54b71b) {
                const _0x2439cc = _0x324b8e;
                if (0x0 === _0x237430[_0x2439cc(0x376)])
                    return !0x1;
                var _0xfe6a62 = 0x0;
                for (_0x54b71b = void 0x0 !== _0x54b71b ? _0x54b71b : _0x2439cc(0x8a8) != typeof window && void 0x0 !== window[_0x2439cc(0x8f1)] && void 0x0 !== window['performance']['now'] ? window[_0x2439cc(0x8f1)]['now']() : Date[_0x2439cc(0x97b)](); _0xfe6a62 < _0x237430[_0x2439cc(0x376)];)
                    _0x237430[_0xfe6a62]['update'](_0x54b71b) ? _0xfe6a62++ : _0x237430[_0x2439cc(0x646)](_0xfe6a62, 0x1);
                return !0x0;
            }
        });
        _0x483403[_0x324b8e(0x90d)] = function (_0x480f85) {
            const _0x19d3df = _0x324b8e;
            var _0x2f8ff6 = _0x480f85
                , _0x2c1944 = {}
                , _0x35572e = {}
                , _0x554f19 = {}
                , _0x210158 = 0x3e8
                , _0x5b8ebb = 0x0
                , _0x3b0b38 = !0x1
                , _0xf96aa2 = !0x1
                , _0x1e93f0 = 0x0
                , _0x10b30a = null
                , _0x29d527 = _0x483403[_0x19d3df(0x595)][_0x19d3df(0x8a3)][_0x19d3df(0x1d2)]
                , _0x4d278f = _0x483403[_0x19d3df(0x3f9)][_0x19d3df(0x8a3)]
                , _0x2882f8 = []
                , _0x2dde5b = null
                , _0x22960b = !0x1
                , _0x10ec09 = null
                , _0x5ad82a = null
                , _0xe2b10 = null
                , _0x5a1460 = 0x0
                , _0x3752a8 = 0x0;
            for (var _0xf4a6be in _0x480f85)
                _0x2c1944[_0xf4a6be] = parseFloat(_0x480f85[_0xf4a6be], 0xa);
            this['to'] = function (_0x5154db, _0x1a463) {
                return void 0x0 !== _0x1a463 && (_0x210158 = _0x1a463),
                    _0x35572e = _0x5154db,
                    this;
            }
                ,
                this['start'] = function (_0x18f367) {
                    const _0x10f8e8 = _0x19d3df;
                    for (var _0x2bef11 in (_0x483403[_0x10f8e8(0x9cb)](this),
                        _0xf96aa2 = !0x0,
                        _0x22960b = !0x1,
                        _0x10b30a = void 0x0 !== _0x18f367 ? _0x18f367 : 'undefined' != typeof window && void 0x0 !== window[_0x10f8e8(0x8f1)] && void 0x0 !== window[_0x10f8e8(0x8f1)][_0x10f8e8(0x97b)] ? window[_0x10f8e8(0x8f1)][_0x10f8e8(0x97b)]() : Date[_0x10f8e8(0x97b)](),
                        _0x10b30a += _0x1e93f0,
                        _0x35572e)) {
                        if (_0x35572e[_0x2bef11] instanceof Array) {
                            if (0x0 === _0x35572e[_0x2bef11]['length'])
                                continue;
                            _0x35572e[_0x2bef11] = [_0x2f8ff6[_0x2bef11]]['concat'](_0x35572e[_0x2bef11]);
                        }
                        _0x2c1944[_0x2bef11] = _0x2f8ff6[_0x2bef11],
                            _0x2c1944[_0x2bef11] instanceof Array == !0x1 && (_0x2c1944[_0x2bef11] *= 0x1),
                            _0x554f19[_0x2bef11] = _0x2c1944[_0x2bef11] || 0x0;
                    }
                    return this;
                }
                ,
                this[_0x19d3df(0x733)] = function () {
                    const _0x42aee1 = _0x19d3df;
                    console[_0x42aee1(0x9d4)]('11111111111111');
                }
                ,
                this[_0x19d3df(0x973)] = function () {
                    const _0x3c3b6f = _0x19d3df;
                    return _0xf96aa2 ? (_0x483403[_0x3c3b6f(0x77c)](this),
                        _0xf96aa2 = !0x1,
                        null !== _0xe2b10 && _0xe2b10[_0x3c3b6f(0x479)](_0x2f8ff6),
                        this['stopChainedTweens'](),
                        this) : this;
                }
                ,
                this[_0x19d3df(0x237)] = function () {
                    const _0x5d71fb = _0x19d3df;
                    return _0xf96aa2 ? (_0xf96aa2 = !0x1,
                        _0x5a1460 = _0x5d71fb(0x8a8) != typeof window && void 0x0 !== window[_0x5d71fb(0x8f1)] && void 0x0 !== window[_0x5d71fb(0x8f1)]['now'] ? window[_0x5d71fb(0x8f1)][_0x5d71fb(0x97b)]() : Date[_0x5d71fb(0x97b)](),
                        this) : this;
                }
                ,
                this[_0x19d3df(0x6f0)] = function () {
                    const _0x4fec3f = _0x19d3df;
                    return _0xf96aa2 || (_0xf96aa2 = !0x0,
                        _0x5a1460 = (_0x4fec3f(0x8a8) != typeof window && void 0x0 !== window[_0x4fec3f(0x8f1)] && void 0x0 !== window[_0x4fec3f(0x8f1)][_0x4fec3f(0x97b)] ? window['performance'][_0x4fec3f(0x97b)]() : Date['now']()) - _0x5a1460,
                        _0x3752a8 += _0x5a1460),
                        this;
                }
                ,
                this['stopChainedTweens'] = function () {
                    const _0x44a5ac = _0x19d3df;
                    for (var _0x46bcd3 = 0x0, _0x98942a = _0x2882f8[_0x44a5ac(0x376)]; _0x46bcd3 < _0x98942a; _0x46bcd3++)
                        _0x2882f8[_0x46bcd3][_0x44a5ac(0x973)]();
                }
                ,
                this[_0x19d3df(0x7a9)] = function (_0x31cb7c) {
                    return _0x1e93f0 = _0x31cb7c,
                        this;
                }
                ,
                this['repeat'] = function (_0x1bf16c) {
                    return _0x5b8ebb = _0x1bf16c,
                        this;
                }
                ,
                this['yoyo'] = function (_0x53b04c) {
                    return _0x3b0b38 = _0x53b04c,
                        this;
                }
                ,
                this['easing'] = function (_0x220f46) {
                    return _0x29d527 = _0x220f46,
                        this;
                }
                ,
                this[_0x19d3df(0xa1b)] = function (_0x13b905) {
                    return _0x4d278f = _0x13b905,
                        this;
                }
                ,
                this[_0x19d3df(0x72b)] = function () {
                    return _0x2882f8 = arguments,
                        this;
                }
                ,
                this[_0x19d3df(0x393)] = function (_0x5ad4a5) {
                    return _0x2dde5b = _0x5ad4a5,
                        this;
                }
                ,
                this[_0x19d3df(0x50d)] = function (_0x4e1bc4) {
                    return _0x10ec09 = _0x4e1bc4,
                        this;
                }
                ,
                this[_0x19d3df(0x6b2)] = function (_0x797018) {
                    return _0x5ad82a = _0x797018,
                        this;
                }
                ,
                this[_0x19d3df(0x50c)] = function (_0xffeca4) {
                    return _0xe2b10 = _0xffeca4,
                        this;
                }
                ,
                this[_0x19d3df(0x4bc)] = function (_0x262bc0) {
                    const _0x1bc32e = _0x19d3df;
                    var _0x282726;
                    if (_0x262bc0 < _0x10b30a || !_0xf96aa2)
                        return !0x0;
                    !0x1 === _0x22960b && (null !== _0x2dde5b && _0x2dde5b[_0x1bc32e(0x479)](_0x2f8ff6),
                        _0x22960b = !0x0);
                    var _0x5c86c1 = (_0x262bc0 - _0x10b30a - _0x3752a8) / _0x210158
                        , _0x3af949 = _0x29d527(_0x5c86c1 = _0x5c86c1 > 0x1 ? 0x1 : _0x5c86c1);
                    for (_0x282726 in _0x35572e) {
                        var _0x224fc1 = _0x2c1944[_0x282726] || 0x0
                            , _0x2573ba = _0x35572e[_0x282726];
                        _0x2573ba instanceof Array ? _0x2f8ff6[_0x282726] = _0x4d278f(_0x2573ba, _0x3af949) : ('string' == typeof _0x2573ba && (_0x2573ba = _0x224fc1 + parseFloat(_0x2573ba, 0xa)),
                            'number' == typeof _0x2573ba && (_0x2f8ff6[_0x282726] = _0x224fc1 + (_0x2573ba - _0x224fc1) * _0x3af949));
                    }
                    if (null !== _0x10ec09 && _0x10ec09[_0x1bc32e(0x479)](_0x2f8ff6, _0x3af949),
                        0x1 == _0x5c86c1) {
                        if (_0x3752a8 = 0x0,
                            _0x5b8ebb > 0x0) {
                            for (_0x282726 in (isFinite(_0x5b8ebb) && _0x5b8ebb--,
                                _0x554f19)) {
                                if (_0x1bc32e(0x937) == typeof _0x35572e[_0x282726] && (_0x554f19[_0x282726] = _0x554f19[_0x282726] + parseFloat(_0x35572e[_0x282726], 0xa)),
                                    _0x3b0b38) {
                                    var _0x66b5bc = _0x554f19[_0x282726];
                                    _0x554f19[_0x282726] = _0x35572e[_0x282726],
                                        _0x35572e[_0x282726] = _0x66b5bc;
                                }
                                _0x2c1944[_0x282726] = _0x554f19[_0x282726];
                            }
                            return _0x10b30a = _0x262bc0 + _0x1e93f0,
                                !0x0;
                        }
                        null !== _0x5ad82a && _0x5ad82a[_0x1bc32e(0x479)](_0x2f8ff6);
                        for (var _0x1f85cd = 0x0, _0xa7a807 = _0x2882f8[_0x1bc32e(0x376)]; _0x1f85cd < _0xa7a807; _0x1f85cd++)
                            _0x2882f8[_0x1f85cd]['start'](_0x262bc0);
                        return !0x1;
                    }
                    return !0x0;
                }
                ;
        }
            ,
            _0x483403['Easing'] = {
                'Linear': {
                    'None': function (_0x2136a2) {
                        return _0x2136a2;
                    }
                },
                'Quadratic': {
                    'In': function (_0x2c3c16) {
                        return _0x2c3c16 * _0x2c3c16;
                    },
                    'Out': function (_0x2e3e43) {
                        return _0x2e3e43 * (0x2 - _0x2e3e43);
                    },
                    'InOut': function (_0x5ef62b) {
                        return (_0x5ef62b *= 0x2) < 0x1 ? 0.5 * _0x5ef62b * _0x5ef62b : -0.5 * (--_0x5ef62b * (_0x5ef62b - 0x2) - 0x1);
                    }
                },
                'Cubic': {
                    'In': function (_0x3d3b90) {
                        return _0x3d3b90 * _0x3d3b90 * _0x3d3b90;
                    },
                    'Out': function (_0x157092) {
                        return --_0x157092 * _0x157092 * _0x157092 + 0x1;
                    },
                    'InOut': function (_0x11b571) {
                        return (_0x11b571 *= 0x2) < 0x1 ? 0.5 * _0x11b571 * _0x11b571 * _0x11b571 : 0.5 * ((_0x11b571 -= 0x2) * _0x11b571 * _0x11b571 + 0x2);
                    }
                },
                'Quartic': {
                    'In': function (_0x3015cc) {
                        return _0x3015cc * _0x3015cc * _0x3015cc * _0x3015cc;
                    },
                    'Out': function (_0x10b6d6) {
                        return 0x1 - _0x10b6d6 * _0x10b6d6 * _0x10b6d6 * _0x10b6d6;
                    },
                    'InOut': function (_0x2a6a59) {
                        return (_0x2a6a59 *= 0x2) < 0x1 ? 0.5 * _0x2a6a59 * _0x2a6a59 * _0x2a6a59 * _0x2a6a59 : -0.5 * ((_0x2a6a59 -= 0x2) * _0x2a6a59 * _0x2a6a59 * _0x2a6a59 - 0x2);
                    }
                },
                'Quintic': {
                    'In': function (_0x27d76c) {
                        return _0x27d76c * _0x27d76c * _0x27d76c * _0x27d76c * _0x27d76c;
                    },
                    'Out': function (_0x43e10c) {
                        return --_0x43e10c * _0x43e10c * _0x43e10c * _0x43e10c * _0x43e10c + 0x1;
                    },
                    'InOut': function (_0x5e7740) {
                        return (_0x5e7740 *= 0x2) < 0x1 ? 0.5 * _0x5e7740 * _0x5e7740 * _0x5e7740 * _0x5e7740 * _0x5e7740 : 0.5 * ((_0x5e7740 -= 0x2) * _0x5e7740 * _0x5e7740 * _0x5e7740 * _0x5e7740 + 0x2);
                    }
                },
                'Sinusoidal': {
                    'In': function (_0x9af3ff) {
                        const _0x17847b = _0x324b8e;
                        return 0x1 - Math[_0x17847b(0x994)](_0x9af3ff * Math['PI'] / 0x2);
                    },
                    'Out': function (_0x8f664b) {
                        const _0x5572d8 = _0x324b8e;
                        return Math[_0x5572d8(0x1ee)](_0x8f664b * Math['PI'] / 0x2);
                    },
                    'InOut': function (_0x380a0d) {
                        const _0x2c5bd3 = _0x324b8e;
                        return 0.5 * (0x1 - Math[_0x2c5bd3(0x994)](Math['PI'] * _0x380a0d));
                    }
                },
                'Exponential': {
                    'In': function (_0x4aa718) {
                        const _0x27074f = _0x324b8e;
                        return 0x0 === _0x4aa718 ? 0x0 : Math[_0x27074f(0x857)](0x400, _0x4aa718 - 0x1);
                    },
                    'Out': function (_0x5ce61d) {
                        const _0x307875 = _0x324b8e;
                        return 0x1 === _0x5ce61d ? 0x1 : 0x1 - Math[_0x307875(0x857)](0x2, -0xa * _0x5ce61d);
                    },
                    'InOut': function (_0x4ce2cf) {
                        const _0x46a53b = _0x324b8e;
                        return 0x0 === _0x4ce2cf ? 0x0 : 0x1 === _0x4ce2cf ? 0x1 : (_0x4ce2cf *= 0x2) < 0x1 ? 0.5 * Math[_0x46a53b(0x857)](0x400, _0x4ce2cf - 0x1) : 0.5 * (0x2 - Math[_0x46a53b(0x857)](0x2, -0xa * (_0x4ce2cf - 0x1)));
                    }
                },
                'Circular': {
                    'In': function (_0xd3b46) {
                        const _0x495d3c = _0x324b8e;
                        return 0x1 - Math[_0x495d3c(0x3d2)](0x1 - _0xd3b46 * _0xd3b46);
                    },
                    'Out': function (_0x5cf530) {
                        const _0x4a230d = _0x324b8e;
                        return Math[_0x4a230d(0x3d2)](0x1 - --_0x5cf530 * _0x5cf530);
                    },
                    'InOut': function (_0x258446) {
                        return (_0x258446 *= 0x2) < 0x1 ? -0.5 * (Math['sqrt'](0x1 - _0x258446 * _0x258446) - 0x1) : 0.5 * (Math['sqrt'](0x1 - (_0x258446 -= 0x2) * _0x258446) + 0x1);
                    }
                },
                'Elastic': {
                    'In': function (_0xf5c5ec) {
                        const _0x311fa2 = _0x324b8e;
                        var _0x4ee0e8, _0x1c03a0 = 0.1;
                        return 0x0 === _0xf5c5ec ? 0x0 : 0x1 === _0xf5c5ec ? 0x1 : (!_0x1c03a0 || _0x1c03a0 < 0x1 ? (_0x1c03a0 = 0x1,
                            _0x4ee0e8 = 0.1) : _0x4ee0e8 = 0.4 * Math[_0x311fa2(0x6cb)](0x1 / _0x1c03a0) / (0x2 * Math['PI']),
                            -_0x1c03a0 * Math[_0x311fa2(0x857)](0x2, 0xa * (_0xf5c5ec -= 0x1)) * Math[_0x311fa2(0x1ee)]((_0xf5c5ec - _0x4ee0e8) * (0x2 * Math['PI']) / 0.4));
                    },
                    'Out': function (_0xbfe95d) {
                        const _0x335d5d = _0x324b8e;
                        var _0x3e7b04, _0x22b265 = 0.1;
                        return 0x0 === _0xbfe95d ? 0x0 : 0x1 === _0xbfe95d ? 0x1 : (!_0x22b265 || _0x22b265 < 0x1 ? (_0x22b265 = 0x1,
                            _0x3e7b04 = 0.1) : _0x3e7b04 = 0.4 * Math[_0x335d5d(0x6cb)](0x1 / _0x22b265) / (0x2 * Math['PI']),
                            _0x22b265 * Math[_0x335d5d(0x857)](0x2, -0xa * _0xbfe95d) * Math['sin']((_0xbfe95d - _0x3e7b04) * (0x2 * Math['PI']) / 0.4) + 0x1);
                    },
                    'InOut': function (_0x4d36c2) {
                        const _0x38098f = _0x324b8e;
                        var _0x4fd51b, _0x3bec43 = 0.1, _0xa04644 = 0.4;
                        return 0x0 === _0x4d36c2 ? 0x0 : 0x1 === _0x4d36c2 ? 0x1 : (!_0x3bec43 || _0x3bec43 < 0x1 ? (_0x3bec43 = 0x1,
                            _0x4fd51b = 0.1) : _0x4fd51b = _0xa04644 * Math[_0x38098f(0x6cb)](0x1 / _0x3bec43) / (0x2 * Math['PI']),
                            (_0x4d36c2 *= 0x2) < 0x1 ? _0x3bec43 * Math[_0x38098f(0x857)](0x2, 0xa * (_0x4d36c2 -= 0x1)) * Math['sin']((_0x4d36c2 - _0x4fd51b) * (0x2 * Math['PI']) / _0xa04644) * -0.5 : _0x3bec43 * Math[_0x38098f(0x857)](0x2, -0xa * (_0x4d36c2 -= 0x1)) * Math[_0x38098f(0x1ee)]((_0x4d36c2 - _0x4fd51b) * (0x2 * Math['PI']) / _0xa04644) * 0.5 + 0x1);
                    }
                },
                'Back': {
                    'In': function (_0x196569) {
                        var _0x154099 = 1.70158;
                        return _0x196569 * _0x196569 * ((_0x154099 + 0x1) * _0x196569 - _0x154099);
                    },
                    'Out': function (_0x236ed2) {
                        var _0x5628f8 = 1.70158;
                        return --_0x236ed2 * _0x236ed2 * ((_0x5628f8 + 0x1) * _0x236ed2 + _0x5628f8) + 0x1;
                    },
                    'InOut': function (_0x9a5831) {
                        var _0x1072e2 = 2.5949095;
                        return (_0x9a5831 *= 0x2) < 0x1 ? _0x9a5831 * _0x9a5831 * ((_0x1072e2 + 0x1) * _0x9a5831 - _0x1072e2) * 0.5 : 0.5 * ((_0x9a5831 -= 0x2) * _0x9a5831 * ((_0x1072e2 + 0x1) * _0x9a5831 + _0x1072e2) + 0x2);
                    }
                },
                'Bounce': {
                    'In': function (_0x157540) {
                        const _0x1e0dcf = _0x324b8e;
                        return 0x1 - _0x483403[_0x1e0dcf(0x595)][_0x1e0dcf(0x7e1)]['Out'](0x1 - _0x157540);
                    },
                    'Out': function (_0x48528b) {
                        return _0x48528b < 0x1 / 2.75 ? 7.5625 * _0x48528b * _0x48528b : _0x48528b < 0x2 / 2.75 ? 7.5625 * (_0x48528b -= 1.5 / 2.75) * _0x48528b + 0.75 : _0x48528b < 2.5 / 2.75 ? 7.5625 * (_0x48528b -= 2.25 / 2.75) * _0x48528b + 0.9375 : 7.5625 * (_0x48528b -= 2.625 / 2.75) * _0x48528b + 0.984375;
                    },
                    'InOut': function (_0x123556) {
                        const _0x1eba5f = _0x324b8e;
                        return _0x123556 < 0.5 ? 0.5 * _0x483403['Easing']['Bounce']['In'](0x2 * _0x123556) : 0.5 * _0x483403[_0x1eba5f(0x595)][_0x1eba5f(0x7e1)][_0x1eba5f(0x4f1)](0x2 * _0x123556 - 0x1) + 0.5;
                    }
                }
            },
            _0x483403['Interpolation'] = {
                'Linear': function (_0x5ab18e, _0x523683) {
                    const _0x1db4e = _0x324b8e;
                    var _0x18f1c0 = _0x5ab18e[_0x1db4e(0x376)] - 0x1
                        , _0x9bef78 = _0x18f1c0 * _0x523683
                        , _0x27e2d1 = Math[_0x1db4e(0x432)](_0x9bef78)
                        , _0x2199ef = _0x483403['Interpolation'][_0x1db4e(0x242)][_0x1db4e(0x8a3)];
                    return _0x523683 < 0x0 ? _0x2199ef(_0x5ab18e[0x0], _0x5ab18e[0x1], _0x9bef78) : _0x523683 > 0x1 ? _0x2199ef(_0x5ab18e[_0x18f1c0], _0x5ab18e[_0x18f1c0 - 0x1], _0x18f1c0 - _0x9bef78) : _0x2199ef(_0x5ab18e[_0x27e2d1], _0x5ab18e[_0x27e2d1 + 0x1 > _0x18f1c0 ? _0x18f1c0 : _0x27e2d1 + 0x1], _0x9bef78 - _0x27e2d1);
                },
                'Bezier': function (_0x420703, _0x3c5be9) {
                    const _0x4b0cc8 = _0x324b8e;
                    var _0x11eebe, _0x5e54a9 = 0x0, _0x3017b3 = _0x420703[_0x4b0cc8(0x376)] - 0x1, _0x5efe55 = Math[_0x4b0cc8(0x857)], _0x4eadd5 = _0x483403[_0x4b0cc8(0x3f9)][_0x4b0cc8(0x242)][_0x4b0cc8(0x5b9)];
                    for (_0x11eebe = 0x0; _0x11eebe <= _0x3017b3; _0x11eebe++)
                        _0x5e54a9 += _0x5efe55(0x1 - _0x3c5be9, _0x3017b3 - _0x11eebe) * _0x5efe55(_0x3c5be9, _0x11eebe) * _0x420703[_0x11eebe] * _0x4eadd5(_0x3017b3, _0x11eebe);
                    return _0x5e54a9;
                },
                'CatmullRom': function (_0x480647, _0x5c4590) {
                    const _0x4e1818 = _0x324b8e;
                    var _0x57c57f = _0x480647['length'] - 0x1
                        , _0x26641a = _0x57c57f * _0x5c4590
                        , _0x4f087f = Math[_0x4e1818(0x432)](_0x26641a)
                        , _0x30c051 = _0x483403[_0x4e1818(0x3f9)][_0x4e1818(0x242)]['CatmullRom'];
                    return _0x480647[0x0] === _0x480647[_0x57c57f] ? (_0x5c4590 < 0x0 && (_0x4f087f = Math['floor'](_0x26641a = _0x57c57f * (0x1 + _0x5c4590))),
                        _0x30c051(_0x480647[(_0x4f087f - 0x1 + _0x57c57f) % _0x57c57f], _0x480647[_0x4f087f], _0x480647[(_0x4f087f + 0x1) % _0x57c57f], _0x480647[(_0x4f087f + 0x2) % _0x57c57f], _0x26641a - _0x4f087f)) : _0x5c4590 < 0x0 ? _0x480647[0x0] - (_0x30c051(_0x480647[0x0], _0x480647[0x0], _0x480647[0x1], _0x480647[0x1], -_0x26641a) - _0x480647[0x0]) : _0x5c4590 > 0x1 ? _0x480647[_0x57c57f] - (_0x30c051(_0x480647[_0x57c57f], _0x480647[_0x57c57f], _0x480647[_0x57c57f - 0x1], _0x480647[_0x57c57f - 0x1], _0x26641a - _0x57c57f) - _0x480647[_0x57c57f]) : _0x30c051(_0x480647[_0x4f087f ? _0x4f087f - 0x1 : 0x0], _0x480647[_0x4f087f], _0x480647[_0x57c57f < _0x4f087f + 0x1 ? _0x57c57f : _0x4f087f + 0x1], _0x480647[_0x57c57f < _0x4f087f + 0x2 ? _0x57c57f : _0x4f087f + 0x2], _0x26641a - _0x4f087f);
                },
                'Utils': {
                    'Linear': function (_0x45e09b, _0x56320a, _0x29726d) {
                        return (_0x56320a - _0x45e09b) * _0x29726d + _0x45e09b;
                    },
                    'Bernstein': function (_0x142422, _0x5cef67) {
                        var _0x2f3ca7 = _0x483403['Interpolation']['Utils']['Factorial'];
                        return _0x2f3ca7(_0x142422) / _0x2f3ca7(_0x5cef67) / _0x2f3ca7(_0x142422 - _0x5cef67);
                    },
                    'Factorial': function () {
                        var _0x2d948c = [0x1];
                        return function (_0x153e14) {
                            var _0x5f3c4c, _0x4d4a84 = 0x1;
                            if (_0x2d948c[_0x153e14])
                                return _0x2d948c[_0x153e14];
                            for (_0x5f3c4c = _0x153e14; _0x5f3c4c > 0x1; _0x5f3c4c--)
                                _0x4d4a84 *= _0x5f3c4c;
                            return _0x2d948c[_0x153e14] = _0x4d4a84;
                        }
                            ;
                    }(),
                    'CatmullRom': function (_0x3f47e8, _0x31a518, _0x4d8dea, _0xddbe39, _0x3e94eb) {
                        var _0x3539d6 = 0.5 * (_0x4d8dea - _0x3f47e8)
                            , _0x91a36b = 0.5 * (_0xddbe39 - _0x31a518)
                            , _0x1ccb88 = _0x3e94eb * _0x3e94eb;
                        return (0x2 * _0x31a518 - 0x2 * _0x4d8dea + _0x3539d6 + _0x91a36b) * (_0x3e94eb * _0x1ccb88) + (-0x3 * _0x31a518 + 0x3 * _0x4d8dea - 0x2 * _0x3539d6 - _0x91a36b) * _0x1ccb88 + _0x3539d6 * _0x3e94eb + _0x31a518;
                    }
                }
            };
        const _0x367cef = Cesium['queryToObject']
            , _0x4b179a = Cesium[_0x324b8e(0x14b)];
        let _0x3a0746 = new Cesium[(_0x324b8e(0x747))]()
            , _0x3cf881 = new Cesium['Cartesian4']()
            , _0x64d66b = new Cesium[(_0x324b8e(0x5ab))]()
            , _0x26780f = new Cesium[(_0x324b8e(0x5ab))]();
        new Cesium['Cartesian3']();
        let _0x28ad57 = new Cesium[(_0x324b8e(0x503))](Cesium[_0x324b8e(0x85d)][_0x324b8e(0x662)], 0x1);
        Cesium[_0x324b8e(0x437)]['prototype'][_0x324b8e(0xa21)] = !0x1,
            Cesium[_0x324b8e(0x437)][_0x324b8e(0x74f)][_0x324b8e(0xc6)] = new Cesium[(_0x324b8e(0x5ab))](),
            Cesium[_0x324b8e(0x437)]['prototype']['enableReflection'] = function (_0x293122) {
                const _0x374a89 = _0x324b8e;
                this[_0x374a89(0xa21)] = !0x0,
                    function (_0x589f89, _0x4c9f66) {
                        const _0x50c221 = _0x374a89;
                        let _0x3a8d6d = _0x589f89[_0x50c221(0xaa5)]
                            , _0x5dc0c2 = _0x589f89['normal'];
                        _0x4c9f66[0x0] = -0x2 * _0x5dc0c2['x'] * _0x5dc0c2['x'] + 0x1,
                            _0x4c9f66[0x1] = -0x2 * _0x5dc0c2['y'] * _0x5dc0c2['x'],
                            _0x4c9f66[0x2] = -0x2 * _0x5dc0c2['z'] * _0x5dc0c2['x'],
                            _0x4c9f66[0x3] = 0x0,
                            _0x4c9f66[0x4] = -0x2 * _0x5dc0c2['x'] * _0x5dc0c2['y'],
                            _0x4c9f66[0x5] = -0x2 * _0x5dc0c2['y'] * _0x5dc0c2['y'] + 0x1,
                            _0x4c9f66[0x6] = -0x2 * _0x5dc0c2['z'] * _0x5dc0c2['y'],
                            _0x4c9f66[0x7] = 0x0,
                            _0x4c9f66[0x8] = -0x2 * _0x5dc0c2['x'] * _0x5dc0c2['z'],
                            _0x4c9f66[0x9] = -0x2 * _0x5dc0c2['y'] * _0x5dc0c2['z'],
                            _0x4c9f66[0xa] = -0x2 * _0x5dc0c2['z'] * _0x5dc0c2['z'] + 0x1,
                            _0x4c9f66[0xb] = 0x0,
                            _0x4c9f66[0xc] = -0x2 * _0x5dc0c2['x'] * _0x3a8d6d,
                            _0x4c9f66[0xd] = -0x2 * _0x5dc0c2['y'] * _0x3a8d6d,
                            _0x4c9f66[0xe] = -0x2 * _0x5dc0c2['z'] * _0x3a8d6d,
                            _0x4c9f66[0xf] = 0x1;
                    }(_0x293122, this[_0x374a89(0xc6)]),
                    this[_0x374a89(0x791)][_0x374a89(0x350)] = !0x0,
                    this[_0x374a89(0x791)]['clipPlane'] = _0x293122;
                let _0x84194d = Cesium[_0x374a89(0x5ab)]['multiply'](this['_viewMatrix'], this['reflectMatrix'], _0x64d66b);
                this[_0x374a89(0x791)][_0x374a89(0x330)] = _0x84194d;
            }
            ,
            Cesium['Camera'][_0x324b8e(0x74f)]['disableReflection'] = function () {
                const _0x3cbd2f = _0x324b8e;
                this['bReflect'] = !0x1,
                    this[_0x3cbd2f(0x791)][_0x3cbd2f(0x350)] = !0x1;
            }
            ,
            Cesium[_0x324b8e(0x39a)][_0x324b8e(0x74f)]['execute'] = function (_0x321fd3, _0x3bcd18) {
                const _0x1a736d = _0x324b8e;
                Cesium[_0x1a736d(0x14b)](_0x3bcd18) && Cesium[_0x1a736d(0x14b)](_0x3bcd18[_0x1a736d(0x16c)]) && this[_0x1a736d(0x9c6)] === _0x3bcd18[_0x1a736d(0x16c)] || _0x321fd3[_0x1a736d(0x6e7)](this, _0x3bcd18);
            }
            ,
            Cesium[_0x324b8e(0x5ab)]['multiplyByPlane'] = function (_0x88799e, _0x1fd6e7, _0x23e406) {
                const _0x37c194 = _0x324b8e;
                Cesium['Check'][_0x37c194(0x8d8)][_0x37c194(0x3f0)](_0x37c194(0x322), _0x88799e),
                    Cesium[_0x37c194(0x636)]['typeOf'][_0x37c194(0x3f0)](_0x37c194(0x2b1), _0x1fd6e7),
                    Cesium[_0x37c194(0x636)][_0x37c194(0x8d8)]['object'](_0x37c194(0x346), _0x23e406),
                    Cesium[_0x37c194(0x5ab)]['inverse'](_0x88799e, _0x64d66b),
                    Cesium[_0x37c194(0x5ab)][_0x37c194(0x3ae)](_0x64d66b, _0x64d66b),
                    _0x3a0746['x'] = _0x1fd6e7[_0x37c194(0x8ba)]['x'],
                    _0x3a0746['y'] = _0x1fd6e7[_0x37c194(0x8ba)]['y'],
                    _0x3a0746['z'] = _0x1fd6e7[_0x37c194(0x8ba)]['z'],
                    _0x3a0746['w'] = _0x1fd6e7['distance'],
                    Cesium[_0x37c194(0x5ab)]['multiplyByVector'](_0x64d66b, _0x3a0746, _0x3a0746),
                    _0x23e406['normal']['x'] = _0x3a0746['x'],
                    _0x23e406['normal']['y'] = _0x3a0746['y'],
                    _0x23e406[_0x37c194(0x8ba)]['z'] = _0x3a0746['z'];
                let _0x132594 = Cesium[_0x37c194(0x85d)][_0x37c194(0x451)](_0x23e406[_0x37c194(0x8ba)]);
                return Cesium['Cartesian3']['normalize'](_0x23e406['normal'], _0x23e406['normal']),
                    _0x23e406[_0x37c194(0xaa5)] = _0x3a0746['w'] / _0x132594,
                    _0x23e406;
            }
            ,
            Cesium['PerspectiveFrustum'][_0x324b8e(0x74f)][_0x324b8e(0x406)] = Cesium['PerspectiveFrustum'][_0x324b8e(0x74f)][_0x324b8e(0x157)],
            Cesium[_0x324b8e(0x7e7)][_0x324b8e(0x74f)]['clone'] = function (_0x13f7b0) {
                const _0x1ab8a9 = _0x324b8e;
                let _0x53502a = this[_0x1ab8a9(0x406)](_0x13f7b0);
                return _0x53502a[_0x1ab8a9(0x350)] = this['reflect'],
                    _0x53502a[_0x1ab8a9(0x5d2)] = this[_0x1ab8a9(0x5d2)],
                    _0x53502a[_0x1ab8a9(0x330)] = this[_0x1ab8a9(0x330)],
                    _0x53502a;
            }
            ;
        const _0x5f35b7 = /^rgba?\(\s*([0-9.]+%?)\s*,\s*([0-9.]+%?)\s*,\s*([0-9.]+%?)(?:\s*,\s*([0-9.]+))?\s*\)$/i
            , _0x25e893 = /^rgba?\(\s*([0-9.]+%?)\s*,\s*([0-9.]+%?)\s*,\s*([0-9.]+%?)(?:\s*,\s*([0-9.]+))?\s*\)*$/i;
        function _0x97c87b(_0x147cc3) {
            const _0x50e859 = _0x324b8e;
            let _0x125faf = Cesium[_0x50e859(0x9c9)][_0x50e859(0x260)](_0x147cc3);
            return new Promise((_0x1ba14b, _0x183bf6) => {
                const _0x5a7644 = _0x50e859;
                _0x125faf[_0x5a7644(0x992)]()[_0x5a7644(0x685)](function (_0x2054b9) {
                    const _0x2b4159 = _0x5a7644;
                    try {
                        let _0x3084af = function (_0x151f7c) {
                            const _0x40964a = _0x557c;
                            if (!_0x151f7c)
                                throw new Cesium[(_0x40964a(0x335))](_0x40964a(0x2ce));
                            let _0xf3ecd7 = _0x151f7c[_0x40964a(0x906)]
                                , _0x5b10ad = _0xf3ecd7[_0x40964a(0x1f1)]
                                , _0x5f0538 = _0x5aff14['queryStringValue'](_0xf3ecd7, 'LayerName', _0x5b10ad)
                                , _0x2e69c3 = _0x5aff14['queryFirstNode'](_0xf3ecd7, _0x40964a(0x26f), _0x5b10ad)
                                , _0x47368a = _0x5aff14[_0x40964a(0x1cf)](_0xf3ecd7, _0x40964a(0x230), _0x5b10ad)
                                , _0xf7fcf8 = _0x5aff14[_0x40964a(0xaad)](_0x2e69c3, _0x40964a(0x688), _0x5b10ad)
                                , _0x3a29a0 = _0x5aff14[_0x40964a(0xaad)](_0x2e69c3, _0x40964a(0x377), _0x5b10ad)
                                , _0xd6f473 = _0x5aff14[_0x40964a(0x9c7)](_0x2e69c3, _0x40964a(0x5ca), _0x5b10ad)
                                , _0x32aa28 = _0x5aff14['queryNumericValue'](_0x2e69c3, _0x40964a(0x29d), _0x5b10ad);
                            _0x32aa28 = 0x0 === _0x32aa28 ? Number[_0x40964a(0x19b)] : _0x32aa28;
                            let _0x3d3d15 = _0x5aff14[_0x40964a(0x9c7)](_0x2e69c3, _0x40964a(0xd6), _0x5b10ad)
                                , _0x18402b = _0x5aff14['queryNumericValue'](_0x2e69c3, _0x40964a(0x5ff), _0x5b10ad)
                                , _0x374e62 = _0x5aff14[_0x40964a(0x1cf)](_0x2e69c3, 'ShadowType', _0x5b10ad)
                                , _0x434090 = 0x0;
                            _0x40964a(0x224) === _0x374e62 ? _0x434090 = 0x1 : _0x40964a(0x61d) === _0x374e62 && (_0x434090 = 0x2);
                            let _0x54265b = _0x5aff14[_0x40964a(0x1cf)](_0xf3ecd7, 'CacheFileType', _0x5b10ad)
                                , _0x54181c = _0x40964a(0x213) === _0x54265b
                                , _0x26e41d = _0x40964a(0x3f3) === _0x54265b
                                , _0x2fcc62 = 'OSGB' === _0x54265b
                                , _0x11c117 = _0x5aff14['queryFirstNode'](_0xf3ecd7, 'Style', _0x5b10ad);
                            if (!_0x11c117) {
                                let _0x5f0482 = _0x5aff14[_0x40964a(0x2fd)](_0xf3ecd7, _0x40964a(0x415), _0x5b10ad);
                                if (_0x5f0482 && (_0x11c117 = _0x5aff14[_0x40964a(0x2fd)](_0x5f0482, _0x40964a(0x2b6), _0x5b10ad),
                                    !_0x11c117))
                                    throw new Cesium[(_0x40964a(0x335))](_0x40964a(0x361) + _0x5f0538);
                            }
                            let _0xbe3a97 = _0x5aff14[_0x40964a(0x9c7)](_0x11c117, _0x40964a(0x375), _0x5b10ad)
                                , _0x1c1482 = _0x5aff14['queryStringValue'](_0x11c117, 'FillForeColor', _0x5b10ad)
                                , _0x30e9dc = _0x5f35b7['exec'](_0x1c1482['toLowerCase']())
                                , _0x276c97 = new Cesium[(_0x40964a(0x75c))]();
                            if (null !== _0x30e9dc) {
                                let _0x59b36c = parseFloat(_0x30e9dc[0x1]);
                                _0x59b36c = 0xbd === _0x59b36c ? 0xff : _0x59b36c;
                                let _0x1ca1f3 = parseFloat(_0x30e9dc[0x2]);
                                _0x1ca1f3 = 0xeb === _0x1ca1f3 ? 0xff : _0x1ca1f3,
                                    _0x276c97[_0x40964a(0x22d)] = Cesium['Math']['clamp'](_0x59b36c / 0xff, 0x0, 0x1),
                                    _0x276c97['green'] = Cesium[_0x40964a(0x16d)][_0x40964a(0x947)](_0x1ca1f3 / 0xff, 0x0, 0x1),
                                    _0x276c97[_0x40964a(0x8f0)] = Cesium['Math'][_0x40964a(0x947)](parseFloat(_0x30e9dc[0x3]) % 0x100 / 0xff, 0x0, 0x1),
                                    _0x276c97[_0x40964a(0x630)] = Cesium[_0x40964a(0x16d)]['clamp'](parseFloat(_0x30e9dc[0x3]) % 0x10000 / 0x100 / 0xff, 0x0, 0x1);
                            }
                            let _0x580277 = _0x5aff14[_0x40964a(0x2fd)](_0x11c117, _0x40964a(0x327), _0x5b10ad)
                                , _0x5c9f84 = new _0x49debc();
                            if (_0x580277) {
                                let _0x32a03f = _0x5aff14['queryStringValue'](_0x580277, 'Fill3DMode', _0x5b10ad)
                                    , _0xa76d21 = _0x276dd5[_0x40964a(0x55a)];
                                _0x40964a(0x42b) === _0x32a03f ? _0xa76d21 = _0x276dd5[_0x40964a(0x64a)] : _0x40964a(0x680) === _0x32a03f && (_0xa76d21 = _0x276dd5[_0x40964a(0x576)]);
                                let _0x1881f6 = _0x5aff14['queryNumericValue'](_0x580277, _0x40964a(0x922), _0x5b10ad)
                                    , _0x289f07 = _0x5aff14[_0x40964a(0x1cf)](_0x580277, 'LineColor', _0x5b10ad)
                                    , _0x53cd65 = _0x25e893[_0x40964a(0x3ff)](_0x289f07['toLowerCase']())
                                    , _0x482127 = new Cesium[(_0x40964a(0x75c))]();
                                null !== _0x53cd65 && (_0x482127['red'] = Cesium['Math'][_0x40964a(0x947)](parseFloat(_0x53cd65[0x1]), 0x0, 0x1),
                                    _0x482127[_0x40964a(0x69b)] = Cesium[_0x40964a(0x16d)][_0x40964a(0x947)](parseFloat(_0x53cd65[0x2]), 0x0, 0x1),
                                    _0x482127[_0x40964a(0x8f0)] = Cesium[_0x40964a(0x16d)][_0x40964a(0x947)](parseFloat(_0x53cd65[0x3]), 0x0, 0x1),
                                    _0x482127[_0x40964a(0x630)] = Cesium[_0x40964a(0x16d)]['clamp'](parseFloat(_0x53cd65[0x4]), 0x0, 0x1));
                                let _0x5c66bf = _0x5aff14[_0x40964a(0x9c7)](_0x11c117, _0x40964a(0x282), _0x5b10ad) || 0x0;
                                _0x1881f6 = Math[_0x40964a(0x212)](_0x1881f6, _0x5c66bf);
                                let _0x32360c = _0x5aff14['queryStringValue'](_0x580277, _0x40964a(0x492), _0x5b10ad);
                                _0x53cd65 = _0x25e893[_0x40964a(0x3ff)](_0x32360c[_0x40964a(0xa2b)]());
                                let _0x4d3239 = new Cesium['Color']();
                                null !== _0x53cd65 && (_0x4d3239['red'] = Cesium[_0x40964a(0x16d)]['clamp'](parseFloat(_0x53cd65[0x1]), 0x0, 0x1),
                                    _0x4d3239[_0x40964a(0x69b)] = Cesium[_0x40964a(0x16d)]['clamp'](parseFloat(_0x53cd65[0x2]), 0x0, 0x1),
                                    _0x4d3239[_0x40964a(0x8f0)] = Cesium[_0x40964a(0x16d)][_0x40964a(0x947)](parseFloat(_0x53cd65[0x3]), 0x0, 0x1),
                                    _0x4d3239[_0x40964a(0x630)] = Cesium[_0x40964a(0x16d)][_0x40964a(0x947)](parseFloat(_0x53cd65[0x4]), 0x0, 0x1));
                                let _0x4a923d = _0x5aff14[_0x40964a(0x9c7)](_0x580277, _0x40964a(0x818), _0x5b10ad);
                                _0x5aff14[_0x40964a(0x1cf)](_0x580277, _0x40964a(0x24e), _0x5b10ad);
                                let _0x2ba014 = _0x5aff14[_0x40964a(0x1cf)](_0x580277, _0x40964a(0xe4), _0x5b10ad);
                                _0x2ba014 = _0x40964a(0x7ad) === _0x2ba014 ? _0x4cb402['FixedZ'] : _0x40964a(0x949) === _0x2ba014 ? _0x4cb402[_0x40964a(0xa1f)] : _0x4cb402[_0x40964a(0x1d2)];
                                let _0x2abbac = Cesium[_0x40964a(0x16d)][_0x40964a(0x4cc)](_0x5aff14['queryNumericValue'](_0x580277, _0x40964a(0xa93), _0x5b10ad))
                                    , _0x33c4a5 = Cesium[_0x40964a(0x16d)][_0x40964a(0x4cc)](_0x5aff14[_0x40964a(0x9c7)](_0x580277, _0x40964a(0x8de), _0x5b10ad))
                                    , _0x3849f9 = Cesium[_0x40964a(0x16d)][_0x40964a(0x4cc)](_0x5aff14['queryNumericValue'](_0x580277, _0x40964a(0x2c5), _0x5b10ad));
                                new Cesium[(_0x40964a(0xa36))](_0x2abbac, _0x33c4a5, _0x3849f9),
                                    _0x5c9f84[_0x40964a(0x93f)] = _0x276c97,
                                    _0x5c9f84[_0x40964a(0x829)] = _0x4a923d,
                                    _0x5c9f84[_0x40964a(0x525)] = _0xbe3a97,
                                    _0x5c9f84[_0x40964a(0x320)] = _0x482127,
                                    _0x5c9f84[_0x40964a(0x824)] = _0x1881f6,
                                    _0x5c9f84[_0x40964a(0x450)] = _0x4d3239,
                                    _0x5c9f84[_0x40964a(0x68e)] = _0xa76d21,
                                    _0x5c9f84['billboardMode'] = _0x2ba014;
                            }
                            let _0x39593c = _0x5aff14[_0x40964a(0x9c7)](_0xf3ecd7, _0x40964a(0x9b4), _0x5b10ad)
                                , _0x508dd7 = _0x5aff14[_0x40964a(0x2fd)](_0xf3ecd7, 'PolygonOffset', _0x5b10ad)
                                , _0x384e47 = _0x5aff14['queryNumericValue'](_0x508dd7, _0x40964a(0x79a), _0x5b10ad)
                                , _0x110552 = _0x5aff14[_0x40964a(0x9c7)](_0x508dd7, 'SlopeScale', _0x5b10ad)
                                , _0x1fb060 = 0x0 !== _0x384e47 && 0x0 !== _0x110552
                                , _0x38766b = _0x5aff14[_0x40964a(0x2fd)](_0xf3ecd7, _0x40964a(0x7e9), _0x5b10ad);
                            return {
                                'name': _0x5f0538,
                                'groupName': _0x47368a,
                                'isS3MB': _0x54181c,
                                'isS3MBlock': _0x2fcc62,
                                'isS3M': _0x26e41d,
                                'style3D': _0x5c9f84,
                                'selectEnable': _0xf7fcf8,
                                'isVisible': _0x3a29a0,
                                'minVisibleAltitude': _0xd6f473,
                                'maxVisibleAltitude': _0x32aa28,
                                'minVisibleDistance': _0x3d3d15,
                                'maxVisibleDistance': _0x18402b,
                                'shadowType': _0x434090,
                                'lodRangeScale': _0x39593c,
                                'polygonOffset': {
                                    'enabled': _0x1fb060,
                                    'units': _0x384e47,
                                    'factor': _0x110552
                                },
                                'brightness': _0x5aff14[_0x40964a(0x9c7)](_0x38766b, _0x40964a(0x94e), _0x5b10ad),
                                'constrast': _0x5aff14[_0x40964a(0x9c7)](_0x38766b, _0x40964a(0x381), _0x5b10ad),
                                'hue': _0x5aff14[_0x40964a(0x9c7)](_0x38766b, 'Hue', _0x5b10ad),
                                'saturation': _0x5aff14[_0x40964a(0x9c7)](_0x38766b, _0x40964a(0x8dc), _0x5b10ad),
                                'gamma': _0x5aff14['queryNumericValue'](_0x38766b, 'Gamma', _0x5b10ad)
                            };
                        }(_0x2054b9);
                        _0x1ba14b(_0x3084af);
                    } catch (_0x446951) {
                        _0x183bf6(_0x2b4159(0x8e1) + _0x446951);
                    }
                }, _0x4faf6c => {
                    const _0x388ea1 = _0x5a7644;
                    _0x183bf6(_0x388ea1(0x13a) + _0x4faf6c);
                }
                );
            }
            );
        }
        Cesium[_0x324b8e(0x4cd)][_0x324b8e(0x74f)][_0x324b8e(0x989)] = function (_0x2f5576, _0x467388) {
            const _0x4f187e = _0x324b8e;
            if (_0x2f5576[_0x4f187e(0xa59)](_0x4f187e(0xea)) > -0x1 && _0x2f5576[_0x4f187e(0xa59)]('realspace') > -0x1) {
                let _0x48b54c = new _0x5b7673(_0x2f5576)
                    , _0x1fa553 = _0x367cef(_0x48b54c['query']);
                _0x48b54c[_0x4f187e(0x2cc)] = void 0x0;
                let _0x4ebb67 = {};
                _0x4ebb67 = {
                    'rooturl': _0x2f5576 = _0x48b54c[_0x4f187e(0x362)](),
                    'type': _0x4f187e(0x6e4),
                    'value': _0x1fa553[_0x4f187e(0x6e4)]
                },
                    _0x4b179a(_0x5cb66c[_0x4f187e(0x25e)]) ? _0x2f5576 in _0x5cb66c['CREDENTIAL'][_0x4f187e(0x697)] || _0x5cb66c[_0x4f187e(0x25e)]['addCredential']([_0x4ebb67]) : _0x5cb66c[_0x4f187e(0x25e)] = new _0x5cb66c([_0x4ebb67]);
            }
            if (_0x4f187e(0x36c) !== _0x2f5576[_0x4f187e(0x3be)](-0x9))
                throw new Cesium[(_0x4f187e(0x335))]('open\x20scene\x20url\x20error!');
            _0x467388 = Cesium[_0x4f187e(0x225)](_0x467388, {});
            var _0xebb635 = _0x2f5576
                , _0x1b689d = _0x467388['subdomains']
                , _0x4de253 = Cesium[_0x4f187e(0x225)](_0x467388['autoSetView'], !0x0)
                , _0x854cf = /({.*?})/g;
            if (Cesium[_0x4f187e(0x14b)](_0x1b689d))
                _0x2f5576 = _0x2f5576[_0x4f187e(0x3ed)](_0x854cf, function (_0x2622b6, _0x2bda4a) {
                    const _0x386821 = _0x4f187e;
                    if (!Cesium[_0x386821(0x14b)](_0x1b689d[_0x386821(0x376)]))
                        throw new Cesium[(_0x386821(0x335))](_0x386821(0x877));
                    if ('{s}' === _0x2bda4a)
                        return _0x1b689d[0x0];
                });
            else {
                if (_0x854cf[_0x4f187e(0x6ae)](_0x2f5576))
                    throw new Cesium[(_0x4f187e(0x335))](_0x4f187e(0x877));
            }
            let _0x1baa51 = _0x2f5576 + '/scenes.json';
            _0x4b179a(_0x5cb66c[_0x4f187e(0x25e)]) && (_0x1baa51 = _0x4b179a(_0x5cb66c[_0x4f187e(0x25e)][_0x4f187e(0x697)][_0x2f5576]) ? _0x5cb66c[_0x4f187e(0x779)](_0x2f5576, _0x1baa51) : _0x5cb66c[_0x4f187e(0x474)](_0x1baa51));
            let _0x212f13 = this
                , _0x4fc744 = this[_0x4f187e(0xd8)];
            return new Promise((_0x1e8571, _0x53c71e) => {
                const _0x2a42cc = _0x4f187e;
                (function (_0x45a7d0) {
                    const _0x59b602 = _0x557c;
                    return Cesium[_0x59b602(0x9c9)][_0x59b602(0x260)](_0x45a7d0)[_0x59b602(0x23a)](_0x45a7d0)[_0x59b602(0x685)](function (_0x5f199a) {
                        const _0x51e1e7 = _0x59b602;
                        if (_0x5f199a[_0x51e1e7(0x376)] < 0x1)
                            return;
                        let _0x4f9f3f = _0x5f199a[0x0];
                        return {
                            'name': _0x4f9f3f[_0x51e1e7(0x770)],
                            'path': _0x4f9f3f[_0x51e1e7(0x873)]
                        };
                    });
                }(_0x1baa51)[_0x2a42cc(0x685)](function (_0x77ab5f) {
                    const _0x119f1e = _0x2a42cc;
                    if (!_0x77ab5f)
                        return void _0x53c71e('scene\x20list\x20response\x20null!');
                    let _0x1c9d5e = _0x77ab5f['path'] + '.json';
                    _0x4b179a(_0x5cb66c['CREDENTIAL']) && (_0x1c9d5e = _0x4b179a(_0x5cb66c['CREDENTIAL'][_0x119f1e(0x697)][_0x2f5576]) ? _0x5cb66c[_0x119f1e(0x779)](_0x2f5576, _0x1c9d5e) : _0x5cb66c['addToken'](_0x1c9d5e)),
                        function (_0x605598) {
                            const _0x2350d1 = _0x119f1e;
                            return Cesium['Resource'][_0x2350d1(0x260)](_0x605598)[_0x2350d1(0x23a)](_0x605598)[_0x2350d1(0x685)](function (_0x2ab00e) {
                                return _0x2ab00e;
                            });
                        }(_0x1c9d5e)[_0x119f1e(0x685)](function (_0x5bf56f) {
                            const _0x528c1d = _0x119f1e;
                            let _0x356812;
                            _0x528c1d(0x3a4) === _0x5bf56f[_0x528c1d(0x27c)] ? (_0x212f13[_0x528c1d(0x265)] = Cesium[_0x528c1d(0x6b8)][_0x528c1d(0x35d)],
                                _0x5bf56f[_0x528c1d(0xd8)]['tilt'] -= Math['PI'],
                                _0x356812 = new Cesium[(_0x528c1d(0x85d))](_0x5bf56f[_0x528c1d(0xd8)]['longitude'], _0x5bf56f['camera'][_0x528c1d(0x21c)], _0x5bf56f[_0x528c1d(0xd8)][_0x528c1d(0x9a0)]),
                                _0x4de253 && _0x4fc744[_0x528c1d(0x10c)]({
                                    'destination': _0x356812,
                                    'orientation': {
                                        'heading': _0x5bf56f[_0x528c1d(0xd8)][_0x528c1d(0x97a)],
                                        'pitch': _0x5bf56f[_0x528c1d(0xd8)][_0x528c1d(0x489)],
                                        'roll': 0x0
                                    },
                                    'convert': !0x1
                                })) : (_0x5bf56f['camera'][_0x528c1d(0x489)] -= 0x5a,
                                    _0x356812 = Cesium[_0x528c1d(0x85d)][_0x528c1d(0xa08)](_0x5bf56f[_0x528c1d(0xd8)]['longitude'], _0x5bf56f[_0x528c1d(0xd8)][_0x528c1d(0x21c)], _0x5bf56f[_0x528c1d(0xd8)]['altitude']),
                                    _0x4de253 && _0x4fc744[_0x528c1d(0x10c)]({
                                        'destination': _0x356812,
                                        'orientation': {
                                            'heading': Cesium[_0x528c1d(0x16d)]['toRadians'](_0x5bf56f[_0x528c1d(0xd8)][_0x528c1d(0x97a)]),
                                            'pitch': Cesium[_0x528c1d(0x16d)][_0x528c1d(0x4cc)](_0x5bf56f['camera'][_0x528c1d(0x489)]),
                                            'roll': 0x0
                                        },
                                        'convert': !0x1
                                    }));
                        }, _0x1ef7c2 => {
                            const _0xef5ea5 = _0x119f1e;
                            _0x53c71e(_0xef5ea5(0x34f) + _0x1ef7c2);
                        }
                        ),
                        function (_0x350752) {
                            const _0x58ebd3 = _0x119f1e;
                            let _0x47305f = _0x350752 + _0x58ebd3(0xab5);
                            return _0x4b179a(_0x5cb66c[_0x58ebd3(0x25e)]) && (_0x47305f = _0x4b179a(_0x5cb66c[_0x58ebd3(0x25e)][_0x58ebd3(0x697)][_0x47305f]) ? _0x5cb66c['addTokenWithKey'](_0x350752, _0x47305f) : _0x5cb66c['addToken'](_0x47305f)),
                                Cesium['Resource'][_0x58ebd3(0x260)](_0x47305f)[_0x58ebd3(0x23a)]()[_0x58ebd3(0x685)](function (_0x274574) {
                                    const _0x4134fa = _0x58ebd3;
                                    let _0x47dfa8 = {
                                        's3m': [],
                                        'imagery': [],
                                        's3mGroup': [],
                                        'terrain': void 0x0
                                    };
                                    for (let _0x576a6a = 0x0, _0x3d7c32 = _0x274574['length']; _0x576a6a < _0x3d7c32; _0x576a6a++) {
                                        let _0x16aedb = _0x274574[_0x576a6a]
                                            , _0x32e94d = _0x16aedb[_0x4134fa(0x7c0)];
                                        _0x4134fa(0xac0) === _0x32e94d ? _0x47dfa8['s3m']['push'](_0x16aedb) : 'ImageFileLayer' === _0x32e94d ? _0x47dfa8['imagery'][_0x4134fa(0x745)](_0x16aedb) : _0x4134fa(0x890) === _0x32e94d ? _0x47dfa8[_0x4134fa(0x77d)] = _0x16aedb : _0x4134fa(0x510) === _0x32e94d && _0x47dfa8[_0x4134fa(0x9a5)][_0x4134fa(0x745)](_0x16aedb);
                                    }
                                    return _0x47dfa8;
                                });
                        }(_0x77ab5f[_0x119f1e(0x873)])[_0x119f1e(0x685)](function (_0x30c642) {
                            const _0x5d8ddd = _0x119f1e;
                            let _0x2a53fd = _0x30c642[_0x5d8ddd(0x591)]
                                , _0x53f1a8 = _0x30c642['imagery']
                                , _0x196dec = _0x30c642['terrain'];
                            _0x30c642[_0x5d8ddd(0x9a5)];
                            let _0x127c1c = _0x77ab5f[_0x5d8ddd(0x873)] + '/layers/'
                                , _0x69af7b = [];
                            for (let _0x5199ce = _0x2a53fd[_0x5d8ddd(0x376)] - 0x1; _0x5199ce >= 0x0; _0x5199ce--) {
                                let _0x33d06f = _0x2a53fd[_0x5199ce]
                                    , _0x400d42 = _0x127c1c + encodeURIComponent(_0x33d06f[_0x5d8ddd(0x770)]) + '/extendxml.xml';
                                _0x4b179a(_0x5cb66c[_0x5d8ddd(0x25e)]) && (_0x400d42 = _0x4b179a(_0x5cb66c['CREDENTIAL'][_0x5d8ddd(0x697)][_0x2f5576]) ? _0x5cb66c['addTokenWithKey'](_0x2f5576, _0x400d42) : _0x5cb66c[_0x5d8ddd(0x474)](_0x400d42)),
                                    function (_0x669393) {
                                        const _0x4ab286 = _0x5d8ddd;
                                        let _0x5a4a17 = _0x97c87b(_0x400d42)[_0x4ab286(0x685)](function (_0x302079) {
                                            const _0xd5e70a = _0x4ab286;
                                            try {
                                                let _0x756bd = _0x2f5576 + _0xd5e70a(0x913) + encodeURIComponent(_0x302079[_0xd5e70a(0x770)]) + _0xd5e70a(0x214);
                                                return _0x302079[_0xd5e70a(0x9a8)] = {
                                                    'subdomains': _0x1b689d,
                                                    'urlScheme': _0xebb635 + _0xd5e70a(0x913) + encodeURIComponent(_0x302079[_0xd5e70a(0x770)]) + '/'
                                                },
                                                    _0x212f13['addS3MTilesLayerByScp'](_0x756bd, _0x302079);
                                            } catch (_0x30b3c7) {
                                                _0x53c71e(_0xd5e70a(0x3e5) + _0x302079['name'] + _0xd5e70a(0x4f0) + _0x30b3c7);
                                            }
                                        }, _0xb7e104 => {
                                            const _0xc7584b = _0x4ab286;
                                            _0x53c71e(_0xc7584b(0xa3e) + _0xb7e104 + _0xc7584b(0x6f9) + _0x33d06f[_0xc7584b(0x770)]);
                                        }
                                        );
                                        _0x69af7b[_0x4ab286(0x745)](_0x5a4a17);
                                    }();
                            }
                            for (var _0x2b8fd8 = _0x53f1a8['length'] - 0x1; _0x2b8fd8 >= 0x0; _0x2b8fd8--) {
                                var _0x2e35ab = new _0x4afa97({
                                    'url': _0x2f5576 + '/datas/' + encodeURIComponent(_0x53f1a8[_0x2b8fd8][_0x5d8ddd(0x770)])
                                });
                                try {
                                    var _0x1fc2dd = _0x212f13[_0x5d8ddd(0x6f7)][_0x5d8ddd(0x1bd)]['addImageryProvider'](_0x2e35ab);
                                    _0x69af7b[_0x5d8ddd(0x745)](_0x1fc2dd);
                                } catch (_0x16ce46) {
                                    _0x53c71e('add\x20imagery\x20layer\x20' + _0x53f1a8[_0x2b8fd8][_0x5d8ddd(0x770)] + _0x5d8ddd(0x4f0) + _0x16ce46);
                                }
                            }
                            if (Cesium['defined'](_0x196dec)) {
                                var _0x2dfb22 = _0x2f5576 + '/datas/' + encodeURIComponent(_0x196dec['name']);
                                try {
                                    _0x212f13['terrainProvider'] = new _0x38e9a2({
                                        'url': _0x2dfb22,
                                        'isSct': !0x0
                                    }),
                                        _0x69af7b[_0x5d8ddd(0x745)](_0x212f13[_0x5d8ddd(0x241)]);
                                } catch (_0x4d4a42) {
                                    _0x53c71e(_0x5d8ddd(0x553) + _0x196dec[_0x5d8ddd(0x770)] + '\x20failed,' + _0x4d4a42);
                                }
                            }
                            Promise[_0x5d8ddd(0x738)](_0x69af7b)[_0x5d8ddd(0x685)](_0x5a9e3b => {
                                _0x1e8571(_0x5a9e3b);
                            }
                            )[_0x5d8ddd(0xa6b)](_0x4a1daa => {
                                const _0x113759 = _0x5d8ddd;
                                _0x53c71e(_0x113759(0x3fd) + _0x4a1daa);
                            }
                            );
                        }, _0x127ed2 => {
                            _0x53c71e('get\x20layer\x20list\x20failed,' + _0x127ed2);
                        }
                        );
                }, _0x5e2e3e => {
                    _0x53c71e('get\x20scene\x20list\x20failed,' + _0x5e2e3e);
                }
                ));
            }
            );
        }
            ;
        let _0x2a0e40 = {};
        function _0xedf85c(_0x5a8e2a) {
            const _0x224107 = _0x324b8e;
            let _0x2f1eee = _0x438ab0();
            if (_0x2a0e40[_0x5a8e2a])
                return _0x2a0e40[_0x5a8e2a];
            let _0xbad1a = _0x5a8e2a + _0x224107(0x5b7);
            _0x4b179a(_0x5cb66c[_0x224107(0x25e)]) && (_0xbad1a = _0x4b179a(_0x5cb66c[_0x224107(0x25e)]['_keymap'][_0x5a8e2a]) ? _0x5cb66c['addTokenWithKey'](_0x5a8e2a, _0xbad1a) : _0x5cb66c[_0x224107(0x474)](_0xbad1a));
            let _0x1709f7 = Cesium[_0x224107(0x9c9)][_0x224107(0x260)](_0xbad1a);
            return _0x2a0e40[_0x5a8e2a] = _0x2f1eee[_0x224107(0x150)],
                _0x1709f7[_0x224107(0x23a)]()[_0x224107(0x685)](_0x156a59 => {
                    const _0x56755f = _0x224107;
                    let _0x16803c = Number(_0x156a59[_0x56755f(0x4c6)])
                        , _0x543f87 = function (_0x5acbec, _0x269eba, _0x1fe4e6) {
                            const _0x3a73ad = _0x56755f;
                            let _0x191335 = new _0x13b83f(_0x5acbec)
                                , _0x2d8e31 = new _0x13b83f(_0x269eba)
                                , _0x3b6dcd = new _0x13b83f(0x1)
                                , _0x425fc4 = new _0x13b83f(0x2)
                                , _0x38ca86 = new _0x13b83f(0x1);
                            for (; _0x2d8e31[_0x3a73ad(0xa91)]() > 0x0;)
                                0x0 === _0x2d8e31[_0x3a73ad(0x126)](_0x425fc4)[_0x3a73ad(0xa91)]() ? (_0x2d8e31 = _0x2d8e31[_0x3a73ad(0x4ed)](_0x425fc4),
                                    _0x191335 = _0x191335[_0x3a73ad(0x8d1)](_0x191335)['mod'](_0x1fe4e6)) : (_0x2d8e31 = _0x2d8e31[_0x3a73ad(0x2ea)](_0x38ca86),
                                        _0x3b6dcd = _0x3b6dcd[_0x3a73ad(0x8d1)](_0x191335)['mod'](_0x1fe4e6));
                            return _0x3b6dcd[_0x3a73ad(0xa91)]();
                        }(Number(_0x156a59[_0x56755f(0x117)]), 0x1694ad7fce84d, 0x8f461e7bf61d5)
                        , _0x145651 = JSON[_0x56755f(0x527)]({
                            'jsessionID': _0x16803c[_0x56755f(0x362)](),
                            'random': _0x543f87[_0x56755f(0x362)]()
                        });
                    Cesium[_0x56755f(0x9c9)][_0x56755f(0x421)]({
                        'url': _0xbad1a,
                        'data': _0x145651,
                        'responseType': _0x56755f(0x74d)
                    })[_0x56755f(0x685)](_0x2ea440 => {
                        const _0x38b2fc = _0x56755f;
                        !0x0 === _0x2ea440['succeed'] ? (_0x2f1eee[_0x38b2fc(0x1d5)](_0x543f87),
                            _0x2a0e40[_0x5a8e2a] = _0x543f87) : _0x2f1eee[_0x38b2fc(0x7aa)](!0x1);
                    }
                        , _0x147c4d => {
                            const _0x1bb8bc = _0x56755f;
                            _0x2f1eee[_0x1bb8bc(0x7aa)](_0x147c4d);
                        }
                    );
                }
                    , _0x343c1f => {
                        const _0xa6369b = _0x224107;
                        _0x2f1eee[_0xa6369b(0x7aa)](_0x343c1f);
                    }
                ),
                _0x2f1eee[_0x224107(0x150)];
        }
        function _0x31cf27(_0x3618db, _0xf1820a) {
            const _0xe590d3 = _0x324b8e;
            Cesium[_0xe590d3(0x5ab)][_0xe590d3(0x157)](_0xf1820a, _0x3618db['_view']),
                Cesium[_0xe590d3(0x5ab)][_0xe590d3(0x1be)](_0xf1820a, _0x3618db[_0xe590d3(0x4d8)]),
                _0x3618db[_0xe590d3(0x6cf)] = !0x0,
                _0x3618db[_0xe590d3(0x6f2)] = !0x0,
                _0x3618db[_0xe590d3(0xa60)] = !0x0,
                _0x3618db[_0xe590d3(0x2d1)] = !0x0,
                _0x3618db[_0xe590d3(0x4a0)] = !0x0,
                _0x3618db[_0xe590d3(0x80f)] = !0x0,
                _0x3618db[_0xe590d3(0x7b0)] = !0x0,
                _0x3618db[_0xe590d3(0x8c8)] = !0x0,
                _0x3618db[_0xe590d3(0x88c)] = !0x0,
                _0x3618db[_0xe590d3(0x453)] = !0x0,
                _0x3618db[_0xe590d3(0x3c4)] = !0x0,
                _0x3618db['_modelViewInfiniteProjectionDirty'] = !0x0,
                _0x3618db['_normalDirty'] = !0x0,
                _0x3618db[_0xe590d3(0x472)] = !0x0,
                _0x3618db[_0xe590d3(0x3af)] = !0x0,
                _0x3618db['_inverseNormal3DDirty'] = !0x0;
        }
        function _0x6f67d5(_0x180aef, _0xa17e5b) {
            const _0x35f41d = _0x324b8e;
            Cesium[_0x35f41d(0x5ab)]['clone'](_0xa17e5b, _0x180aef[_0x35f41d(0x357)]),
                Cesium[_0x35f41d(0x5ab)][_0x35f41d(0x1be)](_0xa17e5b, _0x180aef[_0x35f41d(0xac1)]);
        }
        function _0x3a58cc(_0xe4982b, _0x1c2b26) {
            const _0x4538d8 = _0x324b8e;
            if (null === _0xe4982b || 'object' != typeof _0xe4982b)
                return _0xe4982b;
            _0x1c2b26 = Cesium['defaultValue'](_0x1c2b26, !0x1);
            var _0x471788 = new _0xe4982b[(_0x4538d8(0x124))]();
            for (var _0x131118 in _0xe4982b)
                if (_0xe4982b[_0x4538d8(0x704)](_0x131118)) {
                    var _0x357a81 = _0xe4982b[_0x131118];
                    _0x1c2b26 && (_0x357a81 = _0x3a58cc(_0x357a81, _0x1c2b26)),
                        _0x471788[_0x131118] = _0x357a81;
                }
            return _0x471788;
        }
        function _0x545869(_0x3a2875, _0x252aeb, _0x2f1b18, _0x3509a1, _0x459452, _0x34e4cc, _0x11d727, _0x4b3acc, _0x179bb4, _0x17e407) {
            const _0x312739 = _0x324b8e;
            this['_tweens'] = _0x3a2875,
                this[_0x312739(0x7c9)] = _0x252aeb,
                this[_0x312739(0x78a)] = _0x3a58cc(_0x2f1b18),
                this[_0x312739(0x5f0)] = _0x3a58cc(_0x3509a1),
                this[_0x312739(0x420)] = _0x459452,
                this[_0x312739(0x977)] = _0x34e4cc,
                this[_0x312739(0x20a)] = _0x11d727,
                this[_0x312739(0x2e7)] = _0x4b3acc,
                this['_complete'] = _0x179bb4,
                this[_0x312739(0x941)] = _0x17e407,
                this['needsStart'] = !0x0,
                this[_0x312739(0x9fd)] = function () {
                    const _0x19a493 = _0x312739;
                    this['_tweens'][_0x19a493(0x77c)](this);
                }
                ;
        }
        Cesium[_0x324b8e(0x4cd)][_0x324b8e(0x74f)][_0x324b8e(0x2df)] = function (_0x516be7, _0x344565, _0x564f6e) {
            const _0x5d40a9 = _0x324b8e;
            _0x344565 = _0x344565 || {};
            let _0x113404 = _0x516be7['indexOf'](_0x5d40a9(0x82d));
            if (-0x1 === _0x113404)
                return Promise['reject'](!0x1);
            let _0x32cd47 = _0x516be7['substring'](0x0, _0x113404 + 0xe)
                , _0x36721d = this;
            return _0x4b179a(_0x5cb66c['CREDENTIAL']) && (_0x4b179a(_0x5cb66c[_0x5d40a9(0x25e)][_0x5d40a9(0x697)][_0x516be7]) || (_0x516be7 = _0x5cb66c['addToken'](_0x516be7))),
                new Promise((_0x11d33f, _0xbb51b5) => {
                    const _0x4c8489 = _0x5d40a9;
                    _0xedf85c(_0x32cd47)[_0x4c8489(0x685)](_0x353fbc => {
                        const _0x5d0dbc = _0x4c8489;
                        _0x344565[_0x5d0dbc(0xa62)] = _0x516be7,
                            _0x344565['context'] = _0x36721d[_0x5d0dbc(0x56c)],
                            _0x344565['rss'] = _0x353fbc,
                            _0x344565[_0x5d0dbc(0xa00)] = _0x36721d[_0x5d0dbc(0x5d0)];
                        let _0x17d64f = new _0x2dd123(_0x344565);
                        _0x36721d[_0x5d0dbc(0x51f)]['add'](_0x17d64f, _0x564f6e),
                            _0x36721d[_0x5d0dbc(0x56c)]['reflectFramebuffer'] || (_0x36721d[_0x5d0dbc(0x56c)][_0x5d0dbc(0x273)] = new _0x556604(_0x36721d[_0x5d0dbc(0x56c)]),
                                _0x36721d[_0x5d0dbc(0x42d)] && _0x36721d[_0x5d0dbc(0x42d)][_0x5d0dbc(0x414)](_0x5d0dbc(0x350), _0x36721d[_0x5d0dbc(0x56c)][_0x5d0dbc(0x273)])),
                            _0x11d33f(_0x17d64f);
                    }
                        , _0x373948 => {
                            _0xbb51b5(_0x373948);
                        }
                    );
                }
                );
        }
            ,
            // Cesium[_0x324b8e(0x4cd)][_0x324b8e(0x74f)]['hookPickFunc'] = Cesium['Scene'][_0x324b8e(0x74f)][_0x324b8e(0x821)],
            // Cesium[_0x324b8e(0x4cd)][_0x324b8e(0x74f)][_0x324b8e(0x821)] = function (_0x55942e, _0x1c27d7, _0x544b07) {
            //     const _0x44ebea = _0x324b8e;
            //     let _0x5113f7 = this[_0x44ebea(0x10d)](_0x55942e, _0x1c27d7, _0x544b07);
            //     if (_0x5113f7)
            //         _0x5113f7[_0x44ebea(0x7b3)] && _0x5113f7[_0x44ebea(0x7b3)] instanceof _0x2dd123 && _0x5113f7[_0x44ebea(0x7b3)][_0x44ebea(0xa5f)](_0x5113f7['id']);
            //     else
            //         for (let _0x27f790 = 0x0, _0x3f3fc0 = this[_0x44ebea(0x51f)]['length']; _0x27f790 < _0x3f3fc0; _0x27f790++) {
            //             let _0x5d32cc = this[_0x44ebea(0x51f)][_0x44ebea(0xa61)](_0x27f790);
            //             _0x5d32cc instanceof _0x2dd123 && _0x5d32cc['releaseSelection']();
            //         }
            //     return _0x5113f7;
            // }
            //,
            Cesium[_0x324b8e(0x4cd)][_0x324b8e(0x74f)][_0x324b8e(0x56f)] = Cesium[_0x324b8e(0x4cd)][_0x324b8e(0x74f)]['drillPick'],
            Cesium[_0x324b8e(0x4cd)]['prototype'][_0x324b8e(0x193)] = function (_0x517053, _0x3b0515, _0x56adab, _0x5ae036) {
                const _0x58d6ea = _0x324b8e;
                let _0x1a93b3 = this[_0x58d6ea(0x56f)](_0x517053, _0x3b0515, _0x56adab, _0x5ae036)
                    , _0x5052ea = _0x1a93b3[0x0] && _0x1a93b3[0x0][_0x58d6ea(0x7b3)] && _0x1a93b3[0x0][_0x58d6ea(0x7b3)] instanceof _0x2dd123
                    , _0x17f3ac = []
                    , _0xc452f9 = Object[_0x58d6ea(0x34c)](null);
                if (_0x5052ea) {
                    for (; _0x1a93b3 && Cesium[_0x58d6ea(0x14b)](_0x1a93b3[0x0]);) {
                        let _0x22b760 = _0x1a93b3[0x0];
                        if (_0x17f3ac[_0x58d6ea(0x745)](_0x22b760),
                            _0x22b760['primitive'] instanceof _0x2dd123) {
                            _0x22b760['primitive'][_0x58d6ea(0x60e)]([_0x22b760['id']], !0x1);
                            let _0x14aaf2 = _0x22b760[_0x58d6ea(0x7b3)]['id'];
                            (_0xc452f9[_0x14aaf2] = _0xc452f9[_0x14aaf2] || {})[_0x58d6ea(0xa41)] = _0x22b760[_0x58d6ea(0x7b3)],
                                (_0xc452f9[_0x14aaf2]['ids'] = _0xc452f9[_0x14aaf2][_0x58d6ea(0x99b)] || [])[_0x58d6ea(0x745)](_0x22b760['id']);
                        }
                        _0x1a93b3 = this['hookDrillPickFunc'](_0x517053, _0x3b0515, _0x56adab, _0x5ae036);
                    }
                    for (let _0x48a7d2 in _0xc452f9) {
                        let _0xce68f8 = _0xc452f9[_0x48a7d2];
                        _0xce68f8[_0x58d6ea(0xa41)][_0x58d6ea(0x60e)](_0xce68f8[_0x58d6ea(0x99b)], !0x0);
                    }
                    return _0x17f3ac;
                }
                return _0x1a93b3;
            }
            ,
            Cesium['SkyAtmosphere']['prototype'][_0x324b8e(0x4b9)] = Cesium[_0x324b8e(0x6b3)][_0x324b8e(0x74f)][_0x324b8e(0x4bc)],
            Cesium[_0x324b8e(0x6b3)]['prototype'][_0x324b8e(0x4bc)] = function (_0x45c87b, _0x3f213c) {
                const _0x534ca3 = _0x324b8e;
                let _0x3c8b57 = this[_0x534ca3(0x4b9)](_0x45c87b, _0x3f213c);
                return _0x3c8b57 && _0x45c87b[_0x534ca3(0xd8)][_0x534ca3(0xa21)] && (this[_0x534ca3(0x253)] || (this[_0x534ca3(0x253)] = Cesium[_0x534ca3(0x4ca)][_0x534ca3(0x6bf)]({
                    'cull': {
                        'enabled': !0x0,
                        'face': Cesium[_0x534ca3(0x99f)][_0x534ca3(0x521)]
                    },
                    'blending': Cesium[_0x534ca3(0x586)][_0x534ca3(0x753)],
                    'depthMask': !0x1
                })),
                    _0x3c8b57[_0x534ca3(0x9c1)] = this['reflectRs']),
                    _0x3c8b57;
            }
            ,
            Cesium[_0x324b8e(0x511)][_0x324b8e(0x74f)][_0x324b8e(0x6d7)] = function (_0x304748) {
                const _0x4d2a6f = _0x324b8e;
                let _0x555641 = _0x304748[_0x4d2a6f(0x48f)]
                    , _0x536478 = _0x304748['inverseViewMatrix'];
                _0x304748[_0x4d2a6f(0xa21)] ? (Cesium[_0x4d2a6f(0x5ab)]['multiply'](_0x555641, _0x304748[_0x4d2a6f(0xc6)], _0x64d66b),
                    Cesium['Matrix4'][_0x4d2a6f(0x650)](_0x64d66b, _0x26780f),
                    _0x31cf27(this, _0x64d66b),
                    _0x6f67d5(this, _0x26780f)) : (_0x31cf27(this, _0x555641),
                        _0x6f67d5(this, _0x536478)),
                    function (_0x23326d, _0x46c57b) {
                        const _0x45ad51 = _0x4d2a6f;
                        Cesium[_0x45ad51(0x85d)][_0x45ad51(0x157)](_0x46c57b[_0x45ad51(0x6ee)], _0x23326d['_cameraPosition']),
                            Cesium[_0x45ad51(0x85d)]['clone'](_0x46c57b['directionWC'], _0x23326d[_0x45ad51(0xe7)]),
                            Cesium[_0x45ad51(0x85d)][_0x45ad51(0x157)](_0x46c57b[_0x45ad51(0xa33)], _0x23326d[_0x45ad51(0x2eb)]),
                            Cesium[_0x45ad51(0x85d)]['clone'](_0x46c57b[_0x45ad51(0x31e)], _0x23326d[_0x45ad51(0xa98)]);
                        let _0x18c67f = _0x46c57b[_0x45ad51(0x70d)];
                        Cesium[_0x45ad51(0x14b)](_0x18c67f) ? _0x23326d[_0x45ad51(0x3d5)] = _0x18c67f['height'] : _0x23326d[_0x45ad51(0x3d5)] = -_0x23326d[_0x45ad51(0x583)]['maximumRadius'],
                            _0x23326d[_0x45ad51(0x153)] = !0x0;
                    }(this, _0x304748),
                    this[_0x4d2a6f(0x184)]['x'] = _0x304748['frustum'][_0x4d2a6f(0x797)],
                    this['_entireFrustum']['y'] = _0x304748['frustum'][_0x4d2a6f(0x44a)],
                    this['updateFrustum'](_0x304748['frustum']),
                    this['_orthographicIn3D'] = this[_0x4d2a6f(0x5d0)] !== Cesium[_0x4d2a6f(0x6b8)][_0x4d2a6f(0x372)] && _0x304748['frustum'] instanceof Cesium[_0x4d2a6f(0xad1)];
            }
            ,
            Cesium['UniformState']['prototype'][_0x324b8e(0x404)] = function (_0x183065) {
                const _0x18bbba = _0x324b8e;
                let _0x1a4a8a = _0x183065[_0x18bbba(0x2a6)];
                var _0x2a84ad, _0xa51905;
                Cesium[_0x18bbba(0x5ab)]['clone'](_0x1a4a8a, _0x64d66b),
                    function (_0x9a0da3, _0x3595e4) {
                        const _0xfb0169 = _0x18bbba;
                        if (!_0x9a0da3[_0xfb0169(0x5d2)] || !_0x9a0da3[_0xfb0169(0x330)] || !_0x9a0da3[_0xfb0169(0x350)])
                            return;
                        let _0x41f0f6 = _0x9a0da3[_0xfb0169(0x330)];
                        Cesium[_0xfb0169(0x5ab)][_0xfb0169(0x4b2)](_0x41f0f6, _0x9a0da3[_0xfb0169(0x5d2)], _0x28ad57),
                            _0x3a0746['x'] = (Cesium[_0xfb0169(0x16d)][_0xfb0169(0x2c3)](_0x28ad57[_0xfb0169(0x8ba)]['x']) + _0x3595e4[0x8]) / _0x3595e4[0x0],
                            _0x3a0746['y'] = (Cesium[_0xfb0169(0x16d)]['sign'](_0x28ad57[_0xfb0169(0x8ba)]['y']) + _0x3595e4[0x9]) / _0x3595e4[0x5],
                            _0x3a0746['z'] = -0x1,
                            _0x3a0746['w'] = (0x1 + _0x3595e4[0xa]) / _0x3595e4[0xe],
                            _0x3cf881['x'] = _0x28ad57[_0xfb0169(0x8ba)]['x'],
                            _0x3cf881['y'] = _0x28ad57['normal']['y'],
                            _0x3cf881['z'] = _0x28ad57[_0xfb0169(0x8ba)]['z'],
                            _0x3cf881['w'] = _0x28ad57[_0xfb0169(0xaa5)],
                            Cesium[_0xfb0169(0x747)][_0xfb0169(0x7d7)](_0x3cf881, 0x2 / Cesium[_0xfb0169(0x747)][_0xfb0169(0x908)](_0x3cf881, _0x3a0746), _0x3a0746),
                            _0x3595e4[0x2] = _0x3a0746['x'],
                            _0x3595e4[0x6] = _0x3a0746['y'],
                            _0x3595e4[0xa] = _0x3a0746['z'] + 0x1,
                            _0x3595e4[0xe] = _0x3a0746['w'];
                    }(_0x183065, _0x64d66b),
                    _0x2a84ad = this,
                    _0xa51905 = _0x64d66b,
                    Cesium[_0x18bbba(0x5ab)][_0x18bbba(0x157)](_0xa51905, _0x2a84ad['_projection']),
                    _0x2a84ad[_0x18bbba(0xfc)] = !0x0,
                    _0x2a84ad[_0x18bbba(0x8c8)] = !0x0,
                    _0x2a84ad[_0x18bbba(0x88c)] = !0x0,
                    _0x2a84ad[_0x18bbba(0x453)] = !0x0,
                    _0x2a84ad[_0x18bbba(0x3c4)] = !0x0,
                    Cesium['defined'](_0x183065['infiniteProjectionMatrix']) && function (_0x5de814, _0x516761) {
                        const _0x1d001e = _0x18bbba;
                        Cesium[_0x1d001e(0x5ab)][_0x1d001e(0x157)](_0x516761, _0x5de814[_0x1d001e(0x3e9)]),
                            _0x5de814[_0x1d001e(0x17b)] = !0x0;
                    }(this, _0x183065[_0x18bbba(0x5dd)]),
                    this[_0x18bbba(0xe0)]['x'] = _0x183065['near'],
                    this[_0x18bbba(0xe0)]['y'] = _0x183065[_0x18bbba(0x44a)],
                    this[_0x18bbba(0x32c)] = _0x183065[_0x18bbba(0x44a)] - _0x183065[_0x18bbba(0x797)] + 0x1,
                    this[_0x18bbba(0x707)] = Cesium[_0x18bbba(0x16d)][_0x18bbba(0x3c0)](this[_0x18bbba(0x32c)]),
                    this['_oneOverLog2FarDepthFromNearPlusOne'] = 0x1 / this[_0x18bbba(0x707)],
                    Cesium[_0x18bbba(0x14b)](_0x183065[_0x18bbba(0x66b)]) && (_0x183065 = _0x183065['_offCenterFrustum']),
                    this[_0x18bbba(0x9fe)]['x'] = _0x183065[_0x18bbba(0x129)],
                    this['_frustumPlanes']['y'] = _0x183065['bottom'],
                    this[_0x18bbba(0x9fe)]['z'] = _0x183065[_0x18bbba(0x4b6)],
                    this[_0x18bbba(0x9fe)]['w'] = _0x183065[_0x18bbba(0x3e2)];
            }
            ,
            Cesium['TweenCollection'][_0x324b8e(0x74f)]['update'] = function (_0x488465) {
                const _0xd4c1a7 = _0x324b8e;
                var _0x5aa9fd = this[_0xd4c1a7(0x44b)]
                    , _0x538f76 = 0x0;
                for (_0x488465 = Cesium[_0xd4c1a7(0x14b)](_0x488465) ? _0x488465 / 0.001 : _0xd4c1a7(0x8a8) != typeof performance && 'function' == typeof performance['now'] && isFinite(performance[_0xd4c1a7(0x97b)]()) ? performance[_0xd4c1a7(0x97b)]() : Date[_0xd4c1a7(0x97b)](); _0x538f76 < _0x5aa9fd[_0xd4c1a7(0x376)];) {
                    var _0x317cf8 = _0x5aa9fd[_0x538f76]
                        , _0x6c52ba = _0x317cf8[_0xd4c1a7(0x7c9)];
                    _0x317cf8[_0xd4c1a7(0x3b7)] ? (_0x317cf8[_0xd4c1a7(0x3b7)] = !0x1,
                        _0x6c52ba[_0xd4c1a7(0x6a4)](_0x488465)) : _0x6c52ba['update'](_0x488465) ? _0x538f76++ : (_0x6c52ba['stop'](),
                            _0x5aa9fd[_0xd4c1a7(0x646)](_0x538f76, 0x1));
                }
            }
            ,
            Cesium['TweenCollection'][_0x324b8e(0x74f)][_0x324b8e(0x9cb)] = function (_0x484f28) {
                const _0x15cf3a = _0x324b8e;
                if (_0x484f28 = Cesium['defaultValue'](_0x484f28, Cesium[_0x15cf3a(0x225)][_0x15cf3a(0x8bc)]),
                    !Cesium[_0x15cf3a(0x14b)](_0x484f28['startObject']) || !Cesium['defined'](_0x484f28[_0x15cf3a(0x267)]))
                    throw new Cesium[(_0x15cf3a(0x335))](_0x15cf3a(0xac6));
                if (!Cesium[_0x15cf3a(0x14b)](_0x484f28[_0x15cf3a(0x678)]) || _0x484f28[_0x15cf3a(0x678)] < 0x0)
                    throw new Cesium[(_0x15cf3a(0x335))](_0x15cf3a(0x63a));
                if (0x0 === _0x484f28[_0x15cf3a(0x678)])
                    return Cesium['defined'](_0x484f28[_0x15cf3a(0x9b8)]) && _0x484f28[_0x15cf3a(0x9b8)](),
                        new _0x545869(this);
                var _0x1c2d1b = _0x484f28[_0x15cf3a(0x678)] / 0.001
                    , _0xb93620 = Cesium['defaultValue'](_0x484f28[_0x15cf3a(0x7a9)], 0x0)
                    , _0x58d840 = _0xb93620 / 0.001
                    , _0x5c8dc0 = Cesium[_0x15cf3a(0x225)](_0x484f28[_0x15cf3a(0x5fd)], Cesium[_0x15cf3a(0x668)][_0x15cf3a(0x3de)])
                    , _0x2bd78b = _0x484f28[_0x15cf3a(0x21d)]
                    , _0x494222 = new _0x483403[(_0x15cf3a(0x90d))](_0x2bd78b);
                _0x494222['to'](_0x3a58cc(_0x484f28['stopObject']), _0x1c2d1b),
                    _0x494222[_0x15cf3a(0x7a9)](_0x58d840),
                    _0x494222[_0x15cf3a(0x82b)](_0x5c8dc0),
                    Cesium[_0x15cf3a(0x14b)](_0x484f28[_0x15cf3a(0x4bc)]) && _0x494222[_0x15cf3a(0x50d)](function () {
                        const _0x14f956 = _0x15cf3a;
                        _0x484f28[_0x14f956(0x4bc)](_0x2bd78b);
                    }),
                    _0x494222[_0x15cf3a(0x6b2)](Cesium[_0x15cf3a(0x225)](_0x484f28[_0x15cf3a(0x9b8)], null)),
                    _0x494222[_0x15cf3a(0x24b)](Cesium['defaultValue'](_0x484f28['_repeat'], 0x0));
                var _0x20e36a = new _0x545869(this, _0x494222, _0x484f28[_0x15cf3a(0x21d)], _0x484f28[_0x15cf3a(0x267)], _0x484f28[_0x15cf3a(0x678)], _0xb93620, _0x5c8dc0, _0x484f28[_0x15cf3a(0x4bc)], _0x484f28['complete'], _0x484f28[_0x15cf3a(0x941)]);
                return this[_0x15cf3a(0x44b)][_0x15cf3a(0x745)](_0x20e36a),
                    _0x20e36a;
            }
            ,
            Cesium[_0x324b8e(0x34b)][_0x324b8e(0x74f)][_0x324b8e(0x77c)] = function (_0x3900e6) {
                const _0x56d672 = _0x324b8e;
                if (!Cesium[_0x56d672(0x14b)](_0x3900e6))
                    return !0x1;
                var _0x17986b = this['_tweens'][_0x56d672(0xa59)](_0x3900e6);
                return -0x1 !== _0x17986b && (_0x3900e6[_0x56d672(0x7c9)][_0x56d672(0x973)](),
                    Cesium[_0x56d672(0x14b)](_0x3900e6['cancel']) && _0x3900e6[_0x56d672(0x941)](),
                    this[_0x56d672(0x44b)][_0x56d672(0x646)](_0x17986b, 0x1),
                    !0x0);
            }
            ,
            Cesium[_0x324b8e(0x85c)][_0x324b8e(0x74f)][_0x324b8e(0x8aa)] = Cesium[_0x324b8e(0x85c)]['prototype'][_0x324b8e(0x5f7)],
            Cesium['Cesium3DTileset'][_0x324b8e(0x74f)]['loadTileset'] = function (_0x281f75, _0x195d51, _0x428b91) {
                const _0x5e60cf = _0x324b8e;
                return -0x1 !== _0x281f75['request'][_0x5e60cf(0xa62)]['indexOf'](_0x5e60cf(0x7da)) && (_0x281f75[_0x5e60cf(0xa62)] = _0x281f75[_0x5e60cf(0xa62)][_0x5e60cf(0x3ed)](_0x5e60cf(0x732), _0x5e60cf(0x391)),
                    this['isSuperMapiServer'] = !0x0),
                    this[_0x5e60cf(0x8aa)](_0x281f75, _0x195d51, _0x428b91);
            }
            ,
            Cesium[_0x324b8e(0x498)][_0x324b8e(0x74f)][_0x324b8e(0x93d)] = Cesium['Cesium3DTile'][_0x324b8e(0x74f)][_0x324b8e(0x9a7)],
            Cesium[_0x324b8e(0x498)][_0x324b8e(0x74f)]['requestContent'] = function () {
                const _0x4f897f = _0x324b8e;
                return this['_tileset']['isSuperMapiServer'] && (this[_0x4f897f(0x467)][_0x4f897f(0xa62)] = this['_contentResource']['url'][_0x4f897f(0x3ed)](/\+/g, _0x4f897f(0x1b2))),
                    this[_0x4f897f(0x93d)]();
            }
            ,
            Cesium[_0x324b8e(0x88a)][_0x324b8e(0x4e1)] = Cesium['computeFlyToLocationForRectangle']['_sampleTerrainMostDetailed'],
            Cesium[_0x324b8e(0x88a)][_0x324b8e(0x291)] = function (_0x223bc9, _0x28e61e) {
                const _0x553e14 = _0x324b8e;
                return Cesium[_0x553e14(0x88a)][_0x553e14(0x4e1)](_0x223bc9, _0x28e61e)[_0x553e14(0x685)](_0x20c91f => {
                    const _0x4544b8 = _0x553e14;
                    let _0x1eb1b3 = _0x20c91f;
                    return _0x1eb1b3[_0x4544b8(0xa64)](_0x4d23fb => {
                        const _0x45eb31 = _0x4544b8;
                        null == _0x4d23fb[_0x45eb31(0x88d)] && (_0x4d23fb[_0x45eb31(0x88d)] = 0x0);
                    }
                    ),
                        Promise[_0x4544b8(0x1d5)](_0x1eb1b3);
                }
                );
            }
            ;
        var _0x121372 = Object[_0x324b8e(0x3e6)]({
            'NONE': 0x0,
            'CATMULL_ROM': 0x1
        })
            , _0x306bf3 = Object[_0x324b8e(0x3e6)]({
                'StopPause': 'StopPause',
                'StopAround': _0x324b8e(0x6f4)
            });
        const _0x23ce4d = Adapter[_0x324b8e(0x225)];
        function _0x1e4176(_0x12c863) {
            const _0x26e96f = _0x324b8e;
            this[_0x26e96f(0x420)] = _0x23ce4d(_0x12c863['duration'], 0xa),
                this[_0x26e96f(0x7dd)] = _0x23ce4d(_0x12c863['waitTime'], 0x0),
                this[_0x26e96f(0x935)] = _0x12c863['point'],
                this[_0x26e96f(0x682)] = _0x23ce4d(_0x12c863['heading'], 0x0),
                this[_0x26e96f(0x441)] = _0x23ce4d(_0x12c863['tilt'], 0x0),
                this[_0x26e96f(0x8e7)] = _0x12c863[_0x26e96f(0x6bc)],
                this[_0x26e96f(0xa06)] = _0x23ce4d(_0x12c863[_0x26e96f(0x131)], 0x0),
                this[_0x26e96f(0x5a5)] = _0x12c863[_0x26e96f(0x2fa)] || _0x306bf3['StopPause'],
                this[_0x26e96f(0x227)] = _0x23ce4d(_0x12c863[_0x26e96f(0xa86)], 0x0),
                this[_0x26e96f(0x5db)] = void 0x0,
                this['_index'] = _0x23ce4d(_0x12c863['index'], 0x0),
                this[_0x26e96f(0x417)] = void 0x0,
                this[_0x26e96f(0x4e0)] = void 0x0,
                this[_0x26e96f(0x621)] = _0x23ce4d(_0x12c863[_0x26e96f(0x1fa)], !0x0);
        }
        Object[_0x324b8e(0xa38)](_0x1e4176[_0x324b8e(0x74f)], {
            'duration': {
                'get': function () {
                    const _0x1f787c = _0x324b8e;
                    return this[_0x1f787c(0x420)];
                },
                'set': function (_0x5625af) {
                    const _0xe128f8 = _0x324b8e;
                    _0x5625af && (this[_0xe128f8(0x420)] = _0x5625af);
                }
            },
            'waitTime': {
                'get': function () {
                    return this['_waitTime'];
                },
                'set': function (_0x5e78da) {
                    const _0xafa143 = _0x324b8e;
                    _0x5e78da && !this[_0xafa143(0x984)] && (this[_0xafa143(0x7dd)] = _0x5e78da);
                }
            },
            'heading': {
                'get': function () {
                    const _0x54343e = _0x324b8e;
                    return this[_0x54343e(0x682)];
                },
                'set': function (_0x278ca7) {
                    const _0x31fc8c = _0x324b8e;
                    _0x278ca7 && (this[_0x31fc8c(0x682)] = _0x278ca7);
                }
            },
            'tilt': {
                'get': function () {
                    const _0x1b875d = _0x324b8e;
                    return this[_0x1b875d(0x441)];
                },
                'set': function (_0x123da8) {
                    const _0xec8a4 = _0x324b8e;
                    _0x123da8 && (this[_0xec8a4(0x441)] = _0x123da8);
                }
            },
            'stopName': {
                'get': function () {
                    const _0xc31ad9 = _0x324b8e;
                    return this[_0xc31ad9(0x8e7)];
                },
                'set': function (_0x57042d) {
                    const _0x433515 = _0x324b8e;
                    _0x57042d && (this[_0x433515(0x8e7)] = _0x57042d);
                }
            },
            'point': {
                'get': function () {
                    const _0x4fe7c1 = _0x324b8e;
                    return this[_0x4fe7c1(0x935)];
                },
                'set': function (_0x451e38) {
                    const _0x144a3a = _0x324b8e;
                    this[_0x144a3a(0x935)] = _0x451e38;
                }
            },
            'speed': {
                'get': function () {
                    const _0x2462ac = _0x324b8e;
                    return this[_0x2462ac(0xa06)];
                },
                'set': function (_0x249b90) {
                    const _0x147cbb = _0x324b8e;
                    _0x249b90 && (this[_0x147cbb(0xa06)] = _0x249b90);
                }
            },
            'stopPlayMode': {
                'get': function () {
                    const _0x538efe = _0x324b8e;
                    return this[_0x538efe(0x5a5)];
                },
                'set': function (_0x30e122) {
                    const _0x53b6de = _0x324b8e;
                    _0x30e122 && (this[_0x53b6de(0x5a5)] = _0x30e122);
                }
            },
            'surroundDuration': {
                'get': function () {
                    const _0x566a66 = _0x324b8e;
                    return this[_0x566a66(0x227)];
                },
                'set': function (_0x53b273) {
                    const _0x19f15c = _0x324b8e;
                    _0x53b273 && (this[_0x19f15c(0x227)] = _0x53b273);
                }
            },
            'index': {
                'get': function () {
                    const _0x12aadf = _0x324b8e;
                    return this[_0x12aadf(0x6c5)];
                }
            },
            'promise': {
                'get': function () {
                    return this['_promise'];
                },
                'set': function (_0x336911) {
                    const _0x17c92d = _0x324b8e;
                    _0x336911 && (this[_0x17c92d(0x5db)] = _0x336911);
                }
            }
        });
        var _0x36e6c1 = Object[_0x324b8e(0x3e6)]({
            'Smoothly': 0x0,
            'Directly': 0x1
        });
        const _0x145e49 = Adapter['DeveloperError']
            , _0x51a232 = Adapter[_0x324b8e(0x668)]
            , _0x446fab = Adapter['defined']
            , _0x44cfea = Adapter[_0x324b8e(0x225)]
            , _0x4e4e18 = Adapter[_0x324b8e(0x85d)]
            , _0x40470e = 0x0
            , _0x302e9a = 0x1
            , _0xc9d14d = 0x2
            , _0x1945c5 = 0x3;
        function _0x71f3de(_0x491407) {
            const _0x455d2c = _0x324b8e
                , _0x535fb4 = _0x491407[_0x455d2c(0x80b)]
                , _0x17be78 = _0x491407['routes'];
            if (!_0x535fb4)
                throw new _0x145e49(_0x455d2c(0x91f));
            if (!_0x17be78)
                throw new _0x145e49(_0x455d2c(0x379));
            this[_0x455d2c(0x9b6)] = _0x17be78,
                this[_0x455d2c(0x1d8)] = _0x535fb4,
                this[_0x455d2c(0x468)] = 0x0,
                this[_0x455d2c(0x758)] = 0x0,
                this[_0x455d2c(0x843)] = void 0x0,
                this[_0x455d2c(0x39b)] = new Adapter[(_0x455d2c(0x425))](),
                this[_0x455d2c(0x997)] = 0x1,
                this[_0x455d2c(0x954)] = _0xc9d14d,
                this[_0x455d2c(0x7a7)] = _0x36e6c1[_0x455d2c(0x89d)],
                this[_0x455d2c(0x5fc)] = _0x121372[_0x455d2c(0x302)];
        }
        function _0x4dbe0b(_0x1080b8, _0x56d6e0, _0x32986c) {
            const _0x46a8b9 = _0x324b8e;
            _0x1080b8[_0x46a8b9(0x954)] = _0x40470e;
            const _0x436fa0 = _0x1080b8['_scene'][_0x46a8b9(0xd8)]
                , _0x3795cb = _0x1080b8['_routes'][_0x46a8b9(0x8e9)][0x0]
                , _0x3705ca = _0x3795cb[_0x46a8b9(0x243)]
                , _0x59cc23 = _0x1080b8[_0x46a8b9(0x5fc)]
                , _0x34e26e = _0x3795cb[_0x46a8b9(0x208)]
                , _0x239b54 = _0x3795cb[_0x46a8b9(0x81e)]
                , _0x308f6a = _0x3795cb[_0x46a8b9(0x569)]
                , _0x5c1889 = _0x3795cb[_0x46a8b9(0x495)]
                , _0x222755 = _0x44cfea(_0x3795cb[_0x46a8b9(0xa7f)][_0x46a8b9(0xa61)](_0x56d6e0), _0x3795cb[_0x46a8b9(0xa7f)]['_array'][_0x56d6e0]);
            if (!_0x222755)
                return !0x0 === _0x34e26e ? (_0x56d6e0 = _0x3795cb['_stopCollection'][_0x46a8b9(0x32b)][0x0][_0x46a8b9(0x676)],
                    _0x446fab(_0x3705ca) && (_0x3705ca[_0x46a8b9(0x1c3)] = 0x0),
                    _0x1080b8[_0x46a8b9(0x758)] = _0x56d6e0,
                    _0x1080b8[_0x46a8b9(0x1bc)] = _0x56d6e0,
                    void _0x4dbe0b(_0x1080b8, _0x56d6e0)) : void (_0x1080b8[_0x46a8b9(0x954)] = _0xc9d14d);
            if (_0x56d6e0 === _0x1080b8['currentStopIndex']) {
                const _0x126907 = _0x446fab(_0x222755['direction']) && !_0x308f6a ? {
                    'direction': _0x222755['direction'],
                    'up': _0x222755['up']
                } : {
                    'heading': _0x222755[_0x46a8b9(0x97a)],
                    'pitch': _0x222755['tilt'],
                    'roll': 0x0
                };
                _0x436fa0[_0x46a8b9(0x10c)]({
                    'destination': _0x222755[_0x46a8b9(0x154)],
                    'orientation': _0x126907,
                    'convert': _0x222755[_0x46a8b9(0x621)]
                }),
                    _0x56d6e0++,
                    _0x4dbe0b(_0x1080b8, _0x56d6e0);
            } else {
                if (_0x222755[_0x46a8b9(0x469)]) {
                    const _0x23e87e = _0x446fab(_0x222755[_0x46a8b9(0x264)]) && !_0x308f6a ? {
                        'direction': _0x222755[_0x46a8b9(0x264)],
                        'up': _0x222755['up']
                    } : {
                        'heading': _0x222755['heading'],
                        'pitch': _0x222755[_0x46a8b9(0x489)],
                        'roll': 0x0
                    };
                    return _0x436fa0[_0x46a8b9(0x10c)]({
                        'destination': _0x222755[_0x46a8b9(0x154)],
                        'orientation': _0x23e87e,
                        'convert': _0x222755[_0x46a8b9(0x621)]
                    }),
                        void _0x3197b9(_0x1080b8, _0x222755, _0x56d6e0);
                }
                const _0x4c2d84 = _0x44cfea(_0x3795cb[_0x46a8b9(0xa7f)][_0x46a8b9(0xa61)](_0x56d6e0 - 0x1), _0x3795cb[_0x46a8b9(0xa7f)][_0x46a8b9(0xa61)](_0x222755['_preStopIndex']));
                _0x446fab(_0x32986c) && (_0x4c2d84 = _0x32986c);
                const _0x8ed240 = _0x4c2d84[_0x46a8b9(0x9a0)] < _0x222755[_0x46a8b9(0x9a0)] ? _0x4c2d84['altitude'] : _0x222755[_0x46a8b9(0x9a0)];
                let _0x22da59;
                if (_0x4c2d84[_0x46a8b9(0x2fa)] === _0x306bf3['StopAround'])
                    _0x22da59 = _0x4c2d84[_0x46a8b9(0xa86)];
                else {
                    if (_0x446fab(_0x32986c)) {
                        const _0x42857b = _0x4e4e18[_0x46a8b9(0xaa5)](_0x32986c[_0x46a8b9(0x154)], _0x222755[_0x46a8b9(0x154)]);
                        _0x4c2d84[_0x46a8b9(0x678)] = _0x42857b / _0x4c2d84[_0x46a8b9(0x131)];
                    }
                    _0x22da59 = _0x4c2d84[_0x46a8b9(0x678)];
                }
                _0x22da59 /= _0x1080b8[_0x46a8b9(0x997)];
                const _0x27bf85 = _0x446fab(_0x222755[_0x46a8b9(0x264)]) && !_0x308f6a ? {
                    'direction': _0x222755[_0x46a8b9(0x264)],
                    'up': _0x222755['up']
                } : {
                    'heading': _0x222755['heading'],
                    'pitch': _0x222755[_0x46a8b9(0x489)],
                    'roll': 0x0
                }
                    , _0x3385b8 = !0x1;
                _0x1080b8[_0x46a8b9(0x7a7)] === _0x36e6c1[_0x46a8b9(0x466)] && _0x446fab(_0x4c2d84[_0x46a8b9(0x264)]) && (_0x4c2d84['direction'],
                    _0x4c2d84['up'],
                    _0x3385b8 = !0x0),
                    _0x436fa0[_0x46a8b9(0x47d)]({
                        'convert': _0x222755[_0x46a8b9(0x621)],
                        'destination': _0x222755['point'],
                        'orientation': _0x27bf85,
                        'maximumHeight': _0x8ed240,
                        'duration': _0x22da59,
                        'headingFree': _0x239b54,
                        'pitchFree': _0x308f6a,
                        'altitudeFree': _0x5c1889,
                        'directTurning': _0x3385b8,
                        'catmullRomSpline': _0x3705ca,
                        'preStopIndex': _0x56d6e0 - 0x1,
                        'interpolationMode': _0x59cc23,
                        'easingFunction': _0x51a232[_0x46a8b9(0x3de)],
                        'complete': function () {
                            _0x3197b9(_0x1080b8, _0x222755, _0x56d6e0);
                        }
                    });
            }
        }
        let _0x125b49;
        function _0x3197b9(_0x1986e3, _0x18baba, _0x3f80eb) {
            const _0x620686 = _0x324b8e;
            if (_0x125b49 && clearTimeout(_0x125b49),
                _0x1986e3['_dynamicCurrentStopIndex'] = _0x18baba[_0x620686(0x6c5)],
                _0x3f80eb = _0x44cfea(_0x18baba['_nextStopIndex'], _0x18baba[_0x620686(0x6c5)] + 0x1),
                _0x1986e3[_0x620686(0x39b)]['raiseEvent'](_0x18baba),
                _0x18baba['promise'])
                _0x18baba[_0x620686(0x150)][_0x620686(0x685)](function () {
                    let _0x36ba9f = _0x18baba['waitTime'];
                    _0x36ba9f > 0x0 ? setTimeout(function () {
                        _0x4dbe0b(_0x1986e3, _0x3f80eb);
                    }, 0x3e8 * _0x36ba9f) : _0x4dbe0b(_0x1986e3, _0x3f80eb);
                });
            else {
                let _0x1fbfa2 = _0x18baba[_0x620686(0x165)];
                _0x1fbfa2 > 0x0 ? (_0x1986e3['_flyStatus'] = _0x1945c5,
                    _0x125b49 = setTimeout(function () {
                        const _0x1a8baa = _0x620686;
                        _0x1986e3[_0x1a8baa(0x954)] === _0x1945c5 && (_0x1986e3['_flyStatus'] = _0x40470e,
                            _0x4dbe0b(_0x1986e3, _0x3f80eb));
                    }, 0x3e8 * _0x1fbfa2)) : _0x4dbe0b(_0x1986e3, _0x3f80eb);
            }
        }
        function _0x3bcfa6(_0x180146, _0x482313) {
            const _0x30f685 = _0x324b8e
                , _0xa41e82 = _0x482313[_0x30f685(0x157)]()
                , _0x53a9bf = _0x180146['clone']();
            _0x53a9bf = Cesium['Cartesian3'][_0x30f685(0x7bc)](_0x53a9bf, _0x53a9bf),
                Math[_0x30f685(0xa8b)](Cesium['Cartesian3']['dot'](_0x53a9bf, _0xa41e82)) >= 0x1 && (_0x53a9bf = Math[_0x30f685(0xa8b)](Cesium['Cartesian3'][_0x30f685(0x908)](_0xa41e82, Cesium[_0x30f685(0x85d)][_0x30f685(0x4ce)])) < 0x1 ? Cesium[_0x30f685(0x85d)][_0x30f685(0x157)](Cesium['Cartesian3'][_0x30f685(0x4ce)], _0x53a9bf) : Cesium[_0x30f685(0x85d)]['clone'](Cesium[_0x30f685(0x85d)][_0x30f685(0x662)], _0x53a9bf));
            const _0x1f1043 = new Cesium[(_0x30f685(0x85d))]();
            return Cesium[_0x30f685(0x85d)][_0x30f685(0x695)](_0x53a9bf, _0xa41e82, _0x1f1043),
                _0x1f1043 = Cesium[_0x30f685(0x85d)][_0x30f685(0x7bc)](_0x1f1043, _0x1f1043),
                Cesium[_0x30f685(0x85d)][_0x30f685(0x695)](_0xa41e82, _0x1f1043, _0x53a9bf),
                _0x53a9bf = Cesium[_0x30f685(0x85d)][_0x30f685(0x7bc)](_0x53a9bf, _0x53a9bf),
                _0x53a9bf;
        }
        Object['defineProperties'](_0x71f3de[_0x324b8e(0x74f)], {
            'routes': {
                'get': function () {
                    const _0x147ef5 = _0x324b8e;
                    return this[_0x147ef5(0x9b6)];
                },
                'set': function (_0x2b1923) {
                    const _0x2c2d2e = _0x324b8e;
                    _0x2b1923 && (this[_0x2c2d2e(0x9b6)] = _0x2b1923);
                }
            },
            'stopArrived': {
                'get': function () {
                    return this['_stopArrived'];
                }
            },
            'currentStopIndex': {
                'get': function () {
                    const _0x52711b = _0x324b8e
                        , _0x3bc54f = this[_0x52711b(0x9b6)][_0x52711b(0x8e9)][0x0]['_stopCollection']['get'](this[_0x52711b(0x468)]);
                    return _0x446fab(_0x3bc54f) || (this[_0x52711b(0x758)] = this[_0x52711b(0x468)] = this[_0x52711b(0x9b6)][_0x52711b(0x8e9)][0x0][_0x52711b(0xa7f)]['_array'][0x0][_0x52711b(0x676)]),
                        this['_currentStopIndex'];
                },
                'set': function (_0x1968e6) {
                    const _0xe333f9 = _0x324b8e;
                    if (_0x446fab(_0x1968e6) && 0x1 == this[_0xe333f9(0x9b6)][_0xe333f9(0x84b)]) {
                        const _0x538878 = this['_routes']['routes'][0x0][_0xe333f9(0x883)]['length'] - 0x1;
                        _0x1968e6 = (_0x1968e6 = _0x1968e6 > _0x538878 ? _0x538878 : _0x1968e6) < 0x0 ? 0x0 : _0x1968e6,
                            this[_0xe333f9(0x468)] = _0x1968e6;
                    }
                }
            },
            'currentRoute': {
                'get': function () {
                    const _0x47fac6 = _0x324b8e;
                    if (this[_0x47fac6(0x9b6)][_0x47fac6(0x84b)])
                        return this[_0x47fac6(0x9b6)]['routes'][0x0];
                }
            },
            'readyPromise': {
                'get': function () {
                    const _0x13afc8 = _0x324b8e;
                    return this[_0x13afc8(0x9b6)][_0x13afc8(0x49f)];
                }
            },
            'playRate': {
                'get': function () {
                    const _0x2abdcd = _0x324b8e;
                    return this[_0x2abdcd(0x997)];
                },
                'set': function (_0x27948b) {
                    const _0x2d50c9 = _0x324b8e;
                    if (_0x27948b && 0x0 !== _0x27948b && this[_0x2d50c9(0x997)] !== _0x27948b && (this[_0x2d50c9(0x997)] = _0x27948b,
                        this['_flyStatus'] === _0x40470e)) {
                        this[_0x2d50c9(0x1d8)][_0x2d50c9(0xd8)][_0x2d50c9(0x518)]();
                        const _0x600956 = this[_0x2d50c9(0x9b6)][_0x2d50c9(0x8e9)][0x0][_0x2d50c9(0xa61)](this['_dynamicCurrentStopIndex'])
                            , _0x20b017 = new _0x1e4176({});
                        for (let _0x546cd8 in _0x600956)
                            _0x20b017[_0x546cd8] = _0x600956[_0x546cd8];
                        _0x20b017[_0x2d50c9(0x154)] = this['_scene'][_0x2d50c9(0xd8)]['_position'],
                            _0x4dbe0b(this, this[_0x2d50c9(0x758)] + 0x1, _0x20b017);
                    }
                }
            },
            'turningMode': {
                'get': function () {
                    const _0x4f8189 = _0x324b8e;
                    return this[_0x4f8189(0x7a7)];
                },
                'set': function (_0x2f5c8f) {
                    const _0x28d37c = _0x324b8e;
                    this[_0x28d37c(0x7a7)] = _0x2f5c8f;
                }
            },
            'interpolationMode': {
                'get': function () {
                    return this['_interpolationMode'];
                },
                'set': function (_0x547c38) {
                    this['_interpolationMode'] = _0x547c38;
                }
            }
        }),
            _0x71f3de['prototype'][_0x324b8e(0x20f)] = function () {
                const _0x2c7960 = _0x324b8e;
                if (this['currentRoute'] && this[_0x2c7960(0x954)] !== _0x40470e) {
                    if (this['_flyStatus'] === _0x302e9a || this[_0x2c7960(0x954)] === _0x1945c5)
                        this[_0x2c7960(0x843)] && this['_scene'][_0x2c7960(0xd8)][_0x2c7960(0x590)] ? (this[_0x2c7960(0x843)][_0x2c7960(0x7c9)][_0x2c7960(0x6f0)](),
                            this[_0x2c7960(0x954)] = _0x40470e) : _0x4dbe0b(this, this['_dynamicCurrentStopIndex'] + 0x1);
                    else {
                        if (this['currentStopIndex'] >= this[_0x2c7960(0x9b6)]['routes'][0x0][_0x2c7960(0x883)][this[_0x2c7960(0x9b6)]['routes'][0x0][_0x2c7960(0x883)][_0x2c7960(0x376)] - 0x1][_0x2c7960(0x676)])
                            return void (this['_flyStatus'] = _0xc9d14d);
                        _0x4dbe0b(this, this[_0x2c7960(0x1bc)]);
                    }
                }
            }
            ,
            _0x71f3de[_0x324b8e(0x74f)][_0x324b8e(0x237)] = function () {
                const _0x9e4af9 = _0x324b8e;
                this[_0x9e4af9(0x954)] === _0x40470e ? (this[_0x9e4af9(0x843)] = this[_0x9e4af9(0x1d8)][_0x9e4af9(0xd8)][_0x9e4af9(0x590)],
                    this[_0x9e4af9(0x843)] && this[_0x9e4af9(0x843)][_0x9e4af9(0x7c9)] && this[_0x9e4af9(0x843)][_0x9e4af9(0x7c9)][_0x9e4af9(0x237)](),
                    this[_0x9e4af9(0x954)] = _0x302e9a) : this['_flyStatus'] === _0x1945c5 && (this[_0x9e4af9(0x954)] = _0x302e9a);
            }
            ,
            _0x71f3de[_0x324b8e(0x74f)][_0x324b8e(0x973)] = function () {
                const _0xe6dbb8 = _0x324b8e;
                this['_currentTween'] = this[_0xe6dbb8(0x1d8)][_0xe6dbb8(0x769)][_0xe6dbb8(0xa61)](0x0),
                    this[_0xe6dbb8(0x843)] && this['_flyStatus'] !== _0xc9d14d ? (this[_0xe6dbb8(0x843)][_0xe6dbb8(0x9fd)](),
                        this[_0xe6dbb8(0x954)] = _0xc9d14d,
                        this[_0xe6dbb8(0x843)] = void 0x0) : this[_0xe6dbb8(0x954)] === _0x1945c5 && (this['_flyStatus'] = _0xc9d14d),
                    this[_0xe6dbb8(0x758)] = this[_0xe6dbb8(0x468)];
            }
            ,
            _0x71f3de[_0x324b8e(0x74f)]['viewToStop'] = function (_0x49f1e0) {
                const _0x9a7691 = _0x324b8e;
                if (_0x49f1e0 && this[_0x9a7691(0x954)] !== _0x40470e) {
                    const _0x4c0d3b = this['_scene'][_0x9a7691(0xd8)]
                        , _0x10e962 = _0x446fab(_0x49f1e0[_0x9a7691(0x264)]) ? {
                            'direction': _0x49f1e0[_0x9a7691(0x264)],
                            'up': _0x49f1e0['up']
                        } : {
                            'heading': _0x49f1e0[_0x9a7691(0x97a)],
                            'pitch': _0x49f1e0['tilt'],
                            'roll': 0x0
                        };
                    _0x4c0d3b[_0x9a7691(0x10c)]({
                        'destination': _0x49f1e0[_0x9a7691(0x154)],
                        'orientation': _0x10e962,
                        'convert': _0x49f1e0[_0x9a7691(0x621)]
                    }),
                        this[_0x9a7691(0x758)] = _0x49f1e0[_0x9a7691(0x676)];
                }
            }
            ,
            _0x71f3de[_0x324b8e(0x74f)]['getAllRouteStops'] = function () {
                const _0x2f15ff = _0x324b8e;
                return this[_0x2f15ff(0x7fe)] ? this['currentRoute']['stopCollection'] : [];
            }
            ;
        const _0x1de54c = Adapter['DeveloperError']
            , _0x186cae = Adapter[_0x324b8e(0x85d)]
            , _0xa6fee2 = Adapter[_0x324b8e(0x225)]
            , _0x42633a = Adapter[_0x324b8e(0x14b)]
            , _0x1b1d8c = Adapter[_0x324b8e(0x16d)]
            , _0x38d7ac = Adapter['Transforms']
            , _0x1d55d0 = Adapter[_0x324b8e(0x869)];
        function _0x249d92(_0x44137a) {
            const _0x3abc10 = _0x324b8e;
            _0x44137a = _0x44137a || {},
                this[_0x3abc10(0xa7f)] = new _0x1d55d0(),
                this[_0x3abc10(0xf8)] = _0xa6fee2(_0x44137a[_0x3abc10(0x729)], !0x1),
                this['_stopMarkCollection'] = [],
                this[_0x3abc10(0xe8)] = _0xa6fee2(_0x44137a[_0x3abc10(0x208)], !0x1),
                this[_0x3abc10(0x176)] = _0xa6fee2(_0x44137a[_0x3abc10(0x4ae)], !0x1),
                this['_lineEntity'] = void 0x0,
                this[_0x3abc10(0x602)] = _0xa6fee2(_0x44137a['routeName'], ''),
                this[_0x3abc10(0xa06)] = _0xa6fee2(_0x44137a['speed'], 0x32),
                this[_0x3abc10(0x50f)] = _0xa6fee2(_0x44137a[_0x3abc10(0x115)], !0x1),
                this[_0x3abc10(0x62a)] = _0xa6fee2(_0x44137a[_0x3abc10(0x478)], 0x0),
                this[_0x3abc10(0x567)] = !this[_0x3abc10(0x50f)] && _0xa6fee2(_0x44137a[_0x3abc10(0x81e)], !0x1),
                this['_isTiltFree'] = _0xa6fee2(_0x44137a[_0x3abc10(0x569)], !0x1),
                this[_0x3abc10(0x7b5)] = _0xa6fee2(_0x44137a['isAltitudeFree'], !0x1),
                this[_0x3abc10(0x792)] = _0x44137a['entityCollection'],
                this['_catmullRomSpline'] = void 0x0,
                this[_0x3abc10(0x610)] = !0x1,
                this[_0x3abc10(0x2a0)] = _0xa6fee2(_0x44137a['stopsInfo'], {}),
                this[_0x3abc10(0x6ca)] = [],
                this[_0x3abc10(0x8e4)] = [];
        }
        Object[_0x324b8e(0xa38)](_0x249d92[_0x324b8e(0x74f)], {
            'stopCollection': {
                'get': function () {
                    const _0x27473e = _0x324b8e;
                    return this['_stopCollection'][_0x27473e(0x347)];
                }
            },
            'isStopVisible': {
                'get': function () {
                    return this['_isStopVisible'];
                },
                'set': function (_0x531f4f) {
                    const _0x4cf472 = _0x324b8e;
                    _0x42633a(_0x531f4f) && _0x531f4f !== this[_0x4cf472(0xf8)] && (this[_0x4cf472(0xf8)] = _0x531f4f,
                        this['setStopVisible']());
                }
            },
            'isFlyLoop': {
                'get': function () {
                    const _0x5ed074 = _0x324b8e;
                    return this[_0x5ed074(0xe8)];
                },
                'set': function (_0xf7aa56) {
                    _0xf7aa56 && (this['_isFlyLoop'] = _0xf7aa56);
                }
            },
            'isLineVisible': {
                'get': function () {
                    const _0x44b9c4 = _0x324b8e;
                    return this[_0x44b9c4(0x176)];
                },
                'set': function (_0x5e0dbb) {
                    const _0xd5d42a = _0x324b8e;
                    _0x42633a(_0x5e0dbb) && _0x5e0dbb !== this[_0xd5d42a(0x176)] && (this['_isLineVisible'] = _0x5e0dbb,
                        this[_0xd5d42a(0xa04)]());
                }
            },
            'lineEntity': {
                'get': function () {
                    const _0x3efef6 = _0x324b8e;
                    return this[_0x3efef6(0xd4)];
                },
                'set': function (_0x192e6d) {
                    const _0x4a1214 = _0x324b8e;
                    _0x42633a(_0x192e6d) && (this[_0x4a1214(0xd4)] = _0x192e6d);
                }
            },
            'routeName': {
                'get': function () {
                    const _0x39f4ca = _0x324b8e;
                    return this[_0x39f4ca(0x602)];
                },
                'set': function (_0x401bc6) {
                    const _0x3353a7 = _0x324b8e;
                    _0x401bc6 && (this[_0x3353a7(0x602)] = _0x401bc6);
                }
            },
            'speed': {
                'get': function () {
                    const _0x31ba72 = _0x324b8e;
                    return this[_0x31ba72(0xa06)];
                },
                'set': function (_0x1e7e3a) {
                    const _0x4f2573 = _0x324b8e;
                    if (_0x1e7e3a && _0x1e7e3a != this[_0x4f2573(0xa06)]) {
                        this[_0x4f2573(0xa06)] = _0x1e7e3a;
                        let _0x19eed5 = this['speed']
                            , _0xc52164 = this[_0x4f2573(0x883)];
                        for (let _0x35d81b = 0x0, _0x5e12ff = _0xc52164['length']; _0x35d81b < _0x5e12ff - 0x1; _0x35d81b++) {
                            let _0x25bea0 = _0xc52164[_0x35d81b];
                            _0x25bea0[_0x4f2573(0x678)] = Math[_0x4f2573(0x826)](_0x25bea0[_0x4f2573(0x95e)] / _0x19eed5);
                        }
                    }
                }
            },
            'stopCount': {
                'get': function () {
                    const _0x26f5f0 = _0x324b8e;
                    return this[_0x26f5f0(0xa7f)][_0x26f5f0(0x376)];
                }
            },
            'isAlongline': {
                'get': function () {
                    const _0x50a167 = _0x324b8e;
                    return this[_0x50a167(0x50f)];
                },
                'set': function (_0x5b7399) {
                    const _0x150dab = _0x324b8e;
                    _0x42633a(_0x5b7399) && (this[_0x150dab(0x50f)] = _0x5b7399);
                }
            },
            'totalDuration': {
                'get': function () {
                    const _0x557644 = _0x324b8e;
                    return this[_0x557644(0x62a)];
                }
            },
            'isHeadingFree': {
                'get': function () {
                    const _0x2a8157 = _0x324b8e;
                    return this[_0x2a8157(0x567)];
                },
                'set': function (_0xddc227) {
                    _0x42633a(_0xddc227) && (this['_isHeadingFree'] = _0xddc227);
                }
            },
            'isTiltFree': {
                'get': function () {
                    const _0x139c75 = _0x324b8e;
                    return this[_0x139c75(0x95f)];
                },
                'set': function (_0x320d6c) {
                    const _0x33286a = _0x324b8e;
                    _0x42633a(_0x320d6c) && (this[_0x33286a(0x95f)] = _0x320d6c);
                }
            },
            'isAltitudeFree': {
                'get': function () {
                    const _0x331142 = _0x324b8e;
                    return this[_0x331142(0x7b5)];
                },
                'set': function (_0x1ccbf0) {
                    _0x42633a(_0x1ccbf0) && (this['_isAltitudeFree'] = _0x1ccbf0);
                }
            }
        }),
            _0x249d92[_0x324b8e(0x74f)][_0x324b8e(0x9b0)] = function () {
                const _0x3cdb88 = _0x324b8e;
                let _0x3ae9a6 = 0x0
                    , _0x3885b9 = [0x0]
                    , _0x4dd867 = []
                    , _0xcd6601 = this[_0x3cdb88(0x2a0)]['stopNodes'];
                const _0x565e1a = this['_stopsInfo'][_0x3cdb88(0x365)];
                _0xcd6601 = _0x42633a(_0xcd6601) ? _0xcd6601[_0x3cdb88(0x5f5)](this['_addedStops']) : this[_0x3cdb88(0x8e4)];
                for (let _0x24e10e = 0x0; _0x24e10e < _0xcd6601[_0x3cdb88(0x376)]; _0x24e10e++) {
                    if (this[_0x3cdb88(0x6ca)][_0x3cdb88(0xa59)](_0x24e10e) > -0x1)
                        continue;
                    let _0x55e977, _0x29cf13, _0x4dc059, _0x3c9060 = _0xcd6601[_0x24e10e];
                    if (_0x3c9060 instanceof _0x1e4176)
                        _0x55e977 = _0x3c9060;
                    else {
                        let _0x5f59d5 = _0x5aff14[_0x3cdb88(0x2fd)](_0x3c9060, 'camera', _0x565e1a);
                        const _0x205354 = _0x5aff14[_0x3cdb88(0x9c7)](_0x5f59d5, _0x3cdb88(0x547), _0x565e1a)
                            , _0x11d104 = _0x5aff14[_0x3cdb88(0x9c7)](_0x5f59d5, _0x3cdb88(0x21c), _0x565e1a)
                            , _0x5be513 = _0x5aff14[_0x3cdb88(0x9c7)](_0x5f59d5, 'altitude', _0x565e1a);
                        let _0xe30abb = _0x5aff14[_0x3cdb88(0x9c7)](_0x5f59d5, _0x3cdb88(0x97a), _0x565e1a);
                        _0xe30abb = _0x1b1d8c['toRadians'](_0xe30abb);
                        let _0x8d9ba = _0x5aff14['queryNumericValue'](_0x5f59d5, _0x3cdb88(0x489), _0x565e1a);
                        _0x8d9ba = _0x1b1d8c['toRadians'](_0x8d9ba - 0x5a),
                            this[_0x3cdb88(0x50f)] && !this[_0x3cdb88(0x95f)] && (_0x8d9ba = 0x0),
                            _0x5aff14['queryStringValue'](_0x5f59d5, 'altitudeMode', _0x565e1a);
                        const _0x28cd41 = _0x5aff14[_0x3cdb88(0x658)](_0x3c9060, 'name')
                            , _0x13ba3f = _0x5aff14[_0x3cdb88(0xf0)](_0x3c9060, _0x3cdb88(0x131), _0x565e1a)
                            , _0x1a83e4 = _0x5aff14[_0x3cdb88(0x2fd)](_0x3c9060, _0x3cdb88(0x27b), _0x565e1a);
                        _0x4dc059 = _0x5aff14[_0x3cdb88(0x1cf)](_0x1a83e4, _0x3cdb88(0x2fa), _0x565e1a);
                        const _0x57ddb4 = _0x5aff14[_0x3cdb88(0x9c7)](_0x1a83e4, _0x3cdb88(0x3c5), _0x565e1a);
                        let _0x3185ee;
                        _0x5aff14[_0x3cdb88(0x9c7)](_0x1a83e4, 'angularSpeed', _0x565e1a),
                            _0x5aff14[_0x3cdb88(0x2fd)](_0x1a83e4, _0x3cdb88(0x822), _0x565e1a);
                        let _0x3c3e17 = !0x0;
                        _0x205354 > 0xb4 || _0x11d104 > 0xb4 ? (_0x3185ee = new _0x186cae(_0x205354, _0x11d104, _0x5be513),
                            _0x3c3e17 = !0x1) : _0x3185ee = _0x186cae[_0x3cdb88(0xa08)](_0x205354, _0x11d104, _0x5be513),
                            _0x4dd867[_0x3cdb88(0x745)](_0x3185ee);
                        let _0x14f75a = this['stopCount'];
                        if (_0x24e10e > 0x0 && _0x14f75a > 0x0 && (_0x29cf13 = this[_0x3cdb88(0xa7f)][_0x3cdb88(0x32b)][this[_0x3cdb88(0xa7f)][_0x3cdb88(0x376)] - 0x1],
                            _0x29cf13[_0x3cdb88(0x2fa)] != _0x306bf3['StopAround'])) {
                            const _0x1f6a1a = _0x29cf13[_0x3cdb88(0x154)]
                                , _0x2a323c = _0x186cae[_0x3cdb88(0xaa5)](_0x1f6a1a, _0x3185ee);
                            _0x29cf13[_0x3cdb88(0x95e)] = _0x2a323c;
                            let _0x5bb6e4, _0x2d8c7f = _0x29cf13[_0x3cdb88(0x131)];
                            _0x5bb6e4 = 0x0 < _0x2d8c7f ? _0x2d8c7f : this[_0x3cdb88(0xa06)],
                                _0x29cf13[_0x3cdb88(0x678)] = _0x2a323c / _0x5bb6e4,
                                _0x29cf13[_0x3cdb88(0x131)] = _0x5bb6e4,
                                _0x3ae9a6 += _0x29cf13[_0x3cdb88(0x678)],
                                _0x3885b9['push'](_0x3ae9a6);
                        }
                        _0x55e977 = new _0x1e4176({
                            'index': _0x24e10e,
                            'point': _0x3185ee,
                            'heading': _0xe30abb,
                            'tilt': _0x8d9ba,
                            'stopName': _0x28cd41,
                            'waitTime': _0x57ddb4,
                            'speed': _0x13ba3f,
                            'isConvert': _0x3c3e17
                        }),
                            _0x55e977[_0x3cdb88(0x9a0)] = _0x5be513;
                    }
                    if (this[_0x3cdb88(0x9bc)](_0x55e977),
                        _0x42633a(_0x29cf13) && (_0x29cf13['_nextStopIndex'] = _0x24e10e,
                            _0x55e977[_0x3cdb88(0x4e0)] = _0x29cf13[_0x3cdb88(0x676)]),
                        _0x4dc059 === _0x306bf3[_0x3cdb88(0x6f4)] && stopsViesNode) {
                        const _0x8167cf = queryChildNodes(stopsViesNode, _0x3cdb88(0x122), _0x565e1a);
                        if (0x2 == _0x8167cf[_0x3cdb88(0x376)]) {
                            const _0x12912f = _0x8167cf[0x0]
                                , _0x2421bc = _0x8167cf[0x1]
                                , _0x57d742 = _0x5aff14['queryNumericAttribute'](_0x12912f, _0x3cdb88(0x97a), _0x565e1a)
                                , _0x3b86a = _0x5aff14['queryNumericAttribute'](_0x2421bc, _0x3cdb88(0x97a), _0x565e1a);
                            _0x5aff14[_0x3cdb88(0xf0)](_0x12912f, 'tilt', _0x565e1a),
                                _0x5aff14[_0x3cdb88(0xf0)](_0x2421bc, _0x3cdb88(0x489), _0x565e1a),
                                _0x5aff14['queryNumericAttribute'](_0x12912f, _0x3cdb88(0x9a0), _0x565e1a),
                                _0x5aff14[_0x3cdb88(0xf0)](_0x2421bc, _0x3cdb88(0x9a0), _0x565e1a);
                            const _0xc815f5 = _0x5aff14['queryStringAttribute'](_0x12912f, 'direction', _0x565e1a);
                            _0x5aff14[_0x3cdb88(0x658)](_0x2421bc, _0x3cdb88(0x264), _0x565e1a);
                            let _0x37e449, _0x2e070e = 'Clockwise' === _0xc815f5 ? 0x1 : -0x1;
                            _0x1b1d8c[_0x3cdb88(0xcf)](_0x57d742, _0x3b86a, _0x1b1d8c['EPSILON15']) ? _0x37e449 = 0x168 : (_0x37e449 = _0x3b86a - _0x57d742,
                                _0x37e449 < 0x0 && _0x3cdb88(0x281) === _0xc815f5 ? _0x37e449 += 0x168 : _0x37e449 > 0x0 && _0x3cdb88(0x281) !== _0xc815f5 && (_0x37e449 = 0x168 - _0x37e449),
                                _0x37e449 = Math[_0x3cdb88(0xa8b)](_0x37e449));
                            const _0x3a59ba = _0x37e449 / angularSpeed;
                            _0x55e977[_0x3cdb88(0xa86)] = _0x3a59ba / 0x3,
                                _0x55e977[_0x3cdb88(0x2fa)] = _0x306bf3['StopAround'];
                            const _0x455579 = _0x1b1d8c['toRadians'](_0x57d742)
                                , _0x405fe8 = _0x1b1d8c[_0x3cdb88(0x4cc)](_0x57d742 + _0x2e070e * _0x37e449 / 0x3)
                                , _0x26f0a6 = _0x1b1d8c['toRadians'](_0x57d742 + _0x2e070e * _0x37e449 * 0x2 / 0x3)
                                , _0x226dcd = _0x1b1d8c[_0x3cdb88(0x4cc)](_0x3b86a)
                                , _0x11486e = new _0x1e4176({
                                    'point': point,
                                    'heading': _0x455579,
                                    'tilt': tilt,
                                    'stopName': stopName,
                                    'waitTime': waitTime,
                                    'speed': stopSpeed,
                                    'surroundDuration': _0x3a59ba / 0x3,
                                    'stopPlayMode': _0x306bf3[_0x3cdb88(0x6f4)]
                                });
                            _0x11486e[_0x3cdb88(0x469)] = !0x0,
                                _0x11486e[_0x3cdb88(0x984)] = !0x0,
                                this[_0x3cdb88(0x9bc)](_0x11486e);
                            let _0x566451 = new _0x1e4176({
                                'point': point,
                                'heading': _0x405fe8,
                                'tilt': tilt,
                                'stopName': stopName,
                                'waitTime': 0x0,
                                'speed': stopSpeed,
                                'surroundDuration': _0x3a59ba / 0x3,
                                'stopPlayMode': _0x306bf3[_0x3cdb88(0x6f4)]
                            });
                            _0x566451['_isGenerated'] = !0x0,
                                this[_0x3cdb88(0x9bc)](_0x566451);
                            let _0x5ea985 = new _0x1e4176({
                                'point': point,
                                'heading': _0x26f0a6,
                                'tilt': tilt,
                                'stopName': stopName,
                                'waitTime': 0x0,
                                'speed': stopSpeed,
                                'surroundDuration': _0x3a59ba / 0x3,
                                'stopPlayMode': _0x306bf3[_0x3cdb88(0x6f4)]
                            });
                            _0x5ea985[_0x3cdb88(0x984)] = !0x0,
                                this[_0x3cdb88(0x9bc)](_0x5ea985);
                            let _0x52135a = new _0x1e4176({
                                'point': point,
                                'heading': _0x226dcd,
                                'tilt': tilt,
                                'stopName': stopName,
                                'waitTime': waitTime,
                                'speed': stopSpeed
                            });
                            this[_0x3cdb88(0x9bc)](_0x52135a),
                                _0x3ae9a6 += _0x3a59ba;
                        }
                    }
                }
                if (this[_0x3cdb88(0x50f)]) {
                    for (let _0x1dca9f = 0x0; _0x1dca9f < this[_0x3cdb88(0x71b)] - 0x1; _0x1dca9f++) {
                        let _0x5bb7dd = this[_0x3cdb88(0x883)][_0x1dca9f];
                        const _0x4a0e0e = this['stopCollection'][_0x1dca9f + 0x1]
                            , _0x3155db = new _0x186cae(_0x4a0e0e[_0x3cdb88(0x154)]['x'] - _0x5bb7dd['point']['x'], _0x4a0e0e[_0x3cdb88(0x154)]['y'] - _0x5bb7dd[_0x3cdb88(0x154)]['y'], _0x4a0e0e[_0x3cdb88(0x154)]['z'] - _0x5bb7dd[_0x3cdb88(0x154)]['z']);
                        _0x186cae[_0x3cdb88(0x7bc)](_0x3155db, _0x3155db),
                            _0x5bb7dd[_0x3cdb88(0x264)] = _0x3155db,
                            _0x5bb7dd['up'] = _0x3bcfa6(_0x5bb7dd[_0x3cdb88(0x154)], _0x3155db),
                            this['_isTiltFree'] && (_0x5bb7dd[_0x3cdb88(0x97a)] = _0x38d7ac[_0x3cdb88(0x2cb)](_0x5bb7dd[_0x3cdb88(0x264)], _0x5bb7dd['up']) - _0x1b1d8c['PI']);
                    }
                    if (this[_0x3cdb88(0x71b)] > 0x2) {
                        let _0x187f92 = this[_0x3cdb88(0x883)][this[_0x3cdb88(0x883)]['length'] - 0x1];
                        const _0x5a04f3 = this[_0x3cdb88(0x883)][this['stopCollection'][_0x3cdb88(0x376)] - 0x2];
                        _0x187f92[_0x3cdb88(0x264)] = _0x5a04f3[_0x3cdb88(0x264)],
                            _0x187f92['up'] = _0x5a04f3['up'],
                            this[_0x3cdb88(0x95f)] && (_0x187f92['heading'] = _0x38d7ac[_0x3cdb88(0x2cb)](_0x187f92[_0x3cdb88(0x264)], _0x187f92['up']) - _0x1b1d8c['PI']);
                    }
                }
                _0x4dd867[_0x3cdb88(0x376)] >= 0x2 && (this[_0x3cdb88(0x243)] = new Adapter['CatmullRomSpline']({
                    'times': _0x3885b9,
                    'points': _0x4dd867
                })),
                    this['setStopVisible'](),
                    this['_totalDuration'] = _0x3ae9a6;
            }
            ,
            _0x249d92[_0x324b8e(0x74f)]['_addStop'] = function (_0x52ee4d) {
                const _0x425b13 = _0x324b8e;
                if (!_0x52ee4d)
                    throw new _0x1de54c(_0x425b13(0x8be));
                if (!(_0x52ee4d instanceof _0x1e4176))
                    throw new _0x1de54c(_0x425b13(0x294));
                if (this['_stopCollection'][_0x425b13(0x414)](_0x52ee4d[_0x425b13(0x676)], _0x52ee4d),
                    _0x42633a(this[_0x425b13(0x792)]) && this[_0x425b13(0xf8)]) {
                    const _0x4725c1 = this[_0x425b13(0x792)][_0x425b13(0x9cb)]({
                        'position': _0x52ee4d[_0x425b13(0x154)],
                        'billboard': {
                            'image': _0x4add1a(_0x425b13(0x7cd)),
                            'scale': 0.5
                        }
                    });
                    this[_0x425b13(0x416)][_0x425b13(0x745)](_0x4725c1);
                }
                if (this['_isCleared'] && this[_0x425b13(0xa7f)][_0x425b13(0x376)] > 0x2) {
                    if (_0x42633a(this[_0x425b13(0x243)])) {
                        const _0x40c6f0 = [][_0x425b13(0x5f5)](this[_0x425b13(0x243)][_0x425b13(0xab6)]);
                        let _0x398079 = [][_0x425b13(0x5f5)](this[_0x425b13(0x243)][_0x425b13(0x92e)])
                            , _0x2b8edf = this[_0x425b13(0xa7f)][_0x425b13(0x376)] > 0x0 ? this[_0x425b13(0xa7f)][_0x425b13(0x32b)][this[_0x425b13(0xa7f)]['length'] - 0x2][_0x425b13(0x420)] : 0x0
                            , _0xf2d970 = _0x40c6f0[_0x425b13(0x376)] > 0x0 ? _0x40c6f0[_0x40c6f0[_0x425b13(0x376)] - 0x1] : 0x0;
                        _0x40c6f0['push'](_0xf2d970 + _0x2b8edf),
                            _0x398079[_0x425b13(0x745)](_0x52ee4d[_0x425b13(0x154)]),
                            this[_0x425b13(0x243)] = new Adapter[(_0x425b13(0x632))]({
                                'times': _0x40c6f0,
                                'points': _0x398079
                            });
                    } else {
                        let _0x4caf59 = [0x0]
                            , _0x81861b = [this[_0x425b13(0xa7f)]['_array'][0x0][_0x425b13(0x154)]]
                            , _0x43e994 = 0x0;
                        for (let _0x51f3b7 = 0x1; _0x51f3b7 < this['_stopCollection'][_0x425b13(0x376)]; _0x51f3b7++) {
                            let _0x49e704 = this[_0x425b13(0xa7f)]['_array'][_0x51f3b7]
                                , _0x576b0e = this[_0x425b13(0xa7f)][_0x425b13(0x32b)][_0x51f3b7 - 0x1];
                            _0x81861b[_0x425b13(0x745)](_0x49e704[_0x425b13(0x154)]),
                                _0x43e994 += _0x576b0e[_0x425b13(0x678)],
                                _0x4caf59[_0x425b13(0x745)](_0x43e994);
                        }
                        this[_0x425b13(0x243)] = new CatmullRomSpline({
                            'times': _0x4caf59,
                            'points': _0x81861b
                        });
                    }
                }
                return !0x0;
            }
            ,
            _0x249d92[_0x324b8e(0x74f)][_0x324b8e(0x9ff)] = function (_0x470f7c) {
                const _0x2552fb = _0x324b8e;
                if (!_0x470f7c)
                    throw new _0x1de54c(_0x2552fb(0x8be));
                if (!(_0x470f7c instanceof _0x1e4176))
                    throw new _0x1de54c(_0x2552fb(0x294));
                _0x470f7c[_0x2552fb(0x4e0)] = this[_0x2552fb(0x2a0)]['stopNodes'][_0x2552fb(0x376)] + this[_0x2552fb(0x8e4)]['length'] - 0x1,
                    _0x470f7c[_0x2552fb(0x6c5)] = _0x470f7c['_preStopIndex'] + 0x1,
                    this[_0x2552fb(0x8e4)][_0x2552fb(0x745)](_0x470f7c),
                    this[_0x2552fb(0x3b3)](),
                    this[_0x2552fb(0x9b0)](),
                    this['setLineVisible']();
            }
            ,
            _0x249d92['prototype'][_0x324b8e(0x60b)] = function (_0x3c4234) {
                const _0x4aa4c = _0x324b8e;
                this[_0x4aa4c(0x3b3)](),
                    -0x1 === this[_0x4aa4c(0x6ca)][_0x4aa4c(0xa59)](_0x3c4234['index']) && this['_removeIndex'][_0x4aa4c(0x745)](_0x3c4234['index']),
                    this[_0x4aa4c(0x9b0)](),
                    this[_0x4aa4c(0xa04)]();
            }
            ,
            _0x249d92[_0x324b8e(0x74f)]['setLineVisible'] = function () {
                const _0x23f534 = _0x324b8e;
                if (_0x42633a(this[_0x23f534(0x792)])) {
                    if (!_0x42633a(this['_lineEntity'])) {
                        let _0x1cbf10 = this['stopCollection']
                            , _0x4b1b39 = _0x1cbf10[_0x23f534(0x376)]
                            , _0x15eafc = [];
                        for (; _0x4b1b39--;)
                            _0x15eafc[_0x23f534(0x745)](_0x1cbf10[_0x4b1b39][_0x23f534(0x154)]);
                        this['_lineEntity'] = this[_0x23f534(0x792)]['add']({
                            'name': this[_0x23f534(0x841)],
                            'polyline': {
                                'positions': _0x15eafc,
                                'width': 0x5
                            }
                        });
                    }
                    this['_lineEntity'][_0x23f534(0x198)] = this[_0x23f534(0x176)];
                }
            }
            ,
            _0x249d92[_0x324b8e(0x74f)]['setStopVisible'] = function () {
                const _0x22d5ea = _0x324b8e;
                if (_0x42633a(this[_0x22d5ea(0x792)])) {
                    if (0x0 === this[_0x22d5ea(0x416)][_0x22d5ea(0x376)] && this[_0x22d5ea(0xf8)]) {
                        const _0x4bb223 = this[_0x22d5ea(0x883)];
                        let _0x584c71 = _0x4bb223[_0x22d5ea(0x376)];
                        for (; _0x584c71--;) {
                            const _0x3e2bd4 = _0x4bb223[_0x584c71];
                            let _0x51cd47 = this[_0x22d5ea(0x792)][_0x22d5ea(0x9cb)]({
                                'position': _0x3e2bd4[_0x22d5ea(0x154)],
                                'billboard': {
                                    'image': _0x4add1a('Assets/Textures/grepin.png'),
                                    'scale': 0.5
                                }
                            });
                            this[_0x22d5ea(0x416)][_0x22d5ea(0x745)](_0x51cd47);
                        }
                    }
                    for (let _0x4622e6 = 0x0, _0x2397b6 = this[_0x22d5ea(0x416)][_0x22d5ea(0x376)]; _0x4622e6 < _0x2397b6; _0x4622e6++) {
                        this[_0x22d5ea(0x416)][_0x4622e6]['show'] = this[_0x22d5ea(0xf8)];
                    }
                }
            }
            ,
            _0x249d92[_0x324b8e(0x74f)][_0x324b8e(0xa61)] = function (_0x2ff4ea) {
                const _0x25aac5 = _0x324b8e;
                return void 0x0 === this[_0x25aac5(0xa7f)][_0x25aac5(0xa61)](_0x2ff4ea) ? this[_0x25aac5(0x883)][_0x2ff4ea] : this[_0x25aac5(0xa7f)][_0x25aac5(0xa61)](_0x2ff4ea);
            }
            ,
            _0x249d92[_0x324b8e(0x74f)][_0x324b8e(0x3b3)] = function () {
                const _0x1fc5c1 = _0x324b8e;
                this[_0x1fc5c1(0x610)] = !0x0;
                for (let _0x3d3b8f = 0x0; _0x3d3b8f < this['_stopMarkCollection'][_0x1fc5c1(0x376)]; _0x3d3b8f++)
                    this['_entityCollection'][_0x1fc5c1(0x77c)](this[_0x1fc5c1(0x416)][_0x3d3b8f]);
                _0x42633a(this[_0x1fc5c1(0xd4)]) && (this['_entityCollection'][_0x1fc5c1(0x77c)](this['_lineEntity']),
                    this[_0x1fc5c1(0xd4)] = void 0x0),
                    this[_0x1fc5c1(0xa7f)][_0x1fc5c1(0x307)](),
                    _0x42633a(this[_0x1fc5c1(0x243)]) && (this['_catmullRomSpline'] = void 0x0);
            }
            ,
            Adapter[_0x324b8e(0x85d)];
        const _0x2b735a = Adapter[_0x324b8e(0x335)]
            , _0x57c105 = Adapter[_0x324b8e(0x14b)];
        function _0x555c63(_0x222441) {
            const _0x5bfde4 = _0x324b8e;
            this[_0x5bfde4(0x792)] = _0x222441,
                this['_routes'] = [],
                this[_0x5bfde4(0x3cf)] = !0x1,
                this['_readyPromise'] = _0x438ab0();
        }
        function _0x458ffb(_0xda5f5e, _0x1561c2) {
            const _0x176415 = _0x324b8e
                , _0x2b01d6 = _0xda5f5e
                , _0x300c7f = _0x1561c2[_0x176415(0x906)]
                , _0xd78bb8 = _0x300c7f[_0x176415(0x1f1)]
                , _0x598865 = _0x1aa522(_0x300c7f, _0x176415(0x29e), _0xd78bb8);
            for (let _0x4d3bd2 = 0x0, _0x1e1b2a = _0x598865[_0x176415(0x376)]; _0x4d3bd2 < _0x1e1b2a; _0x4d3bd2++) {
                const _0xf693c1 = _0x598865[_0x4d3bd2]
                    , _0x5bef97 = _0x1aa522(_0xf693c1, _0x176415(0x5f6), _0xd78bb8)
                    , _0x109374 = _0x35e47f(_0xf693c1, 'speed')
                    , _0x4e713e = _0x2f5b56(_0xf693c1, _0x176415(0x770))
                    , _0x152acd = _0x4f166(_0xf693c1, 'showroutestop')
                    , _0x31758b = _0x4f166(_0xf693c1, _0x176415(0x210))
                    , _0x4b5524 = _0x4f166(_0xf693c1, 'flycircle')
                    , _0x55c60b = _0x4f166(_0xf693c1, _0x176415(0x69e))
                    , _0x19fbce = _0x4f166(_0xf693c1, _0x176415(0x59e))
                    , _0x164497 = _0x4f166(_0xf693c1, 'tiltfree')
                    , _0x5e5024 = _0x4f166(_0xf693c1, _0x176415(0x180))
                    , _0x3422de = new _0x249d92({
                        'entityCollection': _0x2b01d6[_0x176415(0x792)],
                        'routeName': _0x4e713e,
                        'speed': _0x109374,
                        'isLineVisible': _0x31758b,
                        'isFlyLoop': _0x4b5524,
                        'isStopVisible': _0x152acd,
                        'isAlongline': _0x55c60b,
                        'isHeadingFree': _0x19fbce,
                        'isTiltFree': _0x164497,
                        'isAltitudeFree': _0x5e5024,
                        'stopsInfo': {
                            'stopNodes': _0x5bef97,
                            'namespace': _0xd78bb8
                        }
                    });
                _0x3422de[_0x176415(0x9b0)](),
                    _0x2b01d6[_0x176415(0x540)](_0x3422de),
                    _0x2b01d6[_0x176415(0x3cf)] = !0x0;
            }
            _0x2b01d6[_0x176415(0x3e8)][_0x176415(0x1d5)]();
        }
        function _0x35e47f(_0x451502, _0x13ebbb) {
            const _0x4e7088 = _0x324b8e;
            if (!_0x57c105(_0x451502))
                return;
            let _0x3af25c = _0x451502[_0x4e7088(0x7b9)](_0x13ebbb);
            if (null !== _0x3af25c) {
                const _0x5287a4 = parseFloat(_0x3af25c);
                return isNaN(_0x5287a4) ? void 0x0 : _0x5287a4;
            }
        }
        function _0x2f5b56(_0x5bd645, _0x55adcf) {
            const _0xd8e054 = _0x324b8e;
            if (!_0x57c105(_0x5bd645))
                return;
            let _0x489c0e = _0x5bd645[_0xd8e054(0x7b9)](_0x55adcf);
            return null !== _0x489c0e ? _0x489c0e : void 0x0;
        }
        function _0x4f166(_0xc97cbc, _0x1b6c14) {
            const _0x12696d = _0x324b8e;
            if (!_0x57c105(_0xc97cbc))
                return;
            let _0x4407ad = _0xc97cbc[_0x12696d(0x7b9)](_0x1b6c14);
            return _0x4407ad = _0x4407ad['toLowerCase'](),
                _0x12696d(0x7cf) !== _0x4407ad && (_0x12696d(0x6cc) === _0x4407ad || void 0x0);
        }
        function _0x1aa522(_0x1218c7, _0x23d8ab, _0x3cc42a) {
            const _0x37ae1b = _0x324b8e;
            if (!_0x57c105(_0x1218c7))
                return [];
            let _0x4771ef = []
                , _0x5de216 = _0x1218c7[_0x37ae1b(0x2a1)]
                , _0x1ddb91 = _0x5de216['length'];
            for (let _0x453aed = 0x0; _0x453aed < _0x1ddb91; _0x453aed++) {
                let _0x223985 = _0x5de216[_0x453aed];
                _0x223985['localName'] === _0x23d8ab && -0x1 !== _0x3cc42a['indexOf'](_0x223985[_0x37ae1b(0x1f1)]) && _0x4771ef[_0x37ae1b(0x745)](_0x223985);
            }
            return _0x4771ef;
        }
        Object[_0x324b8e(0xa38)](_0x555c63[_0x324b8e(0x74f)], {
            'routes': {
                'get': function () {
                    const _0x34d6b3 = _0x324b8e;
                    return this[_0x34d6b3(0x9b6)];
                }
            },
            'ready': {
                'get': function () {
                    const _0x4a6a7b = _0x324b8e;
                    return this[_0x4a6a7b(0x3cf)];
                }
            },
            'readyPromise': {
                'get': function () {
                    const _0xb31ef8 = _0x324b8e;
                    return this[_0xb31ef8(0x3e8)][_0xb31ef8(0x150)];
                }
            }
        }),
            _0x555c63['prototype'][_0x324b8e(0x540)] = function (_0x55844b) {
                const _0x507f6a = _0x324b8e;
                if (_0x55844b && (this['_routes'][_0x507f6a(0x745)](_0x55844b),
                    _0x55844b['isLineVisible'] && _0x57c105(this[_0x507f6a(0x792)]))) {
                    const _0x3bd40f = _0x55844b['stopCollection'];
                    let _0x48d5ad = _0x3bd40f[_0x507f6a(0x376)]
                        , _0x1e32d2 = [];
                    for (; _0x48d5ad--;)
                        _0x1e32d2[_0x507f6a(0x745)](_0x3bd40f[_0x48d5ad][_0x507f6a(0x154)]);
                    _0x55844b[_0x507f6a(0x534)] = this['_entityCollection'][_0x507f6a(0x9cb)]({
                        'name': _0x55844b[_0x507f6a(0x841)],
                        'polyline': {
                            'positions': _0x1e32d2,
                            'width': 0x5
                        }
                    });
                }
            }
            ,
            _0x555c63['prototype']['get'] = function (_0x243a34) {
                const _0x2e14b6 = _0x324b8e;
                return this[_0x2e14b6(0x9b6)][_0x243a34];
            }
            ,
            _0x555c63['prototype'][_0x324b8e(0x33b)] = function (_0x64c987) {
                const _0x19605d = _0x324b8e
                    , _0x3f7e1a = this;
                Promise[_0x19605d(0x1d5)](_0x64c987)['then'](_0x2cdd62 => Cesium[_0x19605d(0x9c9)][_0x19605d(0x260)](_0x2cdd62)['fetchXML']())[_0x19605d(0x685)](_0x4c5993 => {
                    _0x458ffb(_0x3f7e1a, _0x4c5993);
                }
                );
            }
            ,
            _0x555c63[_0x324b8e(0x74f)][_0x324b8e(0x9c0)] = function (_0x13bbce) {
                const _0x21a6ab = _0x324b8e;
                if (!_0x57c105(_0x13bbce))
                    throw new _0x2b735a(_0x21a6ab(0x7d3));
                const _0xb80af7 = new DOMParser()[_0x21a6ab(0x968)](_0x13bbce, _0x21a6ab(0x5d6));
                try {
                    _0x458ffb(this, _0xb80af7);
                } catch (_0x378d48) {
                    throw new _0x2b735a(_0x378d48);
                }
            }
            ;
        var _0x1194c7 = Object[_0x324b8e(0x3e6)]({
            'Space': 0x0,
            'Ground': 0x1,
            'S3mModel': 0x2,
            'Raster': 0x3
        })
            , _0x26fbd4 = Object[_0x324b8e(0x3e6)]({
                'Point': 0x0,
                'Line': 0x1,
                'Polygon': 0x2
            });
        let _0x2308ca = function (_0x156732, _0x58c175, _0x4f76b9) {
            const _0x9b5c32 = _0x324b8e;
            if (!_0x156732 || void 0x0 === _0x58c175)
                throw new Cesium[(_0x9b5c32(0x335))](_0x9b5c32(0x61f));
            this[_0x9b5c32(0x26b)] = new Cesium[(_0x9b5c32(0x820))](_0x156732[_0x9b5c32(0x80b)][_0x9b5c32(0x9e9)]),
                this[_0x9b5c32(0x505)] = _0x156732,
                this[_0x9b5c32(0x265)] = _0x58c175,
                this[_0x9b5c32(0x986)] = Cesium[_0x9b5c32(0x225)](_0x4f76b9, _0x1194c7[_0x9b5c32(0xfe)]),
                this[_0x9b5c32(0x616)] = !0x1,
                this[_0x9b5c32(0x31a)] = !0x1,
                this['_drawEvt'] = new Cesium['Event'](),
                this[_0x9b5c32(0xa1d)] = new Cesium[(_0x9b5c32(0x425))](),
                this[_0x9b5c32(0x638)] = new Cesium[(_0x9b5c32(0x425))](),
                this['polylines'] = void 0x0,
                this[_0x9b5c32(0x84a)] = void 0x0,
                this[_0x9b5c32(0xa16)] = void 0x0,
                this[_0x9b5c32(0x92e)] = void 0x0,
                this[_0x9b5c32(0x154)] = void 0x0;
        };
        function _0xc69644(_0x2f69d7, _0x24e631, _0x590fe8) {
            const _0x2c8e87 = _0x324b8e;
            let _0x531695 = _0x24e631
                , _0x12abf7 = _0x531695['viewer'][_0x2c8e87(0x80b)]['pickPosition'](_0x2f69d7);
            if (!_0x12abf7)
                return;
            let _0x309121 = _0x531695['polyline'][_0x2c8e87(0x9b1)]
                , _0x327925 = _0x309121[_0x2c8e87(0x376)];
            _0x590fe8 ? _0x309121[_0x327925] = _0x12abf7 : _0x309121[_0x327925 - 0x1] = _0x12abf7,
                _0x531695[_0x2c8e87(0x84a)][_0x2c8e87(0x9b1)] = _0x309121;
        }
        function _0xeebef8(_0x871c1, _0x260896, _0x1ce6a2) {
            const _0x48d8ca = _0x324b8e;
            let _0x3c663a = _0x260896
                , _0x108a5c = _0x3c663a[_0x48d8ca(0x505)][_0x48d8ca(0x80b)][_0x48d8ca(0x2ae)](_0x871c1);
            if (!_0x108a5c)
                return;
            let _0x36490a = _0x3c663a[_0x48d8ca(0x84a)]['positions']
                , _0x38277e = _0x36490a[_0x48d8ca(0x376)];
            _0x1ce6a2 ? _0x36490a[_0x38277e] = _0x108a5c : _0x36490a[_0x38277e - 0x1] = _0x108a5c,
                _0x3c663a['polyline'][_0x48d8ca(0x9b1)] = _0x36490a;
        }
        Object['defineProperties'](_0x2308ca[_0x324b8e(0x74f)], {
            'drawEvt': {
                'get': function () {
                    const _0x3f4172 = _0x324b8e;
                    return this[_0x3f4172(0x3fa)];
                }
            },
            'activeEvt': {
                'get': function () {
                    const _0xae9efe = _0x324b8e;
                    return this[_0xae9efe(0xa1d)];
                }
            }
        }),
            _0x2308ca[_0x324b8e(0x74f)][_0x324b8e(0x54e)] = function () {
                const _0x6d92d3 = _0x324b8e;
                if (!0x0 === this[_0x6d92d3(0x31a)])
                    return;
                this['active'] = !0x0;
                let _0x3fe00c = this;
                this[_0x6d92d3(0x26b)][_0x6d92d3(0xad5)](function (_0x83326) {
                    !function (_0x48de41, _0x590724) {
                        const _0x5161b8 = _0x557c;
                        let _0x392bd0 = _0x590724;
                        if (_0x392bd0 && _0x392bd0['active']) {
                            let _0x56597e = _0x392bd0[_0x5161b8(0x505)][_0x5161b8(0x80b)];
                            if (!_0x56597e[_0x5161b8(0x89b)])
                                return void console[_0x5161b8(0x9d4)]('your\x20browser\x20not\x20supported\x20pickPosition!');
                            let _0x266e3e = _0x56597e[_0x5161b8(0x2ae)](_0x48de41[_0x5161b8(0x15e)]);
                            if (_0x266e3e) {
                                if (_0x392bd0[_0x5161b8(0x616)]) {
                                    let _0x3b57c2 = new Cesium[(_0x5161b8(0xab7))](_0x48de41[_0x5161b8(0x15e)]['x'], _0x48de41[_0x5161b8(0x15e)]['y']);
                                    switch (_0x392bd0[_0x5161b8(0x265)]) {
                                        case _0x26fbd4[_0x5161b8(0x4c3)]:
                                            _0xc69644(_0x3b57c2, _0x392bd0, !0x0);
                                            break;
                                        case _0x26fbd4[_0x5161b8(0x951)]:
                                            _0xeebef8(_0x3b57c2, _0x392bd0, !0x0);
                                    }
                                } else
                                    switch (_0x392bd0[_0x5161b8(0x616)] = !0x0,
                                    _0x392bd0[_0x5161b8(0x265)]) {
                                        case _0x26fbd4[_0x5161b8(0x30b)]:
                                            !function (_0x17b661, _0x4f1d84) {
                                                const _0x1daabb = _0x5161b8;
                                                let _0x740efd = _0x4f1d84;
                                                _0x740efd[_0x1daabb(0x92e)] ? _0x740efd['point'][_0x1daabb(0x15e)] = _0x17b661 : (_0x740efd[_0x1daabb(0x92e)] = new Cesium[(_0x1daabb(0x995))](),
                                                    _0x740efd['point'] = _0x740efd['points']['add']({
                                                        'position': _0x17b661,
                                                        'pixelSize': 0xa,
                                                        'color': Cesium[_0x1daabb(0x75c)]['WHITE']
                                                    }),
                                                    _0x740efd[_0x1daabb(0x505)][_0x1daabb(0x80b)][_0x1daabb(0x51f)][_0x1daabb(0x9cb)](_0x740efd[_0x1daabb(0x92e)])),
                                                    (_0x740efd[_0x1daabb(0x25c)](),
                                                        _0x740efd[_0x1daabb(0x79e)][_0x1daabb(0x9ea)]({
                                                            'object': _0x740efd[_0x1daabb(0x154)]
                                                        }));
                                            }(_0x266e3e, _0x392bd0);
                                            break;
                                        case _0x26fbd4[_0x5161b8(0x4c3)]:
                                            !function (_0x4a2e2e, _0x37f140) {
                                                const _0x143925 = _0x5161b8;
                                                let _0x34c580 = _0x37f140;
                                                _0x34c580[_0x143925(0x9d8)] ? (_0x34c580[_0x143925(0x84a)]['show'] = !0x0,
                                                    _0x34c580[_0x143925(0x84a)][_0x143925(0x9b1)] = [_0x4a2e2e, _0x4a2e2e]) : (_0x34c580[_0x143925(0x9d8)] = new Cesium['PolylineCollection'](),
                                                        _0x34c580['polyline'] = _0x34c580[_0x143925(0x9d8)][_0x143925(0x9cb)]({
                                                            'width': 0x2,
                                                            'positions': [_0x4a2e2e, _0x4a2e2e],
                                                            'material': Cesium[_0x143925(0x802)][_0x143925(0x427)](Cesium['Material'][_0x143925(0x517)], {
                                                                'color': Cesium['Color'][_0x143925(0x652)]('#51ff00')
                                                            })
                                                        }),
                                                        _0x34c580[_0x143925(0x505)][_0x143925(0x80b)][_0x143925(0x51f)][_0x143925(0x9cb)](_0x34c580[_0x143925(0x9d8)]));
                                            }(_0x266e3e, _0x392bd0);
                                            break;
                                        case _0x26fbd4[_0x5161b8(0x951)]:
                                            !function (_0x117385, _0x49e852) {
                                                const _0x15d797 = _0x5161b8;
                                                let _0x184563 = _0x49e852;
                                                _0x184563['polylines'] ? (_0x184563[_0x15d797(0x84a)][_0x15d797(0x198)] = !0x0,
                                                    _0x184563[_0x15d797(0x84a)][_0x15d797(0x9b1)] = [_0x117385, _0x117385],
                                                    _0x184563['polygon'] && (_0x184563['polygon'][_0x15d797(0x198)] = !0x1)) : (_0x184563[_0x15d797(0x9d8)] = new Cesium[(_0x15d797(0x2c2))](),
                                                        _0x184563['polyline'] = _0x184563['polylines'][_0x15d797(0x9cb)]({
                                                            'id': _0x15d797(0xaa7) + Math[_0x15d797(0x117)](),
                                                            'width': 0x2,
                                                            'positions': [_0x117385, _0x117385],
                                                            'material': Cesium['Material'][_0x15d797(0x427)](Cesium['Material'][_0x15d797(0x517)], {
                                                                'color': Cesium[_0x15d797(0x75c)][_0x15d797(0x652)](_0x15d797(0x3c2))
                                                            }),
                                                            'loop': !0x0
                                                        }),
                                                        _0x184563[_0x15d797(0x505)]['scene'][_0x15d797(0x51f)]['add'](_0x184563[_0x15d797(0x9d8)]));
                                            }(_0x266e3e, _0x392bd0);
                                    }
                            }
                        }
                    }(_0x83326, _0x3fe00c);
                }, Cesium[_0x6d92d3(0x50b)]['LEFT_CLICK']),
                    this[_0x6d92d3(0x26b)][_0x6d92d3(0xad5)](function (_0xca2a81) {
                        !function (_0x1185ec, _0x467ac7) {
                            const _0x1d6758 = _0x557c;
                            let _0x5eab9c = _0x467ac7;
                            if (_0x5eab9c && _0x5eab9c['active'] && _0x5eab9c['isDrawing']) {
                                let _0x509157 = new Cesium[(_0x1d6758(0xab7))](_0x1185ec[_0x1d6758(0x743)]['x'], _0x1185ec[_0x1d6758(0x743)]['y']);
                                switch (_0x5eab9c[_0x1d6758(0x265)]) {
                                    case _0x26fbd4['Line']:
                                        _0xc69644(_0x509157, _0x5eab9c, !0x1);
                                        break;
                                    case _0x26fbd4['Polygon']:
                                        _0xeebef8(_0x509157, _0x5eab9c, !0x1);
                                }
                            }
                            _0x5eab9c[_0x1d6758(0x638)][_0x1d6758(0x9ea)](new Cesium[(_0x1d6758(0xab7))](_0x1185ec[_0x1d6758(0x743)]['x'], _0x1185ec[_0x1d6758(0x743)]['y']));
                        }(_0xca2a81, _0x3fe00c);
                    }, Cesium[_0x6d92d3(0x50b)][_0x6d92d3(0x963)]),
                    this[_0x6d92d3(0x26b)][_0x6d92d3(0xad5)](function (_0x4171f3) {
                        !function (_0x5a621d, _0x5141ce) {
                            const _0x2b5764 = _0x557c;
                            let _0x53f423 = _0x5141ce;
                            if (_0x53f423 && _0x53f423['active'] && _0x53f423[_0x2b5764(0x616)]) {
                                if (_0x53f423[_0x2b5764(0x25c)](),
                                    !_0x53f423[_0x2b5764(0x84a)])
                                    return;
                                if (_0x53f423[_0x2b5764(0x84a)][_0x2b5764(0x9b1)] = _0x53f423['polyline'][_0x2b5764(0x9b1)][_0x2b5764(0x3be)](0x0, _0x53f423[_0x2b5764(0x84a)]['positions'][_0x2b5764(0x376)] - 0x1),
                                    _0x53f423[_0x2b5764(0x265)] === _0x26fbd4[_0x2b5764(0x951)]) {
                                    if (_0x53f423[_0x2b5764(0x84a)]['positions'][_0x2b5764(0x376)] < 0x3)
                                        return void (_0x53f423['polyline']['positions'][_0x2b5764(0x376)] = 0x0);
                                    let _0x23d9d4 = [][_0x2b5764(0x5f5)](_0x53f423[_0x2b5764(0x84a)]['positions']);
                                    _0x53f423[_0x2b5764(0xa16)] || (_0x53f423[_0x2b5764(0xa16)] = _0x53f423['viewer'][_0x2b5764(0x28e)][_0x2b5764(0x9cb)]({
                                        'polygon': {
                                            'hierarchy': {
                                                'positions': _0x23d9d4
                                            },
                                            'material': Cesium['Color']['ORANGE'][_0x2b5764(0x918)](0.5),
                                            'perPositionHeight': _0x1194c7[_0x2b5764(0xfe)] === _0x53f423[_0x2b5764(0x986)]
                                        }
                                    })),
                                        _0x53f423[_0x2b5764(0xa16)][_0x2b5764(0xa16)]['hierarchy'] = _0x23d9d4,
                                        _0x53f423[_0x2b5764(0xa16)]['positions'] = _0x23d9d4,
                                        _0x53f423[_0x2b5764(0xa16)][_0x2b5764(0x198)] = !0x0,
                                        _0x53f423[_0x2b5764(0x79e)][_0x2b5764(0x9ea)]({
                                            'object': _0x53f423[_0x2b5764(0xa16)]
                                        });
                                } else {
                                    if (_0x53f423[_0x2b5764(0x265)] === _0x26fbd4[_0x2b5764(0x4c3)]) {
                                        let _0x4b3275 = [];
                                        for (let _0x32b235 = 0x0, _0x487e8c = _0x53f423[_0x2b5764(0x84a)][_0x2b5764(0x9b1)][_0x2b5764(0x376)]; _0x32b235 < _0x487e8c; _0x32b235++)
                                            _0x4b3275[_0x2b5764(0x745)](Cesium[_0x2b5764(0x85d)][_0x2b5764(0x157)](_0x53f423['polyline']['positions'][_0x32b235]));
                                        _0x53f423['_clampMode'] !== _0x1194c7['S3mModel'] && _0x53f423[_0x2b5764(0x986)] !== _0x1194c7[_0x2b5764(0x629)] || (_0x53f423[_0x2b5764(0x4b8)] || (_0x53f423[_0x2b5764(0x4b8)] = []),
                                            _0x53f423[_0x2b5764(0x4b8)][_0x2b5764(0x745)](_0x53f423[_0x2b5764(0x505)][_0x2b5764(0x28e)][_0x2b5764(0x9cb)]({
                                                'polyline': {
                                                    'positions': _0x4b3275,
                                                    'width': 0x5,
                                                    'material': Cesium[_0x2b5764(0x75c)]['fromCssColorString'](_0x2b5764(0x3c2)),
                                                    'clampToGround': !0x0
                                                }
                                            })),
                                            _0x53f423[_0x2b5764(0x84a)]['show'] = !0x1),
                                            _0x53f423[_0x2b5764(0x79e)][_0x2b5764(0x9ea)]({
                                                'object': _0x53f423['polyline']
                                            });
                                    }
                                }
                            }
                        }(0x0, _0x3fe00c);
                    }, Cesium['ScreenSpaceEventType']['RIGHT_CLICK']),
                    this[_0x6d92d3(0x110)][_0x6d92d3(0x9ea)](!0x0);
            }
            ,
            _0x2308ca['prototype'][_0x324b8e(0x25c)] = function () {
                const _0x61e19d = _0x324b8e;
                this[_0x61e19d(0x31a)] = !0x1,
                    this['isDrawing'] = !0x1,
                    this[_0x61e19d(0x26b)][_0x61e19d(0x446)](Cesium['ScreenSpaceEventType']['LEFT_CLICK']),
                    this[_0x61e19d(0x26b)]['removeInputAction'](Cesium[_0x61e19d(0x50b)][_0x61e19d(0x963)]),
                    this[_0x61e19d(0x26b)][_0x61e19d(0x446)](Cesium[_0x61e19d(0x50b)]['RIGHT_CLICK']),
                    this[_0x61e19d(0x110)]['raiseEvent'](!0x1);
            }
            ,
            _0x2308ca[_0x324b8e(0x74f)][_0x324b8e(0x3b3)] = function () {
                const _0x923169 = _0x324b8e;
                this[_0x923169(0x25c)](),
                    this['polylines'] && (this[_0x923169(0x9d8)]['removeAll'](),
                        this[_0x923169(0x505)]['scene'][_0x923169(0x51f)][_0x923169(0x77c)](this['polylines']),
                        this[_0x923169(0x9d8)] = void 0x0),
                    this[_0x923169(0xa16)] && (this[_0x923169(0x505)][_0x923169(0x28e)][_0x923169(0x77c)](this['polygon']),
                        this[_0x923169(0xa16)] = void 0x0),
                    this[_0x923169(0x92e)] && (this['points'][_0x923169(0x307)](),
                        this[_0x923169(0x505)][_0x923169(0x80b)]['primitives'][_0x923169(0x77c)](this[_0x923169(0x92e)]),
                        this[_0x923169(0x92e)] = void 0x0);
            }
            ;
        var _0x1d2051 = 'referencePoint'
            , _0x22339f = _0x324b8e(0x594)
            , _0xc9e560 = function (_0x22be5c, _0xa697cd) {
                const _0x15ebff = _0x324b8e;
                if (!Adapter[_0x15ebff(0x14b)](_0x22be5c) || !Adapter[_0x15ebff(0x14b)](_0xa697cd))
                    throw new Adapter[(_0x15ebff(0x335))]('scene\x20and\x20mode\x20is\x20required!');
                this[_0x15ebff(0x26b)] = new Adapter[(_0x15ebff(0x820))](_0x22be5c[_0x15ebff(0x9e9)]),
                    this[_0x15ebff(0x80b)] = _0x22be5c,
                    this[_0x15ebff(0x31a)] = !0x1,
                    this[_0x15ebff(0x407)] = Adapter['Color'][_0x15ebff(0x7a1)],
                    this[_0x15ebff(0x148)] = Adapter[_0x15ebff(0x75c)][_0x15ebff(0x64b)],
                    this['setEditObject'](_0xa697cd),
                    this[_0x15ebff(0x624)] = !0x1,
                    this[_0x15ebff(0x3ca)] = new Adapter[(_0x15ebff(0x425))]();
            };
        function _0xb2771f(_0x34c818, _0x15ad9d) {
            const _0x3750c4 = _0x324b8e;
            var _0x536ca5 = _0x34c818[_0x3750c4(0x821)](_0x15ad9d[_0x3750c4(0x15e)]);
            if (Adapter[_0x3750c4(0x14b)](_0x536ca5) && (Adapter[_0x3750c4(0x225)](_0x536ca5['id'], _0x536ca5[_0x3750c4(0x7b3)]['id']),
                Adapter[_0x3750c4(0x14b)](_0x536ca5[_0x3750c4(0x7b3)])))
                return _0x536ca5;
        }
        Object['defineProperties'](_0xc9e560[_0x324b8e(0x74f)], {
            'isEditZ': {
                'get': function () {
                    return this['_editZ'];
                },
                'set': function (_0x3bef3d) {
                    const _0xffd46c = _0x324b8e;
                    this[_0xffd46c(0x624)] = _0x3bef3d;
                }
            },
            'changedEvt': {
                'get': function () {
                    const _0x47a648 = _0x324b8e;
                    return this[_0x47a648(0x3ca)];
                }
            }
        }),
            _0xc9e560[_0x324b8e(0x74f)][_0x324b8e(0x9d7)] = function (_0x15118c) {
                const _0x363070 = _0x324b8e;
                if (Adapter[_0x363070(0x14b)](_0x15118c[_0x363070(0x715)]) || Adapter['defined'](_0x15118c[_0x363070(0x45f)])) {
                    if (this['clear'](),
                        this[_0x363070(0x68f)] = _0x15118c,
                        this[_0x363070(0x715)] = _0x15118c[_0x363070(0x715)],
                        Adapter[_0x363070(0x14b)](this['_polygon'])) {
                        var _0x1bb2f6 = this[_0x363070(0x715)][_0x363070(0xa94)][_0x363070(0x449)](0x0);
                        if (!Array[_0x363070(0x43e)](_0x1bb2f6)) {
                            if (!Array['isArray'](_0x1bb2f6[_0x363070(0x9b1)]))
                                throw new Adapter[(_0x363070(0x335))](_0x363070(0x7e5));
                            _0x1bb2f6 = _0x1bb2f6['positions'];
                        }
                        this[_0x363070(0x925)] = _0x1bb2f6;
                    }
                    this[_0x363070(0x45f)] = _0x15118c['_polyline'],
                        Adapter[_0x363070(0x14b)](this[_0x363070(0x45f)]) && (this[_0x363070(0x925)] = this[_0x363070(0x45f)][_0x363070(0x9b1)][_0x363070(0x449)](0x0)),
                        this[_0x363070(0x49a)] = this[_0x363070(0x80b)]['primitives']['add'](new Adapter['BillboardCollection']({
                            'depthTestEnable': !0x1
                        }));
                    for (var _0x2ae5ac = 0x0; _0x2ae5ac < this[_0x363070(0x925)][_0x363070(0x376)]; _0x2ae5ac++)
                        this['_editPoints'][_0x363070(0x9cb)]({
                            'id': _0x363070(0x3a1) + _0x2ae5ac,
                            'position': this[_0x363070(0x925)][_0x2ae5ac],
                            'image': _0x4add1a('Assets/Textures/vertex-edit.png')
                        });
                    this[_0x363070(0x970)] = -0x1,
                        this['_editPoint'] = void 0x0,
                        this[_0x363070(0x73e)] = [],
                        this[_0x363070(0x3a2)] = this[_0x363070(0x80b)][_0x363070(0x51f)]['add'](new Adapter[(_0x363070(0x620))]({
                            'depthTestEnable': !0x1
                        }));
                    for (_0x2ae5ac = 0x0; _0x2ae5ac < this['_positions']['length'] - 0x1; _0x2ae5ac++) {
                        var _0x47dcf3 = new Adapter[(_0x363070(0x85d))]();
                        Adapter[_0x363070(0x85d)][_0x363070(0x9cb)](this[_0x363070(0x925)][_0x2ae5ac], this[_0x363070(0x925)][_0x2ae5ac + 0x1], _0x47dcf3),
                            Adapter[_0x363070(0x85d)]['multiplyByScalar'](_0x47dcf3, 0.5, _0x47dcf3),
                            this[_0x363070(0x73e)][_0x363070(0x745)](_0x47dcf3);
                    }
                    Adapter[_0x363070(0x14b)](this[_0x363070(0x715)]) && (_0x47dcf3 = new Adapter[(_0x363070(0x85d))](),
                        (Adapter[_0x363070(0x85d)][_0x363070(0x9cb)](this[_0x363070(0x925)][0x0], this[_0x363070(0x925)][this['_positions'][_0x363070(0x376)] - 0x1], _0x47dcf3),
                            Adapter['Cartesian3'][_0x363070(0x7d7)](_0x47dcf3, 0.5, _0x47dcf3),
                            this[_0x363070(0x73e)][_0x363070(0x745)](_0x47dcf3)));
                    for (_0x2ae5ac = 0x0; _0x2ae5ac < this[_0x363070(0x73e)][_0x363070(0x376)]; _0x2ae5ac++)
                        this[_0x363070(0x3a2)][_0x363070(0x9cb)]({
                            'id': 'referenceAddPoint_' + _0x2ae5ac,
                            'position': this[_0x363070(0x73e)][_0x2ae5ac],
                            'image': _0x4add1a(_0x363070(0x3cd))
                        });
                    this[_0x363070(0x54e)]();
                }
            }
            ,
            _0xc9e560['prototype'][_0x324b8e(0x54e)] = function () {
                const _0x5a3814 = _0x324b8e;
                if (0x1 != this['active']) {
                    this['active'] = !0x0;
                    var _0x132b8a = this;
                    this[_0x5a3814(0x26b)][_0x5a3814(0xad5)](function (_0xef0f68) {
                        !function (_0x47f07d, _0x5b4a69) {
                            const _0x230570 = _0x557c;
                            var _0x50a5f8 = _0x5b4a69;
                            if (_0x50a5f8 && _0x50a5f8[_0x230570(0x31a)]) {
                                var _0x20265e = _0xb2771f(_0x50a5f8[_0x230570(0x80b)], _0x47f07d);
                                if (Adapter[_0x230570(0x14b)](_0x20265e)) {
                                    var _0x2c2404 = _0x20265e['id'];
                                    if (!Adapter['defined'](_0x2c2404))
                                        return;
                                    var _0x343267 = [];
                                    if ('string' == typeof _0x2c2404 && (_0x343267 = _0x2c2404['split']('_')),
                                        0x2 == _0x343267['length']) {
                                        if (_0x343267[0x0] === _0x1d2051)
                                            _0x50a5f8['_editPointIndex'] = parseInt(_0x343267[0x1]),
                                                _0x50a5f8[_0x230570(0x7db)] = _0x20265e[_0x230570(0x7b3)],
                                                _0x50a5f8['_editPoint'][_0x230570(0x75c)] = _0x50a5f8[_0x230570(0x148)],
                                                _0x50a5f8[_0x230570(0x80b)][_0x230570(0x452)][_0x230570(0x98f)] = !0x1,
                                                _0x50a5f8['scene'][_0x230570(0x452)][_0x230570(0x3b4)] = !0x1;
                                        else {
                                            if (_0x343267[0x0] === _0x22339f) {
                                                var _0x3c20a0 = parseInt(_0x343267[0x1])
                                                    , _0x1cb242 = _0x50a5f8[_0x230570(0x73e)][_0x3c20a0];
                                                (_0x2a4f41 = _0x50a5f8[_0x230570(0x925)])['splice'](_0x3c20a0 + 0x1, 0x0, _0x1cb242);
                                                var _0x409f16 = _0x50a5f8[_0x230570(0x45f)];
                                                Adapter[_0x230570(0x14b)](_0x409f16) && (_0x409f16[_0x230570(0x9b1)] = new Adapter['CallbackProperty'](function () {
                                                    return _0x2a4f41;
                                                }
                                                    , !0x1));
                                                var _0x49f18e = _0x50a5f8['_polygon'];
                                                if (Adapter[_0x230570(0x14b)](_0x49f18e)) {
                                                    var _0x4e756a = new Adapter[(_0x230570(0x107))](function () {
                                                        return _0x2a4f41;
                                                    }
                                                        , !0x1)
                                                        , _0x2a4f41 = _0x49f18e[_0x230570(0xa94)][_0x230570(0x449)](0x0);
                                                    Array['isArray'](_0x2a4f41) ? _0x49f18e[_0x230570(0xa94)] = _0x4e756a : _0x49f18e['hierarchy'][_0x230570(0x9b1)] = _0x4e756a;
                                                }
                                                _0x50a5f8[_0x230570(0x438)](),
                                                    _0x50a5f8[_0x230570(0x6ad)]();
                                            }
                                        }
                                    }
                                } else
                                    _0x5b4a69['clear']();
                            }
                        }(_0xef0f68, _0x132b8a);
                    }, Adapter[_0x5a3814(0x50b)][_0x5a3814(0xac3)]),
                        this[_0x5a3814(0x26b)][_0x5a3814(0xad5)](function (_0x343445) {
                            !function (_0x8861d2, _0x4cb726) {
                                const _0x1f361e = _0x557c;
                                var _0x777abe = _0x4cb726;
                                _0x777abe && _0x777abe[_0x1f361e(0x31a)] && (_0x777abe[_0x1f361e(0x970)] = -0x1,
                                    Adapter['defined'](_0x777abe[_0x1f361e(0x7db)]) && (_0x777abe[_0x1f361e(0x7db)]['Color'] = _0x777abe[_0x1f361e(0x407)],
                                        _0x777abe[_0x1f361e(0x7db)] = void 0x0),
                                    _0x777abe[_0x1f361e(0x80b)]['_screenSpaceCameraController']['enableRotate'] = !0x0,
                                    _0x777abe[_0x1f361e(0x80b)][_0x1f361e(0x452)][_0x1f361e(0x3b4)] = !0x0,
                                    _0x777abe[_0x1f361e(0x3ca)][_0x1f361e(0x9ea)](_0x777abe[_0x1f361e(0x925)]));
                            }(0x0, _0x132b8a);
                        }, Adapter[_0x5a3814(0x50b)]['LEFT_UP']),
                        this[_0x5a3814(0x26b)][_0x5a3814(0xad5)](function (_0x504688) {
                            !function (_0x47cc7d, _0x546e13) {
                                const _0x307aa1 = _0x557c;
                                var _0x404c00 = _0x546e13;
                                if (_0x404c00 && _0x404c00[_0x307aa1(0x31a)] && _0x404c00[_0x307aa1(0x970)] > -0x1 && _0x404c00[_0x307aa1(0x80b)][_0x307aa1(0x452)][_0x307aa1(0x776)][_0x307aa1(0x694)][0x0]) {
                                    var _0x43ed1d, _0xe1f692 = new Adapter[(_0x307aa1(0xab7))](_0x47cc7d[_0x307aa1(0x743)]['x'], _0x47cc7d[_0x307aa1(0x743)]['y']), _0x1b5b63 = _0x404c00[_0x307aa1(0x45f)], _0x10e214 = _0x404c00[_0x307aa1(0x715)], _0x5cef7b = !0x0;
                                    if (Adapter[_0x307aa1(0x14b)](_0x1b5b63) && (_0x5cef7b = _0x1b5b63['clampToGround']),
                                        Adapter[_0x307aa1(0x14b)](_0x10e214) && (_0x5cef7b = !_0x10e214['perPositionHeight']),
                                        Adapter[_0x307aa1(0x14b)](_0x5cef7b) && _0x5cef7b[_0x307aa1(0x810)])
                                        _0x43ed1d = _0x404c00[_0x307aa1(0x80b)]['pickPosition'](_0xe1f692);
                                    else {
                                        if (_0x404c00[_0x307aa1(0x624)]) {
                                            var _0x3511d0 = _0x404c00[_0x307aa1(0x80b)]['camera'][_0x307aa1(0x68d)](_0xe1f692)
                                                , _0x5cb3b8 = _0x404c00['scene'][_0x307aa1(0xd8)][_0x307aa1(0x68d)](new Adapter[(_0x307aa1(0xab7))](_0xe1f692['x'] + 0x5, _0xe1f692['y']))
                                                , _0x4ead75 = Adapter['Cartesian3'][_0x307aa1(0x695)](_0x3511d0['direction'], _0x5cb3b8[_0x307aa1(0x264)], new Adapter['Cartesian3']())
                                                , _0x1441da = Adapter[_0x307aa1(0x85d)]['normalize'](_0x4ead75, new Adapter['Cartesian3']());
                                            if (_0x404c00[_0x307aa1(0x80b)][_0x307aa1(0x265)] === Adapter[_0x307aa1(0x6b8)][_0x307aa1(0x35d)]) {
                                                var _0x27fab8 = Adapter[_0x307aa1(0x503)][_0x307aa1(0x634)](_0x404c00[_0x307aa1(0x80b)][_0x307aa1(0xd8)][_0x307aa1(0x6ee)], _0x1441da)
                                                    , _0x2a518c = Adapter[_0x307aa1(0x1a1)][_0x307aa1(0x310)](_0x404c00[_0x307aa1(0x7db)][_0x307aa1(0x15e)]);
                                                _0x2a518c['x'] = 0.1;
                                                var _0x3356be = new Adapter['Ray'](_0x2a518c, Adapter['Cartesian3'][_0x307aa1(0x94c)])
                                                    , _0x36807c = Adapter[_0x307aa1(0x6e6)][_0x307aa1(0x912)](_0x3356be, _0x27fab8);
                                                Adapter[_0x307aa1(0x14b)](_0x36807c) && (_0x43ed1d = Adapter['Transforms'][_0x307aa1(0x93e)](_0x36807c));
                                            } else
                                                _0x27fab8 = Adapter['Plane']['fromPointNormal'](_0x404c00[_0x307aa1(0x80b)]['camera'][_0x307aa1(0x15e)], _0x1441da),
                                                    _0x3356be = new Adapter[(_0x307aa1(0x708))](Adapter[_0x307aa1(0x85d)][_0x307aa1(0x889)], _0x404c00[_0x307aa1(0x7db)]['position']),
                                                    _0x43ed1d = Adapter[_0x307aa1(0x6e6)][_0x307aa1(0x912)](_0x3356be, _0x27fab8);
                                        } else {
                                            _0x3356be = _0x404c00['scene'][_0x307aa1(0xd8)][_0x307aa1(0x68d)](_0xe1f692);
                                            if (_0x404c00['scene'][_0x307aa1(0x265)] === Adapter[_0x307aa1(0x6b8)]['COLUMBUS_VIEW']) {
                                                var _0x305990 = Adapter['Transforms']['convertToColumbusCartesian'](_0x404c00['_editPoint']['position'])
                                                    , _0x19987c = Adapter[_0x307aa1(0x503)][_0x307aa1(0x634)](_0x305990, Adapter['Cartesian3'][_0x307aa1(0x94c)]);
                                                _0x36807c = Adapter[_0x307aa1(0x6e6)][_0x307aa1(0x912)](_0x3356be, _0x19987c),
                                                    _0x43ed1d = Adapter['Transforms']['convertTo3DCartesian'](_0x36807c);
                                            } else {
                                                var _0x26cc7c = new Adapter[(_0x307aa1(0xa4a))](Adapter[_0x307aa1(0x85d)][_0x307aa1(0x889)], Adapter['Cartesian3'][_0x307aa1(0xaa5)](_0x404c00[_0x307aa1(0x7db)][_0x307aa1(0x15e)], Adapter['Cartesian3'][_0x307aa1(0x889)]))
                                                    , _0x4a4d08 = Adapter[_0x307aa1(0x6e6)][_0x307aa1(0x5be)](_0x3356be, _0x26cc7c);
                                                _0x43ed1d = Adapter['Ray']['getPoint'](_0x3356be, _0x4a4d08[_0x307aa1(0x6a4)]);
                                            }
                                        }
                                    }
                                    if (!Adapter['defined'](_0x43ed1d))
                                        return;
                                    _0x404c00[_0x307aa1(0x7db)]['position'] = _0x43ed1d;
                                    var _0x31b1cd = _0x404c00[_0x307aa1(0x925)];
                                    _0x31b1cd[_0x404c00[_0x307aa1(0x970)]] = _0x43ed1d,
                                        Adapter['defined'](_0x1b5b63) && (_0x1b5b63[_0x307aa1(0x9b1)] = new Adapter[(_0x307aa1(0x107))](function () {
                                            return _0x31b1cd;
                                        }
                                            , !0x1)),
                                        Adapter[_0x307aa1(0x14b)](_0x10e214) && (_0x10e214[_0x307aa1(0xa94)] = new Adapter[(_0x307aa1(0x107))](function () {
                                            return {
                                                'positions': _0x31b1cd,
                                                'holes': []
                                            };
                                        }
                                            , !0x1)),
                                        _0x404c00[_0x307aa1(0x6ad)]();
                                }
                            }(_0x504688, _0x132b8a);
                        }, Adapter['ScreenSpaceEventType']['MOUSE_MOVE']),
                        this[_0x5a3814(0x26b)][_0x5a3814(0xad5)](function (_0x575826) {
                            !function (_0x37765c, _0x5e74da) {
                                const _0x669662 = _0x557c;
                                var _0x2ec22c = _0x5e74da;
                                if (_0x2ec22c && _0x2ec22c[_0x669662(0x31a)]) {
                                    var _0x38ab24 = _0xb2771f(_0x2ec22c['scene'], _0x37765c);
                                    if (Adapter[_0x669662(0x14b)](_0x38ab24)) {
                                        var _0x5ecca1 = _0x38ab24['id'];
                                        if (!Adapter[_0x669662(0x14b)](_0x5ecca1))
                                            return;
                                        var _0x1c216f = [];
                                        if ('string' == typeof _0x5ecca1 && (_0x1c216f = _0x5ecca1[_0x669662(0x89c)]('_')),
                                            0x2 == _0x1c216f['length'] && _0x1c216f[0x0] === _0x1d2051) {
                                            var _0x31b32a = parseInt(_0x1c216f[0x1])
                                                , _0x2cccee = _0x2ec22c[_0x669662(0x925)];
                                            _0x2cccee[_0x669662(0x646)](_0x31b32a, 0x1);
                                            var _0x168f92 = _0x2ec22c[_0x669662(0x45f)];
                                            Adapter[_0x669662(0x14b)](_0x168f92) && (_0x168f92['positions'] = new Adapter[(_0x669662(0x107))](function () {
                                                return _0x2cccee;
                                            }
                                                , !0x1));
                                            var _0x3cd671 = _0x2ec22c[_0x669662(0x715)];
                                            Adapter[_0x669662(0x14b)](_0x3cd671) && (_0x3cd671['hierarchy'] = new Adapter['CallbackProperty'](function () {
                                                return _0x2cccee;
                                            }
                                                , !0x1)),
                                                _0x2ec22c[_0x669662(0x438)](),
                                                _0x2ec22c[_0x669662(0x6ad)]();
                                        }
                                    }
                                }
                            }(_0x575826, _0x132b8a);
                        }, Adapter[_0x5a3814(0x50b)][_0x5a3814(0x88e)]);
                }
            }
            ,
            _0xc9e560[_0x324b8e(0x74f)]['deactivate'] = function () {
                const _0x3e2521 = _0x324b8e;
                this[_0x3e2521(0x31a)] = !0x1,
                    this[_0x3e2521(0x26b)]['removeInputAction'](Adapter['ScreenSpaceEventType'][_0x3e2521(0xac3)]),
                    this['handler'][_0x3e2521(0x446)](Adapter['ScreenSpaceEventType'][_0x3e2521(0x325)]),
                    this[_0x3e2521(0x26b)]['removeInputAction'](Adapter[_0x3e2521(0x50b)][_0x3e2521(0x963)]),
                    this['handler'][_0x3e2521(0x446)](Adapter[_0x3e2521(0x50b)][_0x3e2521(0x88e)]);
            }
            ,
            _0xc9e560['prototype'][_0x324b8e(0x3b3)] = function () {
                const _0x5a060f = _0x324b8e;
                this[_0x5a060f(0x25c)](),
                    Adapter[_0x5a060f(0x14b)](this[_0x5a060f(0x49a)]) && this[_0x5a060f(0x49a)][_0x5a060f(0x307)](),
                    Adapter[_0x5a060f(0x14b)](this[_0x5a060f(0x970)]) && (this['_editPointIndex'] = -0x1),
                    Adapter[_0x5a060f(0x14b)](this[_0x5a060f(0x7db)]) && (this[_0x5a060f(0x7db)] = void 0x0),
                    Adapter[_0x5a060f(0x14b)](this[_0x5a060f(0x68f)]) && (this[_0x5a060f(0x68f)] = void 0x0),
                    Adapter[_0x5a060f(0x14b)](this['_polygon']) && (this[_0x5a060f(0x715)] = void 0x0),
                    Adapter[_0x5a060f(0x14b)](this[_0x5a060f(0x45f)]) && (this['_polyline'] = void 0x0),
                    Adapter[_0x5a060f(0x14b)](this[_0x5a060f(0x3a2)]) && this[_0x5a060f(0x3a2)][_0x5a060f(0x307)](),
                    Adapter['defined'](this[_0x5a060f(0x73e)]) && (this['_addPositions']['length'] = 0x0),
                    Adapter[_0x5a060f(0x14b)](this[_0x5a060f(0x925)]) && (this[_0x5a060f(0x925)] = void 0x0);
            }
            ,
            _0xc9e560[_0x324b8e(0x74f)][_0x324b8e(0x438)] = function () {
                const _0x588afc = _0x324b8e;
                Adapter[_0x588afc(0x14b)](this[_0x588afc(0x49a)]) && this[_0x588afc(0x49a)]['removeAll'](),
                    this[_0x588afc(0x49a)] = this[_0x588afc(0x80b)][_0x588afc(0x51f)][_0x588afc(0x9cb)](new Adapter[(_0x588afc(0x620))]({
                        'depthTestEnable': !0x1
                    }));
                for (var _0x1691a2 = 0x0; _0x1691a2 < this[_0x588afc(0x925)]['length']; _0x1691a2++)
                    this[_0x588afc(0x49a)]['add']({
                        'id': _0x588afc(0x3a1) + _0x1691a2,
                        'position': this['_positions'][_0x1691a2],
                        'image': _0x4add1a(_0x588afc(0x727))
                    });
                Adapter[_0x588afc(0x14b)](this[_0x588afc(0x970)]) && (this[_0x588afc(0x970)] = -0x1),
                    Adapter[_0x588afc(0x14b)](this[_0x588afc(0x7db)]) && (this['_editPoint'] = void 0x0);
            }
            ,
            _0xc9e560[_0x324b8e(0x74f)][_0x324b8e(0x6ad)] = function () {
                const _0x4d7d7b = _0x324b8e;
                Adapter[_0x4d7d7b(0x14b)](this[_0x4d7d7b(0x3a2)]) && this[_0x4d7d7b(0x3a2)][_0x4d7d7b(0x307)](),
                    this[_0x4d7d7b(0x73e)] = [],
                    this[_0x4d7d7b(0x3a2)] = this[_0x4d7d7b(0x80b)][_0x4d7d7b(0x51f)][_0x4d7d7b(0x9cb)](new Adapter[(_0x4d7d7b(0x620))]({
                        'depthTestEnable': !0x1
                    }));
                for (var _0x66b032 = 0x0; _0x66b032 < this['_positions'][_0x4d7d7b(0x376)] - 0x1; _0x66b032++) {
                    var _0x2e7d16 = new Adapter[(_0x4d7d7b(0x85d))]();
                    Adapter[_0x4d7d7b(0x85d)][_0x4d7d7b(0x9cb)](this[_0x4d7d7b(0x925)][_0x66b032], this[_0x4d7d7b(0x925)][_0x66b032 + 0x1], _0x2e7d16),
                        Adapter[_0x4d7d7b(0x85d)][_0x4d7d7b(0x7d7)](_0x2e7d16, 0.5, _0x2e7d16),
                        this[_0x4d7d7b(0x73e)][_0x4d7d7b(0x745)](_0x2e7d16);
                }
                Adapter[_0x4d7d7b(0x14b)](this[_0x4d7d7b(0x715)]) && (_0x2e7d16 = new Adapter['Cartesian3'](),
                    (Adapter[_0x4d7d7b(0x85d)][_0x4d7d7b(0x9cb)](this[_0x4d7d7b(0x925)][0x0], this[_0x4d7d7b(0x925)][this[_0x4d7d7b(0x925)][_0x4d7d7b(0x376)] - 0x1], _0x2e7d16),
                        Adapter[_0x4d7d7b(0x85d)]['multiplyByScalar'](_0x2e7d16, 0.5, _0x2e7d16),
                        this[_0x4d7d7b(0x73e)][_0x4d7d7b(0x745)](_0x2e7d16)));
                for (_0x66b032 = 0x0; _0x66b032 < this[_0x4d7d7b(0x73e)][_0x4d7d7b(0x376)]; _0x66b032++)
                    this[_0x4d7d7b(0x3a2)][_0x4d7d7b(0x9cb)]({
                        'position': this['_addPositions'][_0x66b032],
                        'id': _0x4d7d7b(0xa79) + _0x66b032,
                        'image': _0x4add1a(_0x4d7d7b(0x3cd))
                    });
            }
            ;
        var _0x260580 = Object[_0x324b8e(0x3e6)]({
            'OCCLUDED': 0x0,
            'OCCLUDED_TRANSLUCENT': 0x1,
            'NON_OCCLUDED': 0x2
        })
            , _0x58febe = Object[_0x324b8e(0x3e6)]({
                'Distance': 0x0,
                'Area': 0x1,
                'DVH': 0x2
            });
        function _0x356de7(_0x336390, _0x13d785, _0x3a1ae6, _0x4894b6) {
            const _0x1f11d7 = _0x324b8e;
            if (!_0x336390 || !Adapter[_0x1f11d7(0x14b)](_0x13d785))
                throw new Adapter['DeveloperError']('viewer\x20and\x20mode\x20is\x20required!');
            this[_0x1f11d7(0x26b)] = new Adapter['ScreenSpaceEventHandler'](_0x336390['scene'][_0x1f11d7(0x9e9)]),
                this[_0x1f11d7(0x505)] = _0x336390,
                this[_0x1f11d7(0x986)] = Adapter[_0x1f11d7(0x225)](_0x3a1ae6, _0x1194c7[_0x1f11d7(0xfe)]),
                this[_0x1f11d7(0x265)] = _0x13d785,
                this[_0x1f11d7(0x616)] = !0x1,
                this[_0x1f11d7(0x31a)] = !0x1,
                this[_0x1f11d7(0xcc)] = [],
                this[_0x1f11d7(0x51e)] = void 0x0,
                this[_0x1f11d7(0x825)] = void 0x0,
                this['_vLabel'] = void 0x0,
                this['_hLabel'] = void 0x0,
                this[_0x1f11d7(0x6c1)] = new Adapter['Event'](),
                this['_activeEvt'] = new Adapter[(_0x1f11d7(0x425))](),
                this[_0x1f11d7(0x251)] = !0x1,
                this['_labelBackgroundColor'] = Adapter[_0x1f11d7(0x75c)]['fromCssColorString']('rgba(38,\x2038,\x2038,\x200.85)'),
                this['_labelPixelOffsetScaleByDistance'] = new Adapter[(_0x1f11d7(0x851))](0x96, 0x3, 0xe4e1c0, 0.5),
                this[_0x1f11d7(0x43b)] = new Adapter[(_0x1f11d7(0xab7))](0xf, 0x0),
                this[_0x1f11d7(0x2f9)] = Adapter[_0x1f11d7(0x75c)]['fromCssColorString'](_0x1f11d7(0x3c2)),
                this[_0x1f11d7(0x9ed)] = Adapter[_0x1f11d7(0x75c)]['ORANGE'][_0x1f11d7(0x918)](0.5),
                this[_0x1f11d7(0x8ac)] = 0x2,
                this[_0x1f11d7(0x571)] = void 0x0,
                this[_0x1f11d7(0x559)] = Adapter[_0x1f11d7(0x225)](_0x4894b6, !0x0),
                this[_0x1f11d7(0x366)] = _0x260580[_0x1f11d7(0x746)];
        }
        Object[_0x324b8e(0xa38)](_0x356de7[_0x324b8e(0x74f)], {
            'activeEvt': {
                'get': function () {
                    const _0x39cb1c = _0x324b8e;
                    return this[_0x39cb1c(0xa1d)];
                }
            },
            'measureEvt': {
                'get': function () {
                    const _0x4d673f = _0x324b8e;
                    return this[_0x4d673f(0x6c1)];
                }
            },
            'disLabel': {
                'get': function () {
                    return this['_disLabel'];
                }
            },
            'areaLabel': {
                'get': function () {
                    const _0x4bacb6 = _0x324b8e;
                    return this[_0x4bacb6(0x51e)];
                }
            },
            'hLabel': {
                'get': function () {
                    return this['_hLabel'];
                }
            },
            'vLabel': {
                'get': function () {
                    const _0x513667 = _0x324b8e;
                    return this[_0x513667(0x2b4)];
                }
            },
            'capturePointSize': {
                'get': function () {
                    const _0x43827b = _0x324b8e;
                    return this[_0x43827b(0x505)]['_capturePointSize'];
                },
                'set': function (_0x127524) {
                    const _0x5e3088 = _0x324b8e;
                    this[_0x5e3088(0x505)][_0x5e3088(0x703)] = _0x127524;
                }
            },
            'capturePointColor': {
                'get': function () {
                    const _0x1bcbf4 = _0x324b8e;
                    return this[_0x1bcbf4(0x505)][_0x1bcbf4(0x101)];
                },
                'set': function (_0x79932) {
                    const _0x1da495 = _0x324b8e;
                    this[_0x1da495(0x505)][_0x1da495(0x101)] = _0x79932;
                }
            },
            'lineColor': {
                'get': function () {
                    const _0x3ae2ab = _0x324b8e;
                    return this[_0x3ae2ab(0x2f9)];
                },
                'set': function (_0x57fb78) {
                    this['_lineColor'] = _0x57fb78;
                }
            },
            'fillColor': {
                'get': function () {
                    return this['_fillColor'];
                },
                'set': function (_0x357b9d) {
                    this['_fillColor'] = _0x357b9d;
                }
            },
            'lineWidth': {
                'get': function () {
                    const _0x85645d = _0x324b8e;
                    return this[_0x85645d(0x8ac)];
                },
                'set': function (_0x213441) {
                    const _0x5bc2f9 = _0x324b8e;
                    this[_0x5bc2f9(0x8ac)] = _0x213441;
                }
            },
            'lineDisplayType': {
                'get': function () {
                    const _0x5da53d = _0x324b8e;
                    return this[_0x5da53d(0x366)];
                },
                'set': function (_0x16a513) {
                    const _0x2e3e02 = _0x324b8e;
                    Adapter[_0x2e3e02(0x636)][_0x2e3e02(0x8d8)][_0x2e3e02(0x305)]['greaterThanOrEquals'](_0x2e3e02(0x5af), _0x16a513, 0x0),
                        Adapter[_0x2e3e02(0x636)]['typeOf'][_0x2e3e02(0x305)]['lessThanOrEquals']('MeasureHandler.lineDisplayType', _0x16a513, 0x2),
                        this[_0x2e3e02(0x366)] = _0x16a513,
                        this[_0x2e3e02(0x9d8)] && (this[_0x2e3e02(0x9d8)][_0x2e3e02(0xa74)] = _0x16a513);
                }
            }
        }),
            _0x356de7[_0x324b8e(0x74f)][_0x324b8e(0x54e)] = function () {
                const _0x444746 = _0x324b8e;
                if (this[_0x444746(0x3b3)](),
                    this[_0x444746(0x31a)])
                    return;
                this[_0x444746(0x31a)] = !0x0;
                let _0x66116 = this;
                this[_0x444746(0x26b)][_0x444746(0xad5)](function (_0x2a69bb) {
                    !function (_0x5b19ac, _0x22a2f4) {
                        const _0x473a20 = _0x557c;
                        let _0x1fb3fe = _0x22a2f4;
                        if (_0x1fb3fe && _0x1fb3fe[_0x473a20(0x31a)]) {
                            let _0x3d3a8e = _0x1fb3fe[_0x473a20(0x505)]['scene'][_0x473a20(0x2ae)](_0x5b19ac[_0x473a20(0x15e)]);
                            if (_0x3d3a8e) {
                                if (_0x1fb3fe[_0x473a20(0x616)])
                                    _0x1fb3fe['mode'] == _0x58febe['DVH'] ? _0x1fb3fe[_0x473a20(0x25c)]() : function (_0x524f1f, _0x106516) {
                                        const _0x34fa7c = _0x473a20;
                                        let _0x290742 = _0x106516;
                                        _0x290742[_0x34fa7c(0x265)] === _0x58febe['Distance'] ? (_0x290742[_0x34fa7c(0x84a)] = _0x290742['polylines']['add']({
                                            'width': _0x290742['_lineWidth'],
                                            'show': _0x290742[_0x34fa7c(0x559)],
                                            'positions': [_0x524f1f, _0x524f1f],
                                            'material': Adapter['Material'][_0x34fa7c(0x427)](Adapter[_0x34fa7c(0x802)]['ColorType'], {
                                                'color': _0x290742['_lineColor']
                                            }),
                                            'clampToGround': !0x0
                                        }),
                                            _0x106516[_0x34fa7c(0x986)] === _0x1194c7['Ground'] && (_0x290742['polyline']['show'] = !0x1,
                                                _0x290742[_0x34fa7c(0x564)] = _0x290742[_0x34fa7c(0x91d)]),
                                            _0x290742[_0x34fa7c(0x48c)][_0x34fa7c(0x745)](_0x524f1f)) : (_0x290742[_0x34fa7c(0x265)] === _0x58febe[_0x34fa7c(0x7d2)] && (_0x290742[_0x34fa7c(0x15f)] = _0x290742['_currentArea']),
                                                _0x290742[_0x34fa7c(0x84a)][_0x34fa7c(0x9b1)]['push'](_0x524f1f)),
                                            _0x290742[_0x34fa7c(0xa16)] && _0x106516['_clampMode'] !== _0x1194c7[_0x34fa7c(0x629)] && (_0x290742['polygon'][_0x34fa7c(0x715)][_0x34fa7c(0xa94)] = _0x290742['polyline'][_0x34fa7c(0x9b1)]),
                                            _0x290742['tmpEntities']['push'](_0x290742[_0x34fa7c(0x505)][_0x34fa7c(0x28e)][_0x34fa7c(0x9cb)]({
                                                'show': _0x290742[_0x34fa7c(0x559)],
                                                'position': _0x524f1f,
                                                'point': {
                                                    'pixelSize': 0x8,
                                                    'color': Adapter[_0x34fa7c(0x75c)][_0x34fa7c(0x652)]('#ffe500')
                                                }
                                            }));
                                    }(_0x3d3a8e, _0x1fb3fe);
                                else
                                    switch (_0x1fb3fe[_0x473a20(0x616)] = !0x0,
                                    _0x1fb3fe[_0x473a20(0x265)]) {
                                        case _0x58febe['Distance']:
                                            !function (_0x134b4a, _0x40c180) {
                                                const _0x303612 = _0x473a20;
                                                let _0x3ba71f = _0x40c180;
                                                _0x40c180[_0x303612(0x986)] === _0x1194c7[_0x303612(0x629)] && (_0x3ba71f['clampToGroundPolylinePositions'] = [],
                                                    _0x3ba71f[_0x303612(0x5b5)] = _0x3ba71f[_0x303612(0x505)][_0x303612(0x28e)][_0x303612(0x9cb)]({
                                                        'polyline': {
                                                            'positions': new Adapter[(_0x303612(0x107))](function () {
                                                                const _0x4f9ff0 = _0x303612;
                                                                return _0x3ba71f[_0x4f9ff0(0x4a2)];
                                                            }
                                                                , !0x1),
                                                            'width': _0x3ba71f[_0x303612(0x8ac)],
                                                            'material': _0x3ba71f[_0x303612(0x2f9)],
                                                            'clampToGround': !0x0
                                                        }
                                                    }));
                                                if (_0x3ba71f[_0x303612(0xcc)][_0x303612(0x376)] = 0x0,
                                                    !_0x3ba71f[_0x303612(0x9d8)]) {
                                                    let _0x41fdd9 = _0x3ba71f[_0x303612(0x251)];
                                                    _0x3ba71f[_0x303612(0x9d8)] = new Adapter[(_0x303612(0x2c2))]({
                                                        'opaqueRS': Adapter['RenderState']['fromCache']({
                                                            'depthMask': _0x41fdd9,
                                                            'depthTest': {
                                                                'enabled': _0x41fdd9
                                                            }
                                                        }),
                                                        'translucentRS': Adapter[_0x303612(0x4ca)][_0x303612(0x6bf)]({
                                                            'depthMask': _0x41fdd9,
                                                            'depthTest': {
                                                                'enabled': _0x41fdd9
                                                            }
                                                        }),
                                                        'lineDisplayType': _0x3ba71f['_clampMode'] === _0x1194c7['Ground'] ? _0x260580[_0x303612(0x7f9)] : _0x3ba71f[_0x303612(0x366)]
                                                    }),
                                                        _0x3ba71f[_0x303612(0x84a)] = _0x3ba71f[_0x303612(0x9d8)][_0x303612(0x9cb)]({
                                                            'width': _0x3ba71f[_0x303612(0x8ac)],
                                                            'show': _0x3ba71f['_showMeasureResult'],
                                                            'positions': [_0x134b4a, _0x134b4a],
                                                            'material': Adapter[_0x303612(0x802)][_0x303612(0x427)](Adapter[_0x303612(0x802)][_0x303612(0x517)], {
                                                                'color': _0x3ba71f['_lineColor']
                                                            }),
                                                            'clampToGround': !0x0
                                                        }),
                                                        _0x3ba71f[_0x303612(0x505)]['scene'][_0x303612(0x51f)][_0x303612(0x9cb)](_0x3ba71f[_0x303612(0x9d8)]),
                                                        _0x3ba71f[_0x303612(0x48c)] = [_0x134b4a],
                                                        _0x3ba71f[_0x303612(0x564)] = 0x0,
                                                        _0x3ba71f[_0x303612(0x91d)] = 0x0,
                                                        _0x3ba71f[_0x303612(0xa01)] = _0x3ba71f[_0x303612(0x505)][_0x303612(0x28e)][_0x303612(0x9cb)]({
                                                            'position': _0x134b4a,
                                                            'show': _0x3ba71f[_0x303612(0x559)],
                                                            'point': {
                                                                'pixelSize': 0x8,
                                                                'color': Adapter[_0x303612(0x75c)][_0x303612(0x652)]('#ffe500')
                                                            }
                                                        }),
                                                        _0x3ba71f[_0x303612(0x6cd)] = _0x3ba71f[_0x303612(0x505)][_0x303612(0x28e)][_0x303612(0x9cb)]({
                                                            'position': _0x134b4a,
                                                            'show': _0x3ba71f['_showMeasureResult'],
                                                            'point': {
                                                                'pixelSize': 0x8,
                                                                'color': Adapter[_0x303612(0x75c)][_0x303612(0x652)](_0x303612(0x8e5))
                                                            }
                                                        });
                                                    let _0x2b2af6 = _0x3ba71f['viewer'][_0x303612(0x80b)][_0x303612(0x51f)]['add'](new Adapter[(_0x303612(0x179))]({
                                                        'depthTestEnable': !0x1
                                                    }));
                                                    _0x3ba71f[_0x303612(0x825)] = _0x2b2af6[_0x303612(0x9cb)]({
                                                        'position': _0x134b4a,
                                                        'font': _0x303612(0x108),
                                                        'fillColor': Adapter[_0x303612(0x75c)][_0x303612(0x7a1)],
                                                        'style': Adapter[_0x303612(0x73d)][_0x303612(0x8da)],
                                                        'showBackground': !0x0,
                                                        'backgroundColor': _0x3ba71f[_0x303612(0x137)],
                                                        'outlineWidth': 0x1,
                                                        'outlineColor': Adapter[_0x303612(0x75c)]['BLUE'],
                                                        'pixelOffset': _0x3ba71f[_0x303612(0x43b)],
                                                        'text': '',
                                                        'show': _0x3ba71f['_showMeasureResult'],
                                                        'horizontalOrigin': Adapter[_0x303612(0xa4b)][_0x303612(0x2e8)]
                                                    }),
                                                        _0x3ba71f['labels'] = _0x2b2af6;
                                                    let _0x11547f = _0x3ba71f[_0x303612(0x986)] == _0x1194c7[_0x303612(0x8fd)]
                                                        , _0x2ca26a = Adapter[_0x303612(0x85d)][_0x303612(0x157)](_0x134b4a);
                                                    _0x3ba71f[_0x303612(0x512)] = _0x3ba71f[_0x303612(0x505)][_0x303612(0x28e)][_0x303612(0x9cb)]({
                                                        'corridor': {
                                                            'positions': [_0x2ca26a, _0x2ca26a],
                                                            'width': 0x14,
                                                            'material': Adapter[_0x303612(0x75c)][_0x303612(0x652)](_0x303612(0x3c2))
                                                        },
                                                        'clampToS3M': _0x11547f,
                                                        'show': !0x1
                                                    });
                                                }
                                                _0x40c180['_clampMode'] === _0x1194c7['Ground'] && (_0x3ba71f[_0x303612(0x84a)]['show'] = !0x1);
                                            }(_0x3d3a8e, _0x1fb3fe);
                                            break;
                                        case _0x58febe[_0x473a20(0x7d2)]:
                                            !function (_0x42a9db, _0x533350) {
                                                const _0x553e74 = _0x473a20;
                                                let _0x77ec43 = _0x533350;
                                                _0x77ec43[_0x553e74(0x939)] = [],
                                                    _0x77ec43[_0x553e74(0xcc)][_0x553e74(0x376)] = 0x0,
                                                    _0x77ec43[_0x553e74(0x251)],
                                                    _0x77ec43['polylines'] = new Adapter[(_0x553e74(0x2c2))](),
                                                    _0x77ec43[_0x553e74(0x84a)] = _0x77ec43['polylines']['add']({
                                                        'width': _0x77ec43[_0x553e74(0x8ac)],
                                                        'positions': [_0x42a9db, _0x42a9db],
                                                        'material': Adapter[_0x553e74(0x802)][_0x553e74(0x427)](Adapter['Material']['ColorType'], {
                                                            'color': _0x77ec43[_0x553e74(0x2f9)]
                                                        }),
                                                        'loop': !0x0
                                                    }),
                                                    _0x77ec43[_0x553e74(0x505)][_0x553e74(0x80b)]['primitives'][_0x553e74(0x9cb)](_0x77ec43[_0x553e74(0x9d8)]),
                                                    _0x77ec43[_0x553e74(0xa01)] = _0x77ec43[_0x553e74(0x505)][_0x553e74(0x28e)]['add']({
                                                        'position': _0x42a9db,
                                                        'point': {
                                                            'pixelSize': 0x8,
                                                            'color': Adapter[_0x553e74(0x75c)][_0x553e74(0x652)](_0x553e74(0x8e5))
                                                        }
                                                    }),
                                                    _0x77ec43[_0x553e74(0x6cd)] = _0x77ec43[_0x553e74(0x505)][_0x553e74(0x28e)][_0x553e74(0x9cb)]({
                                                        'position': _0x42a9db,
                                                        'point': {
                                                            'pixelSize': 0x8,
                                                            'color': Adapter[_0x553e74(0x75c)][_0x553e74(0x652)](_0x553e74(0x8e5))
                                                        }
                                                    });
                                                let _0x4e2f3c = _0x77ec43['viewer']['scene'][_0x553e74(0x51f)][_0x553e74(0x9cb)](new Adapter['LabelCollection']({
                                                    'depthTestEnable': !0x1
                                                }));
                                                _0x77ec43[_0x553e74(0x51e)] = _0x4e2f3c[_0x553e74(0x9cb)]({
                                                    'position': _0x42a9db,
                                                    'font': _0x553e74(0x108),
                                                    'fillColor': Adapter[_0x553e74(0x75c)]['WHITE'],
                                                    'style': Adapter[_0x553e74(0x73d)][_0x553e74(0x8da)],
                                                    'showBackground': !0x0,
                                                    'outlineWidth': 0x1,
                                                    'outlineColor': Adapter['Color'][_0x553e74(0x7e3)],
                                                    'pixelOffset': _0x77ec43[_0x553e74(0x43b)],
                                                    'text': '',
                                                    'show': _0x77ec43[_0x553e74(0x559)],
                                                    'horizontalOrigin': Adapter['HorizontalOrigin'][_0x553e74(0x2e8)]
                                                });
                                                let _0x7c2634 = _0x77ec43['_clampMode'] === _0x1194c7[_0x553e74(0xfe)];
                                                _0x77ec43['polygon'] = _0x77ec43['viewer'][_0x553e74(0x28e)][_0x553e74(0x9cb)]({
                                                    'polygon': {
                                                        'hierarchy': new Adapter[(_0x553e74(0x107))](function () {
                                                            const _0xb216a4 = _0x553e74;
                                                            return {
                                                                'positions': _0x77ec43[_0xb216a4(0x939)],
                                                                'holes': []
                                                            };
                                                        }
                                                            , !0x1),
                                                        'material': _0x77ec43[_0x553e74(0x9ed)],
                                                        'perPositionHeight': _0x7c2634
                                                    },
                                                    'show': !0x1
                                                }),
                                                    _0x77ec43[_0x553e74(0xa84)] = _0x4e2f3c,
                                                    _0x533350[_0x553e74(0x986)] === _0x1194c7[_0x553e74(0x629)] && (_0x77ec43[_0x553e74(0x84a)][_0x553e74(0x198)] = !0x1,
                                                        _0x77ec43[_0x553e74(0xa16)][_0x553e74(0x198)] = !0x0),
                                                    _0x77ec43[_0x553e74(0x51e)][_0x553e74(0x198)] = !0x1;
                                            }(_0x3d3a8e, _0x1fb3fe);
                                            break;
                                        case _0x58febe[_0x473a20(0x295)]:
                                            !function (_0x3f4733, _0x5ca296) {
                                                const _0x2b7772 = _0x473a20;
                                                let _0x2bf7b4 = _0x5ca296;
                                                if (!_0x2bf7b4[_0x2b7772(0x9d8)]) {
                                                    let _0x1c95fc = _0x2bf7b4[_0x2b7772(0x251)];
                                                    _0x2bf7b4[_0x2b7772(0x9d8)] = new Adapter[(_0x2b7772(0x2c2))]({
                                                        'opaqueRS': Adapter[_0x2b7772(0x4ca)][_0x2b7772(0x6bf)]({
                                                            'depthMask': _0x1c95fc,
                                                            'depthTest': {
                                                                'enabled': _0x1c95fc
                                                            }
                                                        }),
                                                        'lineDisplayType': _0x2bf7b4[_0x2b7772(0x366)]
                                                    }),
                                                        _0x2bf7b4[_0x2b7772(0x27d)] = _0x2bf7b4[_0x2b7772(0x9d8)][_0x2b7772(0x9cb)]({
                                                            'width': 0x2,
                                                            'show': _0x2bf7b4[_0x2b7772(0x559)],
                                                            'positions': [_0x3f4733, _0x3f4733],
                                                            'material': Adapter['Material'][_0x2b7772(0x427)](Adapter[_0x2b7772(0x802)][_0x2b7772(0x517)], {
                                                                'color': _0x2bf7b4[_0x2b7772(0x2f9)]
                                                            })
                                                        }),
                                                        _0x2bf7b4[_0x2b7772(0x74c)] = _0x2bf7b4[_0x2b7772(0x9d8)][_0x2b7772(0x9cb)]({
                                                            'width': 0x2,
                                                            'show': _0x2bf7b4[_0x2b7772(0x559)],
                                                            'positions': [_0x3f4733, _0x3f4733],
                                                            'material': Adapter[_0x2b7772(0x802)][_0x2b7772(0x427)](Adapter[_0x2b7772(0x802)][_0x2b7772(0x517)], {
                                                                'color': _0x2bf7b4['_lineColor']
                                                            })
                                                        }),
                                                        _0x2bf7b4['dirPolyline'] = _0x2bf7b4[_0x2b7772(0x9d8)]['add']({
                                                            'width': 0x2,
                                                            'show': _0x2bf7b4[_0x2b7772(0x559)],
                                                            'positions': [_0x3f4733, _0x3f4733],
                                                            'material': Adapter['Material'][_0x2b7772(0x427)](Adapter[_0x2b7772(0x802)]['ColorType'], {
                                                                'color': _0x2bf7b4[_0x2b7772(0x2f9)]
                                                            })
                                                        }),
                                                        _0x2bf7b4[_0x2b7772(0x505)][_0x2b7772(0x80b)][_0x2b7772(0x51f)]['add'](_0x2bf7b4[_0x2b7772(0x9d8)]),
                                                        _0x2bf7b4[_0x2b7772(0xa01)] = _0x2bf7b4[_0x2b7772(0x505)]['entities']['add']({
                                                            'position': _0x3f4733,
                                                            'show': _0x2bf7b4[_0x2b7772(0x559)],
                                                            'point': {
                                                                'pixelSize': 0x8,
                                                                'color': Adapter[_0x2b7772(0x75c)][_0x2b7772(0x652)](_0x2b7772(0x8e5))
                                                            }
                                                        }),
                                                        _0x2bf7b4[_0x2b7772(0x6cd)] = _0x2bf7b4[_0x2b7772(0x505)][_0x2b7772(0x28e)][_0x2b7772(0x9cb)]({
                                                            'position': _0x3f4733,
                                                            'show': _0x2bf7b4[_0x2b7772(0x559)],
                                                            'point': {
                                                                'pixelSize': 0x8,
                                                                'color': Adapter[_0x2b7772(0x75c)][_0x2b7772(0x652)]('#ffe500')
                                                            }
                                                        }),
                                                        _0x2bf7b4[_0x2b7772(0x3ef)] = _0x2bf7b4['viewer']['entities'][_0x2b7772(0x9cb)]({
                                                            'position': _0x3f4733,
                                                            'show': _0x2bf7b4['_showMeasureResult'],
                                                            'point': {
                                                                'pixelSize': 0x8,
                                                                'color': Adapter[_0x2b7772(0x75c)][_0x2b7772(0x652)](_0x2b7772(0x8e5))
                                                            }
                                                        });
                                                    let _0x37d363 = _0x2bf7b4[_0x2b7772(0x505)][_0x2b7772(0x80b)]['primitives']['add'](new Adapter[(_0x2b7772(0x179))]({
                                                        'depthTestEnable': !0x1
                                                    }));
                                                    _0x2bf7b4['_disLabel'] = _0x37d363[_0x2b7772(0x9cb)]({
                                                        'position': _0x3f4733,
                                                        'font': _0x2b7772(0xa67),
                                                        'style': Adapter['LabelStyle'][_0x2b7772(0x8da)],
                                                        'outlineWidth': 0x1,
                                                        'outlineColor': Adapter[_0x2b7772(0x75c)]['BLACK'],
                                                        'showBackground': !0x0,
                                                        'backgroundColor': _0x2bf7b4[_0x2b7772(0x137)],
                                                        'pixelOffset': _0x2bf7b4['_labelPixelOffset'],
                                                        'pixelOffsetScaleByDistance': _0x2bf7b4[_0x2b7772(0x14c)],
                                                        'text': '',
                                                        'show': _0x2bf7b4[_0x2b7772(0x559)],
                                                        'horizontalOrigin': Adapter[_0x2b7772(0xa4b)][_0x2b7772(0x2e8)]
                                                    }),
                                                        _0x2bf7b4[_0x2b7772(0x2b4)] = _0x37d363[_0x2b7772(0x9cb)]({
                                                            'position': _0x3f4733,
                                                            'font': '500\x2016px\x20sans-serif',
                                                            'style': Adapter[_0x2b7772(0x73d)][_0x2b7772(0x8da)],
                                                            'outlineWidth': 0x1,
                                                            'outlineColor': Adapter['Color'][_0x2b7772(0x8e2)],
                                                            'showBackground': !0x0,
                                                            'backgroundColor': _0x2bf7b4['_labelBackgroundColor'],
                                                            'pixelOffset': _0x2bf7b4[_0x2b7772(0x43b)],
                                                            'pixelOffsetScaleByDistance': _0x2bf7b4[_0x2b7772(0x14c)],
                                                            'text': '',
                                                            'show': _0x2bf7b4['_showMeasureResult'],
                                                            'horizontalOrigin': Adapter['HorizontalOrigin'][_0x2b7772(0x2e8)]
                                                        }),
                                                        _0x2bf7b4[_0x2b7772(0x98b)] = _0x37d363[_0x2b7772(0x9cb)]({
                                                            'position': _0x3f4733,
                                                            'font': _0x2b7772(0xa67),
                                                            'style': Adapter[_0x2b7772(0x73d)]['FILL_AND_OUTLINE'],
                                                            'outlineWidth': 0x1,
                                                            'outlineColor': Adapter['Color'][_0x2b7772(0x8e2)],
                                                            'showBackground': !0x0,
                                                            'backgroundColor': _0x2bf7b4['_labelBackgroundColor'],
                                                            'pixelOffset': _0x2bf7b4[_0x2b7772(0x43b)],
                                                            'pixelOffsetScaleByDistance': _0x2bf7b4[_0x2b7772(0x14c)],
                                                            'text': '',
                                                            'show': _0x2bf7b4[_0x2b7772(0x559)],
                                                            'horizontalOrigin': Adapter[_0x2b7772(0xa4b)]['LEFT']
                                                        }),
                                                        _0x2bf7b4[_0x2b7772(0xa84)] = _0x37d363;
                                                }
                                                let _0x1427ac = new Adapter[(_0x2b7772(0x85d))]();
                                                Adapter['Cartesian3'][_0x2b7772(0x7bc)](_0x3f4733, _0x1427ac),
                                                    _0x2bf7b4['plane'] = Adapter[_0x2b7772(0x503)][_0x2b7772(0x634)](_0x3f4733, _0x1427ac),
                                                    _0x2bf7b4['startPoint'] = _0x3f4733,
                                                    _0x2bf7b4[_0x2b7772(0xa22)] = Adapter[_0x2b7772(0x975)][_0x2b7772(0x9d0)](_0x3f4733)[_0x2b7772(0x88d)],
                                                    _0x2bf7b4[_0x2b7772(0x8ba)] = _0x1427ac;
                                                let _0x2da34c = new Adapter[(_0x2b7772(0x85d))]();
                                                Adapter[_0x2b7772(0x85d)]['negate'](_0x1427ac, _0x2da34c),
                                                    _0x2bf7b4[_0x2b7772(0x9d6)] = _0x2da34c,
                                                    _0x2bf7b4[_0x2b7772(0xa01)][_0x2b7772(0x15e)] = _0x3f4733;
                                            }(_0x3d3a8e, _0x1fb3fe);
                                    }
                            }
                        }
                    }(_0x2a69bb, _0x66116);
                }, Adapter[_0x444746(0x50b)][_0x444746(0x6a0)]),
                    this[_0x444746(0x26b)]['setInputAction'](function (_0x3ec29d) {
                        !function (_0x60badc, _0x1373d5) {
                            const _0x200843 = _0x557c;
                            let _0x4706eb = _0x1373d5
                                , _0x5da13d = _0x4706eb[_0x200843(0x505)]['scene'][_0x200843(0x2ae)](_0x60badc['endPosition']);
                            if (_0x4706eb && _0x4706eb[_0x200843(0x31a)] && _0x4706eb[_0x200843(0x616)] && _0x5da13d)
                                switch (_0x4706eb[_0x200843(0x265)]) {
                                    case _0x58febe['Distance']:
                                        !function (_0x4bf33c, _0x1cdacc) {
                                            const _0x97d6ce = _0x200843;
                                            let _0xdf2e75 = _0x1cdacc;
                                            _0xdf2e75['viewer'][_0x97d6ce(0x80b)],
                                                _0xdf2e75['endPoint'] = _0x4bf33c;
                                            let _0x3d94db = _0xdf2e75[_0x97d6ce(0x84a)][_0x97d6ce(0x9b1)]
                                                , _0x438d95 = _0x3d94db[_0x97d6ce(0x376)];
                                            _0x1cdacc['_clampMode'] === _0x1194c7['Ground'] && (_0xdf2e75['mode'] === _0x58febe[_0x97d6ce(0x5c7)] ? _0xdf2e75[_0x97d6ce(0x4a2)] = _0xdf2e75['_accumulationPositions'][_0x97d6ce(0x5f5)]([_0x4bf33c]) : _0xdf2e75[_0x97d6ce(0x4a2)] = _0x3d94db),
                                                (_0x3d94db[_0x438d95 - 0x1] = _0x4bf33c,
                                                    _0xdf2e75[_0x97d6ce(0x84a)][_0x97d6ce(0x9b1)] = _0x3d94db,
                                                    _0xdf2e75[_0x97d6ce(0x6cd)]['position'] = _0x4bf33c);
                                            let _0x45020a = 0x0
                                                , _0x177f16 = _0xdf2e75['_accumulationPositions'][_0x97d6ce(0x5f5)]([_0x4bf33c]);
                                            if (_0xdf2e75[_0x97d6ce(0x84a)]['_distance'] = _0x45020a,
                                                _0xdf2e75[_0x97d6ce(0x825)][_0x97d6ce(0x15e)] = _0x4bf33c,
                                                _0xdf2e75[_0x97d6ce(0x825)][_0x97d6ce(0x198)] = _0x1cdacc[_0x97d6ce(0x986)] !== _0x1194c7[_0x97d6ce(0x629)],
                                                _0x1cdacc[_0x97d6ce(0x986)] === _0x1194c7[_0x97d6ce(0x629)])
                                                return;
                                            for (let _0x5baf28 = 0x0, _0x5b0aae = _0x177f16[_0x97d6ce(0x376)] - 0x1; _0x5baf28 < _0x5b0aae; _0x5baf28++)
                                                _0x45020a += Adapter[_0x97d6ce(0x85d)]['distance'](_0x177f16[_0x5baf28], _0x177f16[_0x5baf28 + 0x1]);
                                            _0xdf2e75[_0x97d6ce(0x1ad)][_0x97d6ce(0x9ea)]({
                                                'distance': _0x45020a[_0x97d6ce(0x7ed)](0x8),
                                                'positions': _0x177f16
                                            });
                                        }(_0x5da13d, _0x4706eb);
                                        break;
                                    case _0x58febe[_0x200843(0x7d2)]:
                                        !function (_0x403870, _0x58af32) {
                                            const _0x354413 = _0x200843;
                                            let _0x373719 = _0x58af32;
                                            if (_0x373719[_0x354413(0x505)][_0x354413(0x80b)],
                                                !_0x403870)
                                                return;
                                            _0x373719[_0x354413(0x7b7)] = _0x403870;
                                            let _0x558f6f = _0x373719['polyline'][_0x354413(0x9b1)]
                                                , _0x5128af = _0x558f6f[_0x354413(0x376)];
                                            _0x558f6f[_0x5128af - 0x1] = _0x403870,
                                                _0x5128af > 0x2 && (_0x373719[_0x354413(0x51e)] && (_0x373719[_0x354413(0x51e)][_0x354413(0x198)] = !0x0),
                                                    _0x373719[_0x354413(0x939)] = _0x558f6f);
                                            if (_0x373719[_0x354413(0x84a)]['positions'] = _0x558f6f,
                                                _0x558f6f['length'] > 0x2) {
                                                let _0x56f3ac;
                                                if (_0x373719[_0x354413(0x6cd)]['position'] = _0x403870,
                                                    _0x373719['_areaLabel']['position'] = _0x403870,
                                                    _0x373719[_0x354413(0x51e)][_0x354413(0x198)] = _0x58af32['_clampMode'] !== _0x1194c7[_0x354413(0x629)],
                                                    _0x58af32['_clampMode'] === _0x1194c7[_0x354413(0x629)])
                                                    return;
                                                _0x56f3ac = _0x356de7['computeArea'](_0x558f6f),
                                                    _0x373719[_0x354413(0x1ad)][_0x354413(0x9ea)]({
                                                        'area': _0x56f3ac[_0x354413(0x7ed)](0x8),
                                                        'positions': _0x558f6f
                                                    });
                                            }
                                        }(_0x5da13d, _0x4706eb);
                                        break;
                                    case _0x58febe[_0x200843(0x295)]:
                                        !function (_0x102dfe, _0x58a53d) {
                                            const _0x552b23 = _0x200843;
                                            let _0x3ded4 = _0x58a53d;
                                            if (_0x3ded4[_0x552b23(0x505)][_0x552b23(0x80b)],
                                                !_0x102dfe)
                                                return;
                                            _0x3ded4[_0x552b23(0x7b7)] = _0x102dfe;
                                            let _0x184aba, _0x42dcc8, _0x22199a = Adapter['Cartographic'][_0x552b23(0x9d0)](_0x102dfe)[_0x552b23(0x88d)];
                                            _0x22199a > _0x3ded4[_0x552b23(0xa22)] ? (_0x184aba = Adapter[_0x552b23(0x503)]['fromPointNormal'](_0x102dfe, _0x3ded4['normal']),
                                                _0x42dcc8 = new Adapter[(_0x552b23(0x708))](_0x3ded4['startPoint'], _0x3ded4[_0x552b23(0x8ba)])) : (_0x184aba = _0x3ded4[_0x552b23(0x2b1)],
                                                    _0x42dcc8 = new Adapter[(_0x552b23(0x708))](_0x102dfe, _0x3ded4[_0x552b23(0x8ba)]));
                                            let _0xc5e3ef = Adapter[_0x552b23(0x6e6)]['rayPlane'](_0x42dcc8, _0x184aba);
                                            if (!_0xc5e3ef && (_0x42dcc8 = new Adapter[(_0x552b23(0x708))](_0x102dfe, _0x3ded4[_0x552b23(0x8ba)]),
                                                _0xc5e3ef = Adapter[_0x552b23(0x6e6)]['rayPlane'](_0x42dcc8, _0x3ded4[_0x552b23(0x2b1)]),
                                                !_0xc5e3ef))
                                                return;
                                            _0x3ded4[_0x552b23(0x27d)]['positions'] = [_0x3ded4[_0x552b23(0x7a2)], _0xc5e3ef],
                                                _0x3ded4[_0x552b23(0x149)][_0x552b23(0x9b1)] = [_0x3ded4[_0x552b23(0x7a2)], _0x102dfe],
                                                _0x3ded4[_0x552b23(0x74c)]['positions'] = [_0x102dfe, _0xc5e3ef],
                                                _0x3ded4[_0x552b23(0x6cd)][_0x552b23(0x15e)] = _0x102dfe,
                                                _0x3ded4[_0x552b23(0x3ef)][_0x552b23(0x15e)] = _0xc5e3ef;
                                            let _0x58e746 = Adapter[_0x552b23(0x85d)]['distance'](_0x3ded4[_0x552b23(0x7a2)], _0x102dfe)['toFixed'](0x8)
                                                , _0x127bef = Adapter[_0x552b23(0x85d)]['distance'](_0x3ded4[_0x552b23(0x7a2)], _0xc5e3ef)[_0x552b23(0x7ed)](0x8)
                                                , _0x42bc87 = Adapter['Cartesian3'][_0x552b23(0xaa5)](_0x102dfe, _0xc5e3ef)['toFixed'](0x8);
                                            _0x22199a > _0x3ded4[_0x552b23(0xa22)] ? (Adapter[_0x552b23(0x85d)][_0x552b23(0x687)](_0x3ded4[_0x552b23(0x7a2)], _0x102dfe, 0.5, _0x3ded4[_0x552b23(0x825)][_0x552b23(0x15e)]),
                                                Adapter[_0x552b23(0x85d)][_0x552b23(0x687)](_0x3ded4[_0x552b23(0x7a2)], _0xc5e3ef, 0.5, _0x3ded4[_0x552b23(0x2b4)][_0x552b23(0x15e)]),
                                                Adapter[_0x552b23(0x85d)][_0x552b23(0x687)](_0x102dfe, _0xc5e3ef, 0.5, _0x3ded4[_0x552b23(0x98b)][_0x552b23(0x15e)])) : (Adapter[_0x552b23(0x85d)][_0x552b23(0x687)](_0x3ded4[_0x552b23(0x7a2)], _0x102dfe, 0.5, _0x3ded4[_0x552b23(0x825)][_0x552b23(0x15e)]),
                                                    Adapter[_0x552b23(0x85d)][_0x552b23(0x687)](_0x102dfe, _0xc5e3ef, 0.5, _0x3ded4[_0x552b23(0x2b4)][_0x552b23(0x15e)]),
                                                    Adapter[_0x552b23(0x85d)][_0x552b23(0x687)](_0x3ded4[_0x552b23(0x7a2)], _0xc5e3ef, 0.5, _0x3ded4[_0x552b23(0x98b)][_0x552b23(0x15e)]),
                                                    _0x127bef = Adapter[_0x552b23(0x85d)][_0x552b23(0xaa5)](_0x102dfe, _0xc5e3ef)[_0x552b23(0x7ed)](0x8),
                                                    _0x42bc87 = Adapter['Cartesian3'][_0x552b23(0xaa5)](_0x3ded4[_0x552b23(0x7a2)], _0xc5e3ef)[_0x552b23(0x7ed)](0x8)),
                                                _0x3ded4['measureEvt'][_0x552b23(0x9ea)]({
                                                    'distance': _0x58e746,
                                                    'directionalPositions': _0x3ded4['dirPolyline'][_0x552b23(0x9b1)],
                                                    'verticalHeight': _0x127bef,
                                                    'verticalPositions': _0x3ded4[_0x552b23(0x74c)][_0x552b23(0x9b1)],
                                                    'horizontalDistance': _0x42bc87,
                                                    'horizontalPositions': _0x3ded4['horizontalPolyline'][_0x552b23(0x9b1)]
                                                });
                                        }(_0x5da13d, _0x4706eb);
                                }
                        }(_0x3ec29d, _0x66116);
                    }, Adapter[_0x444746(0x50b)]['MOUSE_MOVE']),
                    this[_0x444746(0x26b)][_0x444746(0xad5)](function (_0x646941) {
                        !function (_0x46c353, _0x422391) {
                            const _0x567995 = _0x557c;
                            let _0x4df627 = _0x422391;
                            if (_0x4df627 && _0x4df627[_0x567995(0x31a)] && _0x4df627[_0x567995(0x616)]) {
                                let _0x59cfcd;
                                if (_0x4df627['deactivate'](),
                                    _0x4df627[_0x567995(0x84a)] && (_0x4df627[_0x567995(0x265)] === _0x58febe[_0x567995(0x5c7)] ? (_0x4df627[_0x567995(0x9d8)][_0x567995(0x77c)](_0x4df627[_0x567995(0x84a)]),
                                        _0x59cfcd = _0x4df627[_0x567995(0x48c)],
                                        0x0 === _0x4df627[_0x567995(0x9d8)][_0x567995(0x376)] && _0x4df627[_0x567995(0x505)][_0x567995(0x28e)][_0x567995(0x77c)](_0x4df627['spEntity'])) : (_0x4df627[_0x567995(0x84a)]['positions'] = _0x4df627[_0x567995(0x84a)][_0x567995(0x9b1)]['slice'](0x0, _0x4df627[_0x567995(0x84a)][_0x567995(0x9b1)][_0x567995(0x376)] - 0x1),
                                            0x1 === _0x4df627['polyline'][_0x567995(0x9b1)][_0x567995(0x376)] && _0x4df627[_0x567995(0x505)][_0x567995(0x28e)][_0x567995(0x77c)](_0x4df627[_0x567995(0xa01)]),
                                            _0x59cfcd = _0x4df627[_0x567995(0x84a)]['positions']),
                                        _0x4df627['viewer'][_0x567995(0x28e)][_0x567995(0x77c)](_0x4df627[_0x567995(0x6cd)]),
                                        !_0x4df627['polygon'])) {
                                    _0x4df627[_0x567995(0x986)] !== _0x1194c7[_0x567995(0x629)] && _0x4df627[_0x567995(0x986)] !== _0x1194c7[_0x567995(0x8fd)] || (_0x4df627[_0x567995(0x4a2)] = _0x59cfcd,
                                        _0x4df627[_0x567995(0x84a)]['show'] = !0x1),
                                        _0x4df627[_0x567995(0x825)][_0x567995(0x15e)] = _0x59cfcd[_0x59cfcd[_0x567995(0x376)] - 0x1];
                                    let _0x25a43c = 0x0;
                                    if (_0x422391[_0x567995(0x986)] === _0x1194c7[_0x567995(0x629)])
                                        _0x25a43c = function (_0x58cbea, _0x3e3012) {
                                            const _0x318f2 = _0x567995;
                                            let _0x5ef9f6 = 0x0
                                                , _0x31a6c3 = []
                                                , _0x3a09b3 = _0x3e3012['length'] - 0x1;
                                            for (let _0x45c280 = 0x0; _0x45c280 < _0x3a09b3; _0x45c280++) {
                                                let _0x49af41 = _0x3e3012[_0x45c280]
                                                    , _0x120a0f = _0x3e3012[_0x45c280 + 0x1]
                                                    , _0xc896c = Adapter['Cartesian3'][_0x318f2(0x321)](_0x49af41, _0x120a0f) / 0x40
                                                    , _0x2ea67e = Adapter[_0x318f2(0x16d)][_0x318f2(0x2f0)](_0xc896c, 0x615299)
                                                    , _0xb7182b = Adapter[_0x318f2(0x20d)][_0x318f2(0x62b)](_0x49af41, _0x120a0f, _0x2ea67e, _0x31a6c3)
                                                    , _0x2f82b3 = Adapter[_0x318f2(0x85d)][_0x318f2(0x1c4)](_0xb7182b)
                                                    , _0x3058c2 = _0x2f82b3[_0x318f2(0x376)] - 0x1;
                                                for (let _0x433114 = 0x0; _0x433114 < _0x3058c2; _0x433114++) {
                                                    let _0x50f0c7 = _0x2f82b3[_0x433114]
                                                        , _0x2424ee = Adapter[_0x318f2(0x975)]['fromCartesian'](_0x50f0c7)
                                                        , _0x15d928 = _0x58cbea[_0x318f2(0x6f7)][_0x318f2(0xa75)](_0x2424ee);
                                                    _0x2424ee = Adapter[_0x318f2(0x975)][_0x318f2(0xa52)](_0x2424ee[_0x318f2(0x547)], _0x2424ee[_0x318f2(0x21c)], _0x15d928);
                                                    let _0x58ba56 = Adapter[_0x318f2(0x975)][_0x318f2(0x750)](_0x2424ee)
                                                        , _0x4fe46a = _0x2f82b3[_0x433114 + 0x1];
                                                    _0x2424ee = Adapter['Cartographic']['fromCartesian'](_0x4fe46a),
                                                        _0x15d928 = _0x58cbea[_0x318f2(0x6f7)][_0x318f2(0xa75)](_0x2424ee),
                                                        _0x2424ee = Adapter[_0x318f2(0x975)][_0x318f2(0xa52)](_0x2424ee[_0x318f2(0x547)], _0x2424ee[_0x318f2(0x21c)], _0x15d928);
                                                    let _0x36b02c = Adapter['Cartographic'][_0x318f2(0x750)](_0x2424ee);
                                                    _0x5ef9f6 += Adapter[_0x318f2(0x85d)][_0x318f2(0xaa5)](_0x58ba56, _0x36b02c);
                                                }
                                            }
                                            return _0x5ef9f6;
                                        }(_0x4df627[_0x567995(0x505)]['scene'], _0x4df627['_accumulationPositions']);
                                    else {
                                        for (let _0x14f886 = 0x0, _0x360104 = _0x59cfcd['length'] - 0x1; _0x14f886 < _0x360104; _0x14f886++)
                                            _0x25a43c += Adapter['Cartesian3'][_0x567995(0xaa5)](_0x59cfcd[_0x14f886], _0x59cfcd[_0x14f886 + 0x1]);
                                    }
                                    _0x4df627[_0x567995(0x825)][_0x567995(0x198)] = 0x0 !== _0x25a43c,
                                        _0x4df627[_0x567995(0x1ad)][_0x567995(0x9ea)]({
                                            'distance': _0x25a43c[_0x567995(0x7ed)](0x8),
                                            'positions': _0x59cfcd
                                        });
                                }
                                if (_0x4df627[_0x567995(0xa16)]) {
                                    if (_0x59cfcd[_0x567995(0x376)] < 0x3) {
                                        _0x4df627[_0x567995(0x51e)]['show'] = !0x1,
                                            _0x4df627['viewer'][_0x567995(0x28e)][_0x567995(0x77c)](_0x4df627[_0x567995(0xa01)]);
                                        for (let _0x2276bb = 0x0, _0x34d0de = _0x4df627[_0x567995(0xcc)][_0x567995(0x376)]; _0x2276bb < _0x34d0de; _0x2276bb++)
                                            _0x4df627['viewer'][_0x567995(0x28e)]['remove'](_0x4df627['tmpEntities'][_0x2276bb]);
                                        _0x4df627[_0x567995(0xcc)]['length'] = 0x0,
                                            _0x4df627[_0x567995(0x505)][_0x567995(0x28e)][_0x567995(0x77c)](_0x4df627[_0x567995(0x6cd)]),
                                            _0x4df627['polyline'][_0x567995(0x9b1)][_0x567995(0x376)] = 0x0;
                                    }
                                    if (_0x4df627['_areaLabel'][_0x567995(0x198)] = !0x0,
                                        _0x4df627['_clampMode'] != _0x1194c7[_0x567995(0x629)] && _0x4df627[_0x567995(0x986)] != _0x1194c7[_0x567995(0x8fd)] || (_0x4df627[_0x567995(0x84a)][_0x567995(0x198)] = !0x1),
                                        _0x4df627[_0x567995(0x939)] = _0x4df627[_0x567995(0x84a)][_0x567995(0x9b1)],
                                        _0x4df627[_0x567995(0xa16)]['show'] = !0x0,
                                        _0x59cfcd['length'] > 0x2) {
                                        if (_0x4df627[_0x567995(0x986)] !== _0x1194c7['Ground'])
                                            _0x4df627[_0x567995(0x51e)]['position'] = _0x4df627[_0x567995(0x84a)][_0x567995(0x9b1)][_0x4df627['polyline'][_0x567995(0x9b1)][_0x567995(0x376)] - 0x1];
                                        else {
                                            let _0x45c7a9 = _0x4df627[_0x567995(0xcc)][_0x4df627[_0x567995(0xcc)][_0x567995(0x376)] - 0x1][_0x567995(0x9c2)]['_value'];
                                            _0x4df627['_areaLabel'][_0x567995(0x15e)] = _0x45c7a9;
                                        }
                                        if (_0x4df627[_0x567995(0x986)] === _0x1194c7[_0x567995(0x629)]) {
                                            let _0x5350ce = function (_0x11c66d, _0x307ef3) {
                                                const _0x2a134c = _0x567995;
                                                let _0x43af0f = Number[_0x2a134c(0x19b)]
                                                    , _0x1aaa58 = -Number[_0x2a134c(0x19b)]
                                                    , _0x799cb1 = Number[_0x2a134c(0x19b)]
                                                    , _0x54c6ca = -Number[_0x2a134c(0x19b)];
                                                for (let _0x3aade8 = 0x0; _0x3aade8 < _0x307ef3[_0x2a134c(0x376)]; _0x3aade8++) {
                                                    let _0x3b747d = Adapter[_0x2a134c(0x975)]['fromCartesian'](_0x307ef3[_0x3aade8]);
                                                    _0x43af0f = Math['min'](_0x3b747d[_0x2a134c(0x547)], _0x43af0f),
                                                        _0x1aaa58 = Math[_0x2a134c(0x212)](_0x3b747d[_0x2a134c(0x547)], _0x1aaa58),
                                                        _0x799cb1 = Math['min'](_0x3b747d[_0x2a134c(0x21c)], _0x799cb1),
                                                        _0x54c6ca = Math[_0x2a134c(0x212)](_0x3b747d[_0x2a134c(0x21c)], _0x54c6ca);
                                                }
                                                let _0x51f321 = Adapter[_0x2a134c(0x975)][_0x2a134c(0x750)](new Adapter[(_0x2a134c(0x975))](_0x43af0f, _0x799cb1, 0x0))
                                                    , _0x1725b3 = Adapter[_0x2a134c(0x975)][_0x2a134c(0x750)](new Adapter['Cartographic'](_0x1aaa58, _0x54c6ca, 0x0))
                                                    , _0x4641be = Adapter[_0x2a134c(0x85d)][_0x2a134c(0x321)](_0x51f321, _0x1725b3)
                                                    , _0x134c89 = Adapter[_0x2a134c(0x3bc)][_0x2a134c(0x45c)]({
                                                        'positions': _0x307ef3,
                                                        'granularity': _0x4641be / 0x20
                                                    })
                                                    , _0x14894d = Adapter['PolygonGeometry'][_0x2a134c(0x70a)](_0x134c89)
                                                    , _0x30e2dd = 0x0
                                                    , _0x3ff83a = {};
                                                for (let _0xdd3f57 = 0x0; _0xdd3f57 < _0x14894d[_0x2a134c(0x3a5)][_0x2a134c(0x376)]; _0xdd3f57 += 0x3) {
                                                    let _0x15d349, _0x4f8604 = _0x14894d[_0x2a134c(0x3a5)][_0xdd3f57];
                                                    if (_0x3ff83a[_0x4f8604])
                                                        _0x15d349 = _0x3ff83a[_0x4f8604];
                                                    else {
                                                        let _0x30a37a = _0x14894d[_0x2a134c(0x2da)]['position'][_0x2a134c(0x347)][0x3 * _0x4f8604]
                                                            , _0x13893b = _0x14894d[_0x2a134c(0x2da)]['position']['values'][0x3 * _0x4f8604 + 0x1]
                                                            , _0x14f97f = _0x14894d[_0x2a134c(0x2da)][_0x2a134c(0x15e)][_0x2a134c(0x347)][0x3 * _0x4f8604 + 0x2];
                                                        _0x15d349 = new Adapter['Cartesian3'](_0x30a37a, _0x13893b, _0x14f97f);
                                                        let _0x29c3ba = Adapter[_0x2a134c(0x975)][_0x2a134c(0x9d0)](_0x15d349)
                                                            , _0x4f41d8 = _0x11c66d[_0x2a134c(0x6f7)][_0x2a134c(0xa75)](_0x29c3ba);
                                                        if (!_0x4f41d8)
                                                            continue;
                                                        _0x29c3ba = Adapter[_0x2a134c(0x975)]['fromRadians'](_0x29c3ba[_0x2a134c(0x547)], _0x29c3ba['latitude'], _0x4f41d8),
                                                            _0x15d349 = Adapter[_0x2a134c(0x975)][_0x2a134c(0x750)](_0x29c3ba),
                                                            _0x3ff83a[_0x4f8604] = Adapter[_0x2a134c(0x85d)]['clone'](_0x15d349);
                                                    }
                                                    let _0x44cab7, _0x5d3ead = _0x14894d[_0x2a134c(0x3a5)][_0xdd3f57 + 0x1];
                                                    if (_0x3ff83a[_0x5d3ead])
                                                        _0x44cab7 = _0x3ff83a[_0x5d3ead];
                                                    else {
                                                        let _0x44c4f9 = _0x14894d[_0x2a134c(0x2da)][_0x2a134c(0x15e)][_0x2a134c(0x347)][0x3 * _0x5d3ead]
                                                            , _0x54384a = _0x14894d[_0x2a134c(0x2da)][_0x2a134c(0x15e)][_0x2a134c(0x347)][0x3 * _0x5d3ead + 0x1]
                                                            , _0x147ce2 = _0x14894d[_0x2a134c(0x2da)][_0x2a134c(0x15e)][_0x2a134c(0x347)][0x3 * _0x5d3ead + 0x2];
                                                        _0x44cab7 = new Adapter[(_0x2a134c(0x85d))](_0x44c4f9, _0x54384a, _0x147ce2);
                                                        let _0x45fe3e = Adapter[_0x2a134c(0x975)]['fromCartesian'](_0x44cab7)
                                                            , _0xdb64f0 = _0x11c66d['globe'][_0x2a134c(0xa75)](_0x45fe3e);
                                                        if (!_0xdb64f0)
                                                            continue;
                                                        _0x45fe3e = Adapter['Cartographic']['fromRadians'](_0x45fe3e[_0x2a134c(0x547)], _0x45fe3e['latitude'], _0xdb64f0),
                                                            _0x44cab7 = Adapter['Cartographic'][_0x2a134c(0x750)](_0x45fe3e),
                                                            _0x3ff83a[_0x5d3ead] = Adapter[_0x2a134c(0x85d)][_0x2a134c(0x157)](_0x44cab7);
                                                    }
                                                    let _0x1548f1, _0x25e45c = _0x14894d[_0x2a134c(0x3a5)][_0xdd3f57 + 0x2];
                                                    if (_0x3ff83a[_0x25e45c])
                                                        _0x1548f1 = _0x3ff83a[_0x25e45c];
                                                    else {
                                                        let _0x3d6180 = _0x14894d[_0x2a134c(0x2da)][_0x2a134c(0x15e)][_0x2a134c(0x347)][0x3 * _0x25e45c]
                                                            , _0x20163f = _0x14894d[_0x2a134c(0x2da)][_0x2a134c(0x15e)][_0x2a134c(0x347)][0x3 * _0x25e45c + 0x1]
                                                            , _0x114613 = _0x14894d[_0x2a134c(0x2da)][_0x2a134c(0x15e)][_0x2a134c(0x347)][0x3 * _0x25e45c + 0x2];
                                                        _0x1548f1 = new Adapter['Cartesian3'](_0x3d6180, _0x20163f, _0x114613);
                                                        let _0x515ade = Adapter[_0x2a134c(0x975)][_0x2a134c(0x9d0)](_0x1548f1)
                                                            , _0x286aca = _0x11c66d['globe']['getHeight'](_0x515ade);
                                                        if (!_0x286aca)
                                                            continue;
                                                        _0x515ade = Adapter[_0x2a134c(0x975)][_0x2a134c(0xa52)](_0x515ade[_0x2a134c(0x547)], _0x515ade[_0x2a134c(0x21c)], _0x286aca),
                                                            _0x1548f1 = Adapter[_0x2a134c(0x975)][_0x2a134c(0x750)](_0x515ade),
                                                            _0x3ff83a[_0x25e45c] = Adapter['Cartesian3']['clone'](_0x1548f1);
                                                    }
                                                    _0x103b67 = Adapter[_0x2a134c(0x85d)][_0x2a134c(0x7bd)](_0x44cab7, _0x15d349, _0x103b67),
                                                        _0x1a94f9 = Adapter['Cartesian3'][_0x2a134c(0x7bd)](_0x1548f1, _0x15d349, _0x1a94f9),
                                                        _0x20246a = Adapter[_0x2a134c(0x85d)][_0x2a134c(0x695)](_0x103b67, _0x1a94f9, _0x20246a),
                                                        _0x30e2dd += 0.5 * Adapter[_0x2a134c(0x85d)][_0x2a134c(0x451)](_0x20246a);
                                                }
                                                return _0x30e2dd;
                                            }(_0x4df627[_0x567995(0x505)]['scene'], _0x4df627['polyline'][_0x567995(0x9b1)]);
                                            return void _0x4df627[_0x567995(0x1ad)][_0x567995(0x9ea)]({
                                                'area': _0x5350ce['toFixed'](0x8),
                                                'positions': _0x59cfcd
                                            });
                                        }
                                        let _0x5679a6, _0x21205b, _0x1ecb2b, _0x1f6a20 = Adapter[_0x567995(0x8b0)][_0x567995(0x647)](_0x59cfcd), _0x2613be = _0x1f6a20['length'] / 0x3, _0x9f8323 = 0x0;
                                        for (let _0x5ac283 = 0x0; _0x5ac283 < _0x2613be; _0x5ac283++)
                                            _0x5679a6 = _0x59cfcd[_0x1f6a20[0x3 * _0x5ac283]],
                                                _0x21205b = _0x59cfcd[_0x1f6a20[0x3 * _0x5ac283 + 0x1]],
                                                _0x1ecb2b = _0x59cfcd[_0x1f6a20[0x3 * _0x5ac283 + 0x2]],
                                                _0x103b67 = Adapter[_0x567995(0x85d)][_0x567995(0x7bd)](_0x21205b, _0x5679a6, _0x103b67),
                                                _0x1a94f9 = Adapter[_0x567995(0x85d)][_0x567995(0x7bd)](_0x1ecb2b, _0x5679a6, _0x1a94f9),
                                                _0x20246a = Adapter['Cartesian3'][_0x567995(0x695)](_0x103b67, _0x1a94f9, _0x20246a),
                                                _0x9f8323 += 0.5 * Adapter[_0x567995(0x85d)][_0x567995(0x451)](_0x20246a);
                                        _0x4df627[_0x567995(0x1ad)]['raiseEvent']({
                                            'area': _0x9f8323[_0x567995(0x7ed)](0x8),
                                            'positions': _0x59cfcd
                                        });
                                    }
                                }
                            }
                        }(0x0, _0x66116);
                    }, Adapter['ScreenSpaceEventType']['RIGHT_CLICK']),
                    this[_0x444746(0x110)][_0x444746(0x9ea)](!0x0);
            }
            ,
            _0x356de7['prototype'][_0x324b8e(0x25c)] = function () {
                const _0x48390a = _0x324b8e;
                this['active'] && this[_0x48390a(0x110)][_0x48390a(0x9ea)](!0x1),
                    this[_0x48390a(0x31a)] = !0x1,
                    this[_0x48390a(0x616)] = !0x1,
                    this[_0x48390a(0x26b)][_0x48390a(0x446)](Adapter[_0x48390a(0x50b)][_0x48390a(0x6a0)]),
                    this[_0x48390a(0x26b)][_0x48390a(0x446)](Adapter[_0x48390a(0x50b)][_0x48390a(0x963)]),
                    this[_0x48390a(0x26b)][_0x48390a(0x446)](Adapter['ScreenSpaceEventType'][_0x48390a(0x88e)]);
            }
            ,
            _0x356de7[_0x324b8e(0x74f)][_0x324b8e(0x3b3)] = function () {
                const _0x13ebc8 = _0x324b8e;
                this[_0x13ebc8(0x25c)]();
                for (let _0x5dbac9 = 0x0, _0x350d70 = this[_0x13ebc8(0xcc)]['length']; _0x5dbac9 < _0x350d70; _0x5dbac9++)
                    this[_0x13ebc8(0x505)][_0x13ebc8(0x28e)][_0x13ebc8(0x77c)](this[_0x13ebc8(0xcc)][_0x5dbac9]);
                if (this[_0x13ebc8(0x5b5)] && (this[_0x13ebc8(0x505)]['entities'][_0x13ebc8(0x77c)](this[_0x13ebc8(0x5b5)]),
                    this[_0x13ebc8(0x5b5)] = null),
                    this[_0x13ebc8(0xcc)][_0x13ebc8(0x376)] = 0x0,
                    this[_0x13ebc8(0x9d8)] && (this[_0x13ebc8(0x9d8)]['removeAll'](),
                        this[_0x13ebc8(0x505)][_0x13ebc8(0x80b)][_0x13ebc8(0x51f)][_0x13ebc8(0x77c)](this['polylines']),
                        this[_0x13ebc8(0x9d8)] = void 0x0),
                    this[_0x13ebc8(0xa01)] && (this[_0x13ebc8(0x505)][_0x13ebc8(0x28e)][_0x13ebc8(0x77c)](this[_0x13ebc8(0xa01)]),
                        this[_0x13ebc8(0xa01)] = void 0x0),
                    this[_0x13ebc8(0x6cd)] && (this['viewer'][_0x13ebc8(0x28e)][_0x13ebc8(0x77c)](this[_0x13ebc8(0x6cd)]),
                        this[_0x13ebc8(0x6cd)] = void 0x0),
                    this['fpEntity'] && (this[_0x13ebc8(0x505)]['entities']['remove'](this[_0x13ebc8(0x3ef)]),
                        this['fpEntity'] = void 0x0),
                    this[_0x13ebc8(0xa84)])
                    switch (this[_0x13ebc8(0x265)]) {
                        case _0x58febe[_0x13ebc8(0x5c7)]:
                            this[_0x13ebc8(0xa84)][_0x13ebc8(0x77c)](this['_disLabel']);
                            break;
                        case _0x58febe[_0x13ebc8(0x7d2)]:
                            this['labels'][_0x13ebc8(0x77c)](this[_0x13ebc8(0x51e)]);
                            break;
                        case _0x58febe[_0x13ebc8(0x295)]:
                            this['labels'][_0x13ebc8(0x77c)](this[_0x13ebc8(0x825)]),
                                this[_0x13ebc8(0xa84)][_0x13ebc8(0x77c)](this[_0x13ebc8(0x98b)]),
                                this[_0x13ebc8(0xa84)][_0x13ebc8(0x77c)](this[_0x13ebc8(0x2b4)]);
                    }
                this[_0x13ebc8(0xa16)] && (this[_0x13ebc8(0x505)][_0x13ebc8(0x28e)][_0x13ebc8(0x77c)](this[_0x13ebc8(0xa16)]),
                    this[_0x13ebc8(0xa16)] = void 0x0),
                    this[_0x13ebc8(0x512)] && (this[_0x13ebc8(0x505)][_0x13ebc8(0x28e)][_0x13ebc8(0x77c)](this['corridor']),
                        this[_0x13ebc8(0x512)] = void 0x0);
            }
            ;
        let _0x103b67 = new Adapter['Cartesian3']()
            , _0x1a94f9 = new Adapter[(_0x324b8e(0x85d))]()
            , _0x20246a = new Adapter[(_0x324b8e(0x85d))]();
        _0x356de7['computeArea'] = function (_0xb53d2c) {
            const _0x574010 = _0x324b8e;
            let _0x2197e0, _0x30681b, _0x179afe, _0x464ef5 = Adapter[_0x574010(0x8b0)][_0x574010(0x647)](_0xb53d2c), _0xe56485 = _0x464ef5[_0x574010(0x376)] / 0x3, _0x3c2c1d = 0x0;
            for (let _0x5210e9 = 0x0; _0x5210e9 < _0xe56485; _0x5210e9++)
                _0x2197e0 = _0xb53d2c[_0x464ef5[0x3 * _0x5210e9]],
                    _0x30681b = _0xb53d2c[_0x464ef5[0x3 * _0x5210e9 + 0x1]],
                    _0x179afe = _0xb53d2c[_0x464ef5[0x3 * _0x5210e9 + 0x2]],
                    _0x103b67 = Adapter[_0x574010(0x85d)][_0x574010(0x7bd)](_0x30681b, _0x2197e0, _0x103b67),
                    _0x1a94f9 = Adapter[_0x574010(0x85d)]['subtract'](_0x179afe, _0x2197e0, _0x1a94f9),
                    _0x20246a = Adapter[_0x574010(0x85d)][_0x574010(0x695)](_0x103b67, _0x1a94f9, _0x20246a),
                    _0x3c2c1d += 0.5 * Adapter[_0x574010(0x85d)][_0x574010(0x451)](_0x20246a);
            return _0x3c2c1d;
        }
            ;
        var _0x30f826 = 'uniform\x20sampler2D\x20colorTexture;\x0avarying\x20vec2\x20v_textureCoordinates;\x0auniform\x20float\x20speed;\x0auniform\x20float\x20angle;\x0a\x0afloat\x20hash(float\x20x){\x0a\x20\x20\x20\x20return\x20fract(sin(x\x20*\x20133.3)\x20*\x2013.13);\x0a}\x0a\x0avoid\x20main(void){\x0a\x20\x20\x20\x20float\x20time\x20=\x20czm_frameNumber\x20/\x2060.0;\x0a\x20\x20\x20\x20vec2\x20resolution\x20=\x20czm_viewport.zw;\x0a\x20\x20\x20\x20vec2\x20uv\x20=\x20(gl_FragCoord.xy\x20*\x202.0\x20-\x20resolution.xy)\x20/\x20min(resolution.x,\x20resolution.y);\x0a\x20\x20\x20\x20vec3\x20c\x20=\x20vec3(0.6,\x200.7,\x200.8);\x0a\x20\x20\x20\x20float\x20a\x20=\x20angle;\x0a\x20\x20\x20\x20float\x20si\x20=\x20sin(a);\x0a\x20\x20\x20\x20float\x20co\x20=\x20cos(a);\x0a\x20\x20\x20\x20uv\x20*=\x20mat2(co,\x20-si,\x20si,\x20co);\x0a\x20\x20\x20\x20uv\x20*=\x20length(uv\x20+\x20vec2(0.0,\x204.9))\x20*\x200.3\x20+\x201.0;\x0a\x20\x20\x20\x20float\x20v\x20=\x201.0\x20-\x20sin(hash(floor(uv.x\x20*\x20100.0))\x20*\x202.0);\x0a\x20\x20\x20\x20float\x20b\x20=\x20clamp(abs(sin(speed\x20*\x20time\x20*\x20v\x20+\x20uv.y\x20*\x20(5.0\x20/\x20(2.0\x20+\x20v))))\x20-\x200.95,\x200.0,\x201.0)\x20*\x2020.0;\x0a\x20\x20\x20\x20c\x20*=\x20v\x20*\x20b;\x0a\x20\x20\x20\x20out_FragColor\x20=\x20mix(texture(colorTexture,\x20v_textureCoordinates),\x20vec4(c,\x201.0),\x20speed\x20<\x200.00001\x20?\x200.0\x20:\x200.15);\x0a}';
        const _0x5955c3 = Cesium[_0x324b8e(0xa7c)]
            , _0x31c962 = Cesium[_0x324b8e(0x41a)];
        var _0x263ab4 = _0x324b8e(0x95d);
        const _0x287077 = Cesium[_0x324b8e(0xa7c)]
            , _0x129a13 = Cesium[_0x324b8e(0x41a)];
        window[_0x324b8e(0x334)] = Cesium;
        const _0x2ad7f6 = Adapter['Math']
            , _0x293c71 = Adapter['Rectangle']
            , _0x44adb0 = Adapter[_0x324b8e(0x59b)]
            , _0x297809 = Adapter[_0x324b8e(0x67a)]
            , _0x1b1d50 = Adapter['PackingRequest']
            , _0x34a278 = Adapter[_0x324b8e(0x8b9)]
            , _0x2673ab = Adapter[_0x324b8e(0x2b2)]
            , _0x4bb25e = Adapter[_0x324b8e(0x9c9)]
            , _0x6b71ba = Adapter[_0x324b8e(0x660)]
            , _0x2e9d56 = Adapter[_0x324b8e(0x85d)]
            , _0x2970d1 = Adapter[_0x324b8e(0x3cb)];
        function _0x3ce5e8(_0x27b97f) {
            const _0x2a472f = _0x324b8e;
            if (_0x27b97f = Adapter[_0x2a472f(0x225)](_0x27b97f, Adapter[_0x2a472f(0x225)][_0x2a472f(0x8bc)]),
                !Adapter['defined'](_0x27b97f['urls']))
                throw new Adapter['DeveloperError'](_0x2a472f(0x546));
            this[_0x2a472f(0x7f2)] = _0x27b97f[_0x2a472f(0x99c)];
            for (var _0x46ff05 = 0x0; _0x46ff05 < this[_0x2a472f(0x7f2)][_0x2a472f(0x376)]; _0x46ff05++)
                this[_0x2a472f(0x7f2)][_0x46ff05][_0x2a472f(0x376)] > 0x0 && '/' !== this['_urls'][_0x46ff05][this[_0x2a472f(0x7f2)][_0x46ff05][_0x2a472f(0x376)] - 0x1] && (this[_0x2a472f(0x7f2)][_0x46ff05] += '/');
            var _0x3d4083 = _0x27b97f[_0x2a472f(0x99c)][0x0][_0x2a472f(0xa59)](_0x2a472f(0x1c1));
            this[_0x2a472f(0xa32)] = Adapter[_0x2a472f(0x225)](_0x27b97f[_0x2a472f(0xa0c)], !0x0),
                this[_0x2a472f(0x1b0)] = new Adapter[(_0x2a472f(0x425))](),
                this[_0x2a472f(0x3cf)] = !0x1,
                this[_0x2a472f(0x3e8)] = _0x438ab0(),
                this[_0x2a472f(0x3ec)] = _0x27b97f['isCreateSkirt'],
                this[_0x2a472f(0x84f)] = _0x27b97f[_0x2a472f(0xa5c)],
                this[_0x2a472f(0x22b)] = !0x1,
                this[_0x2a472f(0x31b)] = _0x27b97f[_0x2a472f(0x3a9)],
                this[_0x2a472f(0x94b)] = {
                    'heightScale': 0x1,
                    'heightOffset': 0x0,
                    'elementsPerHeight': 0x1,
                    'stride': 0x1
                },
                this[_0x2a472f(0x369)] = void 0x0,
                this[_0x2a472f(0x926)] = [],
                this[_0x2a472f(0x1ec)] = [],
                this[_0x2a472f(0x26a)] = _0x2a472f(0x302),
                this['_quadtree'] = void 0x0,
                this[_0x2a472f(0x9e2)] = _0x27b97f['packingRequest'],
                this[_0x2a472f(0x778)] = {};
            var _0x45d698, _0x4ce4df = this, _0xec0d6e = Adapter[_0x2a472f(0x225)](_0x27b97f[_0x2a472f(0x5d7)], Adapter[_0x2a472f(0x8f3)][_0x2a472f(0x47b)]);
            this[_0x2a472f(0xd9)] = !0x1,
                this[_0x2a472f(0x343)] = Adapter['defaultValue'](_0x27b97f[_0x2a472f(0x850)], !0x1);
            var _0x461416 = 0x0;
            function _0x54c5be(_0x3bbf6c) {
                const _0x5aa1f9 = _0x2a472f;
                if (0x1 === parseFloat(_0x3bbf6c['getElementsByTagName'](_0x5aa1f9(0x859))[0x0][_0x5aa1f9(0x133)])) {
                    var _0x3b2946 = _0x3bbf6c[_0x5aa1f9(0xa35)]('sml:StoreType', void 0x0);
                    _0x4ce4df[_0x5aa1f9(0x1ce)] = _0x3b2946[0x0][_0x5aa1f9(0x7b9)](_0x5aa1f9(0xa7a)),
                        Adapter[_0x5aa1f9(0x14b)](_0x4ce4df[_0x5aa1f9(0x1ce)]) && _0x4ce4df[_0x5aa1f9(0x1ce)] > 0x0 && (_0x4ce4df[_0x5aa1f9(0x2a3)] = !0x0);
                }
                _0x4ce4df['_compressType'] = _0x3bbf6c[_0x5aa1f9(0xa35)](_0x5aa1f9(0x752))[0x0][_0x5aa1f9(0x133)],
                    _0x4ce4df[_0x5aa1f9(0x92a)] = parseInt(_0x3bbf6c['getElementsByTagName'](_0x5aa1f9(0x8f7))[0x0][_0x5aa1f9(0x133)]),
                    _0x4ce4df[_0x5aa1f9(0x239)] = parseInt(_0x3bbf6c[_0x5aa1f9(0xa35)](_0x5aa1f9(0x44f))[0x0][_0x5aa1f9(0x133)]),
                    _0x4ce4df[_0x5aa1f9(0x369)] = new Adapter['GeographicTilingScheme']({
                        'ellipsoid': _0xec0d6e
                    }),
                    _0x4ce4df[_0x5aa1f9(0x369)][_0x5aa1f9(0x4da)] = !0x0,
                    _0x4ce4df[_0x5aa1f9(0x1ba)] = _0x44adb0['getEstimatedLevelZeroGeometricErrorForAHeightmap'](_0xec0d6e, 0x2 * Math[_0x5aa1f9(0x412)](_0x4ce4df['_heightmapWidth'], _0x4ce4df[_0x5aa1f9(0x239)]), _0x4ce4df['_tilingScheme'][_0x5aa1f9(0x42a)](0x0));
                var _0x64d45e = _0x3bbf6c[_0x5aa1f9(0xa35)]('sml:Bounds')[0x0]
                    , _0xf8df88 = _0x2ad7f6['toRadians'](parseFloat(_0x64d45e['getElementsByTagName'](_0x5aa1f9(0x689))[0x0][_0x5aa1f9(0x133)]))
                    , _0x12a154 = _0x2ad7f6[_0x5aa1f9(0x4cc)](parseFloat(_0x64d45e[_0x5aa1f9(0xa35)](_0x5aa1f9(0x43d))[0x0][_0x5aa1f9(0x133)]))
                    , _0x187ff4 = _0x2ad7f6[_0x5aa1f9(0x4cc)](parseFloat(_0x64d45e['getElementsByTagName'](_0x5aa1f9(0xa63))[0x0][_0x5aa1f9(0x133)]))
                    , _0x1895f5 = _0x2ad7f6[_0x5aa1f9(0x4cc)](parseFloat(_0x64d45e['getElementsByTagName'](_0x5aa1f9(0x808))[0x0][_0x5aa1f9(0x133)]));
                _0x4ce4df['_rectangles'][_0x5aa1f9(0x745)](new _0x293c71(_0xf8df88, _0x12a154, _0x187ff4, _0x1895f5));
                for (var _0x49f6c7 = _0x3bbf6c[_0x5aa1f9(0xa35)]('sml:Levels')[0x0][_0x5aa1f9(0xa35)](_0x5aa1f9(0x2f6)), _0x2a15c9 = [], _0x5f1cb7 = 0x0; _0x5f1cb7 < _0x49f6c7['length']; ++_0x5f1cb7) {
                    var _0x7fe882 = _0x49f6c7[_0x5f1cb7];
                    _0x2a15c9['push'](parseInt(_0x7fe882['textContent']));
                }
                if (_0x4ce4df[_0x5aa1f9(0x1ec)][_0x5aa1f9(0x745)](_0x2a15c9),
                    _0x4ce4df[_0x5aa1f9(0x3cf)] = !0x0,
                    _0x4ce4df[_0x5aa1f9(0x3e8)][_0x5aa1f9(0x1d5)](!0x0),
                    _0x461416 < _0x4ce4df[_0x5aa1f9(0x7f2)][_0x5aa1f9(0x376)]) {
                    var _0x22bc94 = _0x4ce4df[_0x5aa1f9(0x7f2)][_0x461416++];
                    _0x22bc94[_0x5aa1f9(0x475)](0x0, _0x22bc94[_0x5aa1f9(0x376)] - 0x1);
                    var _0x46e25d = _0x22bc94 + _0x5aa1f9(0x33c);
                    _0x4bb25e['fetchXML'](_0x46e25d)[_0x5aa1f9(0x685)](_0x54c5be, _0x53657d);
                }
            }
            function _0x349e0f(_0x5e077d) {
                const _0x3550bc = _0x2a472f;
                var _0x2abcb5 = new _0x2970d1()[_0x3550bc(0x6a1)](_0x5e077d)[_0x3550bc(0xa14)]
                    , _0x1b5d49 = _0x2970d1['queryFirstNode'](_0x2abcb5, 'Contents', void 0x0)
                    , _0x3c2450 = _0x2970d1[_0x3550bc(0x2fd)](_0x1b5d49, _0x3550bc(0x36f), void 0x0);
                _0x4ce4df[_0x3550bc(0x5cd)] = _0x2970d1['queryStringValue'](_0x3c2450, _0x3550bc(0x669), void 0x0);
                var _0x4ea36d = _0x2970d1[_0x3550bc(0x2fd)](_0x1b5d49, _0x3550bc(0xe1), void 0x0);
                _0x4ce4df[_0x3550bc(0x411)] = _0x2970d1[_0x3550bc(0x1cf)](_0x4ea36d, 'Identifier', void 0x0);
                var _0x18fdd5 = _0x2970d1['queryFirstNode'](_0x3c2450, _0x3550bc(0x387), void 0x0)
                    , _0x1c50c6 = _0x2970d1[_0x3550bc(0x1cf)](_0x18fdd5, 'LowerCorner', void 0x0)
                    , _0x35513f = _0x2970d1[_0x3550bc(0x1cf)](_0x18fdd5, _0x3550bc(0xcd), void 0x0)
                    , _0x1d2813 = _0x1c50c6[_0x3550bc(0x89c)]('\x20')
                    , _0x5b2a80 = _0x35513f['split']('\x20')
                    , _0x504b51 = parseFloat(_0x1d2813[0x0])
                    , _0x41cd37 = parseFloat(_0x5b2a80[0x0])
                    , _0x340eb4 = parseFloat(_0x1d2813[0x1])
                    , _0x463b0d = parseFloat(_0x5b2a80[0x1]);
                _0x504b51 && _0x41cd37 && _0x340eb4 && _0x463b0d && _0x4ce4df[_0x3550bc(0x926)]['push'](new _0x293c71(_0x504b51, _0x340eb4, _0x41cd37, _0x463b0d));
                var _0x53bc3f = _0x2970d1['queryFirstNode'](_0x1b5d49, _0x3550bc(0xe1), void 0x0)
                    , _0x51a75c = (_0x4ea36d = _0x2970d1[_0x3550bc(0x5c6)](_0x53bc3f, 'TileMatrix', void 0x0),
                        _0x2970d1[_0x3550bc(0x9c7)](_0x4ea36d[0x0], _0x3550bc(0x757), void 0x0))
                    , _0x38aa6e = _0x2970d1[_0x3550bc(0x9c7)](_0x4ea36d[_0x4ea36d[_0x3550bc(0x376)] - 0x1], _0x3550bc(0x757), void 0x0)
                    , _0x3deaff = _0x2970d1[_0x3550bc(0x9c7)](_0x4ea36d[0x0], 'Identifier', void 0x0);
                _0x51a75c = 0x1 / _0x51a75c,
                    _0x38aa6e = 0x1 / _0x38aa6e;
                var _0x523153 = [1.690163571602655e-9, 3.3803271432053056e-9, 6.760654286410611e-9, 1.3521308572821242e-8, 2.7042617145642484e-8, 5.408523429128511e-8, 1.0817046858256998e-7, 2.1634093716513974e-7, 4.3268187433028044e-7, 8.653637486605571e-7, 0.0000017307274973211203, 0.0000034614549946422405, 0.0000069229099892844565, 0.000013845819978568952, 0.000027691639957137904, 0.0000553832799142758, 0.0001107665598285516, 0.0002215331196571032, 0.0004430662393142064, 0.0008861324786284128, 0.001772264957256826, 0.003544529914513652]
                    , _0x273a86 = _0x523153[_0x3550bc(0xa59)](_0x51a75c)
                    , _0x1a60d1 = _0x523153[_0x3550bc(0xa59)](_0x38aa6e);
                for (let _0xa6de72 = 0x0; _0xa6de72 < _0x523153[_0x3550bc(0x376)]; _0xa6de72++)
                    _0x51a75c > _0x523153[_0xa6de72] && _0x523153[_0xa6de72 + 0x1] && _0x51a75c < _0x523153[_0xa6de72 + 0x1] && (_0x273a86 = _0xa6de72 - 0x1),
                        _0x38aa6e > _0x523153[_0xa6de72] && _0x523153[_0xa6de72 + 0x1] && _0x38aa6e < _0x523153[_0xa6de72 + 0x1] && (_0x1a60d1 = _0xa6de72 - 0x1);
                _0x273a86 = Math['max'](_0x273a86, 0x0),
                    _0x4ce4df[_0x3550bc(0x125)] = Adapter[_0x3550bc(0x225)](_0x273a86 - _0x3deaff, 0x0);
                for (var _0x3c2daa = [], _0x40b08c = _0x273a86; _0x40b08c <= _0x1a60d1; _0x40b08c++)
                    _0x3c2daa['push'](_0x40b08c);
                if (_0x4ce4df[_0x3550bc(0x1ec)][_0x3550bc(0x745)](_0x3c2daa),
                    _0x27b97f[_0x3550bc(0x2b0)] > 0x0 && (_0x4ce4df['_blockScale'] = 0x1 * _0x27b97f[_0x3550bc(0x2b0)],
                        _0x4ce4df[_0x3550bc(0x2a3)] = !0x0),
                    _0x4ce4df['_compressType'] = _0x3550bc(0xff),
                    _0x4ce4df['_heightmapWidth'] = _0x27b97f['cellWidth'] || 0x20,
                    _0x4ce4df['_heightmapHeight'] = _0x27b97f[_0x3550bc(0x7d1)] || 0x20,
                    _0x4ce4df['_tilingScheme'] = new Adapter[(_0x3550bc(0x371))]({
                        'ellipsoid': _0xec0d6e
                    }),
                    _0x4ce4df[_0x3550bc(0x369)][_0x3550bc(0x4da)] = !0x0,
                    _0x4ce4df['_levelZeroMaximumGeometricError'] = _0x44adb0['getEstimatedLevelZeroGeometricErrorForAHeightmap'](_0xec0d6e, 0x2 * Math[_0x3550bc(0x412)](_0x4ce4df[_0x3550bc(0x92a)], _0x4ce4df['_heightmapHeight']), _0x4ce4df['_tilingScheme'][_0x3550bc(0x42a)](0x0)),
                    _0x4ce4df['_ready'] = !0x0,
                    _0x4ce4df['_readyPromise'][_0x3550bc(0x1d5)](!0x0),
                    _0x461416 < _0x4ce4df[_0x3550bc(0x7f2)][_0x3550bc(0x376)]) {
                    var _0x3f761a = _0x4ce4df[_0x3550bc(0x7f2)][_0x461416++];
                    if (-0x1 !== _0x3f761a[_0x3550bc(0xa59)](_0x3550bc(0x1c1))) {
                        var _0x480e1f = _0x3f761a + '1.0.0/WMTSCapabilities.xml';
                        _0x4bb25e[_0x3550bc(0x4c9)](_0x480e1f)['then'](_0x349e0f, _0x53657d);
                    } else
                        _0x3f761a[_0x3550bc(0x475)](0x0, _0x3f761a[_0x3550bc(0x376)] - 0x1),
                            _0x480e1f = _0x3f761a + _0x3550bc(0x33c),
                            _0x4bb25e['fetchXML'](_0x480e1f)[_0x3550bc(0x685)](_0x54c5be, _0x53657d);
                }
            }
            function _0x53657d(_0x48bf59) {
                const _0xed6919 = _0x2a472f;
                var _0x43647c = Adapter['defaultValue'](_0x48bf59, _0xed6919(0x2c4) + _0x4ce4df['_url'] + '.');
                _0x45d698 = _0x297809[_0xed6919(0x5d4)](_0x45d698, _0x4ce4df, _0x4ce4df['_errorEvent'], _0x43647c, void 0x0, void 0x0, void 0x0, _0x219b47);
            }
            function _0x219b47() {
                const _0x1e4cc = _0x2a472f;
                if (!Adapter[_0x1e4cc(0x14b)](_0x27b97f['rectangles']) || !Adapter['defined'](_0x27b97f['levels']))
                    throw new Adapter['DeveloperError'](_0x1e4cc(0x5e3));
                _0x4ce4df['_compressType'] = Adapter[_0x1e4cc(0x225)](_0x27b97f[_0x1e4cc(0x401)], _0x1e4cc(0xff)),
                    _0x4ce4df[_0x1e4cc(0x92a)] = Adapter[_0x1e4cc(0x225)](_0x27b97f[_0x1e4cc(0x228)], 0x20),
                    _0x4ce4df[_0x1e4cc(0x239)] = Adapter[_0x1e4cc(0x225)](_0x27b97f[_0x1e4cc(0x3a3)], 0x20),
                    _0x4ce4df['_tilingScheme'] = new Adapter[(_0x1e4cc(0x371))]({
                        'ellipsoid': _0xec0d6e
                    }),
                    _0x4ce4df['_tilingScheme'][_0x1e4cc(0x4da)] = !0x0,
                    _0x4ce4df[_0x1e4cc(0x1ba)] = _0x44adb0['getEstimatedLevelZeroGeometricErrorForAHeightmap'](_0xec0d6e, Math[_0x1e4cc(0x412)](_0x4ce4df[_0x1e4cc(0x92a)], _0x4ce4df[_0x1e4cc(0x239)]), _0x4ce4df['_tilingScheme'][_0x1e4cc(0x42a)](0x0)),
                    _0x4ce4df[_0x1e4cc(0x926)] = _0x27b97f[_0x1e4cc(0x731)],
                    _0x4ce4df[_0x1e4cc(0x1ec)] = _0x27b97f['levels'],
                    _0x4ce4df['_ready'] = !0x0,
                    _0x4ce4df[_0x1e4cc(0x3e8)][_0x1e4cc(0x1d5)](!0x0);
            }
            this[_0x2a472f(0xa32)] ? function () {
                const _0x489603 = _0x2a472f;
                if (-0x1 !== _0x3d4083) {
                    var _0x148307 = (_0x58d67b = _0x4ce4df[_0x489603(0x7f2)][_0x461416++]) + _0x489603(0xa45);
                    _0x4bb25e['fetchText'](_0x148307)[_0x489603(0x685)](_0x349e0f, _0x53657d);
                } else {
                    var _0x58d67b;
                    (_0x58d67b = _0x4ce4df[_0x489603(0x7f2)][_0x461416++])['substring'](0x0, _0x58d67b[_0x489603(0x376)] - 0x1),
                        _0x148307 = _0x58d67b + _0x489603(0x33c),
                        _0x4bb25e['fetchXML'](_0x148307)[_0x489603(0x685)](_0x54c5be, _0x53657d);
                }
            }() : _0x219b47();
        }
        function _0x4fe9dd(_0x5d43ca, _0x13b3ad, _0x497326) {
            for (var _0x44b7fc = '', _0x5d1c6f = _0x497326; _0x5d1c6f >= 0x0; --_0x5d1c6f) {
                var _0x282d23 = 0x1 << _0x5d1c6f
                    , _0x717364 = 0x0;
                _0x2673ab(_0x13b3ad, _0x282d23) ? _0x2673ab(_0x5d43ca, _0x282d23) && (_0x717364 |= 0x1) : (_0x717364 |= 0x2,
                    _0x2673ab(_0x5d43ca, _0x282d23) || (_0x717364 |= 0x1)),
                    _0x44b7fc += _0x717364;
            }
            return _0x44b7fc;
        }
        function _0x262970(_0x184514, _0x5c188e) {
            const _0x5ec7a0 = _0x324b8e;
            var _0x2e57b5 = new DataView(_0x184514)
                , _0x59aaf5 = 0x0
                , _0x25fdac = _0x2e57b5[_0x5ec7a0(0x69d)](_0x59aaf5, !0x0);
            if (_0x5c188e > _0x25fdac - 0x1)
                throw new Adapter[(_0x5ec7a0(0x335))](_0x5ec7a0(0xf9));
            _0x59aaf5 += 0x4;
            var _0x10581f, _0x19b70f, _0x45c250 = [];
            for (_0x10581f = 0x0; _0x10581f < _0x25fdac; _0x10581f++)
                _0x19b70f = _0x2e57b5[_0x5ec7a0(0x69d)](_0x59aaf5, !0x0),
                    _0x45c250[_0x5ec7a0(0x745)](_0x19b70f),
                    _0x59aaf5 += 0x4;
            for (_0x10581f = 0x0; _0x10581f < _0x25fdac; _0x10581f++) {
                if (_0x19b70f = _0x45c250[_0x10581f],
                    _0x10581f === _0x5c188e) {
                    if (0x0 === _0x19b70f)
                        return;
                    return new Uint8Array(_0x184514, _0x59aaf5, _0x19b70f);
                }
                _0x59aaf5 += _0x19b70f;
            }
        }
        function _0x2b9afc(_0x3fb265, _0x49b142, _0x5847c6, _0x4d9194) {
            const _0x3ce757 = _0x324b8e;
            var _0x3f11c7 = Math['min'](_0x3fb265[_0x3ce757(0x1ce)], _0x4d9194)
                , _0x1d65d0 = Math['pow'](0x2, _0x3f11c7)
                , _0x255124 = _0x49b142 % _0x1d65d0;
            return {
                'x': Math['floor'](_0x49b142 / _0x1d65d0),
                'y': Math[_0x3ce757(0x432)](_0x5847c6 / _0x1d65d0),
                'col': _0x255124,
                'row': _0x5847c6 % _0x1d65d0,
                'level': _0x4d9194,
                'blockSize': _0x1d65d0
            };
        }
        function _0xb89041(_0x5d9758, _0xeaff94) {
            const _0x3f13fc = _0x324b8e;
            var _0x5a40a7 = new DataView(_0x5d9758)
                , _0x39a768 = 0x0;
            _0x5a40a7[_0x3f13fc(0x69d)](_0x39a768, !0x0),
                _0x39a768 += 0x4;
            var _0x4360de = _0x5a40a7[_0x3f13fc(0x69d)](_0x39a768, !0x0);
            _0x39a768 += 0x4;
            for (var _0x127aae = _0xeaff94[_0x3f13fc(0x9b2)], _0x1a03c0 = _0xeaff94[_0x3f13fc(0x864)] * _0xeaff94['blockSize'] + _0x127aae, _0x36f2ca = 0x0, _0x213d03 = 0x0, _0x1aeb16 = 0x0; _0x1aeb16 < _0x4360de; _0x1aeb16++) {
                if (_0x1aeb16 < _0x1a03c0)
                    _0x36f2ca += _0x5a40a7['getUint32'](_0x39a768, !0x0);
                else {
                    if (_0x1aeb16 === _0x1a03c0) {
                        _0x213d03 = _0x5a40a7[_0x3f13fc(0x69d)](_0x39a768, !0x0),
                            _0x39a768 += 0x4;
                        break;
                    }
                }
                _0x39a768 += 0x4;
            }
            if (_0x39a768 = 0x8 + 0x4 * _0x4360de,
                0x0 !== _0x213d03)
                return _0x39a768 += _0x36f2ca,
                    new Uint8Array(_0x5d9758)['slice'](_0x39a768, _0x39a768 + _0x213d03)[_0x3f13fc(0x38d)];
        }
        Object[_0x324b8e(0xa38)](_0x3ce5e8[_0x324b8e(0x74f)], {
            'errorEvent': {
                'get': function () {
                    const _0x5b0c91 = _0x324b8e;
                    return this[_0x5b0c91(0x1b0)];
                }
            },
            'tilingScheme': {
                'get': function () {
                    const _0x57d943 = _0x324b8e;
                    if (!this[_0x57d943(0x84b)])
                        throw new Adapter['DeveloperError']('requestTileGeometry\x20must\x20not\x20be\x20called\x20before\x20ready\x20returns\x20true.');
                    return this[_0x57d943(0x369)];
                }
            },
            'ready': {
                'get': function () {
                    const _0x313dfd = _0x324b8e;
                    return this[_0x313dfd(0x3cf)];
                }
            },
            'readyPromise': {
                'get': function () {
                    const _0x64cddb = _0x324b8e;
                    return this[_0x64cddb(0x3e8)][_0x64cddb(0x150)];
                }
            },
            'hasWaterMask': {
                'get': function () {
                    return !0x1;
                }
            },
            'hasVertexNormals': {
                'get': function () {
                    return !0x1;
                }
            },
            'isCreateSkirt': {
                'get': function () {
                    const _0xa548f6 = _0x324b8e;
                    return this[_0xa548f6(0x3ec)];
                },
                'set': function (_0x7f5c53) {
                    const _0x45e8bf = _0x324b8e;
                    _0x7f5c53 !== this[_0x45e8bf(0x3ec)] && (this[_0x45e8bf(0x22b)] = !0x0),
                        this[_0x45e8bf(0x3ec)] = _0x7f5c53;
                }
            },
            'skirtScale': {
                'get': function () {
                    const _0x5569c9 = _0x324b8e;
                    return this[_0x5569c9(0x84f)];
                },
                'set': function (_0x261a89) {
                    const _0x554c3b = _0x324b8e;
                    _0x261a89 !== this[_0x554c3b(0x84f)] && (this[_0x554c3b(0x22b)] = !0x0),
                        this[_0x554c3b(0x84f)] = _0x261a89;
                }
            },
            'hasNormalBuffer': {
                'get': function () {
                    const _0x5a64d7 = _0x324b8e;
                    return this[_0x5a64d7(0xd9)];
                }
            },
            'requestVertexNormals': {
                'get': function () {
                    return this['_requestVertexNormals'];
                }
            }
        }),
            _0x3ce5e8[_0x324b8e(0x74f)][_0x324b8e(0x5c2)] = function (_0x2540e0, _0x498653, _0x225ac3, _0x42de0c, _0x119e7b) {
                const _0x47aba7 = _0x324b8e;
                for (var _0x3e0e33 = [], _0x2f9a23 = 0x0; _0x2f9a23 < _0x119e7b; _0x2f9a23++)
                    for (var _0x27d0d1 = 0x0; _0x27d0d1 < _0x119e7b; _0x27d0d1++) {
                        var _0x41809c = (_0x225ac3 + _0x42de0c * (_0x119e7b - 0x1 - _0x2f9a23) / (_0x119e7b - 0x1)) * (_0x119e7b - 0x1)
                            , _0x30b011 = (_0x498653 + _0x42de0c * _0x27d0d1 / (_0x119e7b - 0x1)) * (_0x119e7b - 0x1)
                            , _0x22eff4 = Math[_0x47aba7(0x432)](_0x41809c)
                            , _0x310f39 = Math['ceil'](_0x41809c)
                            , _0xc3ff77 = Math[_0x47aba7(0x432)](_0x30b011)
                            , _0x1b988b = Math[_0x47aba7(0x826)](_0x30b011)
                            , _0x44eb10 = _0x2540e0[(_0x119e7b - 0x1 - _0x22eff4) * _0x119e7b + _0xc3ff77]
                            , _0x63b5bf = _0x2540e0[(_0x119e7b - 0x1 - _0x22eff4) * _0x119e7b + _0x1b988b]
                            , _0x5964a9 = _0x2540e0[(_0x119e7b - 0x1 - _0x310f39) * _0x119e7b + _0xc3ff77]
                            , _0x51b6a2 = _0x2540e0[(_0x119e7b - 0x1 - _0x310f39) * _0x119e7b + _0x1b988b]
                            , _0x1c9941 = _0x5964a9 * (_0x41809c - _0x22eff4) + _0x44eb10 * (_0x310f39 - _0x41809c)
                            , _0x250591 = _0x51b6a2 * (_0x41809c - _0x22eff4) + _0x63b5bf * (_0x310f39 - _0x41809c);
                        _0x22eff4 === _0x310f39 && (_0x1c9941 = _0x5964a9,
                            _0x250591 = _0x51b6a2);
                        var _0x443b64 = _0x250591 * (_0x30b011 - _0xc3ff77) + _0x1c9941 * (_0x1b988b - _0x30b011);
                        _0xc3ff77 === _0x1b988b && (_0x443b64 = _0x250591),
                            _0x3e0e33[_0x2f9a23 * _0x119e7b + _0x27d0d1] = _0x443b64;
                    }
                return _0x3e0e33;
            }
            ;
        var _0x9bcee6 = new _0x293c71();
        _0x3ce5e8['prototype'][_0x324b8e(0x1f7)] = function (_0xdc4142, _0x1c3092, _0x49bbda, _0x59655f, _0x5a66f1) {
            const _0x28c4ae = _0x324b8e;
            if (!this[_0x28c4ae(0x84b)])
                throw new Adapter['DeveloperError']('requestTileGeometry\x20must\x20not\x20be\x20called\x20before\x20ready\x20returns\x20true.');
            if (0x0 === _0x49bbda) {
                var _0x8176fa = new Array(this['_heightmapWidth'] * this[_0x28c4ae(0x239)]);
                return _0x8176fa['fill'](0x0),
                    this[_0x28c4ae(0xd9)] = !0x1,
                    new Adapter[(_0x28c4ae(0xaba))]({
                        'buffer': _0x8176fa,
                        'width': this[_0x28c4ae(0x92a)],
                        'height': this[_0x28c4ae(0x239)],
                        'skirtMode': this[_0x28c4ae(0x3ec)],
                        'skirtScale': this[_0x28c4ae(0x84f)],
                        'childTileMask': _0x3d2c07(this, _0xdc4142, _0x1c3092, _0x49bbda),
                        'structure': this[_0x28c4ae(0x94b)],
                        'valid': !0x1
                    });
            }
            var _0x4a831a = []
                , _0x2fa600 = this[_0x28c4ae(0x369)][_0x28c4ae(0x566)](_0xdc4142, _0x1c3092, _0x49bbda)
                , _0x118884 = this
                , _0x334222 = !0x1
                , _0x24ce17 = this[_0x28c4ae(0x926)][_0x28c4ae(0x376)] - 0x1
                , _0x14d26b = this[_0x28c4ae(0x1ec)][_0x24ce17][this[_0x28c4ae(0x1ec)][_0x24ce17][_0x28c4ae(0x376)] - 0x1];
            _0x24ce17 = 0x0;
            var _0x4c38b1 = this[_0x28c4ae(0x1ec)][_0x24ce17][this[_0x28c4ae(0x1ec)][_0x24ce17][_0x28c4ae(0x376)] - 0x1];
            if (Adapter[_0x28c4ae(0x14b)](_0x5a66f1) || !(_0x49bbda > _0x4c38b1)) {
                var _0x2b76aa = this
                    , _0x57dc1b = !0x1;
                (Adapter[_0x28c4ae(0x14b)](_0x2b76aa[_0x28c4ae(0x9e2)]) && _0x2b76aa[_0x28c4ae(0x9e2)] === _0x1b1d50[_0x28c4ae(0x60c)] || _0x2b76aa[_0x28c4ae(0x2a3)]) && (_0x57dc1b = !0x0);
                for (var _0x3e9186 = 0x0; _0x3e9186 < this[_0x28c4ae(0x926)][_0x28c4ae(0x376)]; _0x3e9186++) {
                    var _0x1fff7d = _0x293c71[_0x28c4ae(0x2a2)](this[_0x28c4ae(0x926)][_0x3e9186], _0x2fa600, _0x9bcee6);
                    if (Adapter['defined'](_0x5a66f1) && !_0x57dc1b) {
                        var _0x2cb99e = _0x5a66f1[this[_0x28c4ae(0x7f2)][_0x3e9186]];
                        if (Adapter[_0x28c4ae(0x14b)](_0x2cb99e) && (0x1 === _0x2cb99e && (_0x334222 = !0x0),
                            0x0 === _0x2cb99e || 0x2 === _0x2cb99e))
                            continue;
                    }
                    if (0x0 === _0x4a831a['length'] && _0x3e9186 === this[_0x28c4ae(0x926)]['length'] - 0x1 && _0x49bbda > _0x14d26b)
                        break;
                    if (Adapter[_0x28c4ae(0x14b)](_0x1fff7d)) {
                        var _0x56bbec = this[_0x28c4ae(0x1ec)][_0x3e9186][0x0]
                            , _0x1fd109 = this[_0x28c4ae(0x1ec)][_0x3e9186][this[_0x28c4ae(0x1ec)][_0x3e9186][_0x28c4ae(0x376)] - 0x1]
                            , _0x20ce10 = !0x1;
                        if (_0x49bbda >= _0x56bbec && _0x49bbda <= _0x4c38b1 && (_0x20ce10 = !0x0),
                            _0x20ce10) {
                            var _0x4d3803 = 0x0
                                , _0xf481a6 = 0x0
                                , _0x2a18b9 = 0x1
                                , _0x5b8ea4 = _0xdc4142
                                , _0x58e644 = _0x1c3092
                                , _0x312530 = _0x49bbda;
                            _0x312530 > _0x1fd109 && (_0x2a18b9 = 0x1 / Math[_0x28c4ae(0x857)](0x2, _0x312530 - _0x1fd109));
                            for (var _0x4e97ad = _0x2a18b9; _0x312530 > _0x1fd109;)
                                _0x5b8ea4 % 0x2 == 0x1 && (_0x4d3803 += _0x4e97ad),
                                    _0x58e644 % 0x2 == 0x0 && (_0xf481a6 += _0x4e97ad),
                                    _0x4e97ad *= 0x2,
                                    _0x312530--,
                                    _0x5b8ea4 = Math['floor'](0.5 * _0x5b8ea4),
                                    _0x58e644 = Math[_0x28c4ae(0x432)](0.5 * _0x58e644);
                            var _0x25168c = {
                                'srcX': _0x4d3803,
                                'srcY': _0xf481a6,
                                'width': _0x2a18b9,
                                'dataName': _0x118884[_0x28c4ae(0x7f2)][_0x3e9186]
                            }
                                , _0x17a532 = _0x49bbda + '_' + _0xdc4142 + '_' + _0x1c3092;
                            Adapter[_0x28c4ae(0x14b)](_0x118884[_0x28c4ae(0x778)][_0x17a532]) ? _0x118884['_combiInfo'][_0x17a532][_0x28c4ae(0x745)](_0x25168c) : _0x118884['_combiInfo'][_0x17a532] = [_0x25168c],
                                function (_0x47c2a8) {
                                    const _0x30b114 = _0x28c4ae;
                                    var _0x9895be, _0x52224f = _0x118884[_0x30b114(0x7f2)][_0x47c2a8];
                                    if (-0x1 !== _0x52224f[_0x30b114(0xa59)](_0x30b114(0x1c1))) {
                                        var _0x139059 = _0x312530 - _0x118884['wmts_sub'];
                                        _0x9895be = _0x52224f[_0x30b114(0x475)](0x0, _0x52224f[_0x30b114(0x832)]('/')) + '?tilematrix=' + _0x139059 + _0x30b114(0x261) + _0x118884[_0x30b114(0x5cd)] + _0x30b114(0x842) + _0x58e644 + _0x30b114(0x840) + _0x5b8ea4 + _0x30b114(0x3d6) + _0x118884[_0x30b114(0x411)] + _0x30b114(0x509);
                                    } else
                                        _0x52224f[_0x30b114(0x475)](0x0, _0x52224f[_0x30b114(0x376)] - 0x1),
                                            _0x9895be = _0x118884['_urls'][_0x47c2a8] + _0x30b114(0x5e0) + _0x58e644 + '/' + _0x5b8ea4 + _0x30b114(0x277) + _0x312530;
                                    var _0xa08950 = _0x118884[_0x30b114(0x31b)];
                                    Adapter[_0x30b114(0x14b)](_0xa08950) && (_0x9895be = _0xa08950[_0x30b114(0x4c8)](_0x9895be));
                                    var _0x7e8d9c = new _0x6b71ba({
                                        'throttle': !0x0,
                                        'throttleByServer': !0x1,
                                        'type': _0x34a278[_0x30b114(0x3c7)]
                                    })
                                        , _0x336842 = void 0x0;
                                    if (Adapter['defined'](_0x2b76aa[_0x30b114(0x9e2)]) && _0x2b76aa[_0x30b114(0x9e2)] === _0x1b1d50[_0x30b114(0x60c)] && _0x2b76aa[_0x30b114(0x2a3)]) {
                                        _0x7e8d9c[_0x30b114(0x928)] = _0x34a278[_0x30b114(0x40a)];
                                        var _0x4598fc = _0x2b9afc(_0x2b76aa, _0x5b8ea4, _0x58e644, _0x312530);
                                        _0x7e8d9c['quadKey'] = _0x4fe9dd(_0x4598fc['x'], _0x4598fc['y'], _0x4598fc[_0x30b114(0x985)]),
                                            _0x7e8d9c[_0x30b114(0x675)] = _0x4598fc,
                                            _0x7e8d9c[_0x30b114(0x26d)] = _0x9895be[_0x30b114(0x475)](_0x9895be[_0x30b114(0xa59)](_0x30b114(0x2ee)) + 0x6, _0x9895be['indexOf'](_0x30b114(0xa07)));
                                        var _0x3bf5fa = _0x2b76aa[_0x30b114(0x666)][_0x7e8d9c[_0x30b114(0x196)] + '_' + _0x7e8d9c[_0x30b114(0x26d)]];
                                        Adapter[_0x30b114(0x14b)](_0x3bf5fa) && (_0x2b76aa[_0x30b114(0x27e)][_0x30b114(0x681)](_0x3bf5fa),
                                            _0x336842 = {
                                                'buffer': _0x3bf5fa[_0x30b114(0xa3c)]
                                            });
                                    } else {
                                        if (Adapter[_0x30b114(0x14b)](_0x2b76aa['_packingRequest']) && _0x2b76aa['_packingRequest'] === _0x1b1d50['QuadKey'])
                                            _0x7e8d9c[_0x30b114(0x928)] = _0x34a278[_0x30b114(0x8d3)],
                                                _0x7e8d9c['quadKey'] = _0x4fe9dd(_0x5b8ea4, _0x58e644, _0x312530),
                                                _0x7e8d9c[_0x30b114(0x26d)] = _0x9895be['substring'](_0x9895be['indexOf']('datas/') + 0x6, _0x9895be[_0x30b114(0xa59)](_0x30b114(0xa07)));
                                        else
                                            _0x2b76aa[_0x30b114(0x2a3)] && (_0x7e8d9c[_0x30b114(0x928)] = _0x34a278[_0x30b114(0xa7d)],
                                                _0x4598fc = _0x2b9afc(_0x2b76aa, _0x5b8ea4, _0x58e644, _0x312530),
                                                (_0x7e8d9c[_0x30b114(0x196)] = _0x4fe9dd(_0x4598fc['x'], _0x4598fc['y'], _0x4598fc[_0x30b114(0x985)]),
                                                    _0x7e8d9c[_0x30b114(0x675)] = _0x4598fc,
                                                    _0x7e8d9c[_0x30b114(0x26d)] = _0x9895be[_0x30b114(0x475)](_0x9895be['indexOf'](_0x30b114(0x2ee)) + 0x6, _0x9895be['indexOf'](_0x30b114(0xa07)))),
                                                _0x3bf5fa = _0x2b76aa['blockCache'][_0x7e8d9c[_0x30b114(0x196)] + '_' + _0x7e8d9c[_0x30b114(0x26d)]],
                                                Adapter[_0x30b114(0x14b)](_0x3bf5fa) && (_0x2b76aa[_0x30b114(0x27e)][_0x30b114(0x681)](_0x3bf5fa),
                                                    _0x336842 = {
                                                        'buffer': _0x3bf5fa[_0x30b114(0xa3c)]
                                                    }));
                                    }
                                    if (!Adapter[_0x30b114(0x14b)](_0x336842)) {
                                        var _0x9aa4ad = _0x4bb25e[_0x30b114(0x260)](_0x9895be)
                                            , _0x561213 = _0x9895be;
                                        Adapter[_0x30b114(0x14b)](_0x7e8d9c[_0x30b114(0x675)]) && (_0x561213 = _0x118884[_0x30b114(0x7f2)][_0x47c2a8] + _0x30b114(0x5e0) + _0x4598fc['y'] + '/' + _0x4598fc['x'] + _0x30b114(0x277) + _0x312530),
                                            _0x336842 = _0x9aa4ad[_0x30b114(0x139)]({
                                                'url': _0x561213,
                                                'request': _0x7e8d9c
                                            })[_0x30b114(0x5e8)]();
                                    }
                                    Adapter['defined'](_0x336842) && (_0x336842['id'] = _0x47c2a8,
                                        _0x336842['url'] = _0x9895be,
                                        _0x336842[_0x30b114(0x20b)] = _0x7e8d9c),
                                        _0x4a831a[_0x30b114(0x745)](_0x336842);
                                }(_0x3e9186);
                        }
                        if (_0x334222)
                            break;
                    }
                }
                if (!(_0x4a831a[_0x28c4ae(0xa59)](void 0x0) > -0x1))
                    return this['_hasNormalBuffer'] = !0x0,
                        Promise['allSettled'] = function (_0x4e335b) {
                            return new this(function (_0x4edfea, _0x4bf05b) {
                                const _0x15c7dd = _0x557c;
                                if (_0x15c7dd(0x9e7) !== Object[_0x15c7dd(0x74f)]['toString'][_0x15c7dd(0x479)](_0x4e335b))
                                    return _0x4bf05b(new TypeError(typeof _0x4e335b + '\x20' + _0x4e335b + _0x15c7dd(0x72d)));
                                var _0x594c73 = Array[_0x15c7dd(0x74f)]['slice']['call'](_0x4e335b);
                                if (0x0 === _0x594c73['length'])
                                    return _0x4edfea([]);
                                var _0x4457b8 = _0x594c73[_0x15c7dd(0x376)];
                                function _0x24e796(_0x394e29, _0x21b73e) {
                                    const _0x5abf6e = _0x15c7dd;
                                    if (_0x5abf6e(0x3f0) == typeof _0x21b73e) {
                                        var _0x2b9071 = _0x21b73e['then'];
                                        _0x5abf6e(0x3eb) == typeof _0x2b9071 && _0x2b9071[_0x5abf6e(0x479)](_0x21b73e, function (_0x244e41) {
                                            _0x594c73[_0x394e29] = _0x244e41,
                                                0x0 == --_0x4457b8 && _0x4edfea(_0x594c73);
                                        }, function (_0x2c7a99) {
                                            _0x594c73[_0x394e29] = _0x2c7a99,
                                                0x0 == --_0x4457b8 && _0x4bf05b(_0x594c73);
                                        });
                                    }
                                }
                                for (var _0x5c1ff7 = 0x0; _0x5c1ff7 < _0x594c73[_0x15c7dd(0x376)]; _0x5c1ff7++)
                                    _0x24e796(_0x5c1ff7, _0x594c73[_0x5c1ff7]);
                            }
                            );
                        }
                        ,
                        Promise[_0x28c4ae(0x33f)](_0x4a831a)[_0x28c4ae(0x685)](function (_0x47d6f1) {
                            const _0x2681fe = _0x28c4ae;
                            if (Array[_0x2681fe(0x43e)](_0x47d6f1) || (_0x47d6f1 = [_0x47d6f1]),
                                !(_0x47d6f1[_0x2681fe(0x376)] < 0x1)) {
                                for (var _0x3df840 = [], _0x5b97c3 = 0x0; _0x5b97c3 < _0x47d6f1[_0x2681fe(0x376)]; _0x5b97c3++) {
                                    var _0x4a4a96 = _0x47d6f1[_0x5b97c3];
                                    if (Adapter['defined'](_0x4a4a96)) {
                                        if (Adapter[_0x2681fe(0x14b)](_0x4a4a96[_0x2681fe(0x38d)]) && (_0x4a4a96 = _0x4a4a96['buffer']),
                                            0x0 !== _0x49bbda) {
                                            if (_0x2b76aa['_isBlock'] && Adapter[_0x2681fe(0x14b)](_0x2b76aa['_packingRequest']) && _0x2b76aa['_packingRequest'] === _0x1b1d50['QuadKey']) {
                                                !Adapter[_0x2681fe(0x14b)](_0x4a831a[_0x5b97c3][_0x2681fe(0x20b)]['quadKeyIndex']) && Adapter['defined'](_0x4a831a[_0x5b97c3]['subRequest'][_0x2681fe(0xabd)]) && (_0x4a831a[_0x5b97c3][_0x2681fe(0x20b)][_0x2681fe(0x5ef)] = _0x4a831a[_0x5b97c3]['subRequest'][_0x2681fe(0xabd)]['quadKeyIndex']),
                                                    Adapter[_0x2681fe(0x14b)](_0x4a831a[_0x5b97c3][_0x2681fe(0x20b)][_0x2681fe(0x5ef)]) && (_0x4a4a96 = _0x262970(_0x4a4a96, _0x4a831a[_0x5b97c3][_0x2681fe(0x20b)]['quadKeyIndex']),
                                                        _0x4a4a96 = new Uint8Array(_0x4a4a96)[_0x2681fe(0x38d)]);
                                                var _0x570d9d = _0x2b76aa[_0x2681fe(0x666)][_0x4a831a[_0x5b97c3]['subRequest'][_0x2681fe(0x196)]];
                                                _0x2b76aa[_0x2681fe(0x27e)][_0x2681fe(0x681)](_0x570d9d),
                                                    _0x2b76aa[_0x2681fe(0x27e)][_0x2681fe(0xac7)](_0x2b76aa[_0x2681fe(0x58b)]),
                                                    _0x4a4a96 = _0xb89041(_0x4a4a96, _0x4a831a[_0x5b97c3][_0x2681fe(0x20b)][_0x2681fe(0x675)]);
                                            } else {
                                                if (Adapter[_0x2681fe(0x14b)](_0x2b76aa[_0x2681fe(0x9e2)]) && _0x2b76aa[_0x2681fe(0x9e2)] === _0x1b1d50['QuadKey'])
                                                    _0x4a4a96 = _0x262970(_0x4a4a96, _0x4a831a[_0x5b97c3][_0x2681fe(0x20b)][_0x2681fe(0x5ef)]);
                                                else
                                                    _0x2b76aa[_0x2681fe(0x2a3)] && (_0x570d9d = _0x2b76aa[_0x2681fe(0x666)][_0x4a831a[_0x5b97c3][_0x2681fe(0x20b)][_0x2681fe(0x196)]],
                                                        (_0x2b76aa[_0x2681fe(0x27e)]['touch'](_0x570d9d),
                                                            _0x2b76aa['blockCacheQueue'][_0x2681fe(0xac7)](_0x2b76aa[_0x2681fe(0x58b)]),
                                                            _0x4a4a96 = _0xb89041(_0x4a4a96, _0x4a831a[_0x5b97c3]['subRequest'][_0x2681fe(0x675)])));
                                            }
                                            if (!Adapter['defined'](_0x4a4a96)) {
                                                if (0x0 === _0x5b97c3 && _0x47d6f1[_0x2681fe(0x376)] > 0x1) {
                                                    var _0x1975f2 = _0x49bbda + '_' + _0xdc4142 + '_' + _0x1c3092;
                                                    if (0x1 != (_0x2bed7a = _0x118884[_0x2681fe(0x778)][_0x1975f2])[_0x5b97c3 + 0x1][_0x2681fe(0x8ce)])
                                                        return void delete _0x118884[_0x2681fe(0x778)][_0x1975f2];
                                                }
                                                continue;
                                            }
                                        }
                                        var _0x53d78c, _0x1b7b6c;
                                        if (0x2 === (_0x53d78c = _0x2681fe(0xff) === _0x118884[_0x2681fe(0x26a)] ? _0x35205d['inflate'](_0x4a4a96)['buffer'] : _0x4a4a96)[_0x2681fe(0x1ef)] / (_0x118884[_0x2681fe(0x92a)] * _0x118884[_0x2681fe(0x239)])) {
                                            var _0x5670cf = new Int16Array(_0x53d78c, 0x0, _0x118884[_0x2681fe(0x92a)] * _0x118884[_0x2681fe(0x239)]);
                                            _0x1b7b6c = [];
                                            for (var _0x2137b2 = 0x0; _0x2137b2 < _0x5670cf['length']; _0x2137b2++)
                                                _0x1b7b6c['push'](parseFloat(_0x5670cf[_0x2137b2]));
                                        } else
                                            _0x1b7b6c = new Float32Array(_0x53d78c, 0x0, _0x118884['_heightmapWidth'] * _0x118884[_0x2681fe(0x239)]);
                                        _0x3df840[_0x2681fe(0x745)](_0x1b7b6c);
                                    } else
                                        _0x3df840['push'](void 0x0);
                                }
                                _0x1975f2 = _0x49bbda + '_' + _0xdc4142 + '_' + _0x1c3092;
                                var _0x2bed7a = _0x118884[_0x2681fe(0x778)][_0x1975f2];
                                if (delete _0x118884[_0x2681fe(0x778)][_0x1975f2],
                                    _0x3df840[_0x2681fe(0x376)] > 0x1) {
                                    for (_0x5b97c3 = 0x0; _0x5b97c3 < _0x3df840['length']; _0x5b97c3++)
                                        Adapter[_0x2681fe(0x14b)](_0x3df840[_0x5b97c3]) && (0x0 != _0x2bed7a[_0x5b97c3][_0x2681fe(0x596)] || 0x0 != _0x2bed7a[_0x5b97c3][_0x2681fe(0x523)] || 0x1 != _0x2bed7a[_0x5b97c3]['width']) && (_0x5670cf = _0x118884[_0x2681fe(0x5c2)](_0x3df840[_0x5b97c3], _0x2bed7a[_0x5b97c3][_0x2681fe(0x596)], _0x2bed7a[_0x5b97c3][_0x2681fe(0x523)], _0x2bed7a[_0x5b97c3][_0x2681fe(0x8ce)], _0x118884['_heightmapWidth']),
                                            _0x3df840[_0x5b97c3] = _0x5670cf);
                                }
                                var _0x172164 = [{}, {}, {}, {}];
                                for (_0x5b97c3 = 0x0; _0x5b97c3 < _0x3df840[_0x2681fe(0x376)]; _0x5b97c3++)
                                    if (Adapter[_0x2681fe(0x14b)](_0x3df840[_0x5b97c3])) {
                                        var _0x49c7af = _0x2bed7a[_0x5b97c3][_0x2681fe(0x648)]
                                            , _0x46a36a = -0x1
                                            , _0x227e76 = -0x1
                                            , _0x382871 = -0x1
                                            , _0x551ae5 = -0x1;
                                        _0x46a36a = 0x0 == _0x3df840[_0x5b97c3][0x0] ? 0x2 : 0x1,
                                            _0x227e76 = 0x0 == _0x3df840[_0x5b97c3][_0x118884[_0x2681fe(0x92a)] - 0x1] ? 0x2 : 0x1,
                                            _0x382871 = 0x0 == _0x3df840[_0x5b97c3][(_0x118884[_0x2681fe(0x239)] - 0x1) * _0x118884[_0x2681fe(0x92a)]] ? 0x2 : 0x1,
                                            _0x551ae5 = 0x0 == _0x3df840[_0x5b97c3][_0x118884[_0x2681fe(0x239)] * _0x118884['_heightmapWidth'] - 0x1] ? 0x2 : 0x1;
                                        for (var _0x673e8f = 0.5 * _0x118884['_heightmapWidth'], _0xf821e0 = 0.5 * _0x118884[_0x2681fe(0x239)], _0x41f72b = 0x0; _0x41f72b < _0x3df840[_0x5b97c3][_0x2681fe(0x376)]; _0x41f72b++) {
                                            var _0x1bf367 = Math[_0x2681fe(0x432)](_0x41f72b / _0x118884[_0x2681fe(0x92a)])
                                                , _0x401ef8 = _0x41f72b % _0x118884[_0x2681fe(0x92a)];
                                            if (_0x1bf367 < _0xf821e0 && _0x401ef8 < _0x673e8f) {
                                                var _0xb236d0 = _0x3df840[_0x5b97c3][_0x41f72b];
                                                if (0x1 === _0x46a36a) {
                                                    if (0x0 == _0xb236d0) {
                                                        _0x46a36a = 0x3;
                                                        break;
                                                    }
                                                } else {
                                                    if (0x0 != _0xb236d0) {
                                                        _0x46a36a = 0x3;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        _0x172164[0x0][_0x49c7af] = _0x46a36a;
                                        for (_0x41f72b = 0x0; _0x41f72b < _0x3df840[_0x5b97c3]['length']; _0x41f72b++) {
                                            _0x1bf367 = Math[_0x2681fe(0x432)](_0x41f72b / _0x118884[_0x2681fe(0x92a)]),
                                                _0x401ef8 = _0x41f72b % _0x118884[_0x2681fe(0x92a)];
                                            if (_0x1bf367 < _0xf821e0 && _0x401ef8 >= _0x673e8f) {
                                                _0xb236d0 = _0x3df840[_0x5b97c3][_0x41f72b];
                                                if (0x1 === _0x227e76) {
                                                    if (0x0 == _0xb236d0) {
                                                        _0x227e76 = 0x3;
                                                        break;
                                                    }
                                                } else {
                                                    if (0x0 != _0xb236d0) {
                                                        _0x227e76 = 0x3;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        _0x172164[0x1][_0x49c7af] = _0x227e76;
                                        for (_0x41f72b = 0x0; _0x41f72b < _0x3df840[_0x5b97c3][_0x2681fe(0x376)]; _0x41f72b++) {
                                            _0x1bf367 = Math['floor'](_0x41f72b / _0x118884[_0x2681fe(0x92a)]),
                                                _0x401ef8 = _0x41f72b % _0x118884[_0x2681fe(0x92a)];
                                            if (_0x1bf367 >= _0xf821e0 && _0x401ef8 < _0x673e8f) {
                                                _0xb236d0 = _0x3df840[_0x5b97c3][_0x41f72b];
                                                if (0x1 === _0x382871) {
                                                    if (0x0 == _0xb236d0) {
                                                        _0x382871 = 0x3;
                                                        break;
                                                    }
                                                } else {
                                                    if (0x0 != _0xb236d0) {
                                                        _0x382871 = 0x3;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        _0x172164[0x2][_0x49c7af] = _0x382871;
                                        for (_0x41f72b = 0x0; _0x41f72b < _0x3df840[_0x5b97c3]['length']; _0x41f72b++) {
                                            _0x1bf367 = Math[_0x2681fe(0x432)](_0x41f72b / _0x118884['_heightmapWidth']),
                                                _0x401ef8 = _0x41f72b % _0x118884[_0x2681fe(0x92a)];
                                            if (_0x1bf367 >= _0xf821e0 && _0x401ef8 >= _0x673e8f) {
                                                _0xb236d0 = _0x3df840[_0x5b97c3][_0x41f72b];
                                                if (0x1 === _0x551ae5) {
                                                    if (0x0 == _0xb236d0) {
                                                        _0x551ae5 = 0x3;
                                                        break;
                                                    }
                                                } else {
                                                    if (0x0 != _0xb236d0) {
                                                        _0x551ae5 = 0x3;
                                                        break;
                                                    }
                                                }
                                            }
                                        }
                                        if (_0x172164[0x3][_0x49c7af] = _0x551ae5,
                                            0x1 === _0x46a36a && 0x1 === _0x227e76 && 0x1 === _0x382871 && 0x1 === _0x551ae5)
                                            break;
                                    }
                                var _0x49db31 = [];
                                for (_0x5b97c3 = 0x0; _0x5b97c3 < _0x3df840['length']; _0x5b97c3++)
                                    Adapter['defined'](_0x3df840[_0x5b97c3]) && _0x49db31[_0x2681fe(0x745)](_0x3df840[_0x5b97c3]);
                                if (0x0 !== _0x49db31['length']) {
                                    var _0x42746f = _0x49db31[0x0];
                                    if (_0x49db31[_0x2681fe(0x376)] > 0x1) {
                                        for (_0x41f72b = 0x0; _0x41f72b < _0x42746f['length']; _0x41f72b++)
                                            if (0x0 == _0x42746f[_0x41f72b]) {
                                                for (_0x5b97c3 = 0x1; _0x5b97c3 < _0x49db31['length']; _0x5b97c3++)
                                                    if (0x0 != _0x49db31[_0x5b97c3][_0x41f72b]) {
                                                        _0x42746f[_0x41f72b] = _0x49db31[_0x5b97c3][_0x41f72b];
                                                        break;
                                                    }
                                            }
                                    }
                                    var _0x4024f1 = !0x1;
                                    for (_0x5b97c3 = 0x0; _0x5b97c3 < _0x42746f[_0x2681fe(0x376)]; _0x5b97c3++)
                                        if (Math['abs'](_0x42746f[_0x5b97c3]) > _0x2ad7f6[_0x2681fe(0x815)]) {
                                            _0x4024f1 = !0x0;
                                            break;
                                        }
                                    var _0x836944 = _0x118884[_0x2681fe(0x92a)]
                                        , _0x2ef364 = _0x118884[_0x2681fe(0x239)]
                                        , _0x63ea7b = void 0x0;
                                    return _0x118884['_requestVertexNormals'] && (_0x63ea7b = function (_0x35012f, _0x3be1ac, _0x3e2fc6, _0x3087b2, _0x45eaab) {
                                        const _0x3df2ac = _0x2681fe;
                                        if (null == _0x35012f)
                                            return;
                                        for (var _0x750740 = new Uint8Array(_0x3be1ac * _0x3e2fc6 * 0x3), _0xf30327 = 0x615299, _0x51a2f0 = _0x3087b2['width'], _0x2b6b80 = _0x3087b2['height'], _0x1dcee8 = _0x35012f, _0x480879 = 0x0; _0x480879 < _0x3be1ac; _0x480879++)
                                            for (var _0x3918c3 = 0x0; _0x3918c3 < _0x3e2fc6; _0x3918c3++) {
                                                var _0x1cf46d = _0x3918c3 * _0x3be1ac + _0x480879;
                                                _0x1dcee8[_0x3918c3 * _0x3be1ac + _0x480879];
                                                var _0x4fa316 = _0x480879
                                                    , _0x720270 = _0x3918c3;
                                                _0x45eaab > 0xd && (_0x480879 = (_0x480879 = 0x0 == _0x480879 ? _0x480879 + 0x1 : _0x480879) == _0x3be1ac - 0x1 ? _0x3be1ac - 0x2 : _0x480879,
                                                    _0x3918c3 = (_0x3918c3 = 0x0 == _0x3918c3 ? _0x3918c3 + 0x1 : _0x3918c3) == _0x3e2fc6 - 0x1 ? _0x3e2fc6 - 0x2 : _0x3918c3);
                                                var _0x501a64 = Math[_0x3df2ac(0x212)](_0x480879 - 0x1, 0x0)
                                                    , _0x47bd49 = _0x3918c3
                                                    , _0x197ac3 = _0x1dcee8[_0x47bd49 * _0x3be1ac + _0x501a64]
                                                    , _0x4daeee = _0x1dcee8[(_0x47bd49 = _0x3918c3) * _0x3be1ac + (_0x501a64 = Math[_0x3df2ac(0x412)](_0x480879 + 0x1, _0x3be1ac - 0x1))];
                                                _0x501a64 = _0x480879;
                                                var _0x2e3e53 = _0x1dcee8[(_0x47bd49 = Math[_0x3df2ac(0x412)](_0x3918c3 + 0x1, _0x3e2fc6 - 0x1)) * _0x3be1ac + _0x501a64];
                                                _0x501a64 = _0x480879;
                                                var _0x198ae3 = _0x1dcee8[(_0x47bd49 = Math[_0x3df2ac(0x212)](_0x3918c3 - 0x1, 0x0)) * _0x3be1ac + _0x501a64];
                                                _0x480879 = _0x4fa316,
                                                    _0x3918c3 = _0x720270;
                                                var _0x3aa2ff = _0x3087b2['south'] + _0x2b6b80 * (0x200 - 0x2 * _0x3918c3 - 0x1) / 0x200
                                                    , _0x14d194 = _0xf30327 * Math['cos'](_0x3aa2ff)
                                                    , _0x4c650b = new _0x2e9d56((_0x197ac3 - _0x4daeee) / (_0x14d194 * _0x51a2f0 / _0x3be1ac), (_0x198ae3 - _0x2e3e53) / (_0xf30327 * _0x2b6b80 / _0x3e2fc6), 0x2);
                                                _0x2e9d56[_0x3df2ac(0x7bc)](_0x4c650b, _0x4c650b),
                                                    _0x750740[0x3 * _0x1cf46d + 0x0] = 0xff * (0.5 * _0x4c650b['x'] + 0.5),
                                                    _0x750740[0x3 * _0x1cf46d + 0x1] = 0xff * (0.5 * _0x4c650b['y'] + 0.5),
                                                    _0x750740[0x3 * _0x1cf46d + 0x2] = 0xff * (0.5 * _0x4c650b['z'] + 0.5);
                                            }
                                        return _0x750740;
                                    }(_0x42746f, _0x836944, _0x2ef364, _0x2fa600, _0x49bbda)),
                                        new Adapter[(_0x2681fe(0xaba))]({
                                            'buffer': _0x42746f,
                                            'width': _0x836944,
                                            'height': _0x2ef364,
                                            'skirtMode': _0x118884[_0x2681fe(0x3ec)],
                                            'skirtScale': _0x118884[_0x2681fe(0x84f)],
                                            'childTileMask': _0x3d2c07(_0x118884, _0xdc4142, _0x1c3092, _0x49bbda),
                                            'structure': _0x118884['_terrainDataStructure'],
                                            'valid': _0x4024f1,
                                            'childTileMaskExt': _0x172164,
                                            'normalTexture': _0x63ea7b,
                                            'level': _0x49bbda,
                                            'x': _0xdc4142,
                                            'y': _0x1c3092
                                        });
                                }
                            }
                        })[_0x28c4ae(0xa6b)](_0x58f157 => Promise[_0x28c4ae(0x7aa)](_0x58f157));
            }
        }
            ,
            _0x3ce5e8[_0x324b8e(0x74f)][_0x324b8e(0x493)] = function (_0x59a457) {
                const _0x21f445 = _0x324b8e;
                return this[_0x21f445(0x1ba)] / (0x1 << _0x59a457);
            }
            ,
            _0x9bcee6 = new _0x293c71();
        function _0x3d2c07(_0x304f47, _0x23fa3f, _0x14e4ce, _0x472272) {
            const _0x2a3322 = _0x324b8e;
            for (var _0x3cea0d = _0x304f47[_0x2a3322(0x369)], _0x1d1fc8 = _0x3cea0d[_0x2a3322(0x566)](_0x23fa3f, _0x14e4ce, _0x472272), _0x2f2cc4 = 0x0, _0x2eac45 = 0x0; _0x2eac45 < _0x304f47[_0x2a3322(0x926)]['length']; _0x2eac45++) {
                var _0x2ffa0a = _0x304f47['_rectangles'][_0x2eac45]
                    , _0x45a875 = _0x293c71[_0x2a3322(0x2a2)](_0x2ffa0a, _0x1d1fc8, _0x9bcee6);
                Adapter[_0x2a3322(0x14b)](_0x45a875) && (_0x5e5cbc(_0x3cea0d, _0x2ffa0a, 0x2 * _0x23fa3f, 0x2 * _0x14e4ce, _0x472272 + 0x1) && (_0x2f2cc4 |= 0x4),
                    _0x5e5cbc(_0x3cea0d, _0x2ffa0a, 0x2 * _0x23fa3f + 0x1, 0x2 * _0x14e4ce, _0x472272 + 0x1) && (_0x2f2cc4 |= 0x8),
                    _0x5e5cbc(_0x3cea0d, _0x2ffa0a, 0x2 * _0x23fa3f, 0x2 * _0x14e4ce + 0x1, _0x472272 + 0x1) && (_0x2f2cc4 |= 0x1),
                    _0x5e5cbc(_0x3cea0d, _0x2ffa0a, 0x2 * _0x23fa3f + 0x1, 0x2 * _0x14e4ce + 0x1, _0x472272 + 0x1) && (_0x2f2cc4 |= 0x2));
            }
            return _0x2f2cc4;
        }
        function _0x5e5cbc(_0x55e31c, _0x441ceb, _0x549510, _0x3c8651, _0xad2e0e) {
            const _0x2ff119 = _0x324b8e;
            var _0x2e37e7 = _0x55e31c[_0x2ff119(0x566)](_0x549510, _0x3c8651, _0xad2e0e);
            return Adapter[_0x2ff119(0x14b)](_0x293c71['intersection'](_0x2e37e7, _0x441ceb, _0x9bcee6));
        }
        function _0x46257b() {
            const _0x9a2a2a = _0x324b8e;
            this[_0x9a2a2a(0x8b5)] = new Cesium[(_0x9a2a2a(0x869))](),
                this[_0x9a2a2a(0x8fc)] = new Uint8Array(0x40000),
                this['_sortKey'] = [];
        }
        function _0x295e96(_0x19c6f5, _0x49baf1) {
            return _0x19c6f5 - _0x49baf1;
        }
        _0x3ce5e8[_0x324b8e(0x74f)][_0x324b8e(0x229)] = function (_0x3c7c55, _0x316bd9, _0xd1667c) {
            const _0x36e195 = _0x324b8e;
            if (0x0 === _0xd1667c)
                return !0x0;
            for (var _0x18f3f7 = this[_0x36e195(0x369)][_0x36e195(0x566)](_0x3c7c55, _0x316bd9, _0xd1667c), _0x2d8b56 = 0x0; _0x2d8b56 < this[_0x36e195(0x926)][_0x36e195(0x376)]; _0x2d8b56++) {
                var _0x4c2fbe = _0x293c71['intersection'](this[_0x36e195(0x926)][_0x2d8b56], _0x18f3f7, _0x9bcee6);
                if (Adapter[_0x36e195(0x14b)](_0x4c2fbe) && _0xd1667c >= this[_0x36e195(0x1ec)][_0x2d8b56][0x0] && _0xd1667c <= this[_0x36e195(0x1ec)][_0x2d8b56][this[_0x36e195(0x1ec)][_0x2d8b56][_0x36e195(0x376)] - 0x1])
                    return !0x0;
            }
            return !0x1;
        }
            ,
            _0x3ce5e8[_0x324b8e(0x74f)]['loadTileDataAvailability'] = function (_0x460230, _0x4a628e, _0x26aa50) { }
            ,
            _0x46257b[_0x324b8e(0x74f)][_0x324b8e(0x7f5)] = function (_0x1edfed) {
                const _0x3b6354 = _0x324b8e;
                if (_0x1edfed > this[_0x3b6354(0x8b5)][_0x3b6354(0x347)][_0x3b6354(0x376)] - 0x1)
                    return null;
                let _0x22434c = _0x1edfed;
                for (let _0x45d202 in this[_0x3b6354(0x8b5)][_0x3b6354(0x17f)]) {
                    if (!(_0x22434c > 0x0)) {
                        if (!_0x45d202)
                            break;
                        return {
                            'altitude': _0x45d202,
                            'color': this[_0x3b6354(0x8b5)][_0x3b6354(0xa61)](_0x45d202)
                        };
                    }
                    _0x22434c--;
                }
                return null;
            }
            ,
            _0x46257b[_0x324b8e(0x74f)][_0x324b8e(0xaa6)] = function () {
                const _0x391f97 = _0x324b8e;
                return this['_dictTable'][_0x391f97(0x347)][_0x391f97(0x376)];
            }
            ,
            _0x46257b[_0x324b8e(0x74f)]['insert'] = function (_0x559a60, _0xf12860) {
                const _0x3cc767 = _0x324b8e;
                if (this['_dictTable'][_0x3cc767(0xa61)](_0x559a60))
                    return;
                let _0x296031 = Cesium['Color'][_0x3cc767(0x157)](_0xf12860, new Cesium['Color']());
                this[_0x3cc767(0x8b5)][_0x3cc767(0x414)](_0x559a60, _0x296031);
            }
            ,
            _0x46257b[_0x324b8e(0x74f)]['remove'] = function (_0x3a3b5b) {
                const _0x3e6123 = _0x324b8e;
                return this[_0x3e6123(0x8b5)]['remove'](_0x3a3b5b);
            }
            ,
            _0x46257b[_0x324b8e(0x74f)][_0x324b8e(0x3b3)] = function () {
                const _0x4c0778 = _0x324b8e;
                this[_0x4c0778(0x8b5)][_0x4c0778(0x307)]();
            }
            ,
            _0x46257b[_0x324b8e(0x74f)][_0x324b8e(0x626)] = function () {
                const _0x33de3f = _0x324b8e;
                let _0x487445 = [];
                for (let _0x3655c2 in this[_0x33de3f(0x8b5)][_0x33de3f(0x17f)]) {
                    if (!_0x3655c2)
                        continue;
                    let _0x10ebf7 = this['_dictTable'][_0x33de3f(0xa61)](_0x3655c2);
                    _0x487445[_0x33de3f(0x745)]({
                        'value': parseFloat(_0x3655c2),
                        'color': _0x10ebf7
                    });
                }
                if (_0x487445[_0x33de3f(0x376)] < 0x2)
                    return;
                for (let _0x56fccc = 0x0, _0x742109 = _0x487445[_0x33de3f(0x376)] - 0x1; _0x56fccc < _0x742109; _0x56fccc++) {
                    let _0xed963d = _0x487445[_0x56fccc];
                    for (let _0xc5e555 = _0x56fccc + 0x1; _0xc5e555 < _0x487445[_0x33de3f(0x376)]; _0xc5e555++) {
                        let _0x1c0803 = _0x487445[_0xc5e555];
                        if (_0xed963d[_0x33de3f(0x3da)] > _0x1c0803[_0x33de3f(0x3da)]) {
                            let _0x587e98 = Cesium[_0x33de3f(0x157)](_0x487445[_0x56fccc], !0x0);
                            _0x487445[_0x56fccc] = Cesium['clone'](_0x487445[_0xc5e555], !0x0),
                                _0x487445[_0xc5e555] = _0x587e98,
                                _0xed963d = _0x487445[_0x56fccc];
                        }
                    }
                }
                let _0x29c666 = _0x487445[0x0][_0x33de3f(0x3da)]
                    , _0x3dfa40 = _0x487445[_0x487445[_0x33de3f(0x376)] - 0x1][_0x33de3f(0x3da)] - _0x29c666
                    , _0x2bf170 = document[_0x33de3f(0x1ac)](_0x33de3f(0x9e9));
                _0x2bf170[_0x33de3f(0x8ce)] = 0x4000,
                    _0x2bf170['height'] = 0x1;
                let _0x36a96a = _0x2bf170[_0x33de3f(0x6ab)]('2d');
                _0x36a96a['beginPath']();
                let _0x3bcfc2 = _0x36a96a[_0x33de3f(0x1ab)](0x0, 0x0, 0x4000, 0x0);
                for (let _0x8296e = 0x0, _0x34fad0 = _0x487445['length']; _0x8296e < _0x34fad0; _0x8296e++)
                    _0x3bcfc2[_0x33de3f(0x5c1)]((_0x487445[_0x8296e][_0x33de3f(0x3da)] - _0x29c666) / _0x3dfa40, _0x487445[_0x8296e]['color'][_0x33de3f(0x61a)]());
                _0x36a96a[_0x33de3f(0x68e)] = _0x3bcfc2,
                    _0x36a96a[_0x33de3f(0x914)](0x0, 0x0, _0x2bf170[_0x33de3f(0x8ce)], _0x2bf170[_0x33de3f(0x88d)]),
                    _0x36a96a[_0x33de3f(0x4ac)]();
                let _0x1c70e9 = _0x36a96a['getImageData'](0x0, 0x0, _0x2bf170[_0x33de3f(0x8ce)], 0x1)[_0x33de3f(0xa3c)];
                for (let _0x6c6fbb = 0x0; _0x6c6fbb < 0x10; _0x6c6fbb++)
                    for (let _0x4d4664 = 0x0; _0x4d4664 < 0x1000; _0x4d4664++)
                        this[_0x33de3f(0x8fc)][_0x4d4664 + 0x400 * _0x6c6fbb * 0x4 * 0x4] = _0x1c70e9[_0x4d4664 + 0x400 * _0x6c6fbb * 0x4],
                            this['_imageBuffer'][_0x4d4664 + 0x400 * _0x6c6fbb * 0x4 * 0x4 + 0x1000] = _0x1c70e9[_0x4d4664 + 0x400 * _0x6c6fbb * 0x4],
                            this[_0x33de3f(0x8fc)][_0x4d4664 + 0x400 * _0x6c6fbb * 0x4 * 0x4 + 0x2000] = _0x1c70e9[_0x4d4664 + 0x400 * _0x6c6fbb * 0x4],
                            this[_0x33de3f(0x8fc)][_0x4d4664 + 0x400 * _0x6c6fbb * 0x4 * 0x4 + 0x3000] = _0x1c70e9[_0x4d4664 + 0x400 * _0x6c6fbb * 0x4];
                for (let _0x1932b2 in this[_0x33de3f(0x8b5)]['_hash'])
                    this[_0x33de3f(0x14d)][_0x33de3f(0x745)](parseFloat(_0x1932b2));
                return this[_0x33de3f(0x14d)][_0x33de3f(0x55e)](_0x295e96),
                    _0x2bf170;
            }
            ,
            _0x46257b['prototype']['getColor'] = function (_0x22d075) {
                const _0x59800a = _0x324b8e;
                for (let _0x1975b3 = 0x0, _0x37acab = this[_0x59800a(0x14d)][_0x59800a(0x376)]; _0x1975b3 < _0x37acab; _0x1975b3++)
                    if (this[_0x59800a(0x14d)][_0x1975b3] >= _0x22d075 || Math[_0x59800a(0xa8b)](this['_sortKey'][_0x1975b3] - _0x22d075) < Cesium['Math'][_0x59800a(0x74e)])
                        return this[_0x59800a(0x8b5)][_0x59800a(0xa61)](this[_0x59800a(0x14d)][_0x1975b3]);
            }
            ,
            _0x46257b[_0x324b8e(0x74f)][_0x324b8e(0x4dd)] = function () {
                const _0x3e3543 = _0x324b8e;
                this[_0x3e3543(0x8b5)][_0x3e3543(0x307)](),
                    this[_0x3e3543(0x8fc)] = null,
                    this['_sortKey'] = null;
            }
            ,
            _0x1de603[_0x324b8e(0x690)] = _0x5aa1c1,
            _0x1de603[_0x324b8e(0xe4)] = _0x4cb402,
            _0x1de603['BlockCacheList'] = _0x46529c,
            _0x1de603[_0x324b8e(0x3f2)] = _0x10d6d5,
            _0x1de603['BlockImagery'] = {},
            _0x1de603[_0x324b8e(0x930)] = {},
            _0x1de603[_0x324b8e(0x838)] = _0x1194c7,
            _0x1de603[_0x324b8e(0x12c)] = _0x46257b,
            _0x1de603[_0x324b8e(0x702)] = _0x343dab,
            _0x1de603['Credential'] = _0x5cb66c,
            _0x1de603[_0x324b8e(0x426)] = _0x486697,
            _0x1de603[_0x324b8e(0x263)] = _0x2c0696,
            _0x1de603['DDSTexture'] = _0x4dc55e,
            _0x1de603[_0x324b8e(0x3d1)] = _0x42e1f3,
            _0x1de603[_0x324b8e(0x974)] = _0x2308ca,
            _0x1de603[_0x324b8e(0x3b0)] = _0x26fbd4,
            _0x1de603['EditHandler'] = _0xc9e560,
            _0x1de603[_0x324b8e(0x23b)] = _0x276dd5,
            _0x1de603['Flatten'] = _0x191bb7,
            _0x1de603['FlyInterpolationMode'] = _0x121372,
            _0x1de603[_0x324b8e(0x77b)] = _0x71f3de,
            _0x1de603[_0x324b8e(0xa9f)] = _0x36e6c1,
            _0x1de603['FresnelFp'] = _0x146b25,
            _0x1de603['FresnelVp'] = _0x18e89c,
            _0x1de603[_0x324b8e(0x4fa)] = _0x380337,
            _0x1de603[_0x324b8e(0x2b3)] = _0x38371e,
            _0x1de603[_0x324b8e(0xad7)] = _0x353b85,
            _0x1de603['InstanceMode'] = _0x288745,
            _0x1de603['LineDisplayType'] = _0x260580,
            _0x1de603['MaterialExt'] = _0x3e5148,
            _0x1de603['MaterialManager'] = _0x2755eb,
            _0x1de603[_0x324b8e(0x872)] = _0xec489,
            _0x1de603['MeasureHandler'] = _0x356de7,
            _0x1de603[_0x324b8e(0x2a4)] = _0x58febe,
            _0x1de603[_0x324b8e(0x254)] = _0x377d2c,
            _0x1de603['ModelEdgeVp'] = _0x4c4475,
            _0x1de603['NoLightNoTextureFS'] = _0x2e9404,
            _0x1de603[_0x324b8e(0x477)] = _0x585ed7,
            _0x1de603[_0x324b8e(0x97c)] = _0x1645f2,
            _0x1de603[_0x324b8e(0x1f5)] = _0x2c6caf,
            _0x1de603[_0x324b8e(0x736)] = _0x522d4d,
            _0x1de603[_0x324b8e(0x612)] = function (_0x13daa7) {
                const _0x6f1d69 = _0x324b8e;
                return this['_rain'] = _0x13daa7[_0x6f1d69(0x464)][_0x6f1d69(0x9cb)](new _0x5955c3({
                    'name': _0x6f1d69(0x9f5),
                    'fragmentShader': _0x30f826,
                    'uniforms': {
                        'speed': 0x14,
                        'angle': -0.4
                    },
                    'sampleMode': _0x31c962[_0x6f1d69(0x58a)]
                })),
                    this['_rain']['enabled'] = !0x1,
                    this[_0x6f1d69(0x72f)];
            }
            ,
            _0x1de603[_0x324b8e(0x9d9)] = function (_0x317b94) {
                const _0x5cd5bc = _0x324b8e;
                return this['_snow'] = _0x317b94[_0x5cd5bc(0x464)][_0x5cd5bc(0x9cb)](new _0x287077({
                    'name': _0x5cd5bc(0xa2a),
                    'fragmentShader': _0x263ab4,
                    'uniforms': {
                        'density': 0x5,
                        'angle': 0.1,
                        'speed': 0x2
                    },
                    'sampleMode': _0x129a13[_0x5cd5bc(0x58a)]
                })),
                    this['_snow'][_0x5cd5bc(0x7a4)] = !0x1,
                    this[_0x5cd5bc(0x794)];
            }
            ,
            _0x1de603[_0x324b8e(0xd3)] = _0x48861b,
            _0x1de603[_0x324b8e(0x4ee)] = _0x521203,
            _0x1de603['ProjectionImageFS'] = _0x2798df,
            _0x1de603[_0x324b8e(0x15a)] = _0x30f826,
            _0x1de603[_0x324b8e(0x965)] = _0x12f753,
            _0x1de603[_0x324b8e(0x9f2)] = _0x187845,
            _0x1de603['RasterRegionFS'] = _0xaa0d2c,
            _0x1de603[_0x324b8e(0x158)] = _0x124bb9,
            _0x1de603[_0x324b8e(0x768)] = _0x556604,
            _0x1de603[_0x324b8e(0xa58)] = _0x35de87,
            _0x1de603[_0x324b8e(0x938)] = _0x58cd67,
            _0x1de603[_0x324b8e(0x370)] = _0x249d92,
            _0x1de603[_0x324b8e(0x36e)] = _0x555c63,
            _0x1de603[_0x324b8e(0x3ba)] = _0x1e4176,
            _0x1de603['S3MBlockCache'] = _0x2301e9,
            _0x1de603['S3MBlockContentParser'] = _0x2e034a,
            _0x1de603[_0x324b8e(0x9a9)] = _0x4d28e,
            _0x1de603[_0x324b8e(0x1dc)] = _0x245702,
            _0x1de603[_0x324b8e(0x297)] = _0x2f6477,
            _0x1de603['S3MContentFactory'] = _0x9c966a,
            _0x1de603[_0x324b8e(0x77e)] = _0x5ba24b,
            _0x1de603['S3MCreateIndexJob'] = _0x37b90f,
            _0x1de603[_0x324b8e(0x774)] = _0x201542,
            _0x1de603[_0x324b8e(0xa78)] = _0x3c1766,
            _0x1de603[_0x324b8e(0x3e7)] = _0x76a51a,
            _0x1de603['S3MLayerCache'] = _0x484875,
            _0x1de603[_0x324b8e(0x448)] = _0x50c548,
            _0x1de603[_0x324b8e(0x424)] = _0x36840f,
            _0x1de603[_0x324b8e(0x535)] = _0xbd1c5c,
            _0x1de603[_0x324b8e(0x514)] = _0x59431e,
            _0x1de603[_0x324b8e(0xab3)] = _0x184273,
            _0x1de603[_0x324b8e(0x871)] = _0x241067,
            _0x1de603[_0x324b8e(0x46f)] = _0x5e463c,
            _0x1de603['S3MTilesFS'] = _0x57a126,
            _0x1de603[_0x324b8e(0x2d9)] = _0x2dd123,
            _0x1de603['S3MTilesNoLightFS'] = _0x27cbe0,
            _0x1de603[_0x324b8e(0x705)] = _0x293ce9,
            _0x1de603[_0x324b8e(0x897)] = _0x348b89,
            _0x1de603[_0x324b8e(0x76d)] = _0x5a53c5,
            _0x1de603[_0x324b8e(0x2e3)] = _0x2ec6cd,
            _0x1de603['S3ModelParser'] = _0x235026,
            _0x1de603[_0x324b8e(0x75f)] = _0x3ce5e8,
            _0x1de603['ShaderChunk'] = _0x495499,
            _0x1de603[_0x324b8e(0xa20)] = _0x5f585a,
            _0x1de603['SightWideLineVS'] = _0x5bc231,
            _0x1de603[_0x324b8e(0xa54)] = _0x1c149a,
            _0x1de603['Skyline'] = _0xe7c908,
            _0x1de603[_0x324b8e(0x9a6)] = _0x3c31fb,
            _0x1de603[_0x324b8e(0x722)] = _0x41d56d,
            _0x1de603[_0x324b8e(0x48e)] = _0x263ab4,
            _0x1de603[_0x324b8e(0x240)] = _0x306bf3,
            _0x1de603[_0x324b8e(0x327)] = _0x49debc,
            _0x1de603[_0x324b8e(0x3c1)] = _0x12b721,
            _0x1de603[_0x324b8e(0x780)] = _0x119597,
            _0x1de603[_0x324b8e(0x65a)] = _0x4afa97,
            _0x1de603[_0x324b8e(0xada)] = _0x38e9a2,
            _0x1de603[_0x324b8e(0x611)] = _0x415e6b,
            _0x1de603[_0x324b8e(0x811)] = _0x5983eb,
            _0x1de603['ViewShed3D'] = _0x4d4ee0,
            _0x1de603[_0x324b8e(0x81d)] = _0x238463,
            _0x1de603['ViewShedAnalysisVS'] = _0x472182,
            _0x1de603[_0x324b8e(0x389)] = _0x2ba0a2,
            _0x1de603[_0x324b8e(0x9c8)] = _0x5aff14,
            _0x1de603['brdf'] = _0x58c8a8,
            _0x1de603[_0x324b8e(0x749)] = _0x4add1a,
            _0x1de603['cubeUV_reflection'] = _0x972fb5,
            _0x1de603[_0x324b8e(0x948)] = _0x1c9f6c,
            _0x1de603[_0x324b8e(0x409)] = _0x725163,
            _0x1de603[_0x324b8e(0x299)] = _0x429de0,
            _0x1de603[_0x324b8e(0x9a4)] = _0x5eb8a8,
            _0x1de603['pointLightDecl'] = _0x531220,
            _0x1de603[_0x324b8e(0x147)] = _0x459ff1,
            _0x1de603[_0x324b8e(0x2c6)] = _0x256ca9,
            _0x1de603[_0x324b8e(0xeb)] = _0x3199f8,
            Object[_0x324b8e(0x105)](_0x1de603, _0x324b8e(0xa0d), {
                'value': !0x0
            });
    }));
